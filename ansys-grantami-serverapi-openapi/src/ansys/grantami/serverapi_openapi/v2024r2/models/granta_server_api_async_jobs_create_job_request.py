# Copyright (C) 2023 - 2025 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""
MI Server API

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import TYPE_CHECKING, Any, BinaryIO, Optional  # noqa: F401

from . import ModelBase, Unset, Unset_Type

if TYPE_CHECKING:
    from datetime import datetime
    import pathlib

    from . import *


class GrantaServerApiAsyncJobsCreateJobRequest(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: dict[str, str] = {
        "culture": "str",
        "description": "str",
        "input_file_ids": "list[str]",
        "name": "str",
        "parameters": "str",
        "scheduled_execution_date": "datetime",
        "type": "str",
        "version": "int",
    }

    attribute_map: dict[str, str] = {
        "culture": "culture",
        "description": "description",
        "input_file_ids": "inputFileIds",
        "name": "name",
        "parameters": "parameters",
        "scheduled_execution_date": "scheduledExecutionDate",
        "type": "type",
        "version": "version",
    }

    subtype_mapping: dict[str, str] = {}

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        culture: "str | None | Unset_Type" = Unset,
        description: "str | None | Unset_Type" = Unset,
        input_file_ids: "list[str] | None | Unset_Type" = Unset,
        name: "str | None | Unset_Type" = Unset,
        parameters: "str | None | Unset_Type" = Unset,
        scheduled_execution_date: "datetime | None | Unset_Type" = Unset,
        type: "str | None | Unset_Type" = Unset,
        version: "int | Unset_Type" = Unset,
    ) -> None:
        """GrantaServerApiAsyncJobsCreateJobRequest - a model defined in Swagger

        Parameters
        ----------
        culture: str | None, optional
        description: str | None, optional
        input_file_ids: list[str] | None, optional
        name: str | None, optional
        parameters: str | None, optional
        scheduled_execution_date: datetime | None, optional
        type: str | None, optional
        version: int, optional
        """
        self._name: str | None | Unset_Type = Unset
        self._description: str | None | Unset_Type = Unset
        self._culture: str | None | Unset_Type = Unset
        self._type: str | None | Unset_Type = Unset
        self._version: int | Unset_Type = Unset
        self._scheduled_execution_date: datetime | None | Unset_Type = Unset
        self._input_file_ids: list[str] | None | Unset_Type = Unset
        self._parameters: str | None | Unset_Type = Unset

        if name is not Unset:
            self.name = name
        if description is not Unset:
            self.description = description
        if culture is not Unset:
            self.culture = culture
        if type is not Unset:
            self.type = type
        if version is not Unset:
            self.version = version
        if scheduled_execution_date is not Unset:
            self.scheduled_execution_date = scheduled_execution_date
        if input_file_ids is not Unset:
            self.input_file_ids = input_file_ids
        if parameters is not Unset:
            self.parameters = parameters

    @property
    def name(self) -> "str | None | Unset_Type":
        """Gets the name of this GrantaServerApiAsyncJobsCreateJobRequest.

        Returns
        -------
        str | None | Unset_Type
            The name of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        return self._name

    @name.setter
    def name(self, name: "str | None | Unset_Type") -> None:
        """Sets the name of this GrantaServerApiAsyncJobsCreateJobRequest.

        Parameters
        ----------
        name: str | None | Unset_Type
            The name of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        self._name = name

    @property
    def description(self) -> "str | None | Unset_Type":
        """Gets the description of this GrantaServerApiAsyncJobsCreateJobRequest.

        Returns
        -------
        str | None | Unset_Type
            The description of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        return self._description

    @description.setter
    def description(self, description: "str | None | Unset_Type") -> None:
        """Sets the description of this GrantaServerApiAsyncJobsCreateJobRequest.

        Parameters
        ----------
        description: str | None | Unset_Type
            The description of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        self._description = description

    @property
    def culture(self) -> "str | None | Unset_Type":
        """Gets the culture of this GrantaServerApiAsyncJobsCreateJobRequest.

        Returns
        -------
        str | None | Unset_Type
            The culture of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        return self._culture

    @culture.setter
    def culture(self, culture: "str | None | Unset_Type") -> None:
        """Sets the culture of this GrantaServerApiAsyncJobsCreateJobRequest.

        Parameters
        ----------
        culture: str | None | Unset_Type
            The culture of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        self._culture = culture

    @property
    def type(self) -> "str | None | Unset_Type":
        """Gets the type of this GrantaServerApiAsyncJobsCreateJobRequest.

        Returns
        -------
        str | None | Unset_Type
            The type of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        return self._type

    @type.setter
    def type(self, type: "str | None | Unset_Type") -> None:
        """Sets the type of this GrantaServerApiAsyncJobsCreateJobRequest.

        Parameters
        ----------
        type: str | None | Unset_Type
            The type of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        self._type = type

    @property
    def version(self) -> "int | Unset_Type":
        """Gets the version of this GrantaServerApiAsyncJobsCreateJobRequest.

        Returns
        -------
        int | Unset_Type
            The version of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        return self._version

    @version.setter
    def version(self, version: "int | Unset_Type") -> None:
        """Sets the version of this GrantaServerApiAsyncJobsCreateJobRequest.

        Parameters
        ----------
        version: int | Unset_Type
            The version of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        # Field is not nullable
        if version is None:
            raise ValueError("Invalid value for 'version', must not be 'None'")
        self._version = version

    @property
    def scheduled_execution_date(self) -> "datetime | None | Unset_Type":
        """Gets the scheduled_execution_date of this GrantaServerApiAsyncJobsCreateJobRequest.

        Returns
        -------
        datetime | None | Unset_Type
            The scheduled_execution_date of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        return self._scheduled_execution_date

    @scheduled_execution_date.setter
    def scheduled_execution_date(
        self, scheduled_execution_date: "datetime | None | Unset_Type"
    ) -> None:
        """Sets the scheduled_execution_date of this GrantaServerApiAsyncJobsCreateJobRequest.

        Parameters
        ----------
        scheduled_execution_date: datetime | None | Unset_Type
            The scheduled_execution_date of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        self._scheduled_execution_date = scheduled_execution_date

    @property
    def input_file_ids(self) -> "list[str] | None | Unset_Type":
        """Gets the input_file_ids of this GrantaServerApiAsyncJobsCreateJobRequest.
        Names of temporary input files that were uploaded prior to creating this job.

        Returns
        -------
        list[str] | None | Unset_Type
            The input_file_ids of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        return self._input_file_ids

    @input_file_ids.setter
    def input_file_ids(self, input_file_ids: "list[str] | None | Unset_Type") -> None:
        """Sets the input_file_ids of this GrantaServerApiAsyncJobsCreateJobRequest.
        Names of temporary input files that were uploaded prior to creating this job.

        Parameters
        ----------
        input_file_ids: list[str] | None | Unset_Type
            The input_file_ids of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        self._input_file_ids = input_file_ids

    @property
    def parameters(self) -> "str | None | Unset_Type":
        """Gets the parameters of this GrantaServerApiAsyncJobsCreateJobRequest.

        Returns
        -------
        str | None | Unset_Type
            The parameters of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters: "str | None | Unset_Type") -> None:
        """Sets the parameters of this GrantaServerApiAsyncJobsCreateJobRequest.

        Parameters
        ----------
        parameters: str | None | Unset_Type
            The parameters of this GrantaServerApiAsyncJobsCreateJobRequest.
        """
        self._parameters = parameters

    @classmethod
    def get_real_child_model(cls, data: dict[str, str]) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiAsyncJobsCreateJobRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
