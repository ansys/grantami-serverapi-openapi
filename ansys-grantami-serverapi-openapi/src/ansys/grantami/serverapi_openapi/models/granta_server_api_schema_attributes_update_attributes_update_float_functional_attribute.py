"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import (
    TYPE_CHECKING,
    Any,
    Dict,
    List,
    BinaryIO,
    Optional,
    Union,
)  # noqa: F401

from . import ModelBase
from ansys.grantami.serverapi_openapi.models.granta_server_api_schema_attributes_update_attributes_update_attribute import (
    GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute,
)  # noqa: F401


if TYPE_CHECKING:
    from datetime import datetime
    import pathlib
    from . import *


class GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute(
    GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute
):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: Dict[str, str] = {
        "about_attribute": "GrantaServerApiSchemaSlimEntitiesSlimEntity",
        "attribute_parameters": "list[GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttributeParameter]",
        "axis_name": "str",
        "default_threshold_type": "GrantaServerApiSchemaAttributesAttributeThresholdType",
        "guid": "str",
        "help_path": "str",
        "is_range": "bool",
        "name": "str",
        "type": "str",
        "unit": "GrantaServerApiSchemaSlimEntitiesSlimEntity",
    }

    attribute_map: Dict[str, str] = {
        "about_attribute": "aboutAttribute",
        "attribute_parameters": "attributeParameters",
        "axis_name": "axisName",
        "default_threshold_type": "defaultThresholdType",
        "guid": "guid",
        "help_path": "helpPath",
        "is_range": "isRange",
        "name": "name",
        "type": "type",
        "unit": "unit",
    }

    subtype_mapping: Dict[str, str] = {
        "unit": "GrantaServerApiSchemaSlimEntitiesSlimEntity",
        "attributeParameters": "GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttributeParameter",
    }

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        about_attribute: "Optional[GrantaServerApiSchemaSlimEntitiesSlimEntity]" = None,
        attribute_parameters: "Optional[List[GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttributeParameter]]" = None,
        axis_name: "Optional[str]" = None,
        default_threshold_type: "Optional[GrantaServerApiSchemaAttributesAttributeThresholdType]" = None,
        guid: "Optional[str]" = None,
        help_path: "Optional[str]" = None,
        is_range: "Optional[bool]" = None,
        name: "Optional[str]" = None,
        type: "str" = "floatFunctional",
        unit: "Optional[GrantaServerApiSchemaSlimEntitiesSlimEntity]" = None,
    ) -> None:
        """GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute - a model defined in Swagger

        Parameters
        ----------
            about_attribute: GrantaServerApiSchemaSlimEntitiesSlimEntity, optional
            attribute_parameters: List[GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttributeParameter], optional
            axis_name: str, optional
            default_threshold_type: GrantaServerApiSchemaAttributesAttributeThresholdType, optional
            guid: str, optional
            help_path: str, optional
            is_range: bool, optional
            name: str, optional
            type: str
            unit: GrantaServerApiSchemaSlimEntitiesSlimEntity, optional
        """
        super().__init__(
            about_attribute=about_attribute,
            axis_name=axis_name,
            default_threshold_type=default_threshold_type,
            guid=guid,
            help_path=help_path,
            name=name,
        )
        self._type: str = None  # type: ignore[assignment]
        self._unit = None
        self._attribute_parameters = None
        self._is_range = None

        self.type = type
        if unit is not None:
            self.unit = unit
        if attribute_parameters is not None:
            self.attribute_parameters = attribute_parameters
        if is_range is not None:
            self.is_range = is_range

    @property
    def type(self) -> "str":
        """Gets the type of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.

        Returns
        -------
        str
            The type of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.
        """
        return self._type

    @type.setter
    def type(self, type: "str") -> None:
        """Sets the type of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.

        Parameters
        ----------
        type: str
            The type of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.
        """
        if type is None:
            raise ValueError("Invalid value for 'type', must not be 'None'")
        self._type = type

    @property
    def unit(self) -> "Optional[GrantaServerApiSchemaSlimEntitiesSlimEntity]":
        """Gets the unit of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.

        Returns
        -------
        GrantaServerApiSchemaSlimEntitiesSlimEntity
            The unit of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.
        """
        return self._unit

    @unit.setter
    def unit(
        self, unit: "Optional[GrantaServerApiSchemaSlimEntitiesSlimEntity]"
    ) -> None:
        """Sets the unit of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.

        Parameters
        ----------
        unit: GrantaServerApiSchemaSlimEntitiesSlimEntity
            The unit of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.
        """
        self._unit = unit

    @property
    def attribute_parameters(
        self,
    ) -> "Optional[List[GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttributeParameter]]":
        """Gets the attribute_parameters of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.

        Returns
        -------
        list[GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttributeParameter]
            The attribute_parameters of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.
        """
        return self._attribute_parameters

    @attribute_parameters.setter
    def attribute_parameters(
        self,
        attribute_parameters: "Optional[List[GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttributeParameter]]",
    ) -> None:
        """Sets the attribute_parameters of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.

        Parameters
        ----------
        attribute_parameters: List[GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttributeParameter]
            The attribute_parameters of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.
        """
        self._attribute_parameters = attribute_parameters

    @property
    def is_range(self) -> "Optional[bool]":
        """Gets the is_range of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.

        Returns
        -------
        bool
            The is_range of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.
        """
        return self._is_range

    @is_range.setter
    def is_range(self, is_range: "Optional[bool]") -> None:
        """Sets the is_range of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.

        Parameters
        ----------
        is_range: bool
            The is_range of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute.
        """
        self._is_range = is_range

    @classmethod
    def get_real_child_model(cls, data: ModelBase) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()  # type: ignore[no-any-return]

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(
            other,
            GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute,
        ):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
