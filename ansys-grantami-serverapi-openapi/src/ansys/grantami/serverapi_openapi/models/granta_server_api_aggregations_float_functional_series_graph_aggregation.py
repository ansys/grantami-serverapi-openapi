"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import (
    TYPE_CHECKING,
    Any,
    BinaryIO,
    Dict,
    List,
    Optional,
    Union,
)  # noqa: F401

from . import ModelBase, Unset, Unset_Type


if TYPE_CHECKING:
    from datetime import datetime
    import pathlib
    from . import *


class GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: Dict[str, str] = {
        "count": "int",
        "maximum_number_of_series": "int",
        "minimum_number_of_series": "int",
        "show_as_table_values": "list[GrantaServerApiAggregationsValueWithCountOfSystemBoolean]",
        "x_axis_parameter_guid_values": "list[GrantaServerApiAggregationsValueWithCountOfSystemGuid]",
        "x_axis_parameter_identity_values": "list[GrantaServerApiAggregationsValueWithCountOfSystemInt32]",
    }

    attribute_map: Dict[str, str] = {
        "count": "count",
        "maximum_number_of_series": "maximumNumberOfSeries",
        "minimum_number_of_series": "minimumNumberOfSeries",
        "show_as_table_values": "showAsTableValues",
        "x_axis_parameter_guid_values": "xAxisParameterGuidValues",
        "x_axis_parameter_identity_values": "xAxisParameterIdentityValues",
    }

    subtype_mapping: Dict[str, str] = {
        "xAxisParameterIdentityValues": "GrantaServerApiAggregationsValueWithCountOfSystemInt32",
        "xAxisParameterGuidValues": "GrantaServerApiAggregationsValueWithCountOfSystemGuid",
        "showAsTableValues": "GrantaServerApiAggregationsValueWithCountOfSystemBoolean",
    }

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        count: "Union[int, Unset_Type]" = Unset,
        maximum_number_of_series: "Union[int, None, Unset_Type]" = Unset,
        minimum_number_of_series: "Union[int, None, Unset_Type]" = Unset,
        show_as_table_values: "Union[List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean], None, Unset_Type]" = Unset,
        x_axis_parameter_guid_values: "Union[List[GrantaServerApiAggregationsValueWithCountOfSystemGuid], None, Unset_Type]" = Unset,
        x_axis_parameter_identity_values: "Union[List[GrantaServerApiAggregationsValueWithCountOfSystemInt32], None, Unset_Type]" = Unset,
    ) -> None:
        """GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation - a model defined in Swagger

        Parameters
        ----------
        count: int, optional
        maximum_number_of_series: int, optional
        minimum_number_of_series: int, optional
        show_as_table_values: List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean], optional
        x_axis_parameter_guid_values: List[GrantaServerApiAggregationsValueWithCountOfSystemGuid], optional
        x_axis_parameter_identity_values: List[GrantaServerApiAggregationsValueWithCountOfSystemInt32], optional
        """
        self._x_axis_parameter_identity_values: Union[
            List[GrantaServerApiAggregationsValueWithCountOfSystemInt32],
            None,
            Unset_Type,
        ] = Unset
        self._x_axis_parameter_guid_values: Union[
            List[GrantaServerApiAggregationsValueWithCountOfSystemGuid],
            None,
            Unset_Type,
        ] = Unset
        self._show_as_table_values: Union[
            List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean],
            None,
            Unset_Type,
        ] = Unset
        self._minimum_number_of_series: Union[int, None, Unset_Type] = Unset
        self._maximum_number_of_series: Union[int, None, Unset_Type] = Unset
        self._count: Union[int, Unset_Type] = Unset

        if x_axis_parameter_identity_values is not Unset:
            self.x_axis_parameter_identity_values = x_axis_parameter_identity_values
        if x_axis_parameter_guid_values is not Unset:
            self.x_axis_parameter_guid_values = x_axis_parameter_guid_values
        if show_as_table_values is not Unset:
            self.show_as_table_values = show_as_table_values
        if minimum_number_of_series is not Unset:
            self.minimum_number_of_series = minimum_number_of_series
        if maximum_number_of_series is not Unset:
            self.maximum_number_of_series = maximum_number_of_series
        if count is not Unset:
            self.count = count

    @property
    def x_axis_parameter_identity_values(
        self,
    ) -> "Union[List[GrantaServerApiAggregationsValueWithCountOfSystemInt32], None, Unset_Type]":
        """Gets the x_axis_parameter_identity_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Returns
        -------
        Union[List[GrantaServerApiAggregationsValueWithCountOfSystemInt32], None, Unset_Type]
            The x_axis_parameter_identity_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        return self._x_axis_parameter_identity_values

    @x_axis_parameter_identity_values.setter
    def x_axis_parameter_identity_values(
        self,
        x_axis_parameter_identity_values: "Union[List[GrantaServerApiAggregationsValueWithCountOfSystemInt32], None, Unset_Type]",
    ) -> None:
        """Sets the x_axis_parameter_identity_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Parameters
        ----------
        x_axis_parameter_identity_values: Union[List[GrantaServerApiAggregationsValueWithCountOfSystemInt32], None, Unset_Type]
            The x_axis_parameter_identity_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        self._x_axis_parameter_identity_values = x_axis_parameter_identity_values

    @property
    def x_axis_parameter_guid_values(
        self,
    ) -> "Union[List[GrantaServerApiAggregationsValueWithCountOfSystemGuid], None, Unset_Type]":
        """Gets the x_axis_parameter_guid_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Returns
        -------
        Union[List[GrantaServerApiAggregationsValueWithCountOfSystemGuid], None, Unset_Type]
            The x_axis_parameter_guid_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        return self._x_axis_parameter_guid_values

    @x_axis_parameter_guid_values.setter
    def x_axis_parameter_guid_values(
        self,
        x_axis_parameter_guid_values: "Union[List[GrantaServerApiAggregationsValueWithCountOfSystemGuid], None, Unset_Type]",
    ) -> None:
        """Sets the x_axis_parameter_guid_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Parameters
        ----------
        x_axis_parameter_guid_values: Union[List[GrantaServerApiAggregationsValueWithCountOfSystemGuid], None, Unset_Type]
            The x_axis_parameter_guid_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        self._x_axis_parameter_guid_values = x_axis_parameter_guid_values

    @property
    def show_as_table_values(
        self,
    ) -> "Union[List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean], None, Unset_Type]":
        """Gets the show_as_table_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Returns
        -------
        Union[List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean], None, Unset_Type]
            The show_as_table_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        return self._show_as_table_values

    @show_as_table_values.setter
    def show_as_table_values(
        self,
        show_as_table_values: "Union[List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean], None, Unset_Type]",
    ) -> None:
        """Sets the show_as_table_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Parameters
        ----------
        show_as_table_values: Union[List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean], None, Unset_Type]
            The show_as_table_values of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        self._show_as_table_values = show_as_table_values

    @property
    def minimum_number_of_series(self) -> "Union[int, None, Unset_Type]":
        """Gets the minimum_number_of_series of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Returns
        -------
        Union[int, None, Unset_Type]
            The minimum_number_of_series of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        return self._minimum_number_of_series

    @minimum_number_of_series.setter
    def minimum_number_of_series(
        self, minimum_number_of_series: "Union[int, None, Unset_Type]"
    ) -> None:
        """Sets the minimum_number_of_series of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Parameters
        ----------
        minimum_number_of_series: Union[int, None, Unset_Type]
            The minimum_number_of_series of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        self._minimum_number_of_series = minimum_number_of_series

    @property
    def maximum_number_of_series(self) -> "Union[int, None, Unset_Type]":
        """Gets the maximum_number_of_series of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Returns
        -------
        Union[int, None, Unset_Type]
            The maximum_number_of_series of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        return self._maximum_number_of_series

    @maximum_number_of_series.setter
    def maximum_number_of_series(
        self, maximum_number_of_series: "Union[int, None, Unset_Type]"
    ) -> None:
        """Sets the maximum_number_of_series of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.

        Parameters
        ----------
        maximum_number_of_series: Union[int, None, Unset_Type]
            The maximum_number_of_series of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        self._maximum_number_of_series = maximum_number_of_series

    @property
    def count(self) -> "Union[int, Unset_Type]":
        """Gets the count of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        The number of record where the data is a series graph

        Returns
        -------
        Union[int, Unset_Type]
            The count of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        return self._count

    @count.setter
    def count(self, count: "Union[int, Unset_Type]") -> None:
        """Sets the count of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        The number of record where the data is a series graph

        Parameters
        ----------
        count: Union[int, Unset_Type]
            The count of this GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation.
        """
        # Field is not nullable
        if count is None:
            raise ValueError("Invalid value for 'count', must not be 'None'")
        self._count = count

    @classmethod
    def get_real_child_model(cls, data: Dict[str, str]) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(
            other, GrantaServerApiAggregationsFloatFunctionalSeriesGraphAggregation
        ):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
