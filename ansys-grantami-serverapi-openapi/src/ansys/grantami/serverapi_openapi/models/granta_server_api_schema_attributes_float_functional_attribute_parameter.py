"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401
from typing import TYPE_CHECKING, Any, Dict, List, Optional  # noqa: F401

from . import ModelBase


if TYPE_CHECKING:
    from . import *

class GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.

    """
    swagger_types = {
        "parameter": "GrantaServerApiSchemaSlimEntitiesSlimNamedEntity",
        "default_value": "float",
        "interpolation_method": "GrantaServerApiSchemaAttributesAttributeInterpolationMethod",
        "scale_type": "GrantaServerApiSchemaAttributesAttributeScaleType",
    }

    attribute_map = {
        "parameter": "parameter",
        "default_value": "defaultValue",
        "interpolation_method": "interpolationMethod",
        "scale_type": "scaleType",
    }

    subtype_mapping = {
        "parameter": "GrantaServerApiSchemaSlimEntitiesSlimNamedEntity",
        "interpolationMethod": "GrantaServerApiSchemaAttributesAttributeInterpolationMethod",
        "scaleType": "GrantaServerApiSchemaAttributesAttributeScaleType",
    }

    def __init__(self, *, default_value: "Optional[float]" = None, interpolation_method: "Optional[GrantaServerApiSchemaAttributesAttributeInterpolationMethod]" = None, parameter: "Optional[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]" = None, scale_type: "Optional[GrantaServerApiSchemaAttributesAttributeScaleType]" = None) -> None:
        """GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter - a model defined in Swagger

        Parameters
        ----------
            default_value: float, optional
            interpolation_method: GrantaServerApiSchemaAttributesAttributeInterpolationMethod, optional
            parameter: GrantaServerApiSchemaSlimEntitiesSlimNamedEntity, optional
            scale_type: GrantaServerApiSchemaAttributesAttributeScaleType, optional
        """
        self._parameter = None
        self._default_value = None
        self._interpolation_method = None
        self._scale_type = None
        self.discriminator = None
        if parameter is not None:
            self.parameter = parameter
        if default_value is not None:
            self.default_value = default_value
        if interpolation_method is not None:
            self.interpolation_method = interpolation_method
        if scale_type is not None:
            self.scale_type = scale_type

    @property
    def parameter(self) -> "GrantaServerApiSchemaSlimEntitiesSlimNamedEntity":
        """Gets the parameter of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.

        Returns
        -------
        GrantaServerApiSchemaSlimEntitiesSlimNamedEntity
            The parameter of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.
        """
        return self._parameter

    @parameter.setter
    def parameter(self, parameter: "GrantaServerApiSchemaSlimEntitiesSlimNamedEntity") -> None:
        """Sets the parameter of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.

        Parameters
        ----------
        parameter: GrantaServerApiSchemaSlimEntitiesSlimNamedEntity
            The parameter of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.
        """
        self._parameter = parameter

    @property
    def default_value(self) -> "float":
        """Gets the default_value of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.

        Returns
        -------
        float
            The default_value of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value: "float") -> None:
        """Sets the default_value of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.

        Parameters
        ----------
        default_value: float
            The default_value of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.
        """
        self._default_value = default_value

    @property
    def interpolation_method(self) -> "GrantaServerApiSchemaAttributesAttributeInterpolationMethod":
        """Gets the interpolation_method of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.

        Returns
        -------
        GrantaServerApiSchemaAttributesAttributeInterpolationMethod
            The interpolation_method of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.
        """
        return self._interpolation_method

    @interpolation_method.setter
    def interpolation_method(self, interpolation_method: "GrantaServerApiSchemaAttributesAttributeInterpolationMethod") -> None:
        """Sets the interpolation_method of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.

        Parameters
        ----------
        interpolation_method: GrantaServerApiSchemaAttributesAttributeInterpolationMethod
            The interpolation_method of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.
        """
        self._interpolation_method = interpolation_method

    @property
    def scale_type(self) -> "GrantaServerApiSchemaAttributesAttributeScaleType":
        """Gets the scale_type of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.

        Returns
        -------
        GrantaServerApiSchemaAttributesAttributeScaleType
            The scale_type of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.
        """
        return self._scale_type

    @scale_type.setter
    def scale_type(self, scale_type: "GrantaServerApiSchemaAttributesAttributeScaleType") -> None:
        """Sets the scale_type of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.

        Parameters
        ----------
        scale_type: GrantaServerApiSchemaAttributesAttributeScaleType
            The scale_type of this GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter.
        """
        self._scale_type = scale_type

    def get_real_child_model(self, data: ModelBase) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def to_dict(self) -> Dict:
        """Returns the model properties as a dict

        Returns
        -------
        Dict
            Dictionary indexed by property name containing all the model properties
        """
        result = {}

        for attr in self.swagger_types.keys():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model

        Returns
        -------
        str
            String representation of the model as a dictionary
        """
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
