"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import (
    TYPE_CHECKING,
    Any,
    BinaryIO,
    Dict,
    List,
    Optional,
    Union,
)  # noqa: F401

from . import ModelBase, Unset, Unset_Type


if TYPE_CHECKING:
    from datetime import datetime
    import pathlib
    from . import *


class GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier(
    ModelBase
):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: Dict[str, str] = {
        "link_source_type": "GrantaServerApiIntegrationSchemaLinkSourceType",
        "parameter_mappings": "list[GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier]",
        "source": "GrantaServerApiObjectIdentifier",
        "target_guid": "str",
    }

    attribute_map: Dict[str, str] = {
        "link_source_type": "linkSourceType",
        "parameter_mappings": "parameterMappings",
        "source": "source",
        "target_guid": "targetGuid",
    }

    subtype_mapping: Dict[str, str] = {
        "source": "GrantaServerApiObjectIdentifier",
        "parameterMappings": "GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier",
        "linkSourceType": "GrantaServerApiIntegrationSchemaLinkSourceType",
    }

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        link_source_type: "Union[GrantaServerApiIntegrationSchemaLinkSourceType, Unset_Type]" = Unset,
        parameter_mappings: "Union[List[GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier], None, Unset_Type]" = Unset,
        source: "Union[GrantaServerApiObjectIdentifier, Unset_Type]" = Unset,
        target_guid: "Union[str, Unset_Type]" = Unset,
    ) -> None:
        """GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier - a model defined in Swagger

        Parameters
        ----------
        link_source_type: GrantaServerApiIntegrationSchemaLinkSourceType, optional
        parameter_mappings: List[GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier], optional
        source: GrantaServerApiObjectIdentifier, optional
        target_guid: str, optional
        """
        self._source: Union[GrantaServerApiObjectIdentifier, Unset_Type] = Unset
        self._target_guid: Union[str, Unset_Type] = Unset
        self._parameter_mappings: Union[
            List[
                GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier
            ],
            None,
            Unset_Type,
        ] = Unset
        self._link_source_type: Union[
            GrantaServerApiIntegrationSchemaLinkSourceType, Unset_Type
        ] = Unset

        if source is not Unset:
            self.source = source
        if target_guid is not Unset:
            self.target_guid = target_guid
        if parameter_mappings is not Unset:
            self.parameter_mappings = parameter_mappings
        if link_source_type is not Unset:
            self.link_source_type = link_source_type

    @property
    def source(self) -> "Union[GrantaServerApiObjectIdentifier, Unset_Type]":
        """Gets the source of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.

        Returns
        -------
        Union[GrantaServerApiObjectIdentifier, Unset_Type]
            The source of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        """
        return self._source

    @source.setter
    def source(
        self, source: "Union[GrantaServerApiObjectIdentifier, Unset_Type]"
    ) -> None:
        """Sets the source of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.

        Parameters
        ----------
        source: Union[GrantaServerApiObjectIdentifier, Unset_Type]
            The source of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        """
        # Field is not nullable
        if source is None:
            raise ValueError("Invalid value for 'source', must not be 'None'")
        self._source = source

    @property
    def target_guid(self) -> "Union[str, Unset_Type]":
        """Gets the target_guid of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        The guid of the integration schema attribute

        Returns
        -------
        Union[str, Unset_Type]
            The target_guid of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        """
        return self._target_guid

    @target_guid.setter
    def target_guid(self, target_guid: "Union[str, Unset_Type]") -> None:
        """Sets the target_guid of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        The guid of the integration schema attribute

        Parameters
        ----------
        target_guid: Union[str, Unset_Type]
            The target_guid of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        """
        # Field is not nullable
        if target_guid is None:
            raise ValueError("Invalid value for 'target_guid', must not be 'None'")
        self._target_guid = target_guid

    @property
    def parameter_mappings(
        self,
    ) -> "Union[List[GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier], None, Unset_Type]":
        """Gets the parameter_mappings of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        Any mapped parameters (float functional attributes only). The target parameters must be defined on the target integration attribute.  Not every parameters from the source database needs to be mapped for each attribute.

        Returns
        -------
        Union[List[GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier], None, Unset_Type]
            The parameter_mappings of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        """
        return self._parameter_mappings

    @parameter_mappings.setter
    def parameter_mappings(
        self,
        parameter_mappings: "Union[List[GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier], None, Unset_Type]",
    ) -> None:
        """Sets the parameter_mappings of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        Any mapped parameters (float functional attributes only). The target parameters must be defined on the target integration attribute.  Not every parameters from the source database needs to be mapped for each attribute.

        Parameters
        ----------
        parameter_mappings: Union[List[GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier], None, Unset_Type]
            The parameter_mappings of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        """
        self._parameter_mappings = parameter_mappings

    @property
    def link_source_type(
        self,
    ) -> "Union[GrantaServerApiIntegrationSchemaLinkSourceType, Unset_Type]":
        """Gets the link_source_type of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.

        Returns
        -------
        Union[GrantaServerApiIntegrationSchemaLinkSourceType, Unset_Type]
            The link_source_type of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        """
        return self._link_source_type

    @link_source_type.setter
    def link_source_type(
        self,
        link_source_type: "Union[GrantaServerApiIntegrationSchemaLinkSourceType, Unset_Type]",
    ) -> None:
        """Sets the link_source_type of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.

        Parameters
        ----------
        link_source_type: Union[GrantaServerApiIntegrationSchemaLinkSourceType, Unset_Type]
            The link_source_type of this GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier.
        """
        # Field is not nullable
        if link_source_type is None:
            raise ValueError("Invalid value for 'link_source_type', must not be 'None'")
        self._link_source_type = link_source_type

    @classmethod
    def get_real_child_model(cls, data: Dict[str, str]) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(
            other,
            GrantaServerApiIntegrationSchemaGuidOnlySchemaGuidOnlyMappingOfGrantaServerApiObjectIdentifier,
        ):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
