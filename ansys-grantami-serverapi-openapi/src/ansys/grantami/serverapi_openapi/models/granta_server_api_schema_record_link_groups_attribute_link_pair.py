"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import (
    TYPE_CHECKING,
    Any,
    BinaryIO,
    Dict,
    List,
    Optional,
    Union,
)  # noqa: F401

from . import ModelBase, Unset, Unset_Type


if TYPE_CHECKING:
    from datetime import datetime
    import pathlib
    from . import *


class GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: Dict[str, str] = {
        "attribute_source": "GrantaServerApiSchemaSlimEntitiesSlimAttribute",
        "attribute_target": "GrantaServerApiSchemaSlimEntitiesSlimAttribute",
    }

    attribute_map: Dict[str, str] = {
        "attribute_source": "attributeSource",
        "attribute_target": "attributeTarget",
    }

    subtype_mapping: Dict[str, str] = {
        "attributeSource": "GrantaServerApiSchemaSlimEntitiesSlimAttribute",
        "attributeTarget": "GrantaServerApiSchemaSlimEntitiesSlimAttribute",
    }

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        attribute_source: "Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]" = Unset,
        attribute_target: "Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]" = Unset,
    ) -> None:
        """GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair - a model defined in Swagger

        Parameters
        ----------
        attribute_source: GrantaServerApiSchemaSlimEntitiesSlimAttribute, optional
        attribute_target: GrantaServerApiSchemaSlimEntitiesSlimAttribute, optional
        """
        self._attribute_source: Union[
            GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type
        ] = Unset
        self._attribute_target: Union[
            GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type
        ] = Unset

        if attribute_source is not Unset:
            self.attribute_source = attribute_source
        if attribute_target is not Unset:
            self.attribute_target = attribute_target

    @property
    def attribute_source(
        self,
    ) -> "Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]":
        """Gets the attribute_source of this GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair.

        Returns
        -------
        Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]
            The attribute_source of this GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair.
        """
        return self._attribute_source

    @attribute_source.setter
    def attribute_source(
        self,
        attribute_source: "Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]",
    ) -> None:
        """Sets the attribute_source of this GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair.

        Parameters
        ----------
        attribute_source: Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]
            The attribute_source of this GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair.
        """
        # Field is not nullable
        if attribute_source is None:
            raise ValueError("Invalid value for 'attribute_source', must not be 'None'")
        self._attribute_source = attribute_source

    @property
    def attribute_target(
        self,
    ) -> "Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]":
        """Gets the attribute_target of this GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair.

        Returns
        -------
        Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]
            The attribute_target of this GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair.
        """
        return self._attribute_target

    @attribute_target.setter
    def attribute_target(
        self,
        attribute_target: "Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]",
    ) -> None:
        """Sets the attribute_target of this GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair.

        Parameters
        ----------
        attribute_target: Union[GrantaServerApiSchemaSlimEntitiesSlimAttribute, Unset_Type]
            The attribute_target of this GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair.
        """
        # Field is not nullable
        if attribute_target is None:
            raise ValueError("Invalid value for 'attribute_target', must not be 'None'")
        self._attribute_target = attribute_target

    @classmethod
    def get_real_child_model(cls, data: Dict[str, str]) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(
            other, GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair
        ):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
