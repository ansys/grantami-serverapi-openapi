"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import (
    TYPE_CHECKING,
    Any,
    Dict,
    List,
    BinaryIO,
    Optional,
    Union,
)  # noqa: F401

from . import ModelBase


if TYPE_CHECKING:
    from datetime import datetime
    import pathlib
    from . import *


class GrantaServerApiSearchPagingOptions(ModelBase):  # type: ignore[misc]
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: Dict[str, str] = {
        "keep_alive_in_minutes": "int",
        "page_number": "int",
        "page_size": "int",
    }

    attribute_map: Dict[str, str] = {
        "keep_alive_in_minutes": "keepAliveInMinutes",
        "page_number": "pageNumber",
        "page_size": "pageSize",
    }

    subtype_mapping: Dict[str, str] = {}

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        keep_alive_in_minutes: "Optional[int]" = None,
        page_number: "Optional[int]" = None,
        page_size: "Optional[int]" = None,
    ) -> None:
        """GrantaServerApiSearchPagingOptions - a model defined in Swagger

        Parameters
        ----------
            keep_alive_in_minutes: int, optional
            page_number: int, optional
            page_size: int, optional
        """
        self._page_size = None
        self._keep_alive_in_minutes = None
        self._page_number = None

        if page_size is not None:
            self.page_size = page_size
        if keep_alive_in_minutes is not None:
            self.keep_alive_in_minutes = keep_alive_in_minutes
        if page_number is not None:
            self.page_number = page_number

    @property
    def page_size(self) -> "Optional[int]":
        """Gets the page_size of this GrantaServerApiSearchPagingOptions.
        The number of results that should be returned in each page

        Returns
        -------
        int
            The page_size of this GrantaServerApiSearchPagingOptions.
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size: "Optional[int]") -> None:
        """Sets the page_size of this GrantaServerApiSearchPagingOptions.
        The number of results that should be returned in each page

        Parameters
        ----------
        page_size: int
            The page_size of this GrantaServerApiSearchPagingOptions.
        """
        self._page_size = page_size

    @property
    def keep_alive_in_minutes(self) -> "Optional[int]":
        """Gets the keep_alive_in_minutes of this GrantaServerApiSearchPagingOptions.
        The length of time that the paginated search should be kept in memory

        Returns
        -------
        int
            The keep_alive_in_minutes of this GrantaServerApiSearchPagingOptions.
        """
        return self._keep_alive_in_minutes

    @keep_alive_in_minutes.setter
    def keep_alive_in_minutes(self, keep_alive_in_minutes: "Optional[int]") -> None:
        """Sets the keep_alive_in_minutes of this GrantaServerApiSearchPagingOptions.
        The length of time that the paginated search should be kept in memory

        Parameters
        ----------
        keep_alive_in_minutes: int
            The keep_alive_in_minutes of this GrantaServerApiSearchPagingOptions.
        """
        self._keep_alive_in_minutes = keep_alive_in_minutes

    @property
    def page_number(self) -> "Optional[int]":
        """Gets the page_number of this GrantaServerApiSearchPagingOptions.
        (Optional) the (1-indexed) number of the page to return from the search. No pages are returned if not provided

        Returns
        -------
        int
            The page_number of this GrantaServerApiSearchPagingOptions.
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number: "Optional[int]") -> None:
        """Sets the page_number of this GrantaServerApiSearchPagingOptions.
        (Optional) the (1-indexed) number of the page to return from the search. No pages are returned if not provided

        Parameters
        ----------
        page_number: int
            The page_number of this GrantaServerApiSearchPagingOptions.
        """
        self._page_number = page_number

    @classmethod
    def get_real_child_model(cls, data: ModelBase) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()  # type: ignore[no-any-return]

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiSearchPagingOptions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
