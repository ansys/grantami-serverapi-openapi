"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401
from typing import TYPE_CHECKING, Any, Dict, List, Optional  # noqa: F401

from . import ModelBase


if TYPE_CHECKING:
    from . import *

class GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.

    """
    swagger_types = {
        "display_names": "dict(str, str)",
        "guid": "str",
        "identity": "int",
        "name": "str",
        "reverse_display_names": "dict(str, str)",
        "reverse_name": "str",
        "type": "GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType",
    }

    attribute_map = {
        "display_names": "displayNames",
        "guid": "guid",
        "identity": "identity",
        "name": "name",
        "reverse_display_names": "reverseDisplayNames",
        "reverse_name": "reverseName",
        "type": "type",
    }

    subtype_mapping = {
        "type": "GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType",
    }

    def __init__(self, *, display_names: "Optional[Dict[str, str]]" = None, guid: "Optional[str]" = None, identity: "Optional[int]" = None, name: "Optional[str]" = None, reverse_display_names: "Optional[Dict[str, str]]" = None, reverse_name: "Optional[str]" = None, type: "Optional[GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType]" = None,) -> None:
        """GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup - a model defined in Swagger

        Parameters
        ----------
            display_names: Dict[str, str], optional
            guid: str, optional
            identity: int, optional
            name: str, optional
            reverse_display_names: Dict[str, str], optional
            reverse_name: str, optional
            type: GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType, optional
        """
        self._identity = None
        self._type = None
        self._reverse_name = None
        self._reverse_display_names = None
        self._display_names = None
        self._name = None
        self._guid = None
        self.discriminator = None
        if identity is not None:
            self.identity = identity
        if type is not None:
            self.type = type
        if reverse_name is not None:
            self.reverse_name = reverse_name
        if reverse_display_names is not None:
            self.reverse_display_names = reverse_display_names
        if display_names is not None:
            self.display_names = display_names
        if name is not None:
            self.name = name
        if guid is not None:
            self.guid = guid

    @property
    def identity(self) -> "int":
        """Gets the identity of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Returns
        -------
        int
            The identity of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        return self._identity

    @identity.setter
    def identity(self, identity: "int") -> None:
        """Sets the identity of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Parameters
        ----------
        identity: int
            The identity of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        self._identity = identity

    @property
    def type(self) -> "GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType":
        """Gets the type of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Returns
        -------
        GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType
            The type of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        return self._type

    @type.setter
    def type(self, type: "GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType") -> None:
        """Sets the type of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Parameters
        ----------
        type: GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType
            The type of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        self._type = type

    @property
    def reverse_name(self) -> "str":
        """Gets the reverse_name of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Returns
        -------
        str
            The reverse_name of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        return self._reverse_name

    @reverse_name.setter
    def reverse_name(self, reverse_name: "str") -> None:
        """Sets the reverse_name of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Parameters
        ----------
        reverse_name: str
            The reverse_name of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        self._reverse_name = reverse_name

    @property
    def reverse_display_names(self) -> "dict(str, str)":
        """Gets the reverse_display_names of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Returns
        -------
        dict(str, str)
            The reverse_display_names of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        return self._reverse_display_names

    @reverse_display_names.setter
    def reverse_display_names(self, reverse_display_names: "dict(str, str)") -> None:
        """Sets the reverse_display_names of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Parameters
        ----------
        reverse_display_names: dict(str, str)
            The reverse_display_names of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        self._reverse_display_names = reverse_display_names

    @property
    def display_names(self) -> "dict(str, str)":
        """Gets the display_names of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Returns
        -------
        dict(str, str)
            The display_names of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        return self._display_names

    @display_names.setter
    def display_names(self, display_names: "dict(str, str)") -> None:
        """Sets the display_names of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Parameters
        ----------
        display_names: dict(str, str)
            The display_names of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        self._display_names = display_names

    @property
    def name(self) -> "str":
        """Gets the name of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Returns
        -------
        str
            The name of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        return self._name

    @name.setter
    def name(self, name: "str") -> None:
        """Sets the name of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Parameters
        ----------
        name: str
            The name of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        self._name = name

    @property
    def guid(self) -> "str":
        """Gets the guid of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Returns
        -------
        str
            The guid of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        return self._guid

    @guid.setter
    def guid(self, guid: "str") -> None:
        """Sets the guid of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.

        Parameters
        ----------
        guid: str
            The guid of this GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup.
        """
        self._guid = guid

    def get_real_child_model(self, data: ModelBase) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def to_dict(self) -> Dict:
        """Returns the model properties as a dict

        Returns
        -------
        Dict
            Dictionary indexed by property name containing all the model properties
        """
        result = {}

        for attr in self.swagger_types.keys():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model

        Returns
        -------
        str
            String representation of the model as a dictionary
        """
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
