"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import (
    TYPE_CHECKING,
    Any,
    Dict,
    List,
    BinaryIO,
    Optional,
    Union,
)  # noqa: F401

from . import ModelBase


if TYPE_CHECKING:
    from datetime import datetime
    import pathlib
    from . import *


class GrantaServerApiDataExportDatumsTabularRow(ModelBase):  # type: ignore[misc]
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: Dict[str, str] = {
        "linked_data": "list[GrantaServerApiDataExportRecordWithData]",
        "linked_records": "list[GrantaServerApiIntegrationDataExportRecordReference]",
        "linking_value": "str",
        "local_data": "list[GrantaServerApiDataExportDatumsDatum]",
        "rolled_up_data": "list[GrantaServerApiDataExportDatumsRollupRollupDatum]",
        "row_guid": "str",
        "row_number": "int",
    }

    attribute_map: Dict[str, str] = {
        "linked_data": "linkedData",
        "linked_records": "linkedRecords",
        "linking_value": "linkingValue",
        "local_data": "localData",
        "rolled_up_data": "rolledUpData",
        "row_guid": "rowGuid",
        "row_number": "rowNumber",
    }

    subtype_mapping: Dict[str, str] = {
        "localData": "GrantaServerApiDataExportDatumsDatum",
        "linkedRecords": "GrantaServerApiIntegrationDataExportRecordReference",
        "linkedData": "GrantaServerApiDataExportRecordWithData",
        "rolledUpData": "GrantaServerApiDataExportDatumsRollupRollupDatum",
    }

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        linked_data: "Optional[List[GrantaServerApiDataExportRecordWithData]]" = None,
        linked_records: "Optional[List[GrantaServerApiIntegrationDataExportRecordReference]]" = None,
        linking_value: "Optional[str]" = None,
        local_data: "Optional[List[GrantaServerApiDataExportDatumsDatum]]" = None,
        rolled_up_data: "Optional[List[GrantaServerApiDataExportDatumsRollupRollupDatum]]" = None,
        row_guid: "Optional[str]" = None,
        row_number: "Optional[int]" = None,
    ) -> None:
        """GrantaServerApiDataExportDatumsTabularRow - a model defined in Swagger

        Parameters
        ----------
            linked_data: List[GrantaServerApiDataExportRecordWithData], optional
            linked_records: List[GrantaServerApiIntegrationDataExportRecordReference], optional
            linking_value: str, optional
            local_data: List[GrantaServerApiDataExportDatumsDatum], optional
            rolled_up_data: List[GrantaServerApiDataExportDatumsRollupRollupDatum], optional
            row_guid: str, optional
            row_number: int, optional
        """
        self._row_guid = None
        self._linking_value = None
        self._row_number = None
        self._local_data = None
        self._linked_records = None
        self._linked_data = None
        self._rolled_up_data = None

        if row_guid is not None:
            self.row_guid = row_guid
        if linking_value is not None:
            self.linking_value = linking_value
        if row_number is not None:
            self.row_number = row_number
        if local_data is not None:
            self.local_data = local_data
        if linked_records is not None:
            self.linked_records = linked_records
        if linked_data is not None:
            self.linked_data = linked_data
        if rolled_up_data is not None:
            self.rolled_up_data = rolled_up_data

    @property
    def row_guid(self) -> "Optional[str]":
        """Gets the row_guid of this GrantaServerApiDataExportDatumsTabularRow.

        Returns
        -------
        str
            The row_guid of this GrantaServerApiDataExportDatumsTabularRow.
        """
        return self._row_guid

    @row_guid.setter
    def row_guid(self, row_guid: "Optional[str]") -> None:
        """Sets the row_guid of this GrantaServerApiDataExportDatumsTabularRow.

        Parameters
        ----------
        row_guid: str
            The row_guid of this GrantaServerApiDataExportDatumsTabularRow.
        """
        self._row_guid = row_guid

    @property
    def linking_value(self) -> "Optional[str]":
        """Gets the linking_value of this GrantaServerApiDataExportDatumsTabularRow.

        Returns
        -------
        str
            The linking_value of this GrantaServerApiDataExportDatumsTabularRow.
        """
        return self._linking_value

    @linking_value.setter
    def linking_value(self, linking_value: "Optional[str]") -> None:
        """Sets the linking_value of this GrantaServerApiDataExportDatumsTabularRow.

        Parameters
        ----------
        linking_value: str
            The linking_value of this GrantaServerApiDataExportDatumsTabularRow.
        """
        self._linking_value = linking_value

    @property
    def row_number(self) -> "Optional[int]":
        """Gets the row_number of this GrantaServerApiDataExportDatumsTabularRow.

        Returns
        -------
        int
            The row_number of this GrantaServerApiDataExportDatumsTabularRow.
        """
        return self._row_number

    @row_number.setter
    def row_number(self, row_number: "Optional[int]") -> None:
        """Sets the row_number of this GrantaServerApiDataExportDatumsTabularRow.

        Parameters
        ----------
        row_number: int
            The row_number of this GrantaServerApiDataExportDatumsTabularRow.
        """
        self._row_number = row_number

    @property
    def local_data(self) -> "Optional[List[GrantaServerApiDataExportDatumsDatum]]":
        """Gets the local_data of this GrantaServerApiDataExportDatumsTabularRow.

        Returns
        -------
        list[GrantaServerApiDataExportDatumsDatum]
            The local_data of this GrantaServerApiDataExportDatumsTabularRow.
        """
        return self._local_data

    @local_data.setter
    def local_data(
        self, local_data: "Optional[List[GrantaServerApiDataExportDatumsDatum]]"
    ) -> None:
        """Sets the local_data of this GrantaServerApiDataExportDatumsTabularRow.

        Parameters
        ----------
        local_data: List[GrantaServerApiDataExportDatumsDatum]
            The local_data of this GrantaServerApiDataExportDatumsTabularRow.
        """
        self._local_data = local_data

    @property
    def linked_records(
        self,
    ) -> "Optional[List[GrantaServerApiIntegrationDataExportRecordReference]]":
        """Gets the linked_records of this GrantaServerApiDataExportDatumsTabularRow.
        Records linked to this tabular row (only populated if the target table/attribute was provided in the request)

        Returns
        -------
        list[GrantaServerApiIntegrationDataExportRecordReference]
            The linked_records of this GrantaServerApiDataExportDatumsTabularRow.
        """
        return self._linked_records

    @linked_records.setter
    def linked_records(
        self,
        linked_records: "Optional[List[GrantaServerApiIntegrationDataExportRecordReference]]",
    ) -> None:
        """Sets the linked_records of this GrantaServerApiDataExportDatumsTabularRow.
        Records linked to this tabular row (only populated if the target table/attribute was provided in the request)

        Parameters
        ----------
        linked_records: List[GrantaServerApiIntegrationDataExportRecordReference]
            The linked_records of this GrantaServerApiDataExportDatumsTabularRow.
        """
        self._linked_records = linked_records

    @property
    def linked_data(self) -> "Optional[List[GrantaServerApiDataExportRecordWithData]]":
        """Gets the linked_data of this GrantaServerApiDataExportDatumsTabularRow.
        Data for the linked records, if the request included linked data to export

        Returns
        -------
        list[GrantaServerApiDataExportRecordWithData]
            The linked_data of this GrantaServerApiDataExportDatumsTabularRow.
        """
        return self._linked_data

    @linked_data.setter
    def linked_data(
        self, linked_data: "Optional[List[GrantaServerApiDataExportRecordWithData]]"
    ) -> None:
        """Sets the linked_data of this GrantaServerApiDataExportDatumsTabularRow.
        Data for the linked records, if the request included linked data to export

        Parameters
        ----------
        linked_data: List[GrantaServerApiDataExportRecordWithData]
            The linked_data of this GrantaServerApiDataExportDatumsTabularRow.
        """
        self._linked_data = linked_data

    @property
    def rolled_up_data(
        self,
    ) -> "Optional[List[GrantaServerApiDataExportDatumsRollupRollupDatum]]":
        """Gets the rolled_up_data of this GrantaServerApiDataExportDatumsTabularRow.

        Returns
        -------
        list[GrantaServerApiDataExportDatumsRollupRollupDatum]
            The rolled_up_data of this GrantaServerApiDataExportDatumsTabularRow.
        """
        return self._rolled_up_data

    @rolled_up_data.setter
    def rolled_up_data(
        self,
        rolled_up_data: "Optional[List[GrantaServerApiDataExportDatumsRollupRollupDatum]]",
    ) -> None:
        """Sets the rolled_up_data of this GrantaServerApiDataExportDatumsTabularRow.

        Parameters
        ----------
        rolled_up_data: List[GrantaServerApiDataExportDatumsRollupRollupDatum]
            The rolled_up_data of this GrantaServerApiDataExportDatumsTabularRow.
        """
        self._rolled_up_data = rolled_up_data

    @classmethod
    def get_real_child_model(cls, data: ModelBase) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()  # type: ignore[no-any-return]

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiDataExportDatumsTabularRow):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
