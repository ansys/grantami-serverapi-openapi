"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import (
    TYPE_CHECKING,
    Any,
    Dict,
    List,
    BinaryIO,
    Optional,
    Union,
)  # noqa: F401

from . import ModelBase


if TYPE_CHECKING:
    from datetime import datetime
    import pathlib
    from . import *


class GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation(ModelBase):  # type: ignore[misc]
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: Dict[str, str] = {
        "count": "int",
        "default_x_axis_parameter_guid_values": "list[GrantaServerApiAggregationsValueWithCountOfSystemGuid]",
        "default_x_axis_parameter_identity_values": "list[GrantaServerApiAggregationsValueWithCountOfSystemInt32]",
        "maximum_number_of_points": "int",
        "minimum_number_of_points": "int",
        "show_as_table_values": "list[GrantaServerApiAggregationsValueWithCountOfSystemBoolean]",
    }

    attribute_map: Dict[str, str] = {
        "count": "count",
        "default_x_axis_parameter_guid_values": "defaultXAxisParameterGuidValues",
        "default_x_axis_parameter_identity_values": "defaultXAxisParameterIdentityValues",
        "maximum_number_of_points": "maximumNumberOfPoints",
        "minimum_number_of_points": "minimumNumberOfPoints",
        "show_as_table_values": "showAsTableValues",
    }

    subtype_mapping: Dict[str, str] = {
        "defaultXAxisParameterIdentityValues": "GrantaServerApiAggregationsValueWithCountOfSystemInt32",
        "defaultXAxisParameterGuidValues": "GrantaServerApiAggregationsValueWithCountOfSystemGuid",
        "showAsTableValues": "GrantaServerApiAggregationsValueWithCountOfSystemBoolean",
    }

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        count: "Optional[int]" = None,
        default_x_axis_parameter_guid_values: "Optional[List[GrantaServerApiAggregationsValueWithCountOfSystemGuid]]" = None,
        default_x_axis_parameter_identity_values: "Optional[List[GrantaServerApiAggregationsValueWithCountOfSystemInt32]]" = None,
        maximum_number_of_points: "Optional[int]" = None,
        minimum_number_of_points: "Optional[int]" = None,
        show_as_table_values: "Optional[List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean]]" = None,
    ) -> None:
        """GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation - a model defined in Swagger

        Parameters
        ----------
            count: int, optional
            default_x_axis_parameter_guid_values: List[GrantaServerApiAggregationsValueWithCountOfSystemGuid], optional
            default_x_axis_parameter_identity_values: List[GrantaServerApiAggregationsValueWithCountOfSystemInt32], optional
            maximum_number_of_points: int, optional
            minimum_number_of_points: int, optional
            show_as_table_values: List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean], optional
        """
        self._default_x_axis_parameter_identity_values = None
        self._default_x_axis_parameter_guid_values = None
        self._show_as_table_values = None
        self._minimum_number_of_points = None
        self._maximum_number_of_points = None
        self._count = None

        if default_x_axis_parameter_identity_values is not None:
            self.default_x_axis_parameter_identity_values = (
                default_x_axis_parameter_identity_values
            )
        if default_x_axis_parameter_guid_values is not None:
            self.default_x_axis_parameter_guid_values = (
                default_x_axis_parameter_guid_values
            )
        if show_as_table_values is not None:
            self.show_as_table_values = show_as_table_values
        if minimum_number_of_points is not None:
            self.minimum_number_of_points = minimum_number_of_points
        if maximum_number_of_points is not None:
            self.maximum_number_of_points = maximum_number_of_points
        if count is not None:
            self.count = count

    @property
    def default_x_axis_parameter_identity_values(
        self,
    ) -> "Optional[List[GrantaServerApiAggregationsValueWithCountOfSystemInt32]]":
        """Gets the default_x_axis_parameter_identity_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Returns
        -------
        list[GrantaServerApiAggregationsValueWithCountOfSystemInt32]
            The default_x_axis_parameter_identity_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        return self._default_x_axis_parameter_identity_values

    @default_x_axis_parameter_identity_values.setter
    def default_x_axis_parameter_identity_values(
        self,
        default_x_axis_parameter_identity_values: "Optional[List[GrantaServerApiAggregationsValueWithCountOfSystemInt32]]",
    ) -> None:
        """Sets the default_x_axis_parameter_identity_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Parameters
        ----------
        default_x_axis_parameter_identity_values: List[GrantaServerApiAggregationsValueWithCountOfSystemInt32]
            The default_x_axis_parameter_identity_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        self._default_x_axis_parameter_identity_values = (
            default_x_axis_parameter_identity_values
        )

    @property
    def default_x_axis_parameter_guid_values(
        self,
    ) -> "Optional[List[GrantaServerApiAggregationsValueWithCountOfSystemGuid]]":
        """Gets the default_x_axis_parameter_guid_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Returns
        -------
        list[GrantaServerApiAggregationsValueWithCountOfSystemGuid]
            The default_x_axis_parameter_guid_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        return self._default_x_axis_parameter_guid_values

    @default_x_axis_parameter_guid_values.setter
    def default_x_axis_parameter_guid_values(
        self,
        default_x_axis_parameter_guid_values: "Optional[List[GrantaServerApiAggregationsValueWithCountOfSystemGuid]]",
    ) -> None:
        """Sets the default_x_axis_parameter_guid_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Parameters
        ----------
        default_x_axis_parameter_guid_values: List[GrantaServerApiAggregationsValueWithCountOfSystemGuid]
            The default_x_axis_parameter_guid_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        self._default_x_axis_parameter_guid_values = (
            default_x_axis_parameter_guid_values
        )

    @property
    def show_as_table_values(
        self,
    ) -> "Optional[List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean]]":
        """Gets the show_as_table_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Returns
        -------
        list[GrantaServerApiAggregationsValueWithCountOfSystemBoolean]
            The show_as_table_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        return self._show_as_table_values

    @show_as_table_values.setter
    def show_as_table_values(
        self,
        show_as_table_values: "Optional[List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean]]",
    ) -> None:
        """Sets the show_as_table_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Parameters
        ----------
        show_as_table_values: List[GrantaServerApiAggregationsValueWithCountOfSystemBoolean]
            The show_as_table_values of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        self._show_as_table_values = show_as_table_values

    @property
    def minimum_number_of_points(self) -> "Optional[int]":
        """Gets the minimum_number_of_points of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Returns
        -------
        int
            The minimum_number_of_points of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        return self._minimum_number_of_points

    @minimum_number_of_points.setter
    def minimum_number_of_points(
        self, minimum_number_of_points: "Optional[int]"
    ) -> None:
        """Sets the minimum_number_of_points of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Parameters
        ----------
        minimum_number_of_points: int
            The minimum_number_of_points of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        self._minimum_number_of_points = minimum_number_of_points

    @property
    def maximum_number_of_points(self) -> "Optional[int]":
        """Gets the maximum_number_of_points of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Returns
        -------
        int
            The maximum_number_of_points of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        return self._maximum_number_of_points

    @maximum_number_of_points.setter
    def maximum_number_of_points(
        self, maximum_number_of_points: "Optional[int]"
    ) -> None:
        """Sets the maximum_number_of_points of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.

        Parameters
        ----------
        maximum_number_of_points: int
            The maximum_number_of_points of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        self._maximum_number_of_points = maximum_number_of_points

    @property
    def count(self) -> "Optional[int]":
        """Gets the count of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        The number of record where the data is a series graph

        Returns
        -------
        int
            The count of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        return self._count

    @count.setter
    def count(self, count: "Optional[int]") -> None:
        """Sets the count of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        The number of record where the data is a series graph

        Parameters
        ----------
        count: int
            The count of this GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation.
        """
        self._count = count

    @classmethod
    def get_real_child_model(cls, data: ModelBase) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()  # type: ignore[no-any-return]

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(
            other, GrantaServerApiAggregationsFloatFunctionalGridGraphAggregation
        ):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
