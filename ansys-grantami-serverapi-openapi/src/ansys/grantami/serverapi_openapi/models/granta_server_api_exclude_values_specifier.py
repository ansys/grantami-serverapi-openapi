"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import (
    TYPE_CHECKING,
    Any,
    BinaryIO,
    Dict,
    List,
    Optional,
    Union,
)  # noqa: F401

from . import ModelBase, Unset, Unset_Type
from ansys.grantami.serverapi_openapi.models.granta_server_api_value_specifier import (
    GrantaServerApiValueSpecifier,
)  # noqa: F401


if TYPE_CHECKING:
    from datetime import datetime
    import pathlib
    from . import *


class GrantaServerApiExcludeValuesSpecifier(GrantaServerApiValueSpecifier):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: Dict[str, str] = {
        "excluded_guids": "list[str]",
        "excluded_identities": "list[int]",
        "filter_on": "str",
    }

    attribute_map: Dict[str, str] = {
        "excluded_guids": "excludedGuids",
        "excluded_identities": "excludedIdentities",
        "filter_on": "filterOn",
    }

    subtype_mapping: Dict[str, str] = {}

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        excluded_guids: "Union[List[str], None, Unset_Type]" = Unset,
        excluded_identities: "Union[List[int], None, Unset_Type]" = Unset,
        filter_on: "str" = "exclude",
    ) -> None:
        """GrantaServerApiExcludeValuesSpecifier - a model defined in Swagger

        Parameters
        ----------
        excluded_guids: List[str], optional
        excluded_identities: List[int], optional
        filter_on: str
        """
        super().__init__()
        self._excluded_identities: Union[List[int], None, Unset_Type] = Unset
        self._excluded_guids: Union[List[str], None, Unset_Type] = Unset
        self._filter_on: str

        if excluded_identities is not Unset:
            self.excluded_identities = excluded_identities
        if excluded_guids is not Unset:
            self.excluded_guids = excluded_guids
        self.filter_on = filter_on

    @property
    def excluded_identities(self) -> "Union[List[int], None, Unset_Type]":
        """Gets the excluded_identities of this GrantaServerApiExcludeValuesSpecifier.

        Returns
        -------
        Union[List[int], None, Unset_Type]
            The excluded_identities of this GrantaServerApiExcludeValuesSpecifier.
        """
        return self._excluded_identities

    @excluded_identities.setter
    def excluded_identities(
        self, excluded_identities: "Union[List[int], None, Unset_Type]"
    ) -> None:
        """Sets the excluded_identities of this GrantaServerApiExcludeValuesSpecifier.

        Parameters
        ----------
        excluded_identities: Union[List[int], None, Unset_Type]
            The excluded_identities of this GrantaServerApiExcludeValuesSpecifier.
        """
        self._excluded_identities = excluded_identities

    @property
    def excluded_guids(self) -> "Union[List[str], None, Unset_Type]":
        """Gets the excluded_guids of this GrantaServerApiExcludeValuesSpecifier.

        Returns
        -------
        Union[List[str], None, Unset_Type]
            The excluded_guids of this GrantaServerApiExcludeValuesSpecifier.
        """
        return self._excluded_guids

    @excluded_guids.setter
    def excluded_guids(
        self, excluded_guids: "Union[List[str], None, Unset_Type]"
    ) -> None:
        """Sets the excluded_guids of this GrantaServerApiExcludeValuesSpecifier.

        Parameters
        ----------
        excluded_guids: Union[List[str], None, Unset_Type]
            The excluded_guids of this GrantaServerApiExcludeValuesSpecifier.
        """
        self._excluded_guids = excluded_guids

    @property
    def filter_on(self) -> "str":
        """Gets the filter_on of this GrantaServerApiExcludeValuesSpecifier.

        Returns
        -------
        str
            The filter_on of this GrantaServerApiExcludeValuesSpecifier.
        """
        return self._filter_on

    @filter_on.setter
    def filter_on(self, filter_on: "str") -> None:
        """Sets the filter_on of this GrantaServerApiExcludeValuesSpecifier.

        Parameters
        ----------
        filter_on: str
            The filter_on of this GrantaServerApiExcludeValuesSpecifier.
        """
        # Field is not nullable
        if filter_on is None:
            raise ValueError("Invalid value for 'filter_on', must not be 'None'")
        # Field is required
        if filter_on is Unset:  # type: ignore[comparison-overlap, unused-ignore]
            raise ValueError("Invalid value for 'filter_on', must not be 'Unset'")
        self._filter_on = filter_on

    @classmethod
    def get_real_child_model(cls, data: Dict[str, str]) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiExcludeValuesSpecifier):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
