# coding: utf-8

"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401
from . import ModelBase


class GrantaServerApiSchemaAttributesAttributeAttributeInfo(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type_code': 'str',
        'chartable': 'bool',
        'expressionable': 'bool',
        'linkable': 'bool',
        'extended_name': 'str',
        'is_meta_attribute': 'bool',
        'ordered_meta_attributes': 'list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]',
        'standard_names': 'list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]',
        'primary_data_link_groups': 'list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]',
        'foreign_data_link_groups': 'list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]',
        'primary_dynamic_link_groups': 'list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]',
        'foreign_dynamic_link_groups': 'list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]'
    }

    attribute_map = {
        'type_code': 'typeCode',
        'chartable': 'chartable',
        'expressionable': 'expressionable',
        'linkable': 'linkable',
        'extended_name': 'extendedName',
        'is_meta_attribute': 'isMetaAttribute',
        'ordered_meta_attributes': 'orderedMetaAttributes',
        'standard_names': 'standardNames',
        'primary_data_link_groups': 'primaryDataLinkGroups',
        'foreign_data_link_groups': 'foreignDataLinkGroups',
        'primary_dynamic_link_groups': 'primaryDynamicLinkGroups',
        'foreign_dynamic_link_groups': 'foreignDynamicLinkGroups'
    }

    subtype_mapping = {
        'orderedMetaAttributes': 'GrantaServerApiSchemaSlimEntitiesSlimNamedEntity',
        'standardNames': 'GrantaServerApiSchemaSlimEntitiesSlimNamedEntity',
        'primaryDataLinkGroups': 'GrantaServerApiSchemaSlimEntitiesSlimNamedEntity',
        'foreignDataLinkGroups': 'GrantaServerApiSchemaSlimEntitiesSlimNamedEntity',
        'primaryDynamicLinkGroups': 'GrantaServerApiSchemaSlimEntitiesSlimNamedEntity',
        'foreignDynamicLinkGroups': 'GrantaServerApiSchemaSlimEntitiesSlimNamedEntity'
    }


    def __init__(self, type_code=None, chartable=None, expressionable=None, linkable=None, extended_name=None, is_meta_attribute=None, ordered_meta_attributes=None, standard_names=None, primary_data_link_groups=None, foreign_data_link_groups=None, primary_dynamic_link_groups=None, foreign_dynamic_link_groups=None):  # noqa: E501
        """GrantaServerApiSchemaAttributesAttributeAttributeInfo - a model defined in Swagger"""  # noqa: E501
        self._type_code = None
        self._chartable = None
        self._expressionable = None
        self._linkable = None
        self._extended_name = None
        self._is_meta_attribute = None
        self._ordered_meta_attributes = None
        self._standard_names = None
        self._primary_data_link_groups = None
        self._foreign_data_link_groups = None
        self._primary_dynamic_link_groups = None
        self._foreign_dynamic_link_groups = None
        self.discriminator = None
        if type_code is not None:
            self.type_code = type_code
        if chartable is not None:
            self.chartable = chartable
        if expressionable is not None:
            self.expressionable = expressionable
        if linkable is not None:
            self.linkable = linkable
        if extended_name is not None:
            self.extended_name = extended_name
        if is_meta_attribute is not None:
            self.is_meta_attribute = is_meta_attribute
        if ordered_meta_attributes is not None:
            self.ordered_meta_attributes = ordered_meta_attributes
        if standard_names is not None:
            self.standard_names = standard_names
        if primary_data_link_groups is not None:
            self.primary_data_link_groups = primary_data_link_groups
        if foreign_data_link_groups is not None:
            self.foreign_data_link_groups = foreign_data_link_groups
        if primary_dynamic_link_groups is not None:
            self.primary_dynamic_link_groups = primary_dynamic_link_groups
        if foreign_dynamic_link_groups is not None:
            self.foreign_dynamic_link_groups = foreign_dynamic_link_groups

    @property
    def type_code(self):
        """Gets the type_code of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The type_code of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: str
        """
        return self._type_code

    @type_code.setter
    def type_code(self, type_code):
        """Sets the type_code of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param type_code: The type_code of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: str
        """
        self._type_code = type_code

    @property
    def chartable(self):
        """Gets the chartable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The chartable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: bool
        """
        return self._chartable

    @chartable.setter
    def chartable(self, chartable):
        """Sets the chartable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param chartable: The chartable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: bool
        """
        self._chartable = chartable

    @property
    def expressionable(self):
        """Gets the expressionable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The expressionable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: bool
        """
        return self._expressionable

    @expressionable.setter
    def expressionable(self, expressionable):
        """Sets the expressionable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param expressionable: The expressionable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: bool
        """
        self._expressionable = expressionable

    @property
    def linkable(self):
        """Gets the linkable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The linkable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: bool
        """
        return self._linkable

    @linkable.setter
    def linkable(self, linkable):
        """Sets the linkable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param linkable: The linkable of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: bool
        """
        self._linkable = linkable

    @property
    def extended_name(self):
        """Gets the extended_name of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The extended_name of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: str
        """
        return self._extended_name

    @extended_name.setter
    def extended_name(self, extended_name):
        """Sets the extended_name of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param extended_name: The extended_name of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: str
        """
        self._extended_name = extended_name

    @property
    def is_meta_attribute(self):
        """Gets the is_meta_attribute of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The is_meta_attribute of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: bool
        """
        return self._is_meta_attribute

    @is_meta_attribute.setter
    def is_meta_attribute(self, is_meta_attribute):
        """Sets the is_meta_attribute of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param is_meta_attribute: The is_meta_attribute of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: bool
        """
        self._is_meta_attribute = is_meta_attribute

    @property
    def ordered_meta_attributes(self):
        """Gets the ordered_meta_attributes of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The ordered_meta_attributes of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        return self._ordered_meta_attributes

    @ordered_meta_attributes.setter
    def ordered_meta_attributes(self, ordered_meta_attributes):
        """Sets the ordered_meta_attributes of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param ordered_meta_attributes: The ordered_meta_attributes of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        self._ordered_meta_attributes = ordered_meta_attributes

    @property
    def standard_names(self):
        """Gets the standard_names of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The standard_names of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        return self._standard_names

    @standard_names.setter
    def standard_names(self, standard_names):
        """Sets the standard_names of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param standard_names: The standard_names of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        self._standard_names = standard_names

    @property
    def primary_data_link_groups(self):
        """Gets the primary_data_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The primary_data_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        return self._primary_data_link_groups

    @primary_data_link_groups.setter
    def primary_data_link_groups(self, primary_data_link_groups):
        """Sets the primary_data_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param primary_data_link_groups: The primary_data_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        self._primary_data_link_groups = primary_data_link_groups

    @property
    def foreign_data_link_groups(self):
        """Gets the foreign_data_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The foreign_data_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        return self._foreign_data_link_groups

    @foreign_data_link_groups.setter
    def foreign_data_link_groups(self, foreign_data_link_groups):
        """Sets the foreign_data_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param foreign_data_link_groups: The foreign_data_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        self._foreign_data_link_groups = foreign_data_link_groups

    @property
    def primary_dynamic_link_groups(self):
        """Gets the primary_dynamic_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The primary_dynamic_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        return self._primary_dynamic_link_groups

    @primary_dynamic_link_groups.setter
    def primary_dynamic_link_groups(self, primary_dynamic_link_groups):
        """Sets the primary_dynamic_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param primary_dynamic_link_groups: The primary_dynamic_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        self._primary_dynamic_link_groups = primary_dynamic_link_groups

    @property
    def foreign_dynamic_link_groups(self):
        """Gets the foreign_dynamic_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501

        :return: The foreign_dynamic_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :rtype: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        return self._foreign_dynamic_link_groups

    @foreign_dynamic_link_groups.setter
    def foreign_dynamic_link_groups(self, foreign_dynamic_link_groups):
        """Sets the foreign_dynamic_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.

        :param foreign_dynamic_link_groups: The foreign_dynamic_link_groups of this GrantaServerApiSchemaAttributesAttributeAttributeInfo.  # noqa: E501
        :type: list[GrantaServerApiSchemaSlimEntitiesSlimNamedEntity]
        """
        self._foreign_dynamic_link_groups = foreign_dynamic_link_groups

    def get_real_child_model(self, data):
        """Raises a NotImplementedError for a type without a discriminator defined."""
        raise NotImplementedError()

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr in self.swagger_types.keys():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GrantaServerApiSchemaAttributesAttributeAttributeInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiSchemaAttributesAttributeAttributeInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
