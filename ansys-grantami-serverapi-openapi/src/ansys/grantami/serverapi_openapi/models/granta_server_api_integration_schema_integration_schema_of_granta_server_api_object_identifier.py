# coding: utf-8

"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401
from . import ModelBase


class GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'key': 'str',
        'version': 'int',
        'attributes': 'list[GrantaServerApiIntegrationSchemaAttribute]',
        'layouts': 'list[GrantaServerApiIntegrationSchemaLayout]',
        'unit_system': 'str',
        'discrete_types': 'list[GrantaServerApiIntegrationSchemaDiscreteType]',
        'sources': 'list[GrantaServerApiIntegrationSchemaSourceOfGrantaServerApiObjectIdentifier]',
        'access_control_category_values': 'dict(str, list[str])',
        'security_groups': 'GrantaServerApiIntegrationSchemaSecurityGroups'
    }

    attribute_map = {
        'key': 'key',
        'version': 'version',
        'attributes': 'attributes',
        'layouts': 'layouts',
        'unit_system': 'unitSystem',
        'discrete_types': 'discreteTypes',
        'sources': 'sources',
        'access_control_category_values': 'accessControlCategoryValues',
        'security_groups': 'securityGroups'
    }

    subtype_mapping = {
        'attributes': 'GrantaServerApiIntegrationSchemaAttribute',
        'layouts': 'GrantaServerApiIntegrationSchemaLayout',
        'discreteTypes': 'GrantaServerApiIntegrationSchemaDiscreteType',
        'sources': 'GrantaServerApiIntegrationSchemaSourceOfGrantaServerApiObjectIdentifier',
        'securityGroups': 'GrantaServerApiIntegrationSchemaSecurityGroups'
    }


    def __init__(self, key=None, version=None, attributes=None, layouts=None, unit_system=None, discrete_types=None, sources=None, access_control_category_values=None, security_groups=None):  # noqa: E501
        """GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier - a model defined in Swagger"""  # noqa: E501
        self._key = None
        self._version = None
        self._attributes = None
        self._layouts = None
        self._unit_system = None
        self._discrete_types = None
        self._sources = None
        self._access_control_category_values = None
        self._security_groups = None
        self.discriminator = None
        if key is not None:
            self.key = key
        if version is not None:
            self.version = version
        if attributes is not None:
            self.attributes = attributes
        if layouts is not None:
            self.layouts = layouts
        if unit_system is not None:
            self.unit_system = unit_system
        if discrete_types is not None:
            self.discrete_types = discrete_types
        if sources is not None:
            self.sources = sources
        if access_control_category_values is not None:
            self.access_control_category_values = access_control_category_values
        if security_groups is not None:
            self.security_groups = security_groups

    @property
    def key(self):
        """Gets the key of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The key of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.

        :param key: The key of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: str
        """
        self._key = key

    @property
    def version(self):
        """Gets the version of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The version of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.

        :param version: The version of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: int
        """
        self._version = version

    @property
    def attributes(self):
        """Gets the attributes of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The attributes of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: list[GrantaServerApiIntegrationSchemaAttribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.

        :param attributes: The attributes of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: list[GrantaServerApiIntegrationSchemaAttribute]
        """
        self._attributes = attributes

    @property
    def layouts(self):
        """Gets the layouts of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The layouts of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: list[GrantaServerApiIntegrationSchemaLayout]
        """
        return self._layouts

    @layouts.setter
    def layouts(self, layouts):
        """Sets the layouts of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.

        :param layouts: The layouts of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: list[GrantaServerApiIntegrationSchemaLayout]
        """
        self._layouts = layouts

    @property
    def unit_system(self):
        """Gets the unit_system of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The unit_system of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: str
        """
        return self._unit_system

    @unit_system.setter
    def unit_system(self, unit_system):
        """Sets the unit_system of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.

        :param unit_system: The unit_system of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: str
        """
        self._unit_system = unit_system

    @property
    def discrete_types(self):
        """Gets the discrete_types of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The discrete_types of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: list[GrantaServerApiIntegrationSchemaDiscreteType]
        """
        return self._discrete_types

    @discrete_types.setter
    def discrete_types(self, discrete_types):
        """Sets the discrete_types of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.

        :param discrete_types: The discrete_types of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: list[GrantaServerApiIntegrationSchemaDiscreteType]
        """
        self._discrete_types = discrete_types

    @property
    def sources(self):
        """Gets the sources of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The sources of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: list[GrantaServerApiIntegrationSchemaSourceOfGrantaServerApiObjectIdentifier]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.

        :param sources: The sources of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: list[GrantaServerApiIntegrationSchemaSourceOfGrantaServerApiObjectIdentifier]
        """
        self._sources = sources

    @property
    def access_control_category_values(self):
        """Gets the access_control_category_values of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The access_control_category_values of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: dict(str, list[str])
        """
        return self._access_control_category_values

    @access_control_category_values.setter
    def access_control_category_values(self, access_control_category_values):
        """Sets the access_control_category_values of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.

        :param access_control_category_values: The access_control_category_values of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: dict(str, list[str])
        """
        self._access_control_category_values = access_control_category_values

    @property
    def security_groups(self):
        """Gets the security_groups of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The security_groups of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: GrantaServerApiIntegrationSchemaSecurityGroups
        """
        return self._security_groups

    @security_groups.setter
    def security_groups(self, security_groups):
        """Sets the security_groups of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.

        :param security_groups: The security_groups of this GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: GrantaServerApiIntegrationSchemaSecurityGroups
        """
        self._security_groups = security_groups

    def get_real_child_model(self, data):
        """Raises a NotImplementedError for a type without a discriminator defined."""
        raise NotImplementedError()

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr in self.swagger_types.keys():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
