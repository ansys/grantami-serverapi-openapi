# coding: utf-8

"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401
from . import ModelBase


class GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'default_threshold_type': 'GrantaServerApiSchemaAttributesAttributeThresholdType',
        'axis_name': 'str',
        'help_path': 'str',
        'about_attribute': 'GrantaServerApiSchemaSlimEntitiesSlimNamedEntity',
        'name': 'str',
        'guid': 'str'
    }

    attribute_map = {
        'default_threshold_type': 'defaultThresholdType',
        'axis_name': 'axisName',
        'help_path': 'helpPath',
        'about_attribute': 'aboutAttribute',
        'name': 'name',
        'guid': 'guid'
    }

    subtype_mapping = {
        'defaultThresholdType': 'GrantaServerApiSchemaAttributesAttributeThresholdType',
        'aboutAttribute': 'GrantaServerApiSchemaSlimEntitiesSlimNamedEntity',
    }

    discriminator_value_class_map = {
        'point'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdatePointAttribute',
        'integer'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateIntegerAttribute',
        'range'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateRangeAttribute',
        'logical'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateLogicalAttribute',
        'shortText'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateShortTextAttribute',
        'longText'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateLongTextAttribute',
        'dateTime'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateDateTimeAttribute',
        'discrete'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateDiscreteAttribute',
        'hyperlink'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateHyperlinkAttribute',
        'file'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateFileAttribute',
        'picture'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdatePictureAttribute',
        'link'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateTabularAttribute',
        'floatFunctional'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute',
        'discreteFunctional'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateDiscreteFunctionalAttribute',
        'mathsFunctional'.lower(): '#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateMathsFunctionalAttribute',
    }

    def __init__(self, default_threshold_type=None, axis_name=None, help_path=None, about_attribute=None, name=None, guid=None):  # noqa: E501
        """GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute - a model defined in Swagger"""  # noqa: E501
        self._default_threshold_type = None
        self._axis_name = None
        self._help_path = None
        self._about_attribute = None
        self._name = None
        self._guid = None
        self.discriminator = 'type'
        if default_threshold_type is not None:
            self.default_threshold_type = default_threshold_type
        if axis_name is not None:
            self.axis_name = axis_name
        if help_path is not None:
            self.help_path = help_path
        if about_attribute is not None:
            self.about_attribute = about_attribute
        if name is not None:
            self.name = name
        if guid is not None:
            self.guid = guid

    @property
    def default_threshold_type(self):
        """Gets the default_threshold_type of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501

        :return: The default_threshold_type of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :rtype: GrantaServerApiSchemaAttributesAttributeThresholdType
        """
        return self._default_threshold_type

    @default_threshold_type.setter
    def default_threshold_type(self, default_threshold_type):
        """Sets the default_threshold_type of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.

        :param default_threshold_type: The default_threshold_type of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :type: GrantaServerApiSchemaAttributesAttributeThresholdType
        """
        self._default_threshold_type = default_threshold_type

    @property
    def axis_name(self):
        """Gets the axis_name of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501

        :return: The axis_name of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :rtype: str
        """
        return self._axis_name

    @axis_name.setter
    def axis_name(self, axis_name):
        """Sets the axis_name of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.

        :param axis_name: The axis_name of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :type: str
        """
        self._axis_name = axis_name

    @property
    def help_path(self):
        """Gets the help_path of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501

        :return: The help_path of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :rtype: str
        """
        return self._help_path

    @help_path.setter
    def help_path(self, help_path):
        """Sets the help_path of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.

        :param help_path: The help_path of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :type: str
        """
        self._help_path = help_path

    @property
    def about_attribute(self):
        """Gets the about_attribute of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501

        :return: The about_attribute of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :rtype: GrantaServerApiSchemaSlimEntitiesSlimNamedEntity
        """
        return self._about_attribute

    @about_attribute.setter
    def about_attribute(self, about_attribute):
        """Sets the about_attribute of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.

        :param about_attribute: The about_attribute of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :type: GrantaServerApiSchemaSlimEntitiesSlimNamedEntity
        """
        self._about_attribute = about_attribute

    @property
    def name(self):
        """Gets the name of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501

        :return: The name of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.

        :param name: The name of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :type: str
        """
        self._name = name

    @property
    def guid(self):
        """Gets the guid of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501

        :return: The guid of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.

        :param guid: The guid of this GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute.  # noqa: E501
        :type: str
        """
        self._guid = guid

    def get_real_child_model(self, data):
        """Returns the real base class specified by the discriminator"""
        discriminator_value = str(data[self._get_discriminator_field_name()]).lower()
        # The actual class name is not available in swagger-codegen, 
        # so we have to extract it from the JSON reference
        return self.discriminator_value_class_map.get(discriminator_value).rsplit("/", 1)[-1]

    def _get_discriminator_field_name(self):
        name_tokens = self.discriminator.split("_")
        later_tokens = [element.capitalize() for element in name_tokens[1:]]
        return "".join([name_tokens[0], *later_tokens])

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr in self.swagger_types.keys():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
