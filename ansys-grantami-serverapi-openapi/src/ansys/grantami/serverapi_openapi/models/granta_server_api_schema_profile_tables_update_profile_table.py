"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import (
    TYPE_CHECKING,
    Any,
    Dict,
    List,
    BinaryIO,
    Optional,
    Union,
)  # noqa: F401

from . import ModelBase


if TYPE_CHECKING:
    from datetime import datetime
    import pathlib
    from . import *


class GrantaServerApiSchemaProfileTablesUpdateProfileTable(ModelBase):  # type: ignore[misc]
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: Dict[str, str] = {
        "guid": "str",
        "layout_guid": "str",
        "subset_guid": "str",
    }

    attribute_map: Dict[str, str] = {
        "guid": "guid",
        "layout_guid": "layoutGuid",
        "subset_guid": "subsetGuid",
    }

    subtype_mapping: Dict[str, str] = {}

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        guid: "Optional[str]" = None,
        layout_guid: "Optional[str]" = None,
        subset_guid: "Optional[str]" = None,
    ) -> None:
        """GrantaServerApiSchemaProfileTablesUpdateProfileTable - a model defined in Swagger

        Parameters
        ----------
            guid: str, optional
            layout_guid: str, optional
            subset_guid: str, optional
        """
        self._subset_guid = None
        self._layout_guid = None
        self._guid = None

        if subset_guid is not None:
            self.subset_guid = subset_guid
        if layout_guid is not None:
            self.layout_guid = layout_guid
        if guid is not None:
            self.guid = guid

    @property
    def subset_guid(self) -> "Optional[str]":
        """Gets the subset_guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.

        Returns
        -------
        str
            The subset_guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.
        """
        return self._subset_guid

    @subset_guid.setter
    def subset_guid(self, subset_guid: "Optional[str]") -> None:
        """Sets the subset_guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.

        Parameters
        ----------
        subset_guid: str
            The subset_guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.
        """
        self._subset_guid = subset_guid

    @property
    def layout_guid(self) -> "Optional[str]":
        """Gets the layout_guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.

        Returns
        -------
        str
            The layout_guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.
        """
        return self._layout_guid

    @layout_guid.setter
    def layout_guid(self, layout_guid: "Optional[str]") -> None:
        """Sets the layout_guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.

        Parameters
        ----------
        layout_guid: str
            The layout_guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.
        """
        self._layout_guid = layout_guid

    @property
    def guid(self) -> "Optional[str]":
        """Gets the guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.

        Returns
        -------
        str
            The guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.
        """
        return self._guid

    @guid.setter
    def guid(self, guid: "Optional[str]") -> None:
        """Sets the guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.

        Parameters
        ----------
        guid: str
            The guid of this GrantaServerApiSchemaProfileTablesUpdateProfileTable.
        """
        self._guid = guid

    @classmethod
    def get_real_child_model(cls, data: ModelBase) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()  # type: ignore[no-any-return]

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiSchemaProfileTablesUpdateProfileTable):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
