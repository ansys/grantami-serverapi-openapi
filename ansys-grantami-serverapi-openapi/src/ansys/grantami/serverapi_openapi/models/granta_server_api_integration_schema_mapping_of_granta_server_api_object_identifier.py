# coding: utf-8

"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401
from . import ModelBase


class GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'source': 'GrantaServerApiObjectIdentifier',
        'target_identity': 'int',
        'parameter_mappings': 'list[GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier]',
        'link_source_type': 'GrantaServerApiIntegrationSchemaLinkSourceType'
    }

    attribute_map = {
        'source': 'source',
        'target_identity': 'targetIdentity',
        'parameter_mappings': 'parameterMappings',
        'link_source_type': 'linkSourceType'
    }

    subtype_mapping = {
        'source': 'GrantaServerApiObjectIdentifier',
        'parameterMappings': 'GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier',
        'linkSourceType': 'GrantaServerApiIntegrationSchemaLinkSourceType'
    }


    def __init__(self, source=None, target_identity=None, parameter_mappings=None, link_source_type=None):  # noqa: E501
        """GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier - a model defined in Swagger"""  # noqa: E501
        self._source = None
        self._target_identity = None
        self._parameter_mappings = None
        self._link_source_type = None
        self.discriminator = None
        if source is not None:
            self.source = source
        if target_identity is not None:
            self.target_identity = target_identity
        if parameter_mappings is not None:
            self.parameter_mappings = parameter_mappings
        if link_source_type is not None:
            self.link_source_type = link_source_type

    @property
    def source(self):
        """Gets the source of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The source of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: GrantaServerApiObjectIdentifier
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.

        :param source: The source of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: GrantaServerApiObjectIdentifier
        """
        self._source = source

    @property
    def target_identity(self):
        """Gets the target_identity of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        The identity of the integration schema attribute  # noqa: E501

        :return: The target_identity of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: int
        """
        return self._target_identity

    @target_identity.setter
    def target_identity(self, target_identity):
        """Sets the target_identity of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.
        The identity of the integration schema attribute  # noqa: E501

        :param target_identity: The target_identity of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: int
        """
        self._target_identity = target_identity

    @property
    def parameter_mappings(self):
        """Gets the parameter_mappings of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        Any mapped parameters (float functional attributes only). The target parameters must be defined on the target integration attribute.  Not every parameters from the source database needs to be mapped for each attribute.  # noqa: E501

        :return: The parameter_mappings of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: list[GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier]
        """
        return self._parameter_mappings

    @parameter_mappings.setter
    def parameter_mappings(self, parameter_mappings):
        """Sets the parameter_mappings of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.
        Any mapped parameters (float functional attributes only). The target parameters must be defined on the target integration attribute.  Not every parameters from the source database needs to be mapped for each attribute.  # noqa: E501

        :param parameter_mappings: The parameter_mappings of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: list[GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier]
        """
        self._parameter_mappings = parameter_mappings

    @property
    def link_source_type(self):
        """Gets the link_source_type of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501

        :return: The link_source_type of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :rtype: GrantaServerApiIntegrationSchemaLinkSourceType
        """
        return self._link_source_type

    @link_source_type.setter
    def link_source_type(self, link_source_type):
        """Sets the link_source_type of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.

        :param link_source_type: The link_source_type of this GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier.  # noqa: E501
        :type: GrantaServerApiIntegrationSchemaLinkSourceType
        """
        self._link_source_type = link_source_type

    def get_real_child_model(self, data):
        """Raises a NotImplementedError for a type without a discriminator defined."""
        raise NotImplementedError()

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr in self.swagger_types.keys():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
