"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401
from typing import TYPE_CHECKING, Any, Dict, List, Optional  # noqa: F401

from . import ModelBase

from ansys.grantami.serverapi_openapi.models.granta_server_api_search_datum_criterion import (
    GrantaServerApiSearchDatumCriterion,
)  # noqa: F401

if TYPE_CHECKING:
    from . import *


class GrantaServerApiSearchLinkDatumCriterion(GrantaServerApiSearchDatumCriterion):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: Dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: Dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: Dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.

    """
    swagger_types = {
        "inner_criterion": "GrantaServerApiSearchCriterion",
        "link_datum_type": "GrantaServerApiLinkAttributeType",
        "local_criterion": "GrantaServerApiSearchCriterion",
        "search_in_reversed_direction": "bool",
        "target_attribute_guid": "str",
        "target_attribute_identity": "int",
        "target_database_key": "str",
        "target_table_guid": "str",
        "target_table_identity": "int",
        "type": "str",
    }

    attribute_map = {
        "inner_criterion": "innerCriterion",
        "link_datum_type": "linkDatumType",
        "local_criterion": "localCriterion",
        "search_in_reversed_direction": "searchInReversedDirection",
        "target_attribute_guid": "targetAttributeGuid",
        "target_attribute_identity": "targetAttributeIdentity",
        "target_database_key": "targetDatabaseKey",
        "target_table_guid": "targetTableGuid",
        "target_table_identity": "targetTableIdentity",
        "type": "type",
    }

    subtype_mapping = {
        "localCriterion": "GrantaServerApiSearchCriterion",
        "linkDatumType": "GrantaServerApiLinkAttributeType",
        "innerCriterion": "GrantaServerApiSearchCriterion",
    }

    def __init__(
        self,
        *,
        inner_criterion: "Optional[GrantaServerApiSearchCriterion]" = None,
        link_datum_type: "Optional[GrantaServerApiLinkAttributeType]" = None,
        local_criterion: "Optional[GrantaServerApiSearchCriterion]" = None,
        search_in_reversed_direction: "Optional[bool]" = None,
        target_attribute_guid: "Optional[str]" = None,
        target_attribute_identity: "Optional[int]" = None,
        target_database_key: "Optional[str]" = None,
        target_table_guid: "Optional[str]" = None,
        target_table_identity: "Optional[int]" = None,
        type: "str" = "link",
    ) -> None:
        """GrantaServerApiSearchLinkDatumCriterion - a model defined in Swagger

        Parameters
        ----------
            inner_criterion: GrantaServerApiSearchCriterion, optional
            link_datum_type: GrantaServerApiLinkAttributeType, optional
            local_criterion: GrantaServerApiSearchCriterion, optional
            search_in_reversed_direction: bool, optional
            target_attribute_guid: str, optional
            target_attribute_identity: int, optional
            target_database_key: str, optional
            target_table_guid: str, optional
            target_table_identity: int, optional
            type: str
        """
        super().__init__()
        self._target_table_identity = None
        self._target_table_guid = None
        self._target_database_key = None
        self._local_criterion = None
        self._link_datum_type = None
        self._search_in_reversed_direction = None
        self._target_attribute_identity = None
        self._target_attribute_guid = None
        self._inner_criterion = None
        self._type = None
        self.discriminator = None
        if target_table_identity is not None:
            self.target_table_identity = target_table_identity
        if target_table_guid is not None:
            self.target_table_guid = target_table_guid
        if target_database_key is not None:
            self.target_database_key = target_database_key
        if local_criterion is not None:
            self.local_criterion = local_criterion
        if link_datum_type is not None:
            self.link_datum_type = link_datum_type
        if search_in_reversed_direction is not None:
            self.search_in_reversed_direction = search_in_reversed_direction
        if target_attribute_identity is not None:
            self.target_attribute_identity = target_attribute_identity
        if target_attribute_guid is not None:
            self.target_attribute_guid = target_attribute_guid
        if inner_criterion is not None:
            self.inner_criterion = inner_criterion
        self.type = type

    @property
    def target_table_identity(self) -> "int":
        """Gets the target_table_identity of this GrantaServerApiSearchLinkDatumCriterion.
        Table containing the linked records

        Returns
        -------
        int
            The target_table_identity of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._target_table_identity

    @target_table_identity.setter
    def target_table_identity(self, target_table_identity: "int") -> None:
        """Sets the target_table_identity of this GrantaServerApiSearchLinkDatumCriterion.
        Table containing the linked records

        Parameters
        ----------
        target_table_identity: int
            The target_table_identity of this GrantaServerApiSearchLinkDatumCriterion.
        """
        self._target_table_identity = target_table_identity

    @property
    def target_table_guid(self) -> "str":
        """Gets the target_table_guid of this GrantaServerApiSearchLinkDatumCriterion.
        Table containing the linked records

        Returns
        -------
        str
            The target_table_guid of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._target_table_guid

    @target_table_guid.setter
    def target_table_guid(self, target_table_guid: "str") -> None:
        """Sets the target_table_guid of this GrantaServerApiSearchLinkDatumCriterion.
        Table containing the linked records

        Parameters
        ----------
        target_table_guid: str
            The target_table_guid of this GrantaServerApiSearchLinkDatumCriterion.
        """
        self._target_table_guid = target_table_guid

    @property
    def target_database_key(self) -> "str":
        """Gets the target_database_key of this GrantaServerApiSearchLinkDatumCriterion.
        Database containing the linked records. For reverse cross database links, this is the database where the link is defined

        Returns
        -------
        str
            The target_database_key of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._target_database_key

    @target_database_key.setter
    def target_database_key(self, target_database_key: "str") -> None:
        """Sets the target_database_key of this GrantaServerApiSearchLinkDatumCriterion.
        Database containing the linked records. For reverse cross database links, this is the database where the link is defined

        Parameters
        ----------
        target_database_key: str
            The target_database_key of this GrantaServerApiSearchLinkDatumCriterion.
        """
        self._target_database_key = target_database_key

    @property
    def local_criterion(self) -> "GrantaServerApiSearchCriterion":
        """Gets the local_criterion of this GrantaServerApiSearchLinkDatumCriterion.

        Returns
        -------
        GrantaServerApiSearchCriterion
            The local_criterion of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._local_criterion

    @local_criterion.setter
    def local_criterion(
        self, local_criterion: "GrantaServerApiSearchCriterion"
    ) -> None:
        """Sets the local_criterion of this GrantaServerApiSearchLinkDatumCriterion.

        Parameters
        ----------
        local_criterion: GrantaServerApiSearchCriterion
            The local_criterion of this GrantaServerApiSearchLinkDatumCriterion.
        """
        self._local_criterion = local_criterion

    @property
    def link_datum_type(self) -> "GrantaServerApiLinkAttributeType":
        """Gets the link_datum_type of this GrantaServerApiSearchLinkDatumCriterion.

        Returns
        -------
        GrantaServerApiLinkAttributeType
            The link_datum_type of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._link_datum_type

    @link_datum_type.setter
    def link_datum_type(
        self, link_datum_type: "GrantaServerApiLinkAttributeType"
    ) -> None:
        """Sets the link_datum_type of this GrantaServerApiSearchLinkDatumCriterion.

        Parameters
        ----------
        link_datum_type: GrantaServerApiLinkAttributeType
            The link_datum_type of this GrantaServerApiSearchLinkDatumCriterion.
        """
        self._link_datum_type = link_datum_type

    @property
    def search_in_reversed_direction(self) -> "bool":
        """Gets the search_in_reversed_direction of this GrantaServerApiSearchLinkDatumCriterion.

        Returns
        -------
        bool
            The search_in_reversed_direction of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._search_in_reversed_direction

    @search_in_reversed_direction.setter
    def search_in_reversed_direction(
        self, search_in_reversed_direction: "bool"
    ) -> None:
        """Sets the search_in_reversed_direction of this GrantaServerApiSearchLinkDatumCriterion.

        Parameters
        ----------
        search_in_reversed_direction: bool
            The search_in_reversed_direction of this GrantaServerApiSearchLinkDatumCriterion.
        """
        self._search_in_reversed_direction = search_in_reversed_direction

    @property
    def target_attribute_identity(self) -> "int":
        """Gets the target_attribute_identity of this GrantaServerApiSearchLinkDatumCriterion.
        For tabular searching: this is the identity of the short-text linking attribute.  Otherwise null.

        Returns
        -------
        int
            The target_attribute_identity of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._target_attribute_identity

    @target_attribute_identity.setter
    def target_attribute_identity(self, target_attribute_identity: "int") -> None:
        """Sets the target_attribute_identity of this GrantaServerApiSearchLinkDatumCriterion.
        For tabular searching: this is the identity of the short-text linking attribute.  Otherwise null.

        Parameters
        ----------
        target_attribute_identity: int
            The target_attribute_identity of this GrantaServerApiSearchLinkDatumCriterion.
        """
        self._target_attribute_identity = target_attribute_identity

    @property
    def target_attribute_guid(self) -> "str":
        """Gets the target_attribute_guid of this GrantaServerApiSearchLinkDatumCriterion.
        For tabular searching: this is the GUID of the short-text linking attribute.  Otherwise null.

        Returns
        -------
        str
            The target_attribute_guid of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._target_attribute_guid

    @target_attribute_guid.setter
    def target_attribute_guid(self, target_attribute_guid: "str") -> None:
        """Sets the target_attribute_guid of this GrantaServerApiSearchLinkDatumCriterion.
        For tabular searching: this is the GUID of the short-text linking attribute.  Otherwise null.

        Parameters
        ----------
        target_attribute_guid: str
            The target_attribute_guid of this GrantaServerApiSearchLinkDatumCriterion.
        """
        self._target_attribute_guid = target_attribute_guid

    @property
    def inner_criterion(self) -> "GrantaServerApiSearchCriterion":
        """Gets the inner_criterion of this GrantaServerApiSearchLinkDatumCriterion.

        Returns
        -------
        GrantaServerApiSearchCriterion
            The inner_criterion of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._inner_criterion

    @inner_criterion.setter
    def inner_criterion(
        self, inner_criterion: "GrantaServerApiSearchCriterion"
    ) -> None:
        """Sets the inner_criterion of this GrantaServerApiSearchLinkDatumCriterion.

        Parameters
        ----------
        inner_criterion: GrantaServerApiSearchCriterion
            The inner_criterion of this GrantaServerApiSearchLinkDatumCriterion.
        """
        self._inner_criterion = inner_criterion

    @property
    def type(self) -> "str":
        """Gets the type of this GrantaServerApiSearchLinkDatumCriterion.

        Returns
        -------
        str
            The type of this GrantaServerApiSearchLinkDatumCriterion.
        """
        return self._type

    @type.setter
    def type(self, type: "str") -> None:
        """Sets the type of this GrantaServerApiSearchLinkDatumCriterion.

        Parameters
        ----------
        type: str
            The type of this GrantaServerApiSearchLinkDatumCriterion.
        """
        if type is None:
            raise ValueError("Invalid value for 'type', must not be 'None'")
        self._type = type

    def get_real_child_model(self, data: ModelBase) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def to_dict(self) -> Dict:
        """Returns the model properties as a dict

        Returns
        -------
        Dict
            Dictionary indexed by property name containing all the model properties
        """
        result = {}

        for attr in self.swagger_types.keys():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(GrantaServerApiSearchLinkDatumCriterion, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model

        Returns
        -------
        str
            String representation of the model as a dictionary
        """
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiSearchLinkDatumCriterion):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
