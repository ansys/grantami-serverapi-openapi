# coding: utf-8

"""
    MI Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401
from . import ModelBase

from ansys.grantami.serverapi_openapi.models.granta_server_api_search_datum_criterion import GrantaServerApiSearchDatumCriterion  # noqa: F401,E501

class GrantaServerApiSearchLinkDatumCriterion(GrantaServerApiSearchDatumCriterion):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'target_table_identity': 'int',
        'target_table_guid': 'str',
        'target_database_key': 'str',
        'local_criterion': 'GrantaServerApiSearchCriterion',
        'link_datum_type': 'GrantaServerApiSearchLinkAttributeType',
        'search_in_reversed_direction': 'bool',
        'target_attribute_identity': 'int',
        'target_attribute_guid': 'str',
        'inner_criterion': 'GrantaServerApiSearchCriterion',
        'type': 'str'
    }
    if hasattr(GrantaServerApiSearchDatumCriterion, "swagger_types"):
        swagger_types.update(GrantaServerApiSearchDatumCriterion.swagger_types)

    attribute_map = {
        'target_table_identity': 'targetTableIdentity',
        'target_table_guid': 'targetTableGuid',
        'target_database_key': 'targetDatabaseKey',
        'local_criterion': 'localCriterion',
        'link_datum_type': 'linkDatumType',
        'search_in_reversed_direction': 'searchInReversedDirection',
        'target_attribute_identity': 'targetAttributeIdentity',
        'target_attribute_guid': 'targetAttributeGuid',
        'inner_criterion': 'innerCriterion',
        'type': 'type'
    }
    if hasattr(GrantaServerApiSearchDatumCriterion, "attribute_map"):
        attribute_map.update(GrantaServerApiSearchDatumCriterion.attribute_map)

    subtype_mapping = {
        'localCriterion': 'GrantaServerApiSearchCriterion',
        'linkDatumType': 'GrantaServerApiSearchLinkAttributeType',
        'innerCriterion': 'GrantaServerApiSearchCriterion',
    }


    def __init__(self, target_table_identity=None, target_table_guid=None, target_database_key=None, local_criterion=None, link_datum_type=None, search_in_reversed_direction=None, target_attribute_identity=None, target_attribute_guid=None, inner_criterion=None, type='link', *args, **kwargs):  # noqa: E501
        """GrantaServerApiSearchLinkDatumCriterion - a model defined in Swagger"""  # noqa: E501
        GrantaServerApiSearchDatumCriterion.__init__(self, *args, **kwargs)
        self._target_table_identity = None
        self._target_table_guid = None
        self._target_database_key = None
        self._local_criterion = None
        self._link_datum_type = None
        self._search_in_reversed_direction = None
        self._target_attribute_identity = None
        self._target_attribute_guid = None
        self._inner_criterion = None
        self._type = None
        self.discriminator = None
        if target_table_identity is not None:
            self.target_table_identity = target_table_identity
        if target_table_guid is not None:
            self.target_table_guid = target_table_guid
        if target_database_key is not None:
            self.target_database_key = target_database_key
        if local_criterion is not None:
            self.local_criterion = local_criterion
        if link_datum_type is not None:
            self.link_datum_type = link_datum_type
        if search_in_reversed_direction is not None:
            self.search_in_reversed_direction = search_in_reversed_direction
        if target_attribute_identity is not None:
            self.target_attribute_identity = target_attribute_identity
        if target_attribute_guid is not None:
            self.target_attribute_guid = target_attribute_guid
        if inner_criterion is not None:
            self.inner_criterion = inner_criterion
        self.type = type

    @property
    def target_table_identity(self):
        """Gets the target_table_identity of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        Table containing the linked records  # noqa: E501

        :return: The target_table_identity of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: int
        """
        return self._target_table_identity

    @target_table_identity.setter
    def target_table_identity(self, target_table_identity):
        """Sets the target_table_identity of this GrantaServerApiSearchLinkDatumCriterion.
        Table containing the linked records  # noqa: E501

        :param target_table_identity: The target_table_identity of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: int
        """
        self._target_table_identity = target_table_identity

    @property
    def target_table_guid(self):
        """Gets the target_table_guid of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        Table containing the linked records  # noqa: E501

        :return: The target_table_guid of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: str
        """
        return self._target_table_guid

    @target_table_guid.setter
    def target_table_guid(self, target_table_guid):
        """Sets the target_table_guid of this GrantaServerApiSearchLinkDatumCriterion.
        Table containing the linked records  # noqa: E501

        :param target_table_guid: The target_table_guid of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: str
        """
        self._target_table_guid = target_table_guid

    @property
    def target_database_key(self):
        """Gets the target_database_key of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        Database containing the linked records. For reverse cross database links, this is the database where the link is defined  # noqa: E501

        :return: The target_database_key of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: str
        """
        return self._target_database_key

    @target_database_key.setter
    def target_database_key(self, target_database_key):
        """Sets the target_database_key of this GrantaServerApiSearchLinkDatumCriterion.
        Database containing the linked records. For reverse cross database links, this is the database where the link is defined  # noqa: E501

        :param target_database_key: The target_database_key of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: str
        """
        self._target_database_key = target_database_key

    @property
    def local_criterion(self):
        """Gets the local_criterion of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501

        :return: The local_criterion of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: GrantaServerApiSearchCriterion
        """
        return self._local_criterion

    @local_criterion.setter
    def local_criterion(self, local_criterion):
        """Sets the local_criterion of this GrantaServerApiSearchLinkDatumCriterion.

        :param local_criterion: The local_criterion of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: GrantaServerApiSearchCriterion
        """
        self._local_criterion = local_criterion

    @property
    def link_datum_type(self):
        """Gets the link_datum_type of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501

        :return: The link_datum_type of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: GrantaServerApiSearchLinkAttributeType
        """
        return self._link_datum_type

    @link_datum_type.setter
    def link_datum_type(self, link_datum_type):
        """Sets the link_datum_type of this GrantaServerApiSearchLinkDatumCriterion.

        :param link_datum_type: The link_datum_type of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: GrantaServerApiSearchLinkAttributeType
        """
        self._link_datum_type = link_datum_type

    @property
    def search_in_reversed_direction(self):
        """Gets the search_in_reversed_direction of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501

        :return: The search_in_reversed_direction of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: bool
        """
        return self._search_in_reversed_direction

    @search_in_reversed_direction.setter
    def search_in_reversed_direction(self, search_in_reversed_direction):
        """Sets the search_in_reversed_direction of this GrantaServerApiSearchLinkDatumCriterion.

        :param search_in_reversed_direction: The search_in_reversed_direction of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: bool
        """
        self._search_in_reversed_direction = search_in_reversed_direction

    @property
    def target_attribute_identity(self):
        """Gets the target_attribute_identity of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        For tabular searching: this is the identity of the short-text linking attribute.  Otherwise null.  # noqa: E501

        :return: The target_attribute_identity of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: int
        """
        return self._target_attribute_identity

    @target_attribute_identity.setter
    def target_attribute_identity(self, target_attribute_identity):
        """Sets the target_attribute_identity of this GrantaServerApiSearchLinkDatumCriterion.
        For tabular searching: this is the identity of the short-text linking attribute.  Otherwise null.  # noqa: E501

        :param target_attribute_identity: The target_attribute_identity of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: int
        """
        self._target_attribute_identity = target_attribute_identity

    @property
    def target_attribute_guid(self):
        """Gets the target_attribute_guid of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        For tabular searching: this is the GUID of the short-text linking attribute.  Otherwise null.  # noqa: E501

        :return: The target_attribute_guid of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: str
        """
        return self._target_attribute_guid

    @target_attribute_guid.setter
    def target_attribute_guid(self, target_attribute_guid):
        """Sets the target_attribute_guid of this GrantaServerApiSearchLinkDatumCriterion.
        For tabular searching: this is the GUID of the short-text linking attribute.  Otherwise null.  # noqa: E501

        :param target_attribute_guid: The target_attribute_guid of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: str
        """
        self._target_attribute_guid = target_attribute_guid

    @property
    def inner_criterion(self):
        """Gets the inner_criterion of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501

        :return: The inner_criterion of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: GrantaServerApiSearchCriterion
        """
        return self._inner_criterion

    @inner_criterion.setter
    def inner_criterion(self, inner_criterion):
        """Sets the inner_criterion of this GrantaServerApiSearchLinkDatumCriterion.

        :param inner_criterion: The inner_criterion of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: GrantaServerApiSearchCriterion
        """
        self._inner_criterion = inner_criterion

    @property
    def type(self):
        """Gets the type of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501

        :return: The type of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GrantaServerApiSearchLinkDatumCriterion.

        :param type: The type of this GrantaServerApiSearchLinkDatumCriterion.  # noqa: E501
        :type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501
        self._type = type

    def get_real_child_model(self, data):
        """Raises a NotImplementedError for a type without a discriminator defined."""
        raise NotImplementedError()

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr in self.swagger_types.keys():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GrantaServerApiSearchLinkDatumCriterion, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GrantaServerApiSearchLinkDatumCriterion):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
