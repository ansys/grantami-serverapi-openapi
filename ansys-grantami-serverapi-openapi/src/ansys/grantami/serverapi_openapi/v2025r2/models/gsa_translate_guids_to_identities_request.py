# Copyright (C) 2023 - 2025 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""
MI Server API

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import TYPE_CHECKING, Any, BinaryIO, Optional  # noqa: F401

from . import ModelBase, Unset, Unset_Type

if TYPE_CHECKING:
    from datetime import datetime
    import pathlib

    from . import *


class GsaTranslateGuidsToIdentitiesRequest(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: dict[str, str] = {
        "database_key": "str",
        "attributes": "list[GsaSlimEntity]",
        "constants": "list[GsaSlimEntity]",
        "data": "list[GsaSlimEntity]",
        "discrete_types": "list[GsaSlimEntity]",
        "discrete_values": "list[GsaSlimEntity]",
        "layouts": "list[GsaSlimEntity]",
        "parameters": "list[GsaSlimEntity]",
        "record_histories": "list[GsaSlimEntity]",
        "record_link_groups": "list[GsaSlimEntity]",
        "record_versions": "list[GsaSlimEntity]",
        "replacement_strings": "list[GsaSlimEntity]",
        "standard_names": "list[GsaSlimEntity]",
        "subsets": "list[GsaSlimEntity]",
        "tables": "list[GsaSlimEntity]",
        "unit_systems": "list[GsaSlimEntity]",
        "units": "list[GsaSlimEntity]",
    }

    attribute_map: dict[str, str] = {
        "database_key": "databaseKey",
        "attributes": "attributes",
        "constants": "constants",
        "data": "data",
        "discrete_types": "discreteTypes",
        "discrete_values": "discreteValues",
        "layouts": "layouts",
        "parameters": "parameters",
        "record_histories": "recordHistories",
        "record_link_groups": "recordLinkGroups",
        "record_versions": "recordVersions",
        "replacement_strings": "replacementStrings",
        "standard_names": "standardNames",
        "subsets": "subsets",
        "tables": "tables",
        "unit_systems": "unitSystems",
        "units": "units",
    }

    subtype_mapping: dict[str, str] = {
        "attributes": "GsaSlimEntity",
        "layouts": "GsaSlimEntity",
        "recordVersions": "GsaSlimEntity",
        "recordHistories": "GsaSlimEntity",
        "units": "GsaSlimEntity",
        "unitSystems": "GsaSlimEntity",
        "parameters": "GsaSlimEntity",
        "subsets": "GsaSlimEntity",
        "tables": "GsaSlimEntity",
        "discreteTypes": "GsaSlimEntity",
        "discreteValues": "GsaSlimEntity",
        "replacementStrings": "GsaSlimEntity",
        "standardNames": "GsaSlimEntity",
        "constants": "GsaSlimEntity",
        "recordLinkGroups": "GsaSlimEntity",
        "data": "GsaSlimEntity",
    }

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        database_key: "str",
        attributes: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        constants: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        data: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        discrete_types: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        discrete_values: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        layouts: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        parameters: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        record_histories: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        record_link_groups: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        record_versions: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        replacement_strings: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        standard_names: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        subsets: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        tables: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        unit_systems: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
        units: "list[GsaSlimEntity] | None | Unset_Type" = Unset,
    ) -> None:
        """GsaTranslateGuidsToIdentitiesRequest - a model defined in Swagger

        Parameters
        ----------
        database_key: str
        attributes: list[GsaSlimEntity] | None, optional
        constants: list[GsaSlimEntity] | None, optional
        data: list[GsaSlimEntity] | None, optional
        discrete_types: list[GsaSlimEntity] | None, optional
        discrete_values: list[GsaSlimEntity] | None, optional
        layouts: list[GsaSlimEntity] | None, optional
        parameters: list[GsaSlimEntity] | None, optional
        record_histories: list[GsaSlimEntity] | None, optional
        record_link_groups: list[GsaSlimEntity] | None, optional
        record_versions: list[GsaSlimEntity] | None, optional
        replacement_strings: list[GsaSlimEntity] | None, optional
        standard_names: list[GsaSlimEntity] | None, optional
        subsets: list[GsaSlimEntity] | None, optional
        tables: list[GsaSlimEntity] | None, optional
        unit_systems: list[GsaSlimEntity] | None, optional
        units: list[GsaSlimEntity] | None, optional
        """
        self._database_key: str
        self._attributes: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._layouts: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._record_versions: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._record_histories: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._units: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._unit_systems: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._parameters: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._subsets: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._tables: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._discrete_types: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._discrete_values: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._replacement_strings: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._standard_names: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._constants: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._record_link_groups: list[GsaSlimEntity] | None | Unset_Type = Unset
        self._data: list[GsaSlimEntity] | None | Unset_Type = Unset

        self.database_key = database_key
        if attributes is not Unset:
            self.attributes = attributes
        if layouts is not Unset:
            self.layouts = layouts
        if record_versions is not Unset:
            self.record_versions = record_versions
        if record_histories is not Unset:
            self.record_histories = record_histories
        if units is not Unset:
            self.units = units
        if unit_systems is not Unset:
            self.unit_systems = unit_systems
        if parameters is not Unset:
            self.parameters = parameters
        if subsets is not Unset:
            self.subsets = subsets
        if tables is not Unset:
            self.tables = tables
        if discrete_types is not Unset:
            self.discrete_types = discrete_types
        if discrete_values is not Unset:
            self.discrete_values = discrete_values
        if replacement_strings is not Unset:
            self.replacement_strings = replacement_strings
        if standard_names is not Unset:
            self.standard_names = standard_names
        if constants is not Unset:
            self.constants = constants
        if record_link_groups is not Unset:
            self.record_link_groups = record_link_groups
        if data is not Unset:
            self.data = data

    @property
    def database_key(self) -> "str":
        """Gets the database_key of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        str
            The database_key of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._database_key

    @database_key.setter
    def database_key(self, database_key: "str") -> None:
        """Sets the database_key of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        database_key: str
            The database_key of this GsaTranslateGuidsToIdentitiesRequest.
        """
        # Field is not nullable
        if database_key is None:
            raise ValueError("Invalid value for 'database_key', must not be 'None'")
        # Field is required
        if database_key is Unset:  # type: ignore[comparison-overlap, unused-ignore]
            raise ValueError("Invalid value for 'database_key', must not be 'Unset'")
        self._database_key = database_key

    @property
    def attributes(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the attributes of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The attributes of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the attributes of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        attributes: list[GsaSlimEntity] | None | Unset_Type
            The attributes of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._attributes = attributes

    @property
    def layouts(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the layouts of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The layouts of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._layouts

    @layouts.setter
    def layouts(self, layouts: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the layouts of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        layouts: list[GsaSlimEntity] | None | Unset_Type
            The layouts of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._layouts = layouts

    @property
    def record_versions(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the record_versions of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The record_versions of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._record_versions

    @record_versions.setter
    def record_versions(self, record_versions: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the record_versions of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        record_versions: list[GsaSlimEntity] | None | Unset_Type
            The record_versions of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._record_versions = record_versions

    @property
    def record_histories(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the record_histories of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The record_histories of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._record_histories

    @record_histories.setter
    def record_histories(self, record_histories: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the record_histories of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        record_histories: list[GsaSlimEntity] | None | Unset_Type
            The record_histories of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._record_histories = record_histories

    @property
    def units(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the units of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The units of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._units

    @units.setter
    def units(self, units: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the units of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        units: list[GsaSlimEntity] | None | Unset_Type
            The units of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._units = units

    @property
    def unit_systems(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the unit_systems of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The unit_systems of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._unit_systems

    @unit_systems.setter
    def unit_systems(self, unit_systems: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the unit_systems of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        unit_systems: list[GsaSlimEntity] | None | Unset_Type
            The unit_systems of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._unit_systems = unit_systems

    @property
    def parameters(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the parameters of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The parameters of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the parameters of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        parameters: list[GsaSlimEntity] | None | Unset_Type
            The parameters of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._parameters = parameters

    @property
    def subsets(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the subsets of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The subsets of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._subsets

    @subsets.setter
    def subsets(self, subsets: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the subsets of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        subsets: list[GsaSlimEntity] | None | Unset_Type
            The subsets of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._subsets = subsets

    @property
    def tables(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the tables of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The tables of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._tables

    @tables.setter
    def tables(self, tables: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the tables of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        tables: list[GsaSlimEntity] | None | Unset_Type
            The tables of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._tables = tables

    @property
    def discrete_types(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the discrete_types of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The discrete_types of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._discrete_types

    @discrete_types.setter
    def discrete_types(self, discrete_types: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the discrete_types of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        discrete_types: list[GsaSlimEntity] | None | Unset_Type
            The discrete_types of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._discrete_types = discrete_types

    @property
    def discrete_values(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the discrete_values of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The discrete_values of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._discrete_values

    @discrete_values.setter
    def discrete_values(self, discrete_values: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the discrete_values of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        discrete_values: list[GsaSlimEntity] | None | Unset_Type
            The discrete_values of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._discrete_values = discrete_values

    @property
    def replacement_strings(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the replacement_strings of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The replacement_strings of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._replacement_strings

    @replacement_strings.setter
    def replacement_strings(
        self, replacement_strings: "list[GsaSlimEntity] | None | Unset_Type"
    ) -> None:
        """Sets the replacement_strings of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        replacement_strings: list[GsaSlimEntity] | None | Unset_Type
            The replacement_strings of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._replacement_strings = replacement_strings

    @property
    def standard_names(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the standard_names of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The standard_names of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._standard_names

    @standard_names.setter
    def standard_names(self, standard_names: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the standard_names of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        standard_names: list[GsaSlimEntity] | None | Unset_Type
            The standard_names of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._standard_names = standard_names

    @property
    def constants(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the constants of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The constants of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._constants

    @constants.setter
    def constants(self, constants: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the constants of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        constants: list[GsaSlimEntity] | None | Unset_Type
            The constants of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._constants = constants

    @property
    def record_link_groups(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the record_link_groups of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The record_link_groups of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._record_link_groups

    @record_link_groups.setter
    def record_link_groups(
        self, record_link_groups: "list[GsaSlimEntity] | None | Unset_Type"
    ) -> None:
        """Sets the record_link_groups of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        record_link_groups: list[GsaSlimEntity] | None | Unset_Type
            The record_link_groups of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._record_link_groups = record_link_groups

    @property
    def data(self) -> "list[GsaSlimEntity] | None | Unset_Type":
        """Gets the data of this GsaTranslateGuidsToIdentitiesRequest.

        Returns
        -------
        list[GsaSlimEntity] | None | Unset_Type
            The data of this GsaTranslateGuidsToIdentitiesRequest.
        """
        return self._data

    @data.setter
    def data(self, data: "list[GsaSlimEntity] | None | Unset_Type") -> None:
        """Sets the data of this GsaTranslateGuidsToIdentitiesRequest.

        Parameters
        ----------
        data: list[GsaSlimEntity] | None | Unset_Type
            The data of this GsaTranslateGuidsToIdentitiesRequest.
        """
        self._data = data

    @classmethod
    def get_real_child_model(cls, data: dict[str, str]) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GsaTranslateGuidsToIdentitiesRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
