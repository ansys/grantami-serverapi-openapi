# Copyright (C) 2023 - 2025 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""
MI Server API

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import TYPE_CHECKING, Any, BinaryIO, Optional, Union  # noqa: F401

from . import ModelBase, Unset, Unset_Type

if TYPE_CHECKING:
    from datetime import datetime
    import pathlib

    from . import *


class GsaBulkRequestItem(ModelBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes
    ----------
    swagger_types: dict[str, str]
        The key is attribute name and the value is attribute type.
    attribute_map: dict[str, str]
        The key is attribute name and the value is json key in definition.
    subtype_mapping: dict[str, str]
        The key is the unmangled property name and the value is the corresponding type.
    discriminator: Optional[str]
        Name of the property used as discriminator for subtypes.
    """
    swagger_types: dict[str, str] = {
        "method": "GsaBulkRequestHttpMethod",
        "path": "str",
        "body": "object",
        "headers": "dict(str, str)",
        "query": "dict(str, str)",
    }

    attribute_map: dict[str, str] = {
        "method": "method",
        "path": "path",
        "body": "body",
        "headers": "headers",
        "query": "query",
    }

    subtype_mapping: dict[str, str] = {
        "method": "GsaBulkRequestHttpMethod",
    }

    discriminator: Optional[str] = None

    def __init__(
        self,
        *,
        method: "GsaBulkRequestHttpMethod",
        path: "str",
        body: "Union[object, None, Unset_Type]" = Unset,
        headers: "Union[dict[str, str], None, Unset_Type]" = Unset,
        query: "Union[dict[str, str], None, Unset_Type]" = Unset,
    ) -> None:
        """GsaBulkRequestItem - a model defined in Swagger

        Parameters
        ----------
        method: GsaBulkRequestHttpMethod
        path: str
        body: object, optional
        headers: dict[str, str], optional
        query: dict[str, str], optional
        """
        self._path: str
        self._method: GsaBulkRequestHttpMethod
        self._body: Union[object, None, Unset_Type] = Unset
        self._headers: Union[dict[str, str], None, Unset_Type] = Unset
        self._query: Union[dict[str, str], None, Unset_Type] = Unset

        self.path = path
        self.method = method
        if body is not Unset:
            self.body = body
        if headers is not Unset:
            self.headers = headers
        if query is not Unset:
            self.query = query

    @property
    def path(self) -> "str":
        """Gets the path of this GsaBulkRequestItem.
        The relative path for this request.

        Returns
        -------
        str
            The path of this GsaBulkRequestItem.
        """
        return self._path

    @path.setter
    def path(self, path: "str") -> None:
        """Sets the path of this GsaBulkRequestItem.
        The relative path for this request.

        Parameters
        ----------
        path: str
            The path of this GsaBulkRequestItem.
        """
        # Field is not nullable
        if path is None:
            raise ValueError("Invalid value for 'path', must not be 'None'")
        # Field is required
        if path is Unset:  # type: ignore[comparison-overlap, unused-ignore]
            raise ValueError("Invalid value for 'path', must not be 'Unset'")
        self._path = path

    @property
    def method(self) -> "GsaBulkRequestHttpMethod":
        """Gets the method of this GsaBulkRequestItem.

        Returns
        -------
        GsaBulkRequestHttpMethod
            The method of this GsaBulkRequestItem.
        """
        return self._method

    @method.setter
    def method(self, method: "GsaBulkRequestHttpMethod") -> None:
        """Sets the method of this GsaBulkRequestItem.

        Parameters
        ----------
        method: GsaBulkRequestHttpMethod
            The method of this GsaBulkRequestItem.
        """
        # Field is not nullable
        if method is None:
            raise ValueError("Invalid value for 'method', must not be 'None'")
        # Field is required
        if method is Unset:  # type: ignore[comparison-overlap, unused-ignore]
            raise ValueError("Invalid value for 'method', must not be 'Unset'")
        self._method = method

    @property
    def body(self) -> "Union[object, None, Unset_Type]":
        """Gets the body of this GsaBulkRequestItem.
        The request body. The type of this object depends on the request being sent.  It should be the same as if this request were being sent separately.

        Returns
        -------
        Union[object, None, Unset_Type]
            The body of this GsaBulkRequestItem.
        """
        return self._body

    @body.setter
    def body(self, body: "Union[object, None, Unset_Type]") -> None:
        """Sets the body of this GsaBulkRequestItem.
        The request body. The type of this object depends on the request being sent.  It should be the same as if this request were being sent separately.

        Parameters
        ----------
        body: Union[object, None, Unset_Type]
            The body of this GsaBulkRequestItem.
        """
        self._body = body

    @property
    def headers(self) -> "Union[dict[str, str], None, Unset_Type]":
        """Gets the headers of this GsaBulkRequestItem.
        Any additional headers to set on this request. Headers from the bulk request will also be included.  Headers set in this field override any headers also set on the bulk request.

        Returns
        -------
        Union[dict[str, str], None, Unset_Type]
            The headers of this GsaBulkRequestItem.
        """
        return self._headers

    @headers.setter
    def headers(self, headers: "Union[dict[str, str], None, Unset_Type]") -> None:
        """Sets the headers of this GsaBulkRequestItem.
        Any additional headers to set on this request. Headers from the bulk request will also be included.  Headers set in this field override any headers also set on the bulk request.

        Parameters
        ----------
        headers: Union[dict[str, str], None, Unset_Type]
            The headers of this GsaBulkRequestItem.
        """
        self._headers = headers

    @property
    def query(self) -> "Union[dict[str, str], None, Unset_Type]":
        """Gets the query of this GsaBulkRequestItem.
        Query string parameters.

        Returns
        -------
        Union[dict[str, str], None, Unset_Type]
            The query of this GsaBulkRequestItem.
        """
        return self._query

    @query.setter
    def query(self, query: "Union[dict[str, str], None, Unset_Type]") -> None:
        """Sets the query of this GsaBulkRequestItem.
        Query string parameters.

        Parameters
        ----------
        query: Union[dict[str, str], None, Unset_Type]
            The query of this GsaBulkRequestItem.
        """
        self._query = query

    @classmethod
    def get_real_child_model(cls, data: dict[str, str]) -> str:
        """Raises a NotImplementedError for a type without a discriminator defined.

        Parameters
        ----------
        data: ModelBase
            Object representing a subclass of this class

        Raises
        ------
        NotImplementedError
            This class has no discriminator, and hence no subclasses
        """
        raise NotImplementedError()

    def __repr__(self) -> str:
        """For 'print' and 'pprint'"""
        return self.to_str()

    def __eq__(self, other: Any) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, GsaBulkRequestItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: Any) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
