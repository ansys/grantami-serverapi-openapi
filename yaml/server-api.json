{
  "openapi": "3.0.1",
  "info": {
    "title": "MI Server API",
    "version": "v1"
  },
  "paths": {
    "/v1alpha/databases/{database-key}/tables/{table-identity}:aggregations": {
      "post": {
        "tags": [
          "Aggregation"
        ],
        "summary": "Runs an aggregation against the table.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "a9415f73-fc34-43ff-a8ad-1d9eb5ca63eb",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "a9415f73-fc34-43ff-a8ad-1d9eb5ca63eb",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "a9415f73-fc34-43ff-a8ad-1d9eb5ca63eb",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "a9415f73-fc34-43ff-a8ad-1d9eb5ca63eb",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}:aggregations": {
      "post": {
        "tags": [
          "Aggregation"
        ],
        "summary": "Runs an aggregation against the table.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 7": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "c2545380-e551-4cd1-bcf9-c9d682eb56a0",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 7": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "c2545380-e551-4cd1-bcf9-c9d682eb56a0",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 7": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "c2545380-e551-4cd1-bcf9-c9d682eb56a0",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 7": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "c2545380-e551-4cd1-bcf9-c9d682eb56a0",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:aggregations": {
      "post": {
        "tags": [
          "Aggregation"
        ],
        "summary": "Runs an aggregation against the database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 13": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 17": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "7db92db9-1fa8-4b7c-9a1c-528807b0e715",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 18": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 13": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 17": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "7db92db9-1fa8-4b7c-9a1c-528807b0e715",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 18": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 13": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 17": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "7db92db9-1fa8-4b7c-9a1c-528807b0e715",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 18": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 13": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 17": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "7db92db9-1fa8-4b7c-9a1c-528807b0e715",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 18": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}:aggregations": {
      "post": {
        "tags": [
          "Aggregation"
        ],
        "summary": "Runs an aggregation against the integration schema.",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 19": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 22": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "d86bfebd-7f14-4a91-83aa-c5f246506825",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 19": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 22": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "d86bfebd-7f14-4a91-83aa-c5f246506825",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 19": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 22": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "d86bfebd-7f14-4a91-83aa-c5f246506825",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsRequest"
              },
              "examples": {
                "Example 19": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "exists",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 22": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "d86bfebd-7f14-4a91-83aa-c5f246506825",
                        "identities": [
                          -4,
                          -7,
                          10907
                        ],
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "attributeAggregationCriterionType": "value",
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:search-index-status": {
      "get": {
        "tags": [
          "Database"
        ],
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include-diagnostics",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchIndexStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchIndexStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchIndexStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-identity}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given table. The user must be an Admin user for the database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-name}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given table. The user must be an Admin user for the database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-identity}/layout/{layout-identity}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given layout. The user must be an Admin user for the database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layout-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-name}/layout/{layout-identity}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given layout. The user must be an Admin user for the database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layout-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-identity}/layout/{layout-name}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given layout. The user must be an Admin user for the database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layout-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-name}/layout/{layout-name}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given layout. The user must be an Admin user for the database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layout-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/standard-names:generate-integration-schema": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema with attributes for each provided standard name in the given database. The user must be an Admin user for the database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/standard-names:generate-integration-schema": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema with attributes for each provided standard name. This will include attribute from all loaded databases for which the user is an Admin.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:export": {
      "post": {
        "tags": [
          "DataExport"
        ],
        "summary": "Export data from the given database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the 'MaterialUniverse' records 'Alumino Silicate - 1720' and '250 Maraging Steel' in database 'MI Training'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordHistoryIdentities": [
                      8925,
                      11331
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Linked Records Export",
                  "description": "This example demonstrates how to export linked records from the 'Metals Pedigree' record 'Batch 921' in database 'MI Training', following the record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120139
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Linked Records Export - In Reversed Direction",
                  "description": "This example demonstrates how to export linked records from the 'Tensile Test Data' record 'MTS-615721' in database 'MI Training', following the record link group 'Metals Pedigree', which is the reverse of link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "ad27baf0-42e9-4136-bc96-9dbbf116e265",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": true,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120738
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Linked Records Export - Dynamic Link",
                  "description": "This example demonstrates how to export linked records from the 'Composite Pedigree' record 'LBU14' in database 'MI Training', following the dynamic record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "dynamicLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      121939
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Linked Data Export",
                  "description": "This example demonstrates how to export linked records from the 'Metals Pedigree' record 'Batch 921' in database 'MI Training', following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' and 'Test Temperature'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120139
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the 'MaterialUniverse' records 'Alumino Silicate - 1720' and '250 Maraging Steel' in database 'MI Training'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordHistoryIdentities": [
                      8925,
                      11331
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Linked Records Export",
                  "description": "This example demonstrates how to export linked records from the 'Metals Pedigree' record 'Batch 921' in database 'MI Training', following the record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120139
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Linked Records Export - In Reversed Direction",
                  "description": "This example demonstrates how to export linked records from the 'Tensile Test Data' record 'MTS-615721' in database 'MI Training', following the record link group 'Metals Pedigree', which is the reverse of link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "ad27baf0-42e9-4136-bc96-9dbbf116e265",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": true,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120738
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Linked Records Export - Dynamic Link",
                  "description": "This example demonstrates how to export linked records from the 'Composite Pedigree' record 'LBU14' in database 'MI Training', following the dynamic record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "dynamicLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      121939
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Linked Data Export",
                  "description": "This example demonstrates how to export linked records from the 'Metals Pedigree' record 'Batch 921' in database 'MI Training', following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' and 'Test Temperature'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120139
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the 'MaterialUniverse' records 'Alumino Silicate - 1720' and '250 Maraging Steel' in database 'MI Training'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordHistoryIdentities": [
                      8925,
                      11331
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Linked Records Export",
                  "description": "This example demonstrates how to export linked records from the 'Metals Pedigree' record 'Batch 921' in database 'MI Training', following the record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120139
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Linked Records Export - In Reversed Direction",
                  "description": "This example demonstrates how to export linked records from the 'Tensile Test Data' record 'MTS-615721' in database 'MI Training', following the record link group 'Metals Pedigree', which is the reverse of link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "ad27baf0-42e9-4136-bc96-9dbbf116e265",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": true,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120738
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Linked Records Export - Dynamic Link",
                  "description": "This example demonstrates how to export linked records from the 'Composite Pedigree' record 'LBU14' in database 'MI Training', following the dynamic record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "dynamicLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      121939
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Linked Data Export",
                  "description": "This example demonstrates how to export linked records from the 'Metals Pedigree' record 'Batch 921' in database 'MI Training', following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' and 'Test Temperature'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120139
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the 'MaterialUniverse' records 'Alumino Silicate - 1720' and '250 Maraging Steel' in database 'MI Training'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordHistoryIdentities": [
                      8925,
                      11331
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Linked Records Export",
                  "description": "This example demonstrates how to export linked records from the 'Metals Pedigree' record 'Batch 921' in database 'MI Training', following the record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120139
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Linked Records Export - In Reversed Direction",
                  "description": "This example demonstrates how to export linked records from the 'Tensile Test Data' record 'MTS-615721' in database 'MI Training', following the record link group 'Metals Pedigree', which is the reverse of link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "ad27baf0-42e9-4136-bc96-9dbbf116e265",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": true,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120738
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Linked Records Export - Dynamic Link",
                  "description": "This example demonstrates how to export linked records from the 'Composite Pedigree' record 'LBU14' in database 'MI Training', following the dynamic record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "dynamicLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      121939
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Linked Data Export",
                  "description": "This example demonstrates how to export linked records from the 'Metals Pedigree' record 'Batch 921' in database 'MI Training', following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' and 'Test Temperature'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryIdentities": [
                      120139
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}:export": {
      "post": {
        "tags": [
          "DataExport"
        ],
        "summary": "Export data from the integration schema.",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationDataExportIntegrationDataExportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationDataExportIntegrationDataExportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationDataExportIntegrationDataExportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationDataExportIntegrationDataExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDataExportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          }
        }
      }
    },
    "/v1alpha/integration-schemas": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Lists the available integration schemas.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Add an integration schema. Will fail if the schema is not valid, or if the user is not both a global administrator and an administrator for the schema.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Created successfully"
          },
          "422": {
            "description": "Invalid schema. Returns a list of validation errors"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}:search-index-status": {
      "get": {
        "tags": [
          "Integration"
        ],
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include-diagnostics",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationIntegrationSchemaStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationIntegrationSchemaStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationIntegrationSchemaStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/integration-schemas:search-index-status": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Returns the status of all available integration schemas.",
        "parameters": [
          {
            "name": "include-diagnostics",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/GrantaServerApiIntegrationIntegrationSchemaStatus"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/GrantaServerApiIntegrationIntegrationSchemaStatus"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/GrantaServerApiIntegrationIntegrationSchemaStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}": {
      "put": {
        "tags": [
          "Integration"
        ],
        "summary": "Updates an integration schema, or adds a new one if there is not one with the same key already.\r\nWill fail if the schema is not valid, or if the user is not both a global administrator and an administrator for the schema.",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "422": {
            "description": "Invalid schema. Returns a list of validation errors"
          }
        }
      },
      "delete": {
        "tags": [
          "Integration"
        ],
        "summary": "Delete an integration schema. Will fail if the schema does not exist, or if the user is not both a global administrator and an administrator for the schema.",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Schema not found"
          }
        }
      },
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Returns the full object representing the integration schema.\r\nNames and identities of source items will be populated if they can be found in the databases currently loaded in MI, otherwise just the GUIDs will be returned.",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "description": "The schema name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeImplicitAttributes",
            "in": "query",
            "description": "Whether to add in the schema attributes derived from certain record properties (e.g. Record Name) that are implicitly in all integration schemas. False by default.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier"
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}/attributes": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Returns a list of the attributes defined in the integration schema.",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "description": "The schema name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeImplicitAttributes",
            "in": "query",
            "description": "Whether to add in the schema attributes derived from certain record properties (e.g. Record Name) that are implicitly in all integration schemas. False by default.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaAttribute"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaAttribute"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaAttribute"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}/sources/database/{database-key}/table/{table-identity}": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Returns a list of the schema source mapping from the given table. Will fail if the database is not loaded in MI.\r\nNames and identities of source items will be populated.",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaSourceOfGrantaServerApiObjectIdentifier"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaSourceOfGrantaServerApiObjectIdentifier"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaSourceOfGrantaServerApiObjectIdentifier"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/items": {
      "get": {
        "tags": [
          "ListItem"
        ],
        "summary": "Returns the items in the given list",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/items/add": {
      "post": {
        "tags": [
          "ListItem"
        ],
        "summary": "Adds the specified items to an existing list.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/items/remove": {
      "post": {
        "tags": [
          "ListItem"
        ],
        "summary": "Removed the specified items from an existing list.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists": {
      "get": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Returns all lists visible to the calling user",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Creates a new list with the specified properties and items.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/lists/search": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Posts a search request, and returns an object containing search result identifier",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/lists/search/results/{resultResourceIdentifier}": {
      "get": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Returns the search results found in the specified resource",
        "parameters": [
          {
            "name": "resultResourceIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchResult"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Search result not found"
          },
          "410": {
            "description": "Search result no longer available"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}": {
      "get": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Returns the given list if it exists and the calling user has read access to it",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      },
      "put": {
        "tags": [
          "ListManagement"
        ],
        "summary": "If the list exists, updates the properties of the list. This will overwrite all current properties, but not the contents of the list.\r\nIf the list does not exist, returns '404 not found' response",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListProperties"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListProperties"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListProperties"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListProperties"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      },
      "patch": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Performs a partial update on the properties of a list. Only replace operations on name, description or notes are supported.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonPatchDocument"
                }
              },
              "examples": {
                "Example 1": {
                  "summary": "Update the name of list",
                  "description": "Update the name of a list",
                  "value": [
                    {
                      "value": "new name",
                      "path": "/name",
                      "op": "replace"
                    }
                  ]
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonPatchDocument"
                }
              },
              "examples": {
                "Example 1": {
                  "summary": "Update the name of list",
                  "description": "Update the name of a list",
                  "value": [
                    {
                      "value": "new name",
                      "path": "/name",
                      "op": "replace"
                    }
                  ]
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonPatchDocument"
                }
              },
              "examples": {
                "Example 1": {
                  "summary": "Update the name of list",
                  "description": "Update the name of a list",
                  "value": [
                    {
                      "value": "new name",
                      "path": "/name",
                      "op": "replace"
                    }
                  ]
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonPatchDocument"
                }
              },
              "examples": {
                "Example 1": {
                  "summary": "Update the name of list",
                  "description": "Update the name of a list",
                  "value": [
                    {
                      "value": "new name",
                      "path": "/name",
                      "op": "replace"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      },
      "delete": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Delete an existing list.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/request-approval": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Update the status of an existing list to \"awaiting approval\".",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/reset": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Update the status of an existing list to not be \"awaiting approval\".",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/publish": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Update the status of an existing list to \"published\". The list must be awaiting approval, and not already published.\r\nThe \"awaiting approval\" flag will be reset to false.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/unpublish": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Update the status of an existing list to \"unpublished\". The list must be published, and awaiting approval.\r\nThe \"awaiting approval\" flag will be reset to false.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/revise": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Creates a private copy of a list that can be revised.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/copy": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Creates a copy of the list and its items",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/permissions/subscribe": {
      "post": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Subscribes the calling user to the specified list.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/permissions/unsubscribe": {
      "post": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Unsubscribes the calling user from the specified list.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/permissions": {
      "get": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Gets all permissions associated with the specified list.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      },
      "post": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Sets permissions for the specified list. Returns a collection of the created/updated permissions.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionInputDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionInputDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionInputDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionInputDto"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantaServerApiListsDtoUserPermissionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list or user or group not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/permissions/user/{userIdentifier}": {
      "get": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Gets the permission flags of the permission associating the specified list with the specified user.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User or group, record list or record list permission not found"
          }
        }
      },
      "put": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Sets the permission flags of the permission associating the specified list with the specified user.",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list or user or group not found"
          }
        }
      }
    },
    "/v1alpha/schema/mi-version": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "Returns the currently running MI version to the caller.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiAdminMiVersion"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get all attributes in table",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Create a new attribute.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Date-time attribute",
                  "description": "This example demonstrates how to create a new date-time attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date"
                  }
                },
                "Example 2": {
                  "summary": "Date-time attribute with guid",
                  "description": "This example demonstrates how to create a new date-time attribute with a specified guid for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date (guid)",
                    "guid": "c82b8878-3733-4119-9a74-48d3bc3c1117"
                  }
                },
                "Example 3": {
                  "summary": "Discrete attribute - simple",
                  "description": "This example demonstrates how to create a new discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "isOneOf",
                    "name": "Used material type"
                  }
                },
                "Example 4": {
                  "summary": "Discrete attribute - multi-valued",
                  "description": "This example demonstrates how to create a multi-valued discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database. You can change the attribute back to a single-valued one as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "isOneOf",
                    "name": "Appropriate material types"
                  }
                },
                "Example 5": {
                  "summary": "File attribute",
                  "description": "This example demonstrates how to create a new file attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "file",
                    "defaultThresholdType": "exists",
                    "name": "Details PDF"
                  }
                },
                "Example 6": {
                  "summary": "Hyperlink attribute",
                  "description": "This example demonstrates how to create a new hyperlink attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "hyperlink",
                    "defaultThresholdType": "exists",
                    "name": "Supplier website"
                  }
                },
                "Example 7": {
                  "summary": "Integer attribute",
                  "description": "This example demonstrates how to create a new integer attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Number of batches"
                  }
                },
                "Example 8": {
                  "summary": "Integer attribute - unique",
                  "description": "This example demonstrates how to create a new integer attribute which is constrained to have unique values for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Batch ID Number"
                  }
                },
                "Example 9": {
                  "summary": "Logical attribute",
                  "description": "This example demonstrates how to create a new logical attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "logical",
                    "defaultThresholdType": "equal",
                    "name": "Inspected"
                  }
                },
                "Example 10": {
                  "summary": "Long text attribute",
                  "description": "This example demonstrates how to create a new long text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "exists",
                    "name": "Long Description"
                  }
                },
                "Example 11": {
                  "summary": "Picture attribute",
                  "description": "This example demonstrates how to create a new picture attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "picture",
                    "defaultThresholdType": "exists",
                    "name": "Photo"
                  }
                },
                "Example 12": {
                  "summary": "Point attribute - simple unitless",
                  "description": "This example demonstrates how to create a new point attribute to represent a unitless single-valued property for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "My Shape factor"
                  }
                },
                "Example 13": {
                  "summary": "Point attribute - simple with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a single-valued property with the unit of 'kg' from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Mass"
                  }
                },
                "Example 14": {
                  "summary": "Point attribute - multi-valued with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a multi-valued property with the unit of 'kg' from the MI_Training database. You can later change the attribute back to single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Observed masses"
                  }
                },
                "Example 15": {
                  "summary": "Point attribute - multi-valued with parameters",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a parameterized multi-valued property. In this case, a unitless property with 'Temperature' parameter from the the MI_Training database",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "defaultThresholdType": "atLeast",
                    "name": "Max ratio"
                  }
                },
                "Example 16": {
                  "summary": "Range attribute - unitless",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = {MiTraining.MaterialUniverseTableGuid}) from the MI_Training database to represent a unitless range value.",
                  "value": {
                    "type": "range",
                    "defaultThresholdType": "atLeast",
                    "name": "Average permeability"
                  }
                },
                "Example 17": {
                  "summary": "Range attribute - with unit",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a range value with the unit 'K' from the MI_Training database.",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Boiling point"
                  }
                },
                "Example 18": {
                  "summary": "Short text attribute",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Label"
                  }
                },
                "Example 19": {
                  "summary": "Short text attribute - unique",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database which is constrained to be unique.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "defaultThresholdType": "exists",
                    "name": "Serial number"
                  }
                },
                "Example 20": {
                  "summary": "Short text meta-attribute",
                  "description": "This example demonstrates how to create a short text meta-attribute for the existing 'EPS Value' attribute in the MaterialUniverse (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) table of the MI_Training database. Any attribute type can be used for meta-attributes.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "aboutAttribute": {
                      "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Short Label"
                  }
                },
                "Example 21": {
                  "summary": "Float functional attribute",
                  "description": "This example demonstrates how to create a new float functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "floatFunctional",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "parameter": {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        },
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet"
                      }
                    ],
                    "isRange": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Electrical resistance with temperature"
                  }
                },
                "Example 22": {
                  "summary": "Discrete functional attribute",
                  "description": "This example demonstrates how to create a new discrete functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "discreteFunctional",
                    "discreteType": {
                      "guid": "0000000c-0006-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "parameter": {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      }
                    ],
                    "defaultThresholdType": "equal",
                    "name": "Environmental resistance"
                  }
                },
                "Example 23": {
                  "summary": "Maths functional attribute",
                  "description": "This example demonstrates how to create a new maths functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "mathsFunctional",
                    "unit": {
                      "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "expressions": [
                      {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      }
                    ],
                    "allowExtrapolation": false,
                    "isRange": false,
                    "allowAllCompatibleExpressions": false,
                    "defaultThresholdType": "equal",
                    "name": "Fatigue strength model"
                  }
                },
                "Example 24": {
                  "summary": "Tabular attribute",
                  "description": "This example demonstrates how to create a new tabular attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "link",
                    "displayFullTable": false,
                    "displaySummaryRowInline": true,
                    "hideUnlinkedRows": true,
                    "target": {
                      "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                      "targetAttributeGuid": "cd6d85d9-7095-49a9-984c-9030bf3d5181"
                    },
                    "tabularColumns": [
                      {
                        "columnType": "localLongText",
                        "defaultThresholdType": "contains",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Comments"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "linkedAttribute": {
                          "type": "shortText",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Substance"
                      },
                      {
                        "columnType": "linkedColumn",
                        "linkedColumn": {
                          "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "list",
                        "name": "Rating"
                      }
                    ],
                    "defaultThresholdType": "exists",
                    "name": "Restricted Substances"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Date-time attribute",
                  "description": "This example demonstrates how to create a new date-time attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date"
                  }
                },
                "Example 2": {
                  "summary": "Date-time attribute with guid",
                  "description": "This example demonstrates how to create a new date-time attribute with a specified guid for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date (guid)",
                    "guid": "c82b8878-3733-4119-9a74-48d3bc3c1117"
                  }
                },
                "Example 3": {
                  "summary": "Discrete attribute - simple",
                  "description": "This example demonstrates how to create a new discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "isOneOf",
                    "name": "Used material type"
                  }
                },
                "Example 4": {
                  "summary": "Discrete attribute - multi-valued",
                  "description": "This example demonstrates how to create a multi-valued discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database. You can change the attribute back to a single-valued one as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "isOneOf",
                    "name": "Appropriate material types"
                  }
                },
                "Example 5": {
                  "summary": "File attribute",
                  "description": "This example demonstrates how to create a new file attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "file",
                    "defaultThresholdType": "exists",
                    "name": "Details PDF"
                  }
                },
                "Example 6": {
                  "summary": "Hyperlink attribute",
                  "description": "This example demonstrates how to create a new hyperlink attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "hyperlink",
                    "defaultThresholdType": "exists",
                    "name": "Supplier website"
                  }
                },
                "Example 7": {
                  "summary": "Integer attribute",
                  "description": "This example demonstrates how to create a new integer attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Number of batches"
                  }
                },
                "Example 8": {
                  "summary": "Integer attribute - unique",
                  "description": "This example demonstrates how to create a new integer attribute which is constrained to have unique values for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Batch ID Number"
                  }
                },
                "Example 9": {
                  "summary": "Logical attribute",
                  "description": "This example demonstrates how to create a new logical attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "logical",
                    "defaultThresholdType": "equal",
                    "name": "Inspected"
                  }
                },
                "Example 10": {
                  "summary": "Long text attribute",
                  "description": "This example demonstrates how to create a new long text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "exists",
                    "name": "Long Description"
                  }
                },
                "Example 11": {
                  "summary": "Picture attribute",
                  "description": "This example demonstrates how to create a new picture attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "picture",
                    "defaultThresholdType": "exists",
                    "name": "Photo"
                  }
                },
                "Example 12": {
                  "summary": "Point attribute - simple unitless",
                  "description": "This example demonstrates how to create a new point attribute to represent a unitless single-valued property for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "My Shape factor"
                  }
                },
                "Example 13": {
                  "summary": "Point attribute - simple with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a single-valued property with the unit of 'kg' from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Mass"
                  }
                },
                "Example 14": {
                  "summary": "Point attribute - multi-valued with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a multi-valued property with the unit of 'kg' from the MI_Training database. You can later change the attribute back to single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Observed masses"
                  }
                },
                "Example 15": {
                  "summary": "Point attribute - multi-valued with parameters",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a parameterized multi-valued property. In this case, a unitless property with 'Temperature' parameter from the the MI_Training database",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "defaultThresholdType": "atLeast",
                    "name": "Max ratio"
                  }
                },
                "Example 16": {
                  "summary": "Range attribute - unitless",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = {MiTraining.MaterialUniverseTableGuid}) from the MI_Training database to represent a unitless range value.",
                  "value": {
                    "type": "range",
                    "defaultThresholdType": "atLeast",
                    "name": "Average permeability"
                  }
                },
                "Example 17": {
                  "summary": "Range attribute - with unit",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a range value with the unit 'K' from the MI_Training database.",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Boiling point"
                  }
                },
                "Example 18": {
                  "summary": "Short text attribute",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Label"
                  }
                },
                "Example 19": {
                  "summary": "Short text attribute - unique",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database which is constrained to be unique.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "defaultThresholdType": "exists",
                    "name": "Serial number"
                  }
                },
                "Example 20": {
                  "summary": "Short text meta-attribute",
                  "description": "This example demonstrates how to create a short text meta-attribute for the existing 'EPS Value' attribute in the MaterialUniverse (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) table of the MI_Training database. Any attribute type can be used for meta-attributes.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "aboutAttribute": {
                      "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Short Label"
                  }
                },
                "Example 21": {
                  "summary": "Float functional attribute",
                  "description": "This example demonstrates how to create a new float functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "floatFunctional",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "parameter": {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        },
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet"
                      }
                    ],
                    "isRange": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Electrical resistance with temperature"
                  }
                },
                "Example 22": {
                  "summary": "Discrete functional attribute",
                  "description": "This example demonstrates how to create a new discrete functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "discreteFunctional",
                    "discreteType": {
                      "guid": "0000000c-0006-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "parameter": {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      }
                    ],
                    "defaultThresholdType": "equal",
                    "name": "Environmental resistance"
                  }
                },
                "Example 23": {
                  "summary": "Maths functional attribute",
                  "description": "This example demonstrates how to create a new maths functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "mathsFunctional",
                    "unit": {
                      "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "expressions": [
                      {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      }
                    ],
                    "allowExtrapolation": false,
                    "isRange": false,
                    "allowAllCompatibleExpressions": false,
                    "defaultThresholdType": "equal",
                    "name": "Fatigue strength model"
                  }
                },
                "Example 24": {
                  "summary": "Tabular attribute",
                  "description": "This example demonstrates how to create a new tabular attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "link",
                    "displayFullTable": false,
                    "displaySummaryRowInline": true,
                    "hideUnlinkedRows": true,
                    "target": {
                      "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                      "targetAttributeGuid": "cd6d85d9-7095-49a9-984c-9030bf3d5181"
                    },
                    "tabularColumns": [
                      {
                        "columnType": "localLongText",
                        "defaultThresholdType": "contains",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Comments"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "linkedAttribute": {
                          "type": "shortText",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Substance"
                      },
                      {
                        "columnType": "linkedColumn",
                        "linkedColumn": {
                          "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "list",
                        "name": "Rating"
                      }
                    ],
                    "defaultThresholdType": "exists",
                    "name": "Restricted Substances"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Date-time attribute",
                  "description": "This example demonstrates how to create a new date-time attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date"
                  }
                },
                "Example 2": {
                  "summary": "Date-time attribute with guid",
                  "description": "This example demonstrates how to create a new date-time attribute with a specified guid for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date (guid)",
                    "guid": "c82b8878-3733-4119-9a74-48d3bc3c1117"
                  }
                },
                "Example 3": {
                  "summary": "Discrete attribute - simple",
                  "description": "This example demonstrates how to create a new discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "isOneOf",
                    "name": "Used material type"
                  }
                },
                "Example 4": {
                  "summary": "Discrete attribute - multi-valued",
                  "description": "This example demonstrates how to create a multi-valued discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database. You can change the attribute back to a single-valued one as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "isOneOf",
                    "name": "Appropriate material types"
                  }
                },
                "Example 5": {
                  "summary": "File attribute",
                  "description": "This example demonstrates how to create a new file attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "file",
                    "defaultThresholdType": "exists",
                    "name": "Details PDF"
                  }
                },
                "Example 6": {
                  "summary": "Hyperlink attribute",
                  "description": "This example demonstrates how to create a new hyperlink attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "hyperlink",
                    "defaultThresholdType": "exists",
                    "name": "Supplier website"
                  }
                },
                "Example 7": {
                  "summary": "Integer attribute",
                  "description": "This example demonstrates how to create a new integer attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Number of batches"
                  }
                },
                "Example 8": {
                  "summary": "Integer attribute - unique",
                  "description": "This example demonstrates how to create a new integer attribute which is constrained to have unique values for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Batch ID Number"
                  }
                },
                "Example 9": {
                  "summary": "Logical attribute",
                  "description": "This example demonstrates how to create a new logical attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "logical",
                    "defaultThresholdType": "equal",
                    "name": "Inspected"
                  }
                },
                "Example 10": {
                  "summary": "Long text attribute",
                  "description": "This example demonstrates how to create a new long text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "exists",
                    "name": "Long Description"
                  }
                },
                "Example 11": {
                  "summary": "Picture attribute",
                  "description": "This example demonstrates how to create a new picture attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "picture",
                    "defaultThresholdType": "exists",
                    "name": "Photo"
                  }
                },
                "Example 12": {
                  "summary": "Point attribute - simple unitless",
                  "description": "This example demonstrates how to create a new point attribute to represent a unitless single-valued property for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "My Shape factor"
                  }
                },
                "Example 13": {
                  "summary": "Point attribute - simple with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a single-valued property with the unit of 'kg' from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Mass"
                  }
                },
                "Example 14": {
                  "summary": "Point attribute - multi-valued with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a multi-valued property with the unit of 'kg' from the MI_Training database. You can later change the attribute back to single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Observed masses"
                  }
                },
                "Example 15": {
                  "summary": "Point attribute - multi-valued with parameters",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a parameterized multi-valued property. In this case, a unitless property with 'Temperature' parameter from the the MI_Training database",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "defaultThresholdType": "atLeast",
                    "name": "Max ratio"
                  }
                },
                "Example 16": {
                  "summary": "Range attribute - unitless",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = {MiTraining.MaterialUniverseTableGuid}) from the MI_Training database to represent a unitless range value.",
                  "value": {
                    "type": "range",
                    "defaultThresholdType": "atLeast",
                    "name": "Average permeability"
                  }
                },
                "Example 17": {
                  "summary": "Range attribute - with unit",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a range value with the unit 'K' from the MI_Training database.",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Boiling point"
                  }
                },
                "Example 18": {
                  "summary": "Short text attribute",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Label"
                  }
                },
                "Example 19": {
                  "summary": "Short text attribute - unique",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database which is constrained to be unique.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "defaultThresholdType": "exists",
                    "name": "Serial number"
                  }
                },
                "Example 20": {
                  "summary": "Short text meta-attribute",
                  "description": "This example demonstrates how to create a short text meta-attribute for the existing 'EPS Value' attribute in the MaterialUniverse (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) table of the MI_Training database. Any attribute type can be used for meta-attributes.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "aboutAttribute": {
                      "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Short Label"
                  }
                },
                "Example 21": {
                  "summary": "Float functional attribute",
                  "description": "This example demonstrates how to create a new float functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "floatFunctional",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "parameter": {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        },
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet"
                      }
                    ],
                    "isRange": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Electrical resistance with temperature"
                  }
                },
                "Example 22": {
                  "summary": "Discrete functional attribute",
                  "description": "This example demonstrates how to create a new discrete functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "discreteFunctional",
                    "discreteType": {
                      "guid": "0000000c-0006-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "parameter": {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      }
                    ],
                    "defaultThresholdType": "equal",
                    "name": "Environmental resistance"
                  }
                },
                "Example 23": {
                  "summary": "Maths functional attribute",
                  "description": "This example demonstrates how to create a new maths functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "mathsFunctional",
                    "unit": {
                      "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "expressions": [
                      {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      }
                    ],
                    "allowExtrapolation": false,
                    "isRange": false,
                    "allowAllCompatibleExpressions": false,
                    "defaultThresholdType": "equal",
                    "name": "Fatigue strength model"
                  }
                },
                "Example 24": {
                  "summary": "Tabular attribute",
                  "description": "This example demonstrates how to create a new tabular attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "link",
                    "displayFullTable": false,
                    "displaySummaryRowInline": true,
                    "hideUnlinkedRows": true,
                    "target": {
                      "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                      "targetAttributeGuid": "cd6d85d9-7095-49a9-984c-9030bf3d5181"
                    },
                    "tabularColumns": [
                      {
                        "columnType": "localLongText",
                        "defaultThresholdType": "contains",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Comments"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "linkedAttribute": {
                          "type": "shortText",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Substance"
                      },
                      {
                        "columnType": "linkedColumn",
                        "linkedColumn": {
                          "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "list",
                        "name": "Rating"
                      }
                    ],
                    "defaultThresholdType": "exists",
                    "name": "Restricted Substances"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Date-time attribute",
                  "description": "This example demonstrates how to create a new date-time attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date"
                  }
                },
                "Example 2": {
                  "summary": "Date-time attribute with guid",
                  "description": "This example demonstrates how to create a new date-time attribute with a specified guid for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date (guid)",
                    "guid": "c82b8878-3733-4119-9a74-48d3bc3c1117"
                  }
                },
                "Example 3": {
                  "summary": "Discrete attribute - simple",
                  "description": "This example demonstrates how to create a new discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "isOneOf",
                    "name": "Used material type"
                  }
                },
                "Example 4": {
                  "summary": "Discrete attribute - multi-valued",
                  "description": "This example demonstrates how to create a multi-valued discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database. You can change the attribute back to a single-valued one as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "isOneOf",
                    "name": "Appropriate material types"
                  }
                },
                "Example 5": {
                  "summary": "File attribute",
                  "description": "This example demonstrates how to create a new file attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "file",
                    "defaultThresholdType": "exists",
                    "name": "Details PDF"
                  }
                },
                "Example 6": {
                  "summary": "Hyperlink attribute",
                  "description": "This example demonstrates how to create a new hyperlink attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "hyperlink",
                    "defaultThresholdType": "exists",
                    "name": "Supplier website"
                  }
                },
                "Example 7": {
                  "summary": "Integer attribute",
                  "description": "This example demonstrates how to create a new integer attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Number of batches"
                  }
                },
                "Example 8": {
                  "summary": "Integer attribute - unique",
                  "description": "This example demonstrates how to create a new integer attribute which is constrained to have unique values for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Batch ID Number"
                  }
                },
                "Example 9": {
                  "summary": "Logical attribute",
                  "description": "This example demonstrates how to create a new logical attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "logical",
                    "defaultThresholdType": "equal",
                    "name": "Inspected"
                  }
                },
                "Example 10": {
                  "summary": "Long text attribute",
                  "description": "This example demonstrates how to create a new long text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "exists",
                    "name": "Long Description"
                  }
                },
                "Example 11": {
                  "summary": "Picture attribute",
                  "description": "This example demonstrates how to create a new picture attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "picture",
                    "defaultThresholdType": "exists",
                    "name": "Photo"
                  }
                },
                "Example 12": {
                  "summary": "Point attribute - simple unitless",
                  "description": "This example demonstrates how to create a new point attribute to represent a unitless single-valued property for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "My Shape factor"
                  }
                },
                "Example 13": {
                  "summary": "Point attribute - simple with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a single-valued property with the unit of 'kg' from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Mass"
                  }
                },
                "Example 14": {
                  "summary": "Point attribute - multi-valued with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a multi-valued property with the unit of 'kg' from the MI_Training database. You can later change the attribute back to single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Observed masses"
                  }
                },
                "Example 15": {
                  "summary": "Point attribute - multi-valued with parameters",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a parameterized multi-valued property. In this case, a unitless property with 'Temperature' parameter from the the MI_Training database",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "defaultThresholdType": "atLeast",
                    "name": "Max ratio"
                  }
                },
                "Example 16": {
                  "summary": "Range attribute - unitless",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = {MiTraining.MaterialUniverseTableGuid}) from the MI_Training database to represent a unitless range value.",
                  "value": {
                    "type": "range",
                    "defaultThresholdType": "atLeast",
                    "name": "Average permeability"
                  }
                },
                "Example 17": {
                  "summary": "Range attribute - with unit",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a range value with the unit 'K' from the MI_Training database.",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Boiling point"
                  }
                },
                "Example 18": {
                  "summary": "Short text attribute",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Label"
                  }
                },
                "Example 19": {
                  "summary": "Short text attribute - unique",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database which is constrained to be unique.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "defaultThresholdType": "exists",
                    "name": "Serial number"
                  }
                },
                "Example 20": {
                  "summary": "Short text meta-attribute",
                  "description": "This example demonstrates how to create a short text meta-attribute for the existing 'EPS Value' attribute in the MaterialUniverse (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) table of the MI_Training database. Any attribute type can be used for meta-attributes.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "aboutAttribute": {
                      "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Short Label"
                  }
                },
                "Example 21": {
                  "summary": "Float functional attribute",
                  "description": "This example demonstrates how to create a new float functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "floatFunctional",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "parameter": {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        },
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet"
                      }
                    ],
                    "isRange": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Electrical resistance with temperature"
                  }
                },
                "Example 22": {
                  "summary": "Discrete functional attribute",
                  "description": "This example demonstrates how to create a new discrete functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "discreteFunctional",
                    "discreteType": {
                      "guid": "0000000c-0006-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "parameter": {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      }
                    ],
                    "defaultThresholdType": "equal",
                    "name": "Environmental resistance"
                  }
                },
                "Example 23": {
                  "summary": "Maths functional attribute",
                  "description": "This example demonstrates how to create a new maths functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "mathsFunctional",
                    "unit": {
                      "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "expressions": [
                      {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      }
                    ],
                    "allowExtrapolation": false,
                    "isRange": false,
                    "allowAllCompatibleExpressions": false,
                    "defaultThresholdType": "equal",
                    "name": "Fatigue strength model"
                  }
                },
                "Example 24": {
                  "summary": "Tabular attribute",
                  "description": "This example demonstrates how to create a new tabular attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "link",
                    "displayFullTable": false,
                    "displaySummaryRowInline": true,
                    "hideUnlinkedRows": true,
                    "target": {
                      "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                      "targetAttributeGuid": "cd6d85d9-7095-49a9-984c-9030bf3d5181"
                    },
                    "tabularColumns": [
                      {
                        "columnType": "localLongText",
                        "defaultThresholdType": "contains",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Comments"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "linkedAttribute": {
                          "type": "shortText",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Substance"
                      },
                      {
                        "columnType": "linkedColumn",
                        "linkedColumn": {
                          "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "list",
                        "name": "Rating"
                      }
                    ],
                    "defaultThresholdType": "exists",
                    "name": "Restricted Substances"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "type": "dateTime",
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 2": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "discrete",
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 3": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "range",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "name": "Tensile strength [Notes]",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "92c1a976-fdd0-488d-b38e-a9c19e5fa4c7"
                          }
                        ],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 4": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "type": "link",
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "cd6d85d9-7095-49a9-984c-9030bf3d5181"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "name": "Chemical name",
                            "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "name": "Legislations restricting its use",
                            "guid": "85c609f7-daf6-45d8-b468-de5c307fabe0"
                          },
                          "linkedColumn": {
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes/{attribute-guid}": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get attribute in table",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "type": "dateTime",
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 2": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "discrete",
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 3": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "range",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "name": "Tensile strength [Notes]",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "34d96c4c-6e35-4622-bf62-a30ba95ebf98"
                          }
                        ],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 4": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "type": "link",
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "cd6d85d9-7095-49a9-984c-9030bf3d5181"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "name": "Chemical name",
                            "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "name": "Legislations restricting its use",
                            "guid": "85c609f7-daf6-45d8-b468-de5c307fabe0"
                          },
                          "linkedColumn": {
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Update attribute.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "name": "Metals (updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Melting point' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000d-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "guid": "12345678-0013-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update help path",
                  "description": "This example demonstrates how to update the 'HelpPath' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "helpPath": "html/attributenotes/metals.html"
                  }
                },
                "Example 4": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 5": {
                  "summary": "Make discrete multi-valued",
                  "description": "This example demonstrates how to update the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. You can similarly turn a multi-valued discrete attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "isMultiValued": true
                  }
                },
                "Example 6": {
                  "summary": "Make short text unique",
                  "description": "This example demonstrates how to update the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and make it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true
                  }
                },
                "Example 7": {
                  "summary": "Make point multi-valued",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. Note that this won't work if the attribute is used in a dynamic link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true
                  }
                },
                "Example 8": {
                  "summary": "Make point multi-valued with parameter",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued with 'Temperature' as a parameter. Note that this won't work if the attribute is used in a dynamic link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Update unit",
                  "description": "This example demonstrates how to update the unit of the 'Reserves' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000088-0001-4fff-8fff-dd92ffff0000). We will change the unit from 'tonnes' to 'kg'",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    }
                  }
                },
                "Example 10": {
                  "summary": "Update multiple properties",
                  "description": "This example demonstrates that it is possible to change multiple attribute properties at once by updating the name of the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and also making it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "name": "Grain size (updated)"
                  }
                },
                "Example 11": {
                  "summary": "Turn an attribute into a meta-attribute",
                  "description": "This example demonstrates how to turn an existing attribute into a meta-attribute of another attribute. We make the short text 'Color' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000169-0001-4fff-8fff-dd92ffff0000) become a meta-attribute of 'ISO name' short text attribute (guid = 000002cf-0001-4fff-8fff-dd92ffff0000).Note that if an attribute already had meta-attribute, it cannot be made a meta-attribute. Also, you cannot add a meta-attribute to another meta-attribute.",
                  "value": {
                    "type": "shortText",
                    "aboutAttribute": {
                      "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 12": {
                  "summary": "Add multiple parameters",
                  "description": "This example demonstrates how to update the 'Tensile strength with temperature' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '00000002-0001-4fff-8fff-dd92ffff0000') and add multiple parameters to it.",
                  "value": {
                    "type": "floatFunctional",
                    "attributeParameters": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet"
                      },
                      {
                        "parameterGuid": "00000005-000a-4fff-8fff-0000ffff0000",
                        "interpolationMethod": "linear",
                        "scaleType": "logarithmic"
                      },
                      {
                        "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f",
                        "interpolationMethod": "none",
                        "scaleType": "linear"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Add additional parameter and set default content for Maths Functional Attribute",
                  "description": "This example demonstrates how to update the 'Fatigue strength model (stress range)' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '745db76c-a991-41b6-9fd6-2e5f544f8ecb') by adding additional parameter to it and setting its default content.",
                  "value": {
                    "type": "mathsFunctional",
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "defaultContent": {
                      "curveLabel": "Updated curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "freeParameter": {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 15.0,
                          "parameterRange": {
                            "lowValue": 5.0,
                            "highValue": 100.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "parameterRange": {
                            "lowValue": -2.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    }
                  }
                },
                "Example 14": {
                  "summary": "Update tabular columns",
                  "description": "This example demonstrates how to modify the tabular columns of the 'Legislations restricting its use' attribute from the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = '85c609f7-daf6-45d8-b468-de5c307fabe0').",
                  "value": {
                    "tabularColumns": [
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": true,
                        "summaryRowText": "All Legislation Names",
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "18eab50a-6c30-4a1d-9205-29878a6044bd"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": true,
                        "summaryRowEnabled": false,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "listDistinct",
                        "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "0a553cb4-13f2-447b-bc55-3e68e1008b51"
                      },
                      {
                        "columnType": "localPoint",
                        "defaultThresholdType": "exists",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "be3a1aa5-0b35-4d62-b512-a2923ed03e8d"
                      }
                    ],
                    "guid": "85c609f7-daf6-45d8-b468-de5c307fabe0"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "name": "Metals (updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Melting point' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000d-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "guid": "12345678-0013-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update help path",
                  "description": "This example demonstrates how to update the 'HelpPath' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "helpPath": "html/attributenotes/metals.html"
                  }
                },
                "Example 4": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 5": {
                  "summary": "Make discrete multi-valued",
                  "description": "This example demonstrates how to update the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. You can similarly turn a multi-valued discrete attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "isMultiValued": true
                  }
                },
                "Example 6": {
                  "summary": "Make short text unique",
                  "description": "This example demonstrates how to update the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and make it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true
                  }
                },
                "Example 7": {
                  "summary": "Make point multi-valued",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. Note that this won't work if the attribute is used in a dynamic link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true
                  }
                },
                "Example 8": {
                  "summary": "Make point multi-valued with parameter",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued with 'Temperature' as a parameter. Note that this won't work if the attribute is used in a dynamic link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Update unit",
                  "description": "This example demonstrates how to update the unit of the 'Reserves' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000088-0001-4fff-8fff-dd92ffff0000). We will change the unit from 'tonnes' to 'kg'",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    }
                  }
                },
                "Example 10": {
                  "summary": "Update multiple properties",
                  "description": "This example demonstrates that it is possible to change multiple attribute properties at once by updating the name of the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and also making it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "name": "Grain size (updated)"
                  }
                },
                "Example 11": {
                  "summary": "Turn an attribute into a meta-attribute",
                  "description": "This example demonstrates how to turn an existing attribute into a meta-attribute of another attribute. We make the short text 'Color' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000169-0001-4fff-8fff-dd92ffff0000) become a meta-attribute of 'ISO name' short text attribute (guid = 000002cf-0001-4fff-8fff-dd92ffff0000).Note that if an attribute already had meta-attribute, it cannot be made a meta-attribute. Also, you cannot add a meta-attribute to another meta-attribute.",
                  "value": {
                    "type": "shortText",
                    "aboutAttribute": {
                      "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 12": {
                  "summary": "Add multiple parameters",
                  "description": "This example demonstrates how to update the 'Tensile strength with temperature' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '00000002-0001-4fff-8fff-dd92ffff0000') and add multiple parameters to it.",
                  "value": {
                    "type": "floatFunctional",
                    "attributeParameters": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet"
                      },
                      {
                        "parameterGuid": "00000005-000a-4fff-8fff-0000ffff0000",
                        "interpolationMethod": "linear",
                        "scaleType": "logarithmic"
                      },
                      {
                        "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f",
                        "interpolationMethod": "none",
                        "scaleType": "linear"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Add additional parameter and set default content for Maths Functional Attribute",
                  "description": "This example demonstrates how to update the 'Fatigue strength model (stress range)' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '745db76c-a991-41b6-9fd6-2e5f544f8ecb') by adding additional parameter to it and setting its default content.",
                  "value": {
                    "type": "mathsFunctional",
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "defaultContent": {
                      "curveLabel": "Updated curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "freeParameter": {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 15.0,
                          "parameterRange": {
                            "lowValue": 5.0,
                            "highValue": 100.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "parameterRange": {
                            "lowValue": -2.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    }
                  }
                },
                "Example 14": {
                  "summary": "Update tabular columns",
                  "description": "This example demonstrates how to modify the tabular columns of the 'Legislations restricting its use' attribute from the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = '85c609f7-daf6-45d8-b468-de5c307fabe0').",
                  "value": {
                    "tabularColumns": [
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": true,
                        "summaryRowText": "All Legislation Names",
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "18eab50a-6c30-4a1d-9205-29878a6044bd"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": true,
                        "summaryRowEnabled": false,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "listDistinct",
                        "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "0a553cb4-13f2-447b-bc55-3e68e1008b51"
                      },
                      {
                        "columnType": "localPoint",
                        "defaultThresholdType": "exists",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "be3a1aa5-0b35-4d62-b512-a2923ed03e8d"
                      }
                    ],
                    "guid": "85c609f7-daf6-45d8-b468-de5c307fabe0"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "name": "Metals (updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Melting point' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000d-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "guid": "12345678-0013-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update help path",
                  "description": "This example demonstrates how to update the 'HelpPath' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "helpPath": "html/attributenotes/metals.html"
                  }
                },
                "Example 4": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 5": {
                  "summary": "Make discrete multi-valued",
                  "description": "This example demonstrates how to update the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. You can similarly turn a multi-valued discrete attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "isMultiValued": true
                  }
                },
                "Example 6": {
                  "summary": "Make short text unique",
                  "description": "This example demonstrates how to update the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and make it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true
                  }
                },
                "Example 7": {
                  "summary": "Make point multi-valued",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. Note that this won't work if the attribute is used in a dynamic link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true
                  }
                },
                "Example 8": {
                  "summary": "Make point multi-valued with parameter",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued with 'Temperature' as a parameter. Note that this won't work if the attribute is used in a dynamic link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Update unit",
                  "description": "This example demonstrates how to update the unit of the 'Reserves' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000088-0001-4fff-8fff-dd92ffff0000). We will change the unit from 'tonnes' to 'kg'",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    }
                  }
                },
                "Example 10": {
                  "summary": "Update multiple properties",
                  "description": "This example demonstrates that it is possible to change multiple attribute properties at once by updating the name of the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and also making it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "name": "Grain size (updated)"
                  }
                },
                "Example 11": {
                  "summary": "Turn an attribute into a meta-attribute",
                  "description": "This example demonstrates how to turn an existing attribute into a meta-attribute of another attribute. We make the short text 'Color' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000169-0001-4fff-8fff-dd92ffff0000) become a meta-attribute of 'ISO name' short text attribute (guid = 000002cf-0001-4fff-8fff-dd92ffff0000).Note that if an attribute already had meta-attribute, it cannot be made a meta-attribute. Also, you cannot add a meta-attribute to another meta-attribute.",
                  "value": {
                    "type": "shortText",
                    "aboutAttribute": {
                      "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 12": {
                  "summary": "Add multiple parameters",
                  "description": "This example demonstrates how to update the 'Tensile strength with temperature' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '00000002-0001-4fff-8fff-dd92ffff0000') and add multiple parameters to it.",
                  "value": {
                    "type": "floatFunctional",
                    "attributeParameters": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet"
                      },
                      {
                        "parameterGuid": "00000005-000a-4fff-8fff-0000ffff0000",
                        "interpolationMethod": "linear",
                        "scaleType": "logarithmic"
                      },
                      {
                        "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f",
                        "interpolationMethod": "none",
                        "scaleType": "linear"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Add additional parameter and set default content for Maths Functional Attribute",
                  "description": "This example demonstrates how to update the 'Fatigue strength model (stress range)' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '745db76c-a991-41b6-9fd6-2e5f544f8ecb') by adding additional parameter to it and setting its default content.",
                  "value": {
                    "type": "mathsFunctional",
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "defaultContent": {
                      "curveLabel": "Updated curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "freeParameter": {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 15.0,
                          "parameterRange": {
                            "lowValue": 5.0,
                            "highValue": 100.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "parameterRange": {
                            "lowValue": -2.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    }
                  }
                },
                "Example 14": {
                  "summary": "Update tabular columns",
                  "description": "This example demonstrates how to modify the tabular columns of the 'Legislations restricting its use' attribute from the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = '85c609f7-daf6-45d8-b468-de5c307fabe0').",
                  "value": {
                    "tabularColumns": [
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": true,
                        "summaryRowText": "All Legislation Names",
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "18eab50a-6c30-4a1d-9205-29878a6044bd"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": true,
                        "summaryRowEnabled": false,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "listDistinct",
                        "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "0a553cb4-13f2-447b-bc55-3e68e1008b51"
                      },
                      {
                        "columnType": "localPoint",
                        "defaultThresholdType": "exists",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "be3a1aa5-0b35-4d62-b512-a2923ed03e8d"
                      }
                    ],
                    "guid": "85c609f7-daf6-45d8-b468-de5c307fabe0"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "name": "Metals (updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Melting point' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000d-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "guid": "12345678-0013-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update help path",
                  "description": "This example demonstrates how to update the 'HelpPath' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "helpPath": "html/attributenotes/metals.html"
                  }
                },
                "Example 4": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 5": {
                  "summary": "Make discrete multi-valued",
                  "description": "This example demonstrates how to update the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. You can similarly turn a multi-valued discrete attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "isMultiValued": true
                  }
                },
                "Example 6": {
                  "summary": "Make short text unique",
                  "description": "This example demonstrates how to update the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and make it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true
                  }
                },
                "Example 7": {
                  "summary": "Make point multi-valued",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. Note that this won't work if the attribute is used in a dynamic link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true
                  }
                },
                "Example 8": {
                  "summary": "Make point multi-valued with parameter",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued with 'Temperature' as a parameter. Note that this won't work if the attribute is used in a dynamic link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Update unit",
                  "description": "This example demonstrates how to update the unit of the 'Reserves' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000088-0001-4fff-8fff-dd92ffff0000). We will change the unit from 'tonnes' to 'kg'",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    }
                  }
                },
                "Example 10": {
                  "summary": "Update multiple properties",
                  "description": "This example demonstrates that it is possible to change multiple attribute properties at once by updating the name of the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and also making it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "name": "Grain size (updated)"
                  }
                },
                "Example 11": {
                  "summary": "Turn an attribute into a meta-attribute",
                  "description": "This example demonstrates how to turn an existing attribute into a meta-attribute of another attribute. We make the short text 'Color' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000169-0001-4fff-8fff-dd92ffff0000) become a meta-attribute of 'ISO name' short text attribute (guid = 000002cf-0001-4fff-8fff-dd92ffff0000).Note that if an attribute already had meta-attribute, it cannot be made a meta-attribute. Also, you cannot add a meta-attribute to another meta-attribute.",
                  "value": {
                    "type": "shortText",
                    "aboutAttribute": {
                      "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 12": {
                  "summary": "Add multiple parameters",
                  "description": "This example demonstrates how to update the 'Tensile strength with temperature' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '00000002-0001-4fff-8fff-dd92ffff0000') and add multiple parameters to it.",
                  "value": {
                    "type": "floatFunctional",
                    "attributeParameters": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet"
                      },
                      {
                        "parameterGuid": "00000005-000a-4fff-8fff-0000ffff0000",
                        "interpolationMethod": "linear",
                        "scaleType": "logarithmic"
                      },
                      {
                        "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f",
                        "interpolationMethod": "none",
                        "scaleType": "linear"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Add additional parameter and set default content for Maths Functional Attribute",
                  "description": "This example demonstrates how to update the 'Fatigue strength model (stress range)' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '745db76c-a991-41b6-9fd6-2e5f544f8ecb') by adding additional parameter to it and setting its default content.",
                  "value": {
                    "type": "mathsFunctional",
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "defaultContent": {
                      "curveLabel": "Updated curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "freeParameter": {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 15.0,
                          "parameterRange": {
                            "lowValue": 5.0,
                            "highValue": 100.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "parameterRange": {
                            "lowValue": -2.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    }
                  }
                },
                "Example 14": {
                  "summary": "Update tabular columns",
                  "description": "This example demonstrates how to modify the tabular columns of the 'Legislations restricting its use' attribute from the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = '85c609f7-daf6-45d8-b468-de5c307fabe0').",
                  "value": {
                    "tabularColumns": [
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": true,
                        "summaryRowText": "All Legislation Names",
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "18eab50a-6c30-4a1d-9205-29878a6044bd"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": true,
                        "summaryRowEnabled": false,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "listDistinct",
                        "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "0a553cb4-13f2-447b-bc55-3e68e1008b51"
                      },
                      {
                        "columnType": "localPoint",
                        "defaultThresholdType": "exists",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "be3a1aa5-0b35-4d62-b512-a2923ed03e8d"
                      }
                    ],
                    "guid": "85c609f7-daf6-45d8-b468-de5c307fabe0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
                },
                "examples": {
                  "Example 5": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "type": "dateTime",
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 6": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "discrete",
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 7": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "range",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "name": "Tensile strength [Notes]",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "89dafa45-8751-471f-876d-495f283462a1"
                          }
                        ],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 8": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "type": "link",
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "cd6d85d9-7095-49a9-984c-9030bf3d5181"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "name": "Chemical name",
                            "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "name": "Legislations restricting its use",
                            "guid": "85c609f7-daf6-45d8-b468-de5c307fabe0"
                          },
                          "linkedColumn": {
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Delete an attribute.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Attribute in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiExceptionsAttributeDeletionException"
                },
                "example": {
                  "message": "Cannot delete attribute 'Tensile strength' (GUID = '000000e3-0001-4fff-8fff-dd92ffff0000').",
                  "code": 400,
                  "errors": [
                    {
                      "message": "It is being used in version controlled data.",
                      "reason": "InUse",
                      "referencedByType": "VersionControlledData"
                    },
                    {
                      "message": "It is being used in one or more expressions.",
                      "reason": "InUse",
                      "referencedByType": "Expression",
                      "referencedBy": [
                        {
                          "name": "Fatigue Model",
                          "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/meta-attributes": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get all meta-attributes in table",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/meta-attributes/{meta-attribute-guid}": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get meta-attribute in table",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "meta-attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
                },
                "examples": {
                  "Example 9": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "type": "dateTime",
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 10": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "discrete",
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 11": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "range",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "name": "Tensile strength [Notes]",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "9cd3994b-536f-485d-80c6-3687b0cdc9ae"
                          }
                        ],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 12": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "type": "link",
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "cd6d85d9-7095-49a9-984c-9030bf3d5181"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "name": "Chemical name",
                            "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "name": "Legislations restricting its use",
                            "guid": "85c609f7-daf6-45d8-b468-de5c307fabe0"
                          },
                          "linkedColumn": {
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or meta-attribute not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Update meta-attribute.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "meta-attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "name": "Notes (flammability)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "guid": "12345678-1234-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 4": {
                  "summary": "Turn a meta-attribute into an attribute",
                  "description": "This example demonstrates how to turn an existing meta-attribute into an attribute by removing its 'aboutAttribute'. We make the short text 'Notes' meta-attribute of the 'Flammability' attribute from the 'MaterialUniverse' table (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid = 00000298-0001-4fff-8fff-dd92ffff0000) become a standalone attribute.",
                  "value": {
                    "type": "longText",
                    "aboutAttribute": null
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "name": "Notes (flammability)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "guid": "12345678-1234-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 4": {
                  "summary": "Turn a meta-attribute into an attribute",
                  "description": "This example demonstrates how to turn an existing meta-attribute into an attribute by removing its 'aboutAttribute'. We make the short text 'Notes' meta-attribute of the 'Flammability' attribute from the 'MaterialUniverse' table (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid = 00000298-0001-4fff-8fff-dd92ffff0000) become a standalone attribute.",
                  "value": {
                    "type": "longText",
                    "aboutAttribute": null
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "name": "Notes (flammability)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "guid": "12345678-1234-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 4": {
                  "summary": "Turn a meta-attribute into an attribute",
                  "description": "This example demonstrates how to turn an existing meta-attribute into an attribute by removing its 'aboutAttribute'. We make the short text 'Notes' meta-attribute of the 'Flammability' attribute from the 'MaterialUniverse' table (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid = 00000298-0001-4fff-8fff-dd92ffff0000) become a standalone attribute.",
                  "value": {
                    "type": "longText",
                    "aboutAttribute": null
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "name": "Notes (flammability)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "guid": "12345678-1234-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 4": {
                  "summary": "Turn a meta-attribute into an attribute",
                  "description": "This example demonstrates how to turn an existing meta-attribute into an attribute by removing its 'aboutAttribute'. We make the short text 'Notes' meta-attribute of the 'Flammability' attribute from the 'MaterialUniverse' table (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid = 00000298-0001-4fff-8fff-dd92ffff0000) become a standalone attribute.",
                  "value": {
                    "type": "longText",
                    "aboutAttribute": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
                },
                "examples": {
                  "Example 13": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "type": "dateTime",
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 14": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "discrete",
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 15": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "type": "range",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "name": "Tensile strength [Notes]",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "0b0db8fe-1ea6-409e-a940-3afa2a4810a3"
                          }
                        ],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 16": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "type": "link",
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "cd6d85d9-7095-49a9-984c-9030bf3d5181"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "name": "Chemical name",
                            "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "fdbfaa62-61ff-43de-9ecb-3728ce83cb4e"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "name": "Legislations restricting its use",
                            "guid": "85c609f7-daf6-45d8-b468-de5c307fabe0"
                          },
                          "linkedColumn": {
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primaryDynamicLinkGroups": [],
                        "foreignDynamicLinkGroups": []
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or meta-attribute not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Delete a meta-attribute.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "meta-attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiExceptionsAttributeDeletionException"
                },
                "example": {
                  "message": "Cannot delete attribute 'Notes' (GUID = '2c52dd73-9eec-4278-afbf-c49cdf08cb4e').",
                  "code": 400,
                  "errors": [
                    {
                      "message": "It is being used in version controlled data.",
                      "reason": "InUse",
                      "referencedByType": "VersionControlledData"
                    },
                    {
                      "message": "It is being used in one or more search masks.",
                      "reason": "InUse",
                      "referencedByType": "SearchMask",
                      "referencedBy": [
                        {
                          "name": "Search mask that searches in Notes",
                          "guid": "64bceab3-953f-4040-b049-01017d0635a6"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or meta-attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes/{attribute-guid}/meta-attributes": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get meta-attributes for attribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes/{attribute-guid}:validate": {
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Validates the provided value against the attributes data rules.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesValidateAttributeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesValidateAttributeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesValidateAttributeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesValidateAttributeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeValidateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/meta-attributes/{meta-attribute-guid}:validate": {
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Validates the provided value against the meta attributes data rules.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "meta-attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesValidateAttributeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesValidateAttributeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesValidateAttributeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesValidateAttributeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeValidateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or meta-attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/configurations/{configuration-type}": {
      "get": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Get all configurations of given type",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsConfigurationsInfo"
                },
                "example": {
                  "configurations": [
                    {
                      "name": "examples",
                      "guid": "997e8f58-bd2a-494f-9a99-18b3d395ad0a"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Create a new configuration.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsCreateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Configuration",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database.",
                  "value": {
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "basic configuration"
                  }
                },
                "Example 2": {
                  "summary": "Configuration with specified guid and description",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database with a specified guid and description. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "description": "Basic configuration that can be used in explore.",
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "basic configuration",
                    "guid": "8df431af-699b-4a78-b661-9d1d2abedf83"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsCreateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Configuration",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database.",
                  "value": {
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "basic configuration"
                  }
                },
                "Example 2": {
                  "summary": "Configuration with specified guid and description",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database with a specified guid and description. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "description": "Basic configuration that can be used in explore.",
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "basic configuration",
                    "guid": "8df431af-699b-4a78-b661-9d1d2abedf83"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsCreateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Configuration",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database.",
                  "value": {
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "basic configuration"
                  }
                },
                "Example 2": {
                  "summary": "Configuration with specified guid and description",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database with a specified guid and description. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "description": "Basic configuration that can be used in explore.",
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "basic configuration",
                    "guid": "8df431af-699b-4a78-b661-9d1d2abedf83"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsCreateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Configuration",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database.",
                  "value": {
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "basic configuration"
                  }
                },
                "Example 2": {
                  "summary": "Configuration with specified guid and description",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database with a specified guid and description. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "description": "Basic configuration that can be used in explore.",
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "basic configuration",
                    "guid": "8df431af-699b-4a78-b661-9d1d2abedf83"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsConfiguration"
                },
                "example": {
                  "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                  "name": "examples",
                  "guid": "997e8f58-bd2a-494f-9a99-18b3d395ad0a"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/configurations/{configuration-type}/{configuration-guid}": {
      "get": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Get individual configuration",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer"
              ],
              "type": "string"
            }
          },
          {
            "name": "configuration-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsConfiguration"
                },
                "example": {
                  "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                  "name": "examples",
                  "guid": "997e8f58-bd2a-494f-9a99-18b3d395ad0a"
                }
              }
            }
          },
          "404": {
            "description": "Database or configuration not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Update a configuration.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer"
              ],
              "type": "string"
            }
          },
          {
            "name": "configuration-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsUpdateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a configuration",
                  "description": "This example shows how to update all properties of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "description": "Updated description for MI_Training Explore 'examples' configuration.",
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "examples (updated)",
                    "guid": "f76e28e5-5650-405e-8fc4-fa2f1d014405"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example shows how to update the 'Name' property of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database.",
                  "value": {
                    "name": "examples (updated)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsUpdateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a configuration",
                  "description": "This example shows how to update all properties of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "description": "Updated description for MI_Training Explore 'examples' configuration.",
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "examples (updated)",
                    "guid": "f76e28e5-5650-405e-8fc4-fa2f1d014405"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example shows how to update the 'Name' property of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database.",
                  "value": {
                    "name": "examples (updated)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsUpdateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a configuration",
                  "description": "This example shows how to update all properties of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "description": "Updated description for MI_Training Explore 'examples' configuration.",
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "examples (updated)",
                    "guid": "f76e28e5-5650-405e-8fc4-fa2f1d014405"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example shows how to update the 'Name' property of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database.",
                  "value": {
                    "name": "examples (updated)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsUpdateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a configuration",
                  "description": "This example shows how to update all properties of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "description": "Updated description for MI_Training Explore 'examples' configuration.",
                    "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                    "name": "examples (updated)",
                    "guid": "f76e28e5-5650-405e-8fc4-fa2f1d014405"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example shows how to update the 'Name' property of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database.",
                  "value": {
                    "name": "examples (updated)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaConfigurationsConfiguration"
                },
                "example": {
                  "value": "{\n\t\"configurations\": [\n\t{\n\t\t\t\"key\": \"training-materials\",\n\t\t\t\"displayName\": \"MI Training Materials\",\n\t\t\t\"default\": true,\n\t\t\t\"groups\": [\n\t\t\t\t\"MI Training examples\"\n\t\t\t],\n\t\t\t\"table\": \"MaterialUniverse\",\n\t\t\t\"loadDataOnDemand\": false,\n\t\t\t\"description\": \"Explore MaterialUniverse data in the MI Training database\",\n\t\t\t\"searchLayout\": \"All bulk materials\",\n\t\t\t\"dataSheetLayout\": \"All bulk materials\",\n\t\t\t\"editableDatasheetLayout\": \"All bulk materials\",\n\t\t\t\"searchListLayout\": \"Explore list layout Materials\",\n\t\t\t\"newRecordLocation\": \"NEW RECORDS/{Base}\",\n\t\t\t\"subset\": \"All bulk materials\",\n\t\t\t\"logsliders\": true,\n\t\t\t\"xyChart\": {\n\t\t\t\t\"colorAttribute\": \"UV radiation (sunlight)\",\n\t\t\t\t\"colorAttribute2\": \"Flammability\",\n\t\t\t\t\"colorAttribute3\": \"Food contact\",\n\t\t\t\t\"colorAttribute4\": \"Material form\",\n\t\t\t\t\"colorAttribute5\": \"Organic solvents\",\n\t\t\t\t\"colorAttribute6\": \"Oxidation at 500C\",\n\t\t\t\t\"colorAttribute7\": \"Strong acids\",\n\t\t\t\t\"colorAttribute8\": \"Strong alkalis\",\n\t\t\t\t\"colorAttribute9\": \"Weak acids\",\n\t\t\t\t\"colorAttribute10\": \"Weak alkalis\",\n\t\t\t\t\"colorAttribute11\": \"Water (fresh)\",\n\t\t\t\t\"colorAttribute12\": \"Water (salt)\",\n\t\t\t\t\"colorAttribute13\": \"Transparency\",\n\t\t\t\t\"colorAttribute14\": \"Wear resistance\",\n\t\t\t\t\"xAttribute\": \"Density\",\n\t\t\t\t\"yAttribute\": \"Yield strength (elastic limit)\",\n\t\t\t\t\"preventAxisChange\": false,\n\t\t\t\t\"xAxisLogarithmic\": true,\n\t\t\t\t\"yAxisLogarithmic\": true\n\t\t\t},\n\t\t\t\"showBlanks\": false,\n\t\t\t\"reportsDisabled\": false,\n\t\t\t\"exportersDisabled\": false,\n\t\t\t\"tabularEditingEnabled\": true,\n\t\t\t\"configSwitching\": \"keyOnly\",\n\t\t\t\"workflowEnabled\": true,\n\t\t\t\"useCustomFormatters\": {\n\t\t\t\t\"Recycle fraction in current supply\": \"recyclingPercent\",\n\t\t\t\t\"Recycle\": \"recyclingBool\",\n\t\t\t\t\"Biodegrade\": \"biodegradeBool\",\n\t\t\t\t\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\n\t\t\t\t\"Flammability\": \"flammabilityDiscrete\",\n\t\t\t\t\"Food contact\": \"foodcontactDiscrete\",\n\t\t\t\t\"Material form\": \"materialformDiscrete\",\n\t\t\t\t\"Organic solvents\": \"organicsolventsDiscrete\",\n\t\t\t\t\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\n\t\t\t\t\"Strong acids\": \"strongacidsDiscrete\",\n\t\t\t\t\"Strong alkalis\": \"strongalkalisDiscrete\",\n\t\t\t\t\"Weak acids\": \"weakacidsDiscrete\",\n\t\t\t\t\"Weak alkalis\": \"weakalkalisDiscrete\",\n\t\t\t\t\"Water (fresh)\": \"waterfreshDiscrete\",\n\t\t\t\t\"Water (salt)\": \"watersaltDiscrete\",\n\t\t\t\t\"Transparency\": \"transparencyDiscrete\",\n\t\t\t\t\"Wear resistance\": \"wearresistanceDiscrete\",\n\t\t\t\t\"A renewable resource?\": \"arenewableresourceBool\",\n\t\t\t\t\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\n\t\t\t\t\"Downcycle\": \"downcycleBool\",\n\t\t\t\t\"Flame retardant additive\": \"flameretardantadditiveBool\",\n\t\t\t\t\"Landfill\": \"landfillBool\",\n\t\t\t\t\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\n\t\t\t\t\"Substance declaration available?\": \"substancedeclarationavailableBool\"\n\t\t\t}\n\t\t}\n\t],\n\t\"customFormatterDefinitions\": {\n\t\t\"recyclingBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be recycled\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"biodegradeBool\": {\n\t\t\t\"attributeFormatter\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"columnHeader\": false,\n\t\t\t\t\t\"columnWidth\": 40\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"valueFormatters\": [{\n\t\t\t\t\t\"match\": true,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"green\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"match\": false,\n\t\t\t\t\t\"list\": {\n\t\t\t\t\t\t\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\n\t\t\t\t\t\t\"tooltipValue\": \"Can not be biodegraded\"\n\t\t\t\t\t},\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"renderColor\": \"red\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
                  "name": "examples",
                  "guid": "997e8f58-bd2a-494f-9a99-18b3d395ad0a"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or configuration not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Delete a configuration",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer"
              ],
              "type": "string"
            }
          },
          {
            "name": "configuration-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or configuration not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/configurations/{configuration-type}/{configuration-guid}:export": {
      "get": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Get individual configuration as a file",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer"
              ],
              "type": "string"
            }
          },
          {
            "name": "configuration-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Database or configuration not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/constants": {
      "get": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Get all constants",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsConstantsInfo"
                },
                "example": {
                  "constants": [
                    {
                      "name": "PI",
                      "guid": "00000001-0004-4fff-8fff-0000ffff0000"
                    },
                    {
                      "name": "Speed of Light in Vacuum",
                      "guid": "0000000f-0004-4fff-8fff-0000ffff0000"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Create a new constant.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which constant will be created",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Constant to add to database",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsCreateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Constant",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant"
                  }
                },
                "Example 2": {
                  "summary": "Constant with specified guid",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant (guid)",
                    "guid": "0d80d1a3-82c9-4195-9cee-a7796cc7ba28"
                  }
                },
                "Example 3": {
                  "summary": "Constant with specified unit",
                  "description": "This example demonstrates how to create a new constant with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum (guid and unit)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsCreateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Constant",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant"
                  }
                },
                "Example 2": {
                  "summary": "Constant with specified guid",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant (guid)",
                    "guid": "0d80d1a3-82c9-4195-9cee-a7796cc7ba28"
                  }
                },
                "Example 3": {
                  "summary": "Constant with specified unit",
                  "description": "This example demonstrates how to create a new constant with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum (guid and unit)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsCreateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Constant",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant"
                  }
                },
                "Example 2": {
                  "summary": "Constant with specified guid",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant (guid)",
                    "guid": "0d80d1a3-82c9-4195-9cee-a7796cc7ba28"
                  }
                },
                "Example 3": {
                  "summary": "Constant with specified unit",
                  "description": "This example demonstrates how to create a new constant with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum (guid and unit)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsCreateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Constant",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant"
                  }
                },
                "Example 2": {
                  "summary": "Constant with specified guid",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant (guid)",
                    "guid": "0d80d1a3-82c9-4195-9cee-a7796cc7ba28"
                  }
                },
                "Example 3": {
                  "summary": "Constant with specified unit",
                  "description": "This example demonstrates how to create a new constant with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum (guid and unit)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsConstant"
                },
                "example": {
                  "unit": {
                    "symbol": "m/s",
                    "guid": "00000097-0013-4fff-8fff-0000ffff0000"
                  },
                  "value": 300000000.0,
                  "name": "Speed of Light in Vacuum",
                  "guid": "0000000f-0004-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/constants/{constant-guid}": {
      "get": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Get individual constant",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which constant will be search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "constant-guid",
            "in": "path",
            "description": "Guid of requested constant",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsConstant"
                },
                "example": {
                  "unit": {
                    "symbol": "m/s",
                    "guid": "00000097-0013-4fff-8fff-0000ffff0000"
                  },
                  "value": 300000000.0,
                  "name": "Speed of Light in Vacuum",
                  "guid": "0000000f-0004-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database or constant not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Update constant.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which constant will be search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "constant-guid",
            "in": "path",
            "description": "Guid of constant to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Constant data to be updated",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsUpdateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a constant",
                  "description": "This example shows how to update all properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum",
                    "guid": "d8b43a39-3d45-41b9-bd2b-b0a9df4cc36f"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "characteristic impedance of vacuum"
                  }
                },
                "Example 3": {
                  "summary": "Update guid and unit",
                  "description": "This example shows how to update the 'Guid' and 'Unit' properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "guid": "cf64bd2c-6eaa-44b8-8d51-3fb63576e316"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsUpdateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a constant",
                  "description": "This example shows how to update all properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum",
                    "guid": "d8b43a39-3d45-41b9-bd2b-b0a9df4cc36f"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "characteristic impedance of vacuum"
                  }
                },
                "Example 3": {
                  "summary": "Update guid and unit",
                  "description": "This example shows how to update the 'Guid' and 'Unit' properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "guid": "cf64bd2c-6eaa-44b8-8d51-3fb63576e316"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsUpdateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a constant",
                  "description": "This example shows how to update all properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum",
                    "guid": "d8b43a39-3d45-41b9-bd2b-b0a9df4cc36f"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "characteristic impedance of vacuum"
                  }
                },
                "Example 3": {
                  "summary": "Update guid and unit",
                  "description": "This example shows how to update the 'Guid' and 'Unit' properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "guid": "cf64bd2c-6eaa-44b8-8d51-3fb63576e316"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsUpdateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a constant",
                  "description": "This example shows how to update all properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum",
                    "guid": "d8b43a39-3d45-41b9-bd2b-b0a9df4cc36f"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "characteristic impedance of vacuum"
                  }
                },
                "Example 3": {
                  "summary": "Update guid and unit",
                  "description": "This example shows how to update the 'Guid' and 'Unit' properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "guid": "cf64bd2c-6eaa-44b8-8d51-3fb63576e316"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaConstantsConstant"
                },
                "example": {
                  "unit": {
                    "symbol": "m/s",
                    "guid": "00000097-0013-4fff-8fff-0000ffff0000"
                  },
                  "value": 300000000.0,
                  "name": "Speed of Light in Vacuum",
                  "guid": "0000000f-0004-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or constant not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Delete a constant",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which constant will be search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "constant-guid",
            "in": "path",
            "description": "Guid of constant to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Constant in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiExceptionsConstantDeletionException"
                },
                "example": {
                  "message": "Cannot delete constant 'PI' (GUID = '00000001-0004-4fff-8fff-0000ffff0000').",
                  "code": 400,
                  "errors": [
                    {
                      "message": "It is being used in one or more expressions.",
                      "reason": "InUse",
                      "referencedByType": "Expression",
                      "referencedBy": [
                        {
                          "name": "Fatigue Model",
                          "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or constant not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/data-rules": {
      "get": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Gets all data rules for a given database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDataRulesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Create a new data rule",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDataRule"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data rule for attributes",
                  "description": "This example demonstrates how to create a new data rule.",
                  "value": {
                    "description": "Only numeric digits are allowed.",
                    "regularExpression": "^[0-9]*$",
                    "name": "digits only"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDataRule"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data rule for attributes",
                  "description": "This example demonstrates how to create a new data rule.",
                  "value": {
                    "description": "Only numeric digits are allowed.",
                    "regularExpression": "^[0-9]*$",
                    "name": "digits only"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDataRule"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data rule for attributes",
                  "description": "This example demonstrates how to create a new data rule.",
                  "value": {
                    "description": "Only numeric digits are allowed.",
                    "regularExpression": "^[0-9]*$",
                    "name": "digits only"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDataRule"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data rule for attributes",
                  "description": "This example demonstrates how to create a new data rule.",
                  "value": {
                    "description": "Only numeric digits are allowed.",
                    "regularExpression": "^[0-9]*$",
                    "name": "digits only"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDataRule"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Data rule for attributes",
                    "description": "This example demonstrates how to create a new data rule.",
                    "value": {
                      "description": "Only numeric digits are allowed.",
                      "regularExpression": "^[0-9]*$",
                      "name": "digits only"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/data-rules/{data-rule-guid}": {
      "get": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Gets a data rule for a given database and guid.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-rule-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDataRule"
                },
                "examples": {
                  "Example 2": {
                    "summary": "Data rule for attributes",
                    "description": "This example demonstrates how to create a new data rule.",
                    "value": {
                      "description": "Only numeric digits are allowed.",
                      "regularExpression": "^[0-9]*$",
                      "name": "digits only"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database or data rule not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Edit a data rule",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-rule-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateDataRule"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateDataRule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateDataRule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateDataRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDataRule"
                },
                "examples": {
                  "Example 3": {
                    "summary": "Data rule for attributes",
                    "description": "This example demonstrates how to create a new data rule.",
                    "value": {
                      "description": "Only numeric digits are allowed.",
                      "regularExpression": "^[0-9]*$",
                      "name": "digits only"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or data rule name not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Delete a data rule.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-rule-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or data rule not found."
          }
        }
      }
    },
    "/v1alpha/databases": {
      "get": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Lists all databases that the user can see.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDatabasesInfo"
                },
                "example": {
                  "databases": [
                    {
                      "key": "MI_Training",
                      "versionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "status": "OK",
                      "isReadOnly": false,
                      "isLocked": false,
                      "indexInSync": true,
                      "schemaVersion": "2022.08.18.01",
                      "name": "MI Training",
                      "guid": "43a43640-4919-428a-bac9-16efbc4ce6ed"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}": {
      "get": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Returns details for a given database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDatabase"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Update database details.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateDatabase"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update everything in a database",
                  "description": "This example shows how to update all properties of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)",
                    "company": "ANSYS, Inc. (updated)",
                    "notes": "MI Training Database for Granta MI v2022R2 and above.\r\n\r\n\nThis database has been developed to support training classes. Any other use of this database will not be supported by Ansys Granta. (Updated)",
                    "currencyCode": "PLN",
                    "versionGuid": "a7111af6-90c4-4e24-9c3c-f65607065ea6",
                    "name": "MI Training (Updated)",
                    "guid": "00aea93b-00a5-4045-879a-a31a8e86fdb3"
                  }
                },
                "Update the author": {
                  "summary": "This example shows how to update the 'Author' property of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateDatabase"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update everything in a database",
                  "description": "This example shows how to update all properties of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)",
                    "company": "ANSYS, Inc. (updated)",
                    "notes": "MI Training Database for Granta MI v2022R2 and above.\r\n\r\n\nThis database has been developed to support training classes. Any other use of this database will not be supported by Ansys Granta. (Updated)",
                    "currencyCode": "PLN",
                    "versionGuid": "a7111af6-90c4-4e24-9c3c-f65607065ea6",
                    "name": "MI Training (Updated)",
                    "guid": "00aea93b-00a5-4045-879a-a31a8e86fdb3"
                  }
                },
                "Update the author": {
                  "summary": "This example shows how to update the 'Author' property of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateDatabase"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update everything in a database",
                  "description": "This example shows how to update all properties of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)",
                    "company": "ANSYS, Inc. (updated)",
                    "notes": "MI Training Database for Granta MI v2022R2 and above.\r\n\r\n\nThis database has been developed to support training classes. Any other use of this database will not be supported by Ansys Granta. (Updated)",
                    "currencyCode": "PLN",
                    "versionGuid": "a7111af6-90c4-4e24-9c3c-f65607065ea6",
                    "name": "MI Training (Updated)",
                    "guid": "00aea93b-00a5-4045-879a-a31a8e86fdb3"
                  }
                },
                "Update the author": {
                  "summary": "This example shows how to update the 'Author' property of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateDatabase"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update everything in a database",
                  "description": "This example shows how to update all properties of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)",
                    "company": "ANSYS, Inc. (updated)",
                    "notes": "MI Training Database for Granta MI v2022R2 and above.\r\n\r\n\nThis database has been developed to support training classes. Any other use of this database will not be supported by Ansys Granta. (Updated)",
                    "currencyCode": "PLN",
                    "versionGuid": "a7111af6-90c4-4e24-9c3c-f65607065ea6",
                    "name": "MI Training (Updated)",
                    "guid": "00aea93b-00a5-4045-879a-a31a8e86fdb3"
                  }
                },
                "Update the author": {
                  "summary": "This example shows how to update the 'Author' property of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:lock": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Lock database",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database to lock",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:unlock": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Unlock database",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database to unlock",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types": {
      "get": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Gets all discrete types for a given database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteTypesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Create a new discrete type.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}": {
      "get": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Gets a single discrete type.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
                }
              }
            }
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Update discrete type.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or discrete type not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Delete discrete type, including all of its discrete values.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Discrete type in use by Attributes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiExceptionsDiscreteTypeDeletionException"
                },
                "example": {
                  "message": "Cannot delete discrete type 'MU Durability' (GUID = '00000083-0006-4fff-8fff-0000ffff0000').",
                  "code": 400,
                  "errors": [
                    {
                      "message": "It is being used in one or more attributes.",
                      "reason": "InUse",
                      "referencedByType": "Attribute",
                      "referencedBy": [
                        {
                          "name": "Metals",
                          "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "OK."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or discrete type not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}:usages": {
      "get": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Gets objects that are using this discrete type.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimObjects"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}/discrete-values": {
      "get": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Gets all discrete values for a given discreteType. If discreteType is ordered, then discreteValues will be return in order, otherwise order is not deterministic.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValuesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Create new discrete value. If it's ordered, it will be added at the end.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      },
      "put": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Replace the whole discrete value collection for a given discrete type.\r\nThis will result in adding, modifying, deleting and reordering discrete values. If any of those operations fail, the whole operation fails.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValuesInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValuesInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValuesInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValuesInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValuesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}/discrete-values/{discrete-value-guid}": {
      "get": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Gets specific discrete value for a given discreteType within a given database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "discrete-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
                }
              }
            }
          },
          "404": {
            "description": "Database, discrete type or discrete value not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Update discrete value.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "discrete-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database, discrete type or discrete value not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Delete a single discrete value. It must not be used by any data, or the operation will fail.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "discrete-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Discrete value in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiExceptionsDiscreteValueDeletionException"
                },
                "example": {
                  "message": "Cannot delete discrete value 'Unacceptable' (GUID = '00000583-0007-4fff-8fff-0083ffff0000').",
                  "code": 400,
                  "errors": [
                    {
                      "message": "It is being used in one or more data items.",
                      "reason": "InUse",
                      "referencedByType": "Data"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "OK."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database, discrete type or discrete value not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}/discrete-values:find-unused": {
      "get": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Find discrete values that are not in use by any data",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValuesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/expressions": {
      "get": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Get all expressions for table",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaExpressionsInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Get all expressions",
                    "description": "This example demonstrates the response to getting all expressions from 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from MI_Training database.",
                    "value": {
                      "expressions": [
                        {
                          "name": "Fatigue Model",
                          "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Create a new expression.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Expression",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression"
                  }
                },
                "Example 2": {
                  "summary": "Expression with specified guid",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression with specified guid",
                    "guid": "1c0d5561-3f08-4afe-875b-d23f00ea5ec7"
                  }
                },
                "Example 3": {
                  "summary": "Expression with specified unit",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Simple expression with specified unit"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Expression",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression"
                  }
                },
                "Example 2": {
                  "summary": "Expression with specified guid",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression with specified guid",
                    "guid": "1c0d5561-3f08-4afe-875b-d23f00ea5ec7"
                  }
                },
                "Example 3": {
                  "summary": "Expression with specified unit",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Simple expression with specified unit"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Expression",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression"
                  }
                },
                "Example 2": {
                  "summary": "Expression with specified guid",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression with specified guid",
                    "guid": "1c0d5561-3f08-4afe-875b-d23f00ea5ec7"
                  }
                },
                "Example 3": {
                  "summary": "Expression with specified unit",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Simple expression with specified unit"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Expression",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression"
                  }
                },
                "Example 2": {
                  "summary": "Expression with specified guid",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression with specified guid",
                    "guid": "1c0d5561-3f08-4afe-875b-d23f00ea5ec7"
                  }
                },
                "Example 3": {
                  "summary": "Expression with specified unit",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Simple expression with specified unit"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaExpression"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Get expression",
                    "description": "This example demonstrates the response to getting 'Fatigue Model' expression (GUID = '535074aa-216f-4f60-b13e-f5e8be72d05f') from 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from MI_Training database.",
                    "value": {
                      "value": "[A:Tensile strength] / ((1 + [P:Stress Ratio]) / (1 - [P:Stress Ratio]) + [A:Tensile strength] / (([A:Tensile strength] * (1 + [A:Elongation] / 100) - [A:Yield strength (elastic limit)]) / (log(1 + mean([A:Elongation] / 100)) - [A:Yield strength (elastic limit)] / (1000 * [A:Young's modulus])) * log(1 + mean([A:Elongation] / 100)) * (2 * [P:Number of Cycles]) ^ -0.6 + [A:Tensile strength] * (1 + [A:Elongation] / 100) * (2 * [P:Number of Cycles]) ^ (log10(mean([A:Fatigue strength at 10^7 cycles] / ([A:Tensile strength] * (1 + [A:Elongation] / 100)))) / log10(20000000))))",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "attributeDependencies": [
                        {
                          "name": "Young's modulus",
                          "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Tensile strength",
                          "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Fatigue strength at 10^7 cycles",
                          "guid": "0000010c-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Elongation",
                          "guid": "0000011a-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Yield strength (elastic limit)",
                          "guid": "0000011b-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "constantDependencies": [],
                      "parameterDependencies": [
                        {
                          "name": "Number of Cycles",
                          "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "name": "Stress Ratio",
                          "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "name": "Fatigue Model",
                      "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/expressions/{expression-guid}": {
      "get": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Get an expression with a specified guid for a given database and table.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expression-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaExpression"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Get expression",
                    "description": "This example demonstrates the response to getting 'Fatigue Model' expression (GUID = '535074aa-216f-4f60-b13e-f5e8be72d05f') from 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from MI_Training database.",
                    "value": {
                      "value": "[A:Tensile strength] / ((1 + [P:Stress Ratio]) / (1 - [P:Stress Ratio]) + [A:Tensile strength] / (([A:Tensile strength] * (1 + [A:Elongation] / 100) - [A:Yield strength (elastic limit)]) / (log(1 + mean([A:Elongation] / 100)) - [A:Yield strength (elastic limit)] / (1000 * [A:Young's modulus])) * log(1 + mean([A:Elongation] / 100)) * (2 * [P:Number of Cycles]) ^ -0.6 + [A:Tensile strength] * (1 + [A:Elongation] / 100) * (2 * [P:Number of Cycles]) ^ (log10(mean([A:Fatigue strength at 10^7 cycles] / ([A:Tensile strength] * (1 + [A:Elongation] / 100)))) / log10(20000000))))",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "attributeDependencies": [
                        {
                          "name": "Young's modulus",
                          "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Tensile strength",
                          "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Fatigue strength at 10^7 cycles",
                          "guid": "0000010c-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Elongation",
                          "guid": "0000011a-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Yield strength (elastic limit)",
                          "guid": "0000011b-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "constantDependencies": [],
                      "parameterDependencies": [
                        {
                          "name": "Number of Cycles",
                          "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "name": "Stress Ratio",
                          "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "name": "Fatigue Model",
                      "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or expression not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Update an expression.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expression-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for an expression",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Unit will be set to kg.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Fatigue Model (Updated)",
                    "guid": "7370a471-2211-4a52-91b2-c6d00879c99c"
                  }
                },
                "Example 2": {
                  "summary": "Rename expression",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Fatigue Model (Updated)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for an expression",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Unit will be set to kg.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Fatigue Model (Updated)",
                    "guid": "7370a471-2211-4a52-91b2-c6d00879c99c"
                  }
                },
                "Example 2": {
                  "summary": "Rename expression",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Fatigue Model (Updated)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for an expression",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Unit will be set to kg.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Fatigue Model (Updated)",
                    "guid": "7370a471-2211-4a52-91b2-c6d00879c99c"
                  }
                },
                "Example 2": {
                  "summary": "Rename expression",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Fatigue Model (Updated)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for an expression",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Unit will be set to kg.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Fatigue Model (Updated)",
                    "guid": "7370a471-2211-4a52-91b2-c6d00879c99c"
                  }
                },
                "Example 2": {
                  "summary": "Rename expression",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Fatigue Model (Updated)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaExpression"
                },
                "examples": {
                  "Example 2": {
                    "summary": "Get expression",
                    "description": "This example demonstrates the response to getting 'Fatigue Model' expression (GUID = '535074aa-216f-4f60-b13e-f5e8be72d05f') from 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from MI_Training database.",
                    "value": {
                      "value": "[A:Tensile strength] / ((1 + [P:Stress Ratio]) / (1 - [P:Stress Ratio]) + [A:Tensile strength] / (([A:Tensile strength] * (1 + [A:Elongation] / 100) - [A:Yield strength (elastic limit)]) / (log(1 + mean([A:Elongation] / 100)) - [A:Yield strength (elastic limit)] / (1000 * [A:Young's modulus])) * log(1 + mean([A:Elongation] / 100)) * (2 * [P:Number of Cycles]) ^ -0.6 + [A:Tensile strength] * (1 + [A:Elongation] / 100) * (2 * [P:Number of Cycles]) ^ (log10(mean([A:Fatigue strength at 10^7 cycles] / ([A:Tensile strength] * (1 + [A:Elongation] / 100)))) / log10(20000000))))",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "attributeDependencies": [
                        {
                          "name": "Young's modulus",
                          "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Tensile strength",
                          "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Fatigue strength at 10^7 cycles",
                          "guid": "0000010c-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Elongation",
                          "guid": "0000011a-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "name": "Yield strength (elastic limit)",
                          "guid": "0000011b-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "constantDependencies": [],
                      "parameterDependencies": [
                        {
                          "name": "Number of Cycles",
                          "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "name": "Stress Ratio",
                          "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "name": "Fatigue Model",
                      "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or expression not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Delete an expression.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expression-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or expression not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get All Help File Folders",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "name": "Help Pages",
                      "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                    },
                    {
                      "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "name": "html",
                      "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "name": "Help Pages",
                      "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                    },
                    {
                      "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "name": "html",
                      "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "name": "Help Pages",
                      "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                    },
                    {
                      "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "name": "html",
                      "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Create a new Help File Folder.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Help File Folder",
                  "description": "This example demonstrates how to create a new help file folder under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                    "name": "New Folder"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Help File Folder",
                  "description": "This example demonstrates how to create a new help file folder under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                    "name": "New Folder"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Help File Folder",
                  "description": "This example demonstrates how to create a new help file folder under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                    "name": "New Folder"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Help File Folder",
                  "description": "This example demonstrates how to create a new help file folder under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                    "name": "New Folder"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/:root-folder": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get Root Help File Folder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get Help File Folder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                  "name": "html",
                  "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                  "name": "html",
                  "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                  "name": "html",
                  "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Update an existing Help File Folder.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File Folder",
                  "description": "This example demonstrates how to rename an existing help file folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Help File Folder",
                  "description": "This example demonstrates how to modify the guid of an existing help file folder.",
                  "value": {
                    "guid": "441c6ed1-b2f2-412c-bc84-ced39c3e7f70"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File Folder",
                  "description": "This example demonstrates how to rename an existing help file folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Help File Folder",
                  "description": "This example demonstrates how to modify the guid of an existing help file folder.",
                  "value": {
                    "guid": "441c6ed1-b2f2-412c-bc84-ced39c3e7f70"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File Folder",
                  "description": "This example demonstrates how to rename an existing help file folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Help File Folder",
                  "description": "This example demonstrates how to modify the guid of an existing help file folder.",
                  "value": {
                    "guid": "441c6ed1-b2f2-412c-bc84-ced39c3e7f70"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File Folder",
                  "description": "This example demonstrates how to rename an existing help file folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Help File Folder",
                  "description": "This example demonstrates how to modify the guid of an existing help file folder.",
                  "value": {
                    "guid": "441c6ed1-b2f2-412c-bc84-ced39c3e7f70"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Delete a Help File Folder.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}:child-folders": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get Child Help File Folders",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}:move": {
      "post": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Move an existing Help File Folder.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File Folder",
                  "description": "This example demonstrates how to move an existing help file folder to be under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File Folder",
                  "description": "This example demonstrates how to move an existing help file folder to be under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File Folder",
                  "description": "This example demonstrates how to move an existing help file folder to be under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File Folder",
                  "description": "This example demonstrates how to move an existing help file folder to be under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
                },
                "example": {
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}/files": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get Files in a Folder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "Abrasion_rate.html",
                      "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                    },
                    {
                      "name": "Atomic_volume.html",
                      "guid": "94574853-3cfe-41d9-be48-391883fa0ea9"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "Abrasion_rate.html",
                      "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                    },
                    {
                      "name": "Atomic_volume.html",
                      "guid": "94574853-3cfe-41d9-be48-391883fa0ea9"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "Abrasion_rate.html",
                      "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                    },
                    {
                      "name": "Atomic_volume.html",
                      "guid": "94574853-3cfe-41d9-be48-391883fa0ea9"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Create a new Help File.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string"
                  },
                  "ContentDisposition": {
                    "type": "string"
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "FileName": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}/files/{file-guid}": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get header information for a help file",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              }
            }
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Update an existing Help File.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File",
                  "description": "This example demonstrates how to rename an existing help file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Help File",
                  "description": "This example demonstrates how to change the description for an existing help file.",
                  "value": {
                    "description": "New description for help file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Help File",
                  "description": "This example demonstrates how to modify the guid of an existing help file.",
                  "value": {
                    "guid": "0521346b-3b36-469a-b700-1700bab80738"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File",
                  "description": "This example demonstrates how to rename an existing help file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Help File",
                  "description": "This example demonstrates how to change the description for an existing help file.",
                  "value": {
                    "description": "New description for help file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Help File",
                  "description": "This example demonstrates how to modify the guid of an existing help file.",
                  "value": {
                    "guid": "0521346b-3b36-469a-b700-1700bab80738"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File",
                  "description": "This example demonstrates how to rename an existing help file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Help File",
                  "description": "This example demonstrates how to change the description for an existing help file.",
                  "value": {
                    "description": "New description for help file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Help File",
                  "description": "This example demonstrates how to modify the guid of an existing help file.",
                  "value": {
                    "guid": "0521346b-3b36-469a-b700-1700bab80738"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File",
                  "description": "This example demonstrates how to rename an existing help file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Help File",
                  "description": "This example demonstrates how to change the description for an existing help file.",
                  "value": {
                    "description": "New description for help file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Help File",
                  "description": "This example demonstrates how to modify the guid of an existing help file.",
                  "value": {
                    "guid": "0521346b-3b36-469a-b700-1700bab80738"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Delete a Help File.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}/files/{file-guid}:export": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get help file as a file",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}/files/{file-guid}:move": {
      "post": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Move an existing Help File.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File",
                  "description": "This example demonstrates how to move an existing help file to be under the root 'Help Pages' folder.",
                  "value": {
                    "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File",
                  "description": "This example demonstrates how to move an existing help file to be under the root 'Help Pages' folder.",
                  "value": {
                    "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File",
                  "description": "This example demonstrates how to move an existing help file to be under the root 'Help Pages' folder.",
                  "value": {
                    "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaFilesMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File",
                  "description": "This example demonstrates how to move an existing help file to be under the root 'Help Pages' folder.",
                  "value": {
                    "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}/sections": {
      "get": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Get all sections for a layout",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "showFullDetail",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSectionsInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Get 'slim' layout sections",
                    "description": "This example demonstrates the response to getting the sections for a layout with the 'showFullDetail' parameter set to false, which is the default value.",
                    "value": {
                      "layoutSections": [
                        {
                          "sectionDetailType": "slim",
                          "displayNames": {
                            "en": "General Properties English Display Name",
                            "fr": "General Properties French Display Name"
                          },
                          "name": "General Properties",
                          "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                        },
                        {
                          "sectionDetailType": "slim",
                          "displayNames": {
                            "en": "Mechanical Properties English Display Name",
                            "fr": "Mechanical Properties French Display Name"
                          },
                          "name": "Mechanical Properties",
                          "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Get 'full' layout sections",
                    "description": "This example demonstrates the response to getting the sections for a layout with the 'showFullDetail' parameter set to true.",
                    "value": {
                      "layoutSections": [
                        {
                          "sectionDetailType": "full",
                          "sectionItems": [
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": false,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "cc90f5fb-9565-43fa-9d66-1ea16e54bd47",
                              "name": "Price",
                              "guid": "33bc72b2-c100-4d23-8e98-bdbfdba43d83"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": false,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "c9cbe73b-65a9-4a55-a8b1-bf0922a54a4e",
                              "name": "Density",
                              "guid": "e191bd9a-1607-4da6-892e-b1b21f679168"
                            }
                          ],
                          "displayNames": {
                            "en": "General Properties English Display Name",
                            "fr": "General Properties French Display Name"
                          },
                          "name": "General Properties",
                          "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                        },
                        {
                          "sectionDetailType": "full",
                          "sectionItems": [
                            {
                              "itemType": "attribute",
                              "attributeType": "floatFunctional",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "7983ad98-fc99-444e-a509-80f0afbdf5c5",
                              "name": "Young's modulus",
                              "guid": "c916032b-4dc6-4d88-9820-0de41dc4bffc"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "range",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "acd97eb6-feec-4965-ac92-78c40791efac",
                              "name": "Tensile strength",
                              "guid": "ad62e4c0-c3c0-4608-8e62-d6ec13d93445"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "405f0608-7a4c-407d-a4f7-19807d434e03",
                              "name": "Shape factor",
                              "guid": "119c35c9-fb34-4f61-9008-d7acd8fe1967"
                            }
                          ],
                          "displayNames": {
                            "en": "Mechanical Properties English Display Name",
                            "fr": "Mechanical Properties French Display Name"
                          },
                          "name": "Mechanical Properties",
                          "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Create a new layout section.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayoutSection"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Section",
                  "description": "This example demonstrates how to create a new layout section in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Additional Properties"
                  }
                },
                "Example 2": {
                  "summary": "Layout Section with Guid",
                  "description": "This example demonstrates how to create a new layout section with a specified guid value in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "Additional Properties (Guid)",
                    "guid": "9a46b0d5-3aca-44d2-99a6-113e9accd21c"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayoutSection"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Section",
                  "description": "This example demonstrates how to create a new layout section in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Additional Properties"
                  }
                },
                "Example 2": {
                  "summary": "Layout Section with Guid",
                  "description": "This example demonstrates how to create a new layout section with a specified guid value in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "Additional Properties (Guid)",
                    "guid": "9a46b0d5-3aca-44d2-99a6-113e9accd21c"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayoutSection"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Section",
                  "description": "This example demonstrates how to create a new layout section in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Additional Properties"
                  }
                },
                "Example 2": {
                  "summary": "Layout Section with Guid",
                  "description": "This example demonstrates how to create a new layout section with a specified guid value in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "Additional Properties (Guid)",
                    "guid": "9a46b0d5-3aca-44d2-99a6-113e9accd21c"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayoutSection"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Section",
                  "description": "This example demonstrates how to create a new layout section in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Additional Properties"
                  }
                },
                "Example 2": {
                  "summary": "Layout Section with Guid",
                  "description": "This example demonstrates how to create a new layout section with a specified guid value in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "Additional Properties (Guid)",
                    "guid": "9a46b0d5-3aca-44d2-99a6-113e9accd21c"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayoutSection"
                },
                "example": {
                  "sectionDetailType": "slim",
                  "displayNames": {},
                  "name": "Additional Properties",
                  "guid": "0f07e43d-11fb-43a2-88bd-492521906c13"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      },
      "put": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Reorder the list of layout sections for a layout.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSectionsInfo"
              },
              "example": {
                "layoutSections": [
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Mechanical Properties English Display Name",
                      "fr": "Mechanical Properties French Display Name"
                    },
                    "name": "Mechanical Properties",
                    "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "General Properties English Display Name",
                      "fr": "General Properties French Display Name"
                    },
                    "name": "General Properties",
                    "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Electrical Properties English Display Name",
                      "fr": "Electrical Properties French Display Name"
                    },
                    "name": "Electrical Properties",
                    "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Composition Overview English Display Name",
                      "fr": "Composition Overview French Display Name"
                    },
                    "name": "Composition Overview",
                    "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Composition detail (metals, ceramics and glasses) English Display Name",
                      "fr": "Composition detail (metals, ceramics and glasses) French Display Name"
                    },
                    "name": "Composition detail (metals, ceramics and glasses)",
                    "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Restricted substances English Display Name",
                      "fr": "Restricted substances French Display Name"
                    },
                    "name": "Restricted substances",
                    "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Further Information English Display Name",
                      "fr": "Further Information French Display Name"
                    },
                    "name": "Further Information",
                    "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Restricted substances English Display Name",
                      "fr": "Restricted substances French Display Name"
                    },
                    "name": "Restricted substances",
                    "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Notes English Display Name",
                      "fr": "Notes French Display Name"
                    },
                    "name": "Notes",
                    "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material recycling: energy, CO2 and recycle fraction English Display Name",
                      "fr": "Material recycling: energy, CO2 and recycle fraction French Display Name"
                    },
                    "name": "Material recycling: energy, CO2 and recycle fraction",
                    "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material processing: CO2 footprint English Display Name",
                      "fr": "Material processing: CO2 footprint French Display Name"
                    },
                    "name": "Material processing: CO2 footprint",
                    "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material processing: energy English Display Name",
                      "fr": "Material processing: energy French Display Name"
                    },
                    "name": "Material processing: energy",
                    "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Eco-indicators for principal component English Display Name",
                      "fr": "Eco-indicators for principal component French Display Name"
                    },
                    "name": "Eco-indicators for principal component",
                    "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Primary material production: energy, CO2 and water English Display Name",
                      "fr": "Primary material production: energy, CO2 and water French Display Name"
                    },
                    "name": "Primary material production: energy, CO2 and water",
                    "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Geo-economic data for principal component English Display Name",
                      "fr": "Geo-economic data for principal component French Display Name"
                    },
                    "name": "Geo-economic data for principal component",
                    "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Durability: fluids and sunlight English Display Name",
                      "fr": "Durability: fluids and sunlight French Display Name"
                    },
                    "name": "Durability: fluids and sunlight",
                    "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Durability: flammability English Display Name",
                      "fr": "Durability: flammability French Display Name"
                    },
                    "name": "Durability: flammability",
                    "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Optical properties English Display Name",
                      "fr": "Optical properties French Display Name"
                    },
                    "name": "Optical properties",
                    "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Thermal properties English Display Name",
                      "fr": "Thermal properties French Display Name"
                    },
                    "name": "Thermal properties",
                    "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Bio-data English Display Name",
                      "fr": "Bio-data French Display Name"
                    },
                    "name": "Bio-data",
                    "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "summary": "Reorder Layout Sections",
                  "description": "This example demonstrates how to reorder sections in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "layoutSections": [
                      {
                        "sectionDetailType": "slim",
                        "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSectionsInfo"
              },
              "example": {
                "layoutSections": [
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Mechanical Properties English Display Name",
                      "fr": "Mechanical Properties French Display Name"
                    },
                    "name": "Mechanical Properties",
                    "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "General Properties English Display Name",
                      "fr": "General Properties French Display Name"
                    },
                    "name": "General Properties",
                    "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Electrical Properties English Display Name",
                      "fr": "Electrical Properties French Display Name"
                    },
                    "name": "Electrical Properties",
                    "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Composition Overview English Display Name",
                      "fr": "Composition Overview French Display Name"
                    },
                    "name": "Composition Overview",
                    "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Composition detail (metals, ceramics and glasses) English Display Name",
                      "fr": "Composition detail (metals, ceramics and glasses) French Display Name"
                    },
                    "name": "Composition detail (metals, ceramics and glasses)",
                    "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Restricted substances English Display Name",
                      "fr": "Restricted substances French Display Name"
                    },
                    "name": "Restricted substances",
                    "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Further Information English Display Name",
                      "fr": "Further Information French Display Name"
                    },
                    "name": "Further Information",
                    "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Restricted substances English Display Name",
                      "fr": "Restricted substances French Display Name"
                    },
                    "name": "Restricted substances",
                    "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Notes English Display Name",
                      "fr": "Notes French Display Name"
                    },
                    "name": "Notes",
                    "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material recycling: energy, CO2 and recycle fraction English Display Name",
                      "fr": "Material recycling: energy, CO2 and recycle fraction French Display Name"
                    },
                    "name": "Material recycling: energy, CO2 and recycle fraction",
                    "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material processing: CO2 footprint English Display Name",
                      "fr": "Material processing: CO2 footprint French Display Name"
                    },
                    "name": "Material processing: CO2 footprint",
                    "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material processing: energy English Display Name",
                      "fr": "Material processing: energy French Display Name"
                    },
                    "name": "Material processing: energy",
                    "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Eco-indicators for principal component English Display Name",
                      "fr": "Eco-indicators for principal component French Display Name"
                    },
                    "name": "Eco-indicators for principal component",
                    "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Primary material production: energy, CO2 and water English Display Name",
                      "fr": "Primary material production: energy, CO2 and water French Display Name"
                    },
                    "name": "Primary material production: energy, CO2 and water",
                    "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Geo-economic data for principal component English Display Name",
                      "fr": "Geo-economic data for principal component French Display Name"
                    },
                    "name": "Geo-economic data for principal component",
                    "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Durability: fluids and sunlight English Display Name",
                      "fr": "Durability: fluids and sunlight French Display Name"
                    },
                    "name": "Durability: fluids and sunlight",
                    "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Durability: flammability English Display Name",
                      "fr": "Durability: flammability French Display Name"
                    },
                    "name": "Durability: flammability",
                    "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Optical properties English Display Name",
                      "fr": "Optical properties French Display Name"
                    },
                    "name": "Optical properties",
                    "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Thermal properties English Display Name",
                      "fr": "Thermal properties French Display Name"
                    },
                    "name": "Thermal properties",
                    "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Bio-data English Display Name",
                      "fr": "Bio-data French Display Name"
                    },
                    "name": "Bio-data",
                    "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "summary": "Reorder Layout Sections",
                  "description": "This example demonstrates how to reorder sections in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "layoutSections": [
                      {
                        "sectionDetailType": "slim",
                        "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSectionsInfo"
              },
              "example": {
                "layoutSections": [
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Mechanical Properties English Display Name",
                      "fr": "Mechanical Properties French Display Name"
                    },
                    "name": "Mechanical Properties",
                    "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "General Properties English Display Name",
                      "fr": "General Properties French Display Name"
                    },
                    "name": "General Properties",
                    "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Electrical Properties English Display Name",
                      "fr": "Electrical Properties French Display Name"
                    },
                    "name": "Electrical Properties",
                    "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Composition Overview English Display Name",
                      "fr": "Composition Overview French Display Name"
                    },
                    "name": "Composition Overview",
                    "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Composition detail (metals, ceramics and glasses) English Display Name",
                      "fr": "Composition detail (metals, ceramics and glasses) French Display Name"
                    },
                    "name": "Composition detail (metals, ceramics and glasses)",
                    "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Restricted substances English Display Name",
                      "fr": "Restricted substances French Display Name"
                    },
                    "name": "Restricted substances",
                    "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Further Information English Display Name",
                      "fr": "Further Information French Display Name"
                    },
                    "name": "Further Information",
                    "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Restricted substances English Display Name",
                      "fr": "Restricted substances French Display Name"
                    },
                    "name": "Restricted substances",
                    "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Notes English Display Name",
                      "fr": "Notes French Display Name"
                    },
                    "name": "Notes",
                    "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material recycling: energy, CO2 and recycle fraction English Display Name",
                      "fr": "Material recycling: energy, CO2 and recycle fraction French Display Name"
                    },
                    "name": "Material recycling: energy, CO2 and recycle fraction",
                    "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material processing: CO2 footprint English Display Name",
                      "fr": "Material processing: CO2 footprint French Display Name"
                    },
                    "name": "Material processing: CO2 footprint",
                    "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material processing: energy English Display Name",
                      "fr": "Material processing: energy French Display Name"
                    },
                    "name": "Material processing: energy",
                    "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Eco-indicators for principal component English Display Name",
                      "fr": "Eco-indicators for principal component French Display Name"
                    },
                    "name": "Eco-indicators for principal component",
                    "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Primary material production: energy, CO2 and water English Display Name",
                      "fr": "Primary material production: energy, CO2 and water French Display Name"
                    },
                    "name": "Primary material production: energy, CO2 and water",
                    "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Geo-economic data for principal component English Display Name",
                      "fr": "Geo-economic data for principal component French Display Name"
                    },
                    "name": "Geo-economic data for principal component",
                    "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Durability: fluids and sunlight English Display Name",
                      "fr": "Durability: fluids and sunlight French Display Name"
                    },
                    "name": "Durability: fluids and sunlight",
                    "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Durability: flammability English Display Name",
                      "fr": "Durability: flammability French Display Name"
                    },
                    "name": "Durability: flammability",
                    "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Optical properties English Display Name",
                      "fr": "Optical properties French Display Name"
                    },
                    "name": "Optical properties",
                    "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Thermal properties English Display Name",
                      "fr": "Thermal properties French Display Name"
                    },
                    "name": "Thermal properties",
                    "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Bio-data English Display Name",
                      "fr": "Bio-data French Display Name"
                    },
                    "name": "Bio-data",
                    "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "summary": "Reorder Layout Sections",
                  "description": "This example demonstrates how to reorder sections in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "layoutSections": [
                      {
                        "sectionDetailType": "slim",
                        "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSectionsInfo"
              },
              "example": {
                "layoutSections": [
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Mechanical Properties English Display Name",
                      "fr": "Mechanical Properties French Display Name"
                    },
                    "name": "Mechanical Properties",
                    "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "General Properties English Display Name",
                      "fr": "General Properties French Display Name"
                    },
                    "name": "General Properties",
                    "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Electrical Properties English Display Name",
                      "fr": "Electrical Properties French Display Name"
                    },
                    "name": "Electrical Properties",
                    "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Composition Overview English Display Name",
                      "fr": "Composition Overview French Display Name"
                    },
                    "name": "Composition Overview",
                    "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Composition detail (metals, ceramics and glasses) English Display Name",
                      "fr": "Composition detail (metals, ceramics and glasses) French Display Name"
                    },
                    "name": "Composition detail (metals, ceramics and glasses)",
                    "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Restricted substances English Display Name",
                      "fr": "Restricted substances French Display Name"
                    },
                    "name": "Restricted substances",
                    "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Further Information English Display Name",
                      "fr": "Further Information French Display Name"
                    },
                    "name": "Further Information",
                    "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Restricted substances English Display Name",
                      "fr": "Restricted substances French Display Name"
                    },
                    "name": "Restricted substances",
                    "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Notes English Display Name",
                      "fr": "Notes French Display Name"
                    },
                    "name": "Notes",
                    "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material recycling: energy, CO2 and recycle fraction English Display Name",
                      "fr": "Material recycling: energy, CO2 and recycle fraction French Display Name"
                    },
                    "name": "Material recycling: energy, CO2 and recycle fraction",
                    "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material processing: CO2 footprint English Display Name",
                      "fr": "Material processing: CO2 footprint French Display Name"
                    },
                    "name": "Material processing: CO2 footprint",
                    "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Material processing: energy English Display Name",
                      "fr": "Material processing: energy French Display Name"
                    },
                    "name": "Material processing: energy",
                    "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Eco-indicators for principal component English Display Name",
                      "fr": "Eco-indicators for principal component French Display Name"
                    },
                    "name": "Eco-indicators for principal component",
                    "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Primary material production: energy, CO2 and water English Display Name",
                      "fr": "Primary material production: energy, CO2 and water French Display Name"
                    },
                    "name": "Primary material production: energy, CO2 and water",
                    "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Geo-economic data for principal component English Display Name",
                      "fr": "Geo-economic data for principal component French Display Name"
                    },
                    "name": "Geo-economic data for principal component",
                    "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Durability: fluids and sunlight English Display Name",
                      "fr": "Durability: fluids and sunlight French Display Name"
                    },
                    "name": "Durability: fluids and sunlight",
                    "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Durability: flammability English Display Name",
                      "fr": "Durability: flammability French Display Name"
                    },
                    "name": "Durability: flammability",
                    "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Optical properties English Display Name",
                      "fr": "Optical properties French Display Name"
                    },
                    "name": "Optical properties",
                    "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Thermal properties English Display Name",
                      "fr": "Thermal properties French Display Name"
                    },
                    "name": "Thermal properties",
                    "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                  },
                  {
                    "sectionDetailType": "slim",
                    "displayNames": {
                      "en": "Bio-data English Display Name",
                      "fr": "Bio-data French Display Name"
                    },
                    "name": "Bio-data",
                    "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "summary": "Reorder Layout Sections",
                  "description": "This example demonstrates how to reorder sections in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "layoutSections": [
                      {
                        "sectionDetailType": "slim",
                        "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                      },
                      {
                        "sectionDetailType": "slim",
                        "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSectionsInfo"
                },
                "example": {
                  "layoutSections": [
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Mechanical Properties English Display Name",
                        "fr": "Mechanical Properties French Display Name"
                      },
                      "name": "Mechanical Properties",
                      "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "General Properties English Display Name",
                        "fr": "General Properties French Display Name"
                      },
                      "name": "General Properties",
                      "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Electrical Properties English Display Name",
                        "fr": "Electrical Properties French Display Name"
                      },
                      "name": "Electrical Properties",
                      "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Composition Overview English Display Name",
                        "fr": "Composition Overview French Display Name"
                      },
                      "name": "Composition Overview",
                      "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Composition detail (metals, ceramics and glasses) English Display Name",
                        "fr": "Composition detail (metals, ceramics and glasses) French Display Name"
                      },
                      "name": "Composition detail (metals, ceramics and glasses)",
                      "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Restricted substances English Display Name",
                        "fr": "Restricted substances French Display Name"
                      },
                      "name": "Restricted substances",
                      "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Further Information English Display Name",
                        "fr": "Further Information French Display Name"
                      },
                      "name": "Further Information",
                      "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Restricted substances English Display Name",
                        "fr": "Restricted substances French Display Name"
                      },
                      "name": "Restricted substances",
                      "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Notes English Display Name",
                        "fr": "Notes French Display Name"
                      },
                      "name": "Notes",
                      "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Material recycling: energy, CO2 and recycle fraction English Display Name",
                        "fr": "Material recycling: energy, CO2 and recycle fraction French Display Name"
                      },
                      "name": "Material recycling: energy, CO2 and recycle fraction",
                      "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Material processing: CO2 footprint English Display Name",
                        "fr": "Material processing: CO2 footprint French Display Name"
                      },
                      "name": "Material processing: CO2 footprint",
                      "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Material processing: energy English Display Name",
                        "fr": "Material processing: energy French Display Name"
                      },
                      "name": "Material processing: energy",
                      "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Eco-indicators for principal component English Display Name",
                        "fr": "Eco-indicators for principal component French Display Name"
                      },
                      "name": "Eco-indicators for principal component",
                      "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Primary material production: energy, CO2 and water English Display Name",
                        "fr": "Primary material production: energy, CO2 and water French Display Name"
                      },
                      "name": "Primary material production: energy, CO2 and water",
                      "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Geo-economic data for principal component English Display Name",
                        "fr": "Geo-economic data for principal component French Display Name"
                      },
                      "name": "Geo-economic data for principal component",
                      "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Durability: fluids and sunlight English Display Name",
                        "fr": "Durability: fluids and sunlight French Display Name"
                      },
                      "name": "Durability: fluids and sunlight",
                      "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Durability: flammability English Display Name",
                        "fr": "Durability: flammability French Display Name"
                      },
                      "name": "Durability: flammability",
                      "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Optical properties English Display Name",
                        "fr": "Optical properties French Display Name"
                      },
                      "name": "Optical properties",
                      "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Thermal properties English Display Name",
                        "fr": "Thermal properties French Display Name"
                      },
                      "name": "Thermal properties",
                      "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Bio-data English Display Name",
                        "fr": "Bio-data French Display Name"
                      },
                      "name": "Bio-data",
                      "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, layout or layout section not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}/sections/{section-guid}": {
      "get": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Get a layout section with a specified guid for a given layout.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "section-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "showFullDetail",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSection"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Get 'slim' layout section",
                    "description": "This example demonstrates the response to getting a layout section with the 'showFullDetail' parameter set to false, which is the default value.",
                    "value": {
                      "detailType": "slim",
                      "propertyNameToStatusMap": null,
                      "displayNames": {
                        "de": "Testing Information German Display Name",
                        "fr": "Testing Information French Display Name"
                      },
                      "name": "Testing Information",
                      "guid": "54adb2b3-ee50-4aac-9348-37dd5c47ddee"
                    }
                  },
                  "Example 2": {
                    "summary": "Get 'full' layout section",
                    "description": "This example demonstrates the response to getting a layout section with the 'showFullDetail' parameter set to true.",
                    "value": {
                      "detailType": "full",
                      "sectionItems": [
                        {
                          "itemType": "attribute",
                          "attributeType": "shortText",
                          "required": true,
                          "readOnly": false,
                          "metaAttributes": [],
                          "underlyingEntityGuid": "5ca5e9dd-1e6d-4c23-ac20-f8e1b2910089",
                          "name": "Form",
                          "guid": "c2df5074-f93c-48a6-917a-624761012939"
                        },
                        {
                          "itemType": "attribute",
                          "attributeType": "point",
                          "required": true,
                          "readOnly": false,
                          "metaAttributes": [
                            {
                              "itemType": "attribute",
                              "attributeType": "longText",
                              "required": true,
                              "readOnly": false,
                              "underlyingEntityGuid": "f72a0f7e-a8c3-493e-883e-4b659c9ea154",
                              "name": "Sources",
                              "guid": "f9e3b996-9e59-4da0-b0d7-aa3e43614cb2"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "shortText",
                              "required": true,
                              "readOnly": false,
                              "underlyingEntityGuid": "64d653d7-b848-4c38-beb1-037b1b94e72b",
                              "name": "Notes",
                              "guid": "fa89bbfd-fbd7-4402-8edc-82156e57c572"
                            }
                          ],
                          "underlyingEntityGuid": "7f8e0e59-d560-4158-845d-fb21c1f194c3",
                          "name": "Chemical resistance",
                          "guid": "8920a765-6e5a-48d9-a1d4-db5ac2844cc7"
                        },
                        {
                          "itemType": "link",
                          "linkType": "recordLink",
                          "targetDatabase": "e17159cb-2a0b-42cd-a80d-29ca6b3417ed",
                          "targetTable": "e5e7d535-8e2e-4d84-9ecd-a01ae3706333",
                          "forwards": true,
                          "underlyingEntityGuid": "379df06c-23be-4843-be9d-ae5d935ddfae",
                          "name": "Material Pedigree",
                          "guid": "02a4dbe0-7d6f-4060-a456-15c56e4672a3"
                        },
                        {
                          "itemType": "attribute",
                          "attributeType": "link",
                          "required": false,
                          "readOnly": false,
                          "metaAttributes": [],
                          "tabularColumns": [
                            {
                              "columnType": "linkedAttribute",
                              "tabularColumnGuid": "46580e29-0640-448f-9715-2f399ef0abb7",
                              "name": "Offset Yield Stress",
                              "guid": "fabd14c1-8224-481a-8f83-ce88c36416f7"
                            },
                            {
                              "columnType": "localShortText",
                              "tabularColumnGuid": "28a59bc9-1427-4c93-a9c6-13228bd95c3f",
                              "name": "Young's Modulus Notes",
                              "guid": "e27ffd35-d569-42b2-9b2c-11969347aa4f"
                            }
                          ],
                          "underlyingEntityGuid": "ebd990eb-7bfd-4dcc-a7f3-17572f72c7ef",
                          "name": "Reference Characteristics",
                          "guid": "8886adbb-5c10-4aab-8a58-371a84ea6a57"
                        },
                        {
                          "itemType": "link",
                          "linkType": "associationChain",
                          "targetDatabase": "e17159cb-2a0b-42cd-a80d-29ca6b3417ed",
                          "targetTable": "6ab3bbbc-6461-4ae1-8e0a-06b2c4ada9bc",
                          "forwards": true,
                          "nextLink": {
                            "itemType": "link",
                            "linkType": "associationChain",
                            "targetDatabase": "e17159cb-2a0b-42cd-a80d-29ca6b3417ed",
                            "targetTable": "f53f4ae2-0ea1-46d8-910c-4890bbe7e37c",
                            "forwards": false,
                            "underlyingEntityGuid": "475f0252-d495-4f35-be45-57faff5ef597",
                            "name": "Pedigree information",
                            "guid": "21bc04c3-3015-48ce-b4e5-d64ac4303ae9"
                          },
                          "underlyingEntityGuid": "6159564a-0020-4029-9c04-07e3d08a15e9",
                          "name": "To Pedigree from Producers",
                          "guid": "b7a3645d-ebba-4fed-b758-5125f8ba3d54"
                        }
                      ],
                      "propertyNameToStatusMap": null,
                      "displayNames": {
                        "de": "Testing Information German Display Name",
                        "fr": "Testing Information French Display Name"
                      },
                      "name": "Testing Information",
                      "guid": "f6cb8f79-36dc-4751-83c5-9a93fe4d01b5"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table, layout or layout section not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Delete a layout section.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "section-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, layout or layout section not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}/sections/{section-guid}/items": {
      "post": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Add a new layout item.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "section-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Attribute Item",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The ReadOnly and Required properties default to false.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b"
                  }
                },
                "Example 2": {
                  "summary": "Layout Attribute Item with ReadOnly and Required properties set",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database specifying the ReadOnly and Required properties and the Guid of the created layout item.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                    "required": true,
                    "readOnly": true
                  }
                },
                "Example 3": {
                  "summary": "Layout Attribute Item with Meta Attributes",
                  "description": "This example demonstrates how to add the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                    "metaAttributes": [
                      {
                        "itemType": "attribute",
                        "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                        "required": false,
                        "readOnly": false
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Layout Attribute Item for a Tabular Attribute",
                  "description": "This example demonstrates how to add the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                    "tabularColumnGuids": [
                      "7b28a5fd-4972-40fc-8181-626586258bc3",
                      "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Layout Record Link Group Item",
                  "description": "This example demonstrates how to add the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "recordLink",
                    "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                  }
                },
                "Example 6": {
                  "summary": "Layout Smart Link Group Item",
                  "description": "This example demonstrates how to add the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "smartLink",
                    "forwards": true,
                    "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                  }
                },
                "Example 7": {
                  "summary": "Layout Cross Database Link Group Item",
                  "description": "This example demonstrates how to add a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "crossDatabaseLink",
                    "sourceDatabaseGuid": "bd4cc914-8d4f-4b50-8be6-91230c340620",
                    "sourceTableGuid": "1a358505-a0e3-4518-ad42-54288d40a8f0",
                    "linkGroupGuid": "1992126b-111b-4188-ba8b-961851f01c20"
                  }
                },
                "Example 8": {
                  "summary": "Layout Association Chain Item",
                  "description": "This example demonstrates how to add an association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "associationChain",
                    "associationChainName": "Name of association chain",
                    "associationChainLinks": [
                      {
                        "forwards": true,
                        "tabularAttributeGuid": "eca44efc-a10d-481c-8ada-e9f27fc9763d"
                      },
                      {
                        "forwards": false,
                        "tabularAttributeGuid": "efff039b-00e2-406b-a7ce-3efc5d7d8677"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Attribute Item",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The ReadOnly and Required properties default to false.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b"
                  }
                },
                "Example 2": {
                  "summary": "Layout Attribute Item with ReadOnly and Required properties set",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database specifying the ReadOnly and Required properties and the Guid of the created layout item.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                    "required": true,
                    "readOnly": true
                  }
                },
                "Example 3": {
                  "summary": "Layout Attribute Item with Meta Attributes",
                  "description": "This example demonstrates how to add the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                    "metaAttributes": [
                      {
                        "itemType": "attribute",
                        "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                        "required": false,
                        "readOnly": false
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Layout Attribute Item for a Tabular Attribute",
                  "description": "This example demonstrates how to add the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                    "tabularColumnGuids": [
                      "7b28a5fd-4972-40fc-8181-626586258bc3",
                      "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Layout Record Link Group Item",
                  "description": "This example demonstrates how to add the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "recordLink",
                    "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                  }
                },
                "Example 6": {
                  "summary": "Layout Smart Link Group Item",
                  "description": "This example demonstrates how to add the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "smartLink",
                    "forwards": true,
                    "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                  }
                },
                "Example 7": {
                  "summary": "Layout Cross Database Link Group Item",
                  "description": "This example demonstrates how to add a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "crossDatabaseLink",
                    "sourceDatabaseGuid": "bd4cc914-8d4f-4b50-8be6-91230c340620",
                    "sourceTableGuid": "1a358505-a0e3-4518-ad42-54288d40a8f0",
                    "linkGroupGuid": "1992126b-111b-4188-ba8b-961851f01c20"
                  }
                },
                "Example 8": {
                  "summary": "Layout Association Chain Item",
                  "description": "This example demonstrates how to add an association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "associationChain",
                    "associationChainName": "Name of association chain",
                    "associationChainLinks": [
                      {
                        "forwards": true,
                        "tabularAttributeGuid": "eca44efc-a10d-481c-8ada-e9f27fc9763d"
                      },
                      {
                        "forwards": false,
                        "tabularAttributeGuid": "efff039b-00e2-406b-a7ce-3efc5d7d8677"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Attribute Item",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The ReadOnly and Required properties default to false.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b"
                  }
                },
                "Example 2": {
                  "summary": "Layout Attribute Item with ReadOnly and Required properties set",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database specifying the ReadOnly and Required properties and the Guid of the created layout item.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                    "required": true,
                    "readOnly": true
                  }
                },
                "Example 3": {
                  "summary": "Layout Attribute Item with Meta Attributes",
                  "description": "This example demonstrates how to add the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                    "metaAttributes": [
                      {
                        "itemType": "attribute",
                        "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                        "required": false,
                        "readOnly": false
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Layout Attribute Item for a Tabular Attribute",
                  "description": "This example demonstrates how to add the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                    "tabularColumnGuids": [
                      "7b28a5fd-4972-40fc-8181-626586258bc3",
                      "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Layout Record Link Group Item",
                  "description": "This example demonstrates how to add the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "recordLink",
                    "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                  }
                },
                "Example 6": {
                  "summary": "Layout Smart Link Group Item",
                  "description": "This example demonstrates how to add the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "smartLink",
                    "forwards": true,
                    "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                  }
                },
                "Example 7": {
                  "summary": "Layout Cross Database Link Group Item",
                  "description": "This example demonstrates how to add a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "crossDatabaseLink",
                    "sourceDatabaseGuid": "bd4cc914-8d4f-4b50-8be6-91230c340620",
                    "sourceTableGuid": "1a358505-a0e3-4518-ad42-54288d40a8f0",
                    "linkGroupGuid": "1992126b-111b-4188-ba8b-961851f01c20"
                  }
                },
                "Example 8": {
                  "summary": "Layout Association Chain Item",
                  "description": "This example demonstrates how to add an association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "associationChain",
                    "associationChainName": "Name of association chain",
                    "associationChainLinks": [
                      {
                        "forwards": true,
                        "tabularAttributeGuid": "eca44efc-a10d-481c-8ada-e9f27fc9763d"
                      },
                      {
                        "forwards": false,
                        "tabularAttributeGuid": "efff039b-00e2-406b-a7ce-3efc5d7d8677"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Attribute Item",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The ReadOnly and Required properties default to false.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b"
                  }
                },
                "Example 2": {
                  "summary": "Layout Attribute Item with ReadOnly and Required properties set",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database specifying the ReadOnly and Required properties and the Guid of the created layout item.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                    "required": true,
                    "readOnly": true
                  }
                },
                "Example 3": {
                  "summary": "Layout Attribute Item with Meta Attributes",
                  "description": "This example demonstrates how to add the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                    "metaAttributes": [
                      {
                        "itemType": "attribute",
                        "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                        "required": false,
                        "readOnly": false
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Layout Attribute Item for a Tabular Attribute",
                  "description": "This example demonstrates how to add the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                    "tabularColumnGuids": [
                      "7b28a5fd-4972-40fc-8181-626586258bc3",
                      "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Layout Record Link Group Item",
                  "description": "This example demonstrates how to add the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "recordLink",
                    "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                  }
                },
                "Example 6": {
                  "summary": "Layout Smart Link Group Item",
                  "description": "This example demonstrates how to add the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "smartLink",
                    "forwards": true,
                    "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                  }
                },
                "Example 7": {
                  "summary": "Layout Cross Database Link Group Item",
                  "description": "This example demonstrates how to add a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "crossDatabaseLink",
                    "sourceDatabaseGuid": "bd4cc914-8d4f-4b50-8be6-91230c340620",
                    "sourceTableGuid": "1a358505-a0e3-4518-ad42-54288d40a8f0",
                    "linkGroupGuid": "1992126b-111b-4188-ba8b-961851f01c20"
                  }
                },
                "Example 8": {
                  "summary": "Layout Association Chain Item",
                  "description": "This example demonstrates how to add an association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "associationChain",
                    "associationChainName": "Name of association chain",
                    "associationChainLinks": [
                      {
                        "forwards": true,
                        "tabularAttributeGuid": "eca44efc-a10d-481c-8ada-e9f27fc9763d"
                      },
                      {
                        "forwards": false,
                        "tabularAttributeGuid": "efff039b-00e2-406b-a7ce-3efc5d7d8677"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Layout Attribute Item",
                    "description": "This example demonstrates the response to creating a new attribute layout item. It was created by adding the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "attribute",
                      "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                      "required": true,
                      "readOnly": false,
                      "metaAttributes": null,
                      "tabularColumnGuids": null,
                      "propertyNameToStatusMap": null,
                      "guid": "4c0a84d5-d6e4-4fda-ae53-2cc9367bbc52"
                    }
                  },
                  "Example 2": {
                    "summary": "Layout Attribute Item with Meta Attributes",
                    "description": "This example demonstrates the response to creating a new attribute layout item with a meta-attribute. It was created by adding the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "attribute",
                      "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                      "required": false,
                      "readOnly": false,
                      "metaAttributes": [
                        {
                          "itemType": "attribute",
                          "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                          "required": true,
                          "readOnly": false
                        }
                      ],
                      "tabularColumnGuids": null,
                      "propertyNameToStatusMap": null,
                      "guid": "e8a696ba-463d-4dd2-afce-96c8b43633fd"
                    }
                  },
                  "Example 3": {
                    "summary": "Layout Attribute Item for a Tabular Attribute",
                    "description": "This example demonstrates the response to creating a new tabular attribute layout item with specified tabular columns to include. It was created by adding the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include. ",
                    "value": {
                      "itemType": "attribute",
                      "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "required": false,
                      "readOnly": false,
                      "metaAttributes": null,
                      "tabularColumnGuids": [
                        "7b28a5fd-4972-40fc-8181-626586258bc3",
                        "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                      ],
                      "propertyNameToStatusMap": null,
                      "guid": null
                    }
                  },
                  "Example 4": {
                    "summary": "Layout Record Link Group Item",
                    "description": "This example demonstrates the response to creating a new link group layout item. It was created by adding the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "recordLink",
                      "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949",
                      "propertyNameToStatusMap": null,
                      "guid": null
                    }
                  },
                  "Example 5": {
                    "summary": "Layout Smart Link Group Item",
                    "description": "This example demonstrates the response to creating a new smart link group layout item. It was created by adding the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "smartLink",
                      "forwards": true,
                      "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66",
                      "propertyNameToStatusMap": null,
                      "guid": null
                    }
                  },
                  "Example 6": {
                    "summary": "Layout Cross Database Link Group Item",
                    "description": "This example demonstrates the response to creating a new cross database link group layout item. It was created by adding a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "crossDatabaseLink",
                      "sourceDatabaseGuid": "073574fe-dbc6-4c54-9eef-35eede96b465",
                      "sourceTableGuid": "77224a6f-d66d-45f0-9d48-79888e88d642",
                      "linkGroupGuid": "3d09e64e-6872-4ae5-b37c-382aaff0ae2c",
                      "propertyNameToStatusMap": null,
                      "guid": null
                    }
                  },
                  "Example 7": {
                    "summary": "Layout Association Chain Item",
                    "description": "This example demonstrates the response to creating a new association chain layout item. It was created by adding a association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "associationChain",
                      "associationChainName": "Name of association chain",
                      "associationChainLinks": [
                        {
                          "forwards": true,
                          "tabularAttributeGuid": "70bb3817-9e7d-4a02-8c49-d6c4f1058c56"
                        },
                        {
                          "forwards": false,
                          "tabularAttributeGuid": "ff68e843-20ab-4b44-87cd-462c99b00dfb"
                        }
                      ],
                      "propertyNameToStatusMap": null,
                      "guid": null
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, layout or layout section not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}/sections/{section-guid}/items/{item-guid}": {
      "delete": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Delete a layout item.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "section-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "item-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, layout, layout section or layout section item not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts": {
      "get": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Get all layouts for table",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutsInfo"
                },
                "example": {
                  "layouts": [
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {},
                      "name": "Polymers",
                      "guid": "00007645-0009-4fff-8fff-dd92ffff0000"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Create a new layout.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Composite materials"
                  }
                },
                "Example 2": {
                  "summary": "Layout with Guid",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with a specified guid value. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Composite materials (guid)",
                    "guid": "fefc6f37-a548-4bf8-8ee3-17d3d7397a94"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Composite materials"
                  }
                },
                "Example 2": {
                  "summary": "Layout with Guid",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with a specified guid value. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Composite materials (guid)",
                    "guid": "fefc6f37-a548-4bf8-8ee3-17d3d7397a94"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Composite materials"
                  }
                },
                "Example 2": {
                  "summary": "Layout with Guid",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with a specified guid value. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Composite materials (guid)",
                    "guid": "fefc6f37-a548-4bf8-8ee3-17d3d7397a94"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Composite materials"
                  }
                },
                "Example 2": {
                  "summary": "Layout with Guid",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with a specified guid value. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Composite materials (guid)",
                    "guid": "fefc6f37-a548-4bf8-8ee3-17d3d7397a94"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
                },
                "example": {
                  "displayNames": {},
                  "name": "Ceramics",
                  "guid": "c51a9d6b-b280-40ca-8ccc-10904b007838"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}": {
      "get": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Get a layout with a specified guid for a given database and table.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "showFullDetail",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayout"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Layout with 'slim' sections",
                    "description": "This example demonstrated the response to getting a layout with the 'showFullDetail' parameter set to false, which is the default value.",
                    "value": {
                      "sections": [
                        {
                          "sectionDetailType": "slim",
                          "displayNames": {
                            "en": "General Properties English Display Name",
                            "fr": "General Properties French Display Name"
                          },
                          "name": "General Properties",
                          "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                        },
                        {
                          "sectionDetailType": "slim",
                          "displayNames": {
                            "en": "Mechanical Properties English Display Name",
                            "fr": "Mechanical Properties French Display Name"
                          },
                          "name": "Mechanical Properties",
                          "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                        }
                      ],
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 2": {
                    "summary": "Layout with 'full' sections",
                    "description": "This example demonstrated the response to getting a layout with the 'showFullDetail' parameter set to true.",
                    "value": {
                      "sections": [
                        {
                          "sectionDetailType": "full",
                          "sectionItems": [
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": false,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "f918baf2-a4f8-406b-8422-a30348e07d38",
                              "name": "Price",
                              "guid": "fa877d59-cf53-421b-bff4-4d0922091a36"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": false,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "d724b361-17e4-4abd-907f-14cc176523e6",
                              "name": "Density",
                              "guid": "166b42ac-11c7-4993-9234-188d44ae2718"
                            }
                          ],
                          "displayNames": {
                            "en": "General Properties English Display Name",
                            "fr": "General Properties French Display Name"
                          },
                          "name": "General Properties",
                          "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                        },
                        {
                          "sectionDetailType": "full",
                          "sectionItems": [
                            {
                              "itemType": "attribute",
                              "attributeType": "floatFunctional",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "db8b3975-03ab-49fb-bc55-a4f64881e663",
                              "name": "Young's modulus",
                              "guid": "f73700e2-5b2b-4526-8e5e-115321ae20ae"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "range",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "2641556a-e0a6-4d93-9449-90c6ec0d2b1e",
                              "name": "Tensile strength",
                              "guid": "e7dd4ec5-a6d8-47bb-a18f-9dd0c8da38d4"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "d52b4f39-951c-4736-8cf1-09ef911976ca",
                              "name": "Shape factor",
                              "guid": "3357a1e4-48d6-486c-9bef-7ba39536aec9"
                            }
                          ],
                          "displayNames": {
                            "en": "Mechanical Properties English Display Name",
                            "fr": "Mechanical Properties French Display Name"
                          },
                          "name": "Mechanical Properties",
                          "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                        }
                      ],
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Update a layout.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsUpdateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a layout",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)",
                    "guid": "27ee277b-e53c-4b85-a461-319b76aaede2"
                  }
                },
                "Example 2": {
                  "summary": "Rename layout",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsUpdateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a layout",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)",
                    "guid": "27ee277b-e53c-4b85-a461-319b76aaede2"
                  }
                },
                "Example 2": {
                  "summary": "Rename layout",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsUpdateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a layout",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)",
                    "guid": "27ee277b-e53c-4b85-a461-319b76aaede2"
                  }
                },
                "Example 2": {
                  "summary": "Rename layout",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsUpdateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a layout",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)",
                    "guid": "27ee277b-e53c-4b85-a461-319b76aaede2"
                  }
                },
                "Example 2": {
                  "summary": "Rename layout",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayout"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Delete a layout.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters": {
      "get": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Get all parameters for a given database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParametersInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "A mix of parameters",
                    "description": "This example contains a mix of numeric and discrete parameters from the MI_Training database.",
                    "value": {
                      "parameters": [
                        {
                          "type": "numeric",
                          "isRestricted": false,
                          "unit": {
                            "symbol": "% strain",
                            "guid": "0000019b-0013-4fff-8fff-0000ffff0000"
                          },
                          "values": [
                            {
                              "value": 0.1,
                              "type": "numeric",
                              "isDefault": false,
                              "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                            },
                            {
                              "value": 1.0,
                              "type": "numeric",
                              "isDefault": true,
                              "guid": "00000005-000b-4fff-8fff-0005ffff0000"
                            }
                          ],
                          "interpolationType": "linear",
                          "scaleType": "linear",
                          "helpPath": "/help/strain.html",
                          "displayNames": {
                            "en": "Strain",
                            "fr": "Souche"
                          },
                          "name": "Strain",
                          "guid": "00000005-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "type": "numeric",
                          "isRestricted": false,
                          "values": [
                            {
                              "value": -1.0,
                              "type": "numeric",
                              "isDefault": true,
                              "guid": "4c35e5cd-0641-45d1-96d3-bc42076b3a94"
                            },
                            {
                              "value": 0.0,
                              "type": "numeric",
                              "isDefault": false,
                              "guid": "00000022-000b-4fff-8fff-0022ffff0000"
                            }
                          ],
                          "interpolationType": "linear",
                          "scaleType": "linear",
                          "helpPath": "/help/strain-ratio.html",
                          "displayNames": {
                            "en": "Strain Ratio",
                            "fr": "Rapport de contrainte"
                          },
                          "name": "Strain Ratio",
                          "guid": "00000022-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "values": [
                            {
                              "type": "discrete",
                              "isDefault": true,
                              "name": "Mean",
                              "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                            },
                            {
                              "type": "discrete",
                              "isDefault": false,
                              "name": "A-basis",
                              "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                            },
                            {
                              "type": "discrete",
                              "isDefault": false,
                              "name": "B-basis",
                              "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                            }
                          ],
                          "type": "discrete",
                          "helpPath": "/help/basis.html",
                          "displayNames": {
                            "en": "Basis",
                            "fr": "Base"
                          },
                          "name": "Basis",
                          "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Create a new parameter.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Parameter",
                  "description": "This example demonstrates how to create a new discrete parameter for the MI_Training database.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "Red"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "name": "Colour"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Parameter with Guids",
                  "description": "This example demonstrates how to create a new discrete parameter with a specified guid value for the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. Guids can be explicitly set for the individual parameter values, if needed.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "Red",
                        "guid": "4c03b831-e404-4611-8d0f-aa7166a04f10"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "name": "Colour (guid)",
                    "guid": "69552364-f955-4f64-b184-9ced6bd175c1"
                  }
                },
                "Example 3": {
                  "summary": "Numeric Restricted Parameter",
                  "description": "This example demonstrates how to create a new numeric restricted parameter for the MI_Training database. Note that the IsRestricted flag is set to true.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "values": [
                      {
                        "value": 2010.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Twenty Ten"
                      },
                      {
                        "value": 2015.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 2020.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Twenty Twenty"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "name": "Year"
                  }
                },
                "Example 4": {
                  "summary": "Numeric Restricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric restricted parameter which also has the 'centimetre' unit from the MI_Training database. Note that the IsRestricted flag is set to true. Only the unit guid is required to reference a unit.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "unit": {
                      "guid": "00000099-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Small box"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Big box"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "name": "Box dimension"
                  }
                },
                "Example 5": {
                  "summary": "Numeric Unrestricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric unrestricted parameter which also has the 'Temperature (Kelvin/Celsius)' unit from the MI_Training database. The IsRestricted flag can either be explicitly set to false or omitted. Pre-defined parameter values can still be specified, but the parameter will not be restricted to them.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": false,
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Cold"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Hot"
                      }
                    ],
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "/help/outside-temperature.html",
                    "name": "Outside Temperature"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Parameter",
                  "description": "This example demonstrates how to create a new discrete parameter for the MI_Training database.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "Red"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "name": "Colour"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Parameter with Guids",
                  "description": "This example demonstrates how to create a new discrete parameter with a specified guid value for the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. Guids can be explicitly set for the individual parameter values, if needed.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "Red",
                        "guid": "4c03b831-e404-4611-8d0f-aa7166a04f10"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "name": "Colour (guid)",
                    "guid": "69552364-f955-4f64-b184-9ced6bd175c1"
                  }
                },
                "Example 3": {
                  "summary": "Numeric Restricted Parameter",
                  "description": "This example demonstrates how to create a new numeric restricted parameter for the MI_Training database. Note that the IsRestricted flag is set to true.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "values": [
                      {
                        "value": 2010.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Twenty Ten"
                      },
                      {
                        "value": 2015.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 2020.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Twenty Twenty"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "name": "Year"
                  }
                },
                "Example 4": {
                  "summary": "Numeric Restricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric restricted parameter which also has the 'centimetre' unit from the MI_Training database. Note that the IsRestricted flag is set to true. Only the unit guid is required to reference a unit.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "unit": {
                      "guid": "00000099-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Small box"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Big box"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "name": "Box dimension"
                  }
                },
                "Example 5": {
                  "summary": "Numeric Unrestricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric unrestricted parameter which also has the 'Temperature (Kelvin/Celsius)' unit from the MI_Training database. The IsRestricted flag can either be explicitly set to false or omitted. Pre-defined parameter values can still be specified, but the parameter will not be restricted to them.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": false,
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Cold"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Hot"
                      }
                    ],
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "/help/outside-temperature.html",
                    "name": "Outside Temperature"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Parameter",
                  "description": "This example demonstrates how to create a new discrete parameter for the MI_Training database.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "Red"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "name": "Colour"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Parameter with Guids",
                  "description": "This example demonstrates how to create a new discrete parameter with a specified guid value for the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. Guids can be explicitly set for the individual parameter values, if needed.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "Red",
                        "guid": "4c03b831-e404-4611-8d0f-aa7166a04f10"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "name": "Colour (guid)",
                    "guid": "69552364-f955-4f64-b184-9ced6bd175c1"
                  }
                },
                "Example 3": {
                  "summary": "Numeric Restricted Parameter",
                  "description": "This example demonstrates how to create a new numeric restricted parameter for the MI_Training database. Note that the IsRestricted flag is set to true.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "values": [
                      {
                        "value": 2010.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Twenty Ten"
                      },
                      {
                        "value": 2015.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 2020.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Twenty Twenty"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "name": "Year"
                  }
                },
                "Example 4": {
                  "summary": "Numeric Restricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric restricted parameter which also has the 'centimetre' unit from the MI_Training database. Note that the IsRestricted flag is set to true. Only the unit guid is required to reference a unit.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "unit": {
                      "guid": "00000099-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Small box"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Big box"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "name": "Box dimension"
                  }
                },
                "Example 5": {
                  "summary": "Numeric Unrestricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric unrestricted parameter which also has the 'Temperature (Kelvin/Celsius)' unit from the MI_Training database. The IsRestricted flag can either be explicitly set to false or omitted. Pre-defined parameter values can still be specified, but the parameter will not be restricted to them.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": false,
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Cold"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Hot"
                      }
                    ],
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "/help/outside-temperature.html",
                    "name": "Outside Temperature"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Parameter",
                  "description": "This example demonstrates how to create a new discrete parameter for the MI_Training database.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "Red"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "name": "Colour"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Parameter with Guids",
                  "description": "This example demonstrates how to create a new discrete parameter with a specified guid value for the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. Guids can be explicitly set for the individual parameter values, if needed.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "Red",
                        "guid": "4c03b831-e404-4611-8d0f-aa7166a04f10"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "name": "Colour (guid)",
                    "guid": "69552364-f955-4f64-b184-9ced6bd175c1"
                  }
                },
                "Example 3": {
                  "summary": "Numeric Restricted Parameter",
                  "description": "This example demonstrates how to create a new numeric restricted parameter for the MI_Training database. Note that the IsRestricted flag is set to true.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "values": [
                      {
                        "value": 2010.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Twenty Ten"
                      },
                      {
                        "value": 2015.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 2020.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Twenty Twenty"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "name": "Year"
                  }
                },
                "Example 4": {
                  "summary": "Numeric Restricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric restricted parameter which also has the 'centimetre' unit from the MI_Training database. Note that the IsRestricted flag is set to true. Only the unit guid is required to reference a unit.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "unit": {
                      "guid": "00000099-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Small box"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Big box"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "name": "Box dimension"
                  }
                },
                "Example 5": {
                  "summary": "Numeric Unrestricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric unrestricted parameter which also has the 'Temperature (Kelvin/Celsius)' unit from the MI_Training database. The IsRestricted flag can either be explicitly set to false or omitted. Pre-defined parameter values can still be specified, but the parameter will not be restricted to them.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": false,
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Cold"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric",
                        "isDefault": false
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Hot"
                      }
                    ],
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "/help/outside-temperature.html",
                    "name": "Outside Temperature"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
                },
                "example": {
                  "type": "numeric",
                  "isRestricted": false,
                  "unit": {
                    "symbol": "% strain",
                    "guid": "0000019b-0013-4fff-8fff-0000ffff0000"
                  },
                  "values": [
                    {
                      "value": 0.1,
                      "type": "numeric",
                      "isDefault": false,
                      "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                    },
                    {
                      "value": 1.0,
                      "type": "numeric",
                      "isDefault": true,
                      "guid": "00000005-000b-4fff-8fff-0005ffff0000"
                    }
                  ],
                  "interpolationType": "linear",
                  "scaleType": "linear",
                  "helpPath": "/help/Strain.html",
                  "displayNames": {
                    "en": "Strain",
                    "fr": "Souche"
                  },
                  "name": "Strain",
                  "guid": "00000005-000a-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters/{parameter-guid}": {
      "get": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Get a parameter with a specified guid for a given database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
                },
                "example": {
                  "type": "numeric",
                  "isRestricted": false,
                  "unit": {
                    "symbol": "% strain",
                    "guid": "0000019b-0013-4fff-8fff-0000ffff0000"
                  },
                  "values": [
                    {
                      "value": 0.1,
                      "type": "numeric",
                      "isDefault": false,
                      "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                    },
                    {
                      "value": 1.0,
                      "type": "numeric",
                      "isDefault": true,
                      "guid": "00000005-000b-4fff-8fff-0005ffff0000"
                    }
                  ],
                  "interpolationType": "linear",
                  "scaleType": "linear",
                  "helpPath": "/help/Strain.html",
                  "displayNames": {
                    "en": "Strain",
                    "fr": "Souche"
                  },
                  "name": "Strain",
                  "guid": "00000005-000a-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Update a parameter.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersUpdateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a numeric parameter",
                  "description": "This example shows how to update all properties of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Its Unit will be changed to kg.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "help/strain-updated.html",
                    "name": "Strain (Updated)",
                    "guid": "a0f4ed7b-e06c-4589-bd43-d38b32784b9f"
                  }
                },
                "Example 2": {
                  "summary": "Everything for a discrete parameter",
                  "description": "This example shows how to update all properties of the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "helpPath": "help/basis-updated.html",
                    "name": "Basis (Updated)",
                    "guid": "ef50a552-f4a3-409d-9a03-f085c4617814"
                  }
                },
                "Example 3": {
                  "summary": "Update Guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Strain' parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Guid can be updated for both kinds of parameters.",
                  "value": {
                    "type": "numeric",
                    "guid": "16a53536-ad53-45a0-b4fb-8fc78e3edeed"
                  }
                },
                "Example 4": {
                  "summary": "Update Name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Strain' parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Name can be updated for both kinds of parameters.",
                  "value": {
                    "type": "discrete",
                    "name": "Strain (Updated)"
                  }
                },
                "Example 5": {
                  "summary": "Update Guid and Unit",
                  "description": "This example demonstrates how to update the 'Guid' and 'Unit' properties of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Its Unit will be changed to kg. Only numeric parameters have units.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "guid": "13f74b6f-c4a4-4a0e-92f7-5606d299bc4b"
                  }
                },
                "Example 6": {
                  "summary": "Remove Unit",
                  "description": "This example demonstrates how to remove the 'Unit' property of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database by setting it to null.",
                  "value": {
                    "type": "numeric",
                    "unit": null
                  }
                },
                "Example 7": {
                  "summary": "Change interpolation and scale type",
                  "description": "This example demonstrates how to update the interpolation type and scale type of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. The parameter must be a numeric parameter.",
                  "value": {
                    "type": "numeric",
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersUpdateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a numeric parameter",
                  "description": "This example shows how to update all properties of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Its Unit will be changed to kg.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "help/strain-updated.html",
                    "name": "Strain (Updated)",
                    "guid": "a0f4ed7b-e06c-4589-bd43-d38b32784b9f"
                  }
                },
                "Example 2": {
                  "summary": "Everything for a discrete parameter",
                  "description": "This example shows how to update all properties of the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "helpPath": "help/basis-updated.html",
                    "name": "Basis (Updated)",
                    "guid": "ef50a552-f4a3-409d-9a03-f085c4617814"
                  }
                },
                "Example 3": {
                  "summary": "Update Guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Strain' parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Guid can be updated for both kinds of parameters.",
                  "value": {
                    "type": "numeric",
                    "guid": "16a53536-ad53-45a0-b4fb-8fc78e3edeed"
                  }
                },
                "Example 4": {
                  "summary": "Update Name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Strain' parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Name can be updated for both kinds of parameters.",
                  "value": {
                    "type": "discrete",
                    "name": "Strain (Updated)"
                  }
                },
                "Example 5": {
                  "summary": "Update Guid and Unit",
                  "description": "This example demonstrates how to update the 'Guid' and 'Unit' properties of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Its Unit will be changed to kg. Only numeric parameters have units.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "guid": "13f74b6f-c4a4-4a0e-92f7-5606d299bc4b"
                  }
                },
                "Example 6": {
                  "summary": "Remove Unit",
                  "description": "This example demonstrates how to remove the 'Unit' property of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database by setting it to null.",
                  "value": {
                    "type": "numeric",
                    "unit": null
                  }
                },
                "Example 7": {
                  "summary": "Change interpolation and scale type",
                  "description": "This example demonstrates how to update the interpolation type and scale type of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. The parameter must be a numeric parameter.",
                  "value": {
                    "type": "numeric",
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersUpdateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a numeric parameter",
                  "description": "This example shows how to update all properties of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Its Unit will be changed to kg.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "help/strain-updated.html",
                    "name": "Strain (Updated)",
                    "guid": "a0f4ed7b-e06c-4589-bd43-d38b32784b9f"
                  }
                },
                "Example 2": {
                  "summary": "Everything for a discrete parameter",
                  "description": "This example shows how to update all properties of the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "helpPath": "help/basis-updated.html",
                    "name": "Basis (Updated)",
                    "guid": "ef50a552-f4a3-409d-9a03-f085c4617814"
                  }
                },
                "Example 3": {
                  "summary": "Update Guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Strain' parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Guid can be updated for both kinds of parameters.",
                  "value": {
                    "type": "numeric",
                    "guid": "16a53536-ad53-45a0-b4fb-8fc78e3edeed"
                  }
                },
                "Example 4": {
                  "summary": "Update Name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Strain' parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Name can be updated for both kinds of parameters.",
                  "value": {
                    "type": "discrete",
                    "name": "Strain (Updated)"
                  }
                },
                "Example 5": {
                  "summary": "Update Guid and Unit",
                  "description": "This example demonstrates how to update the 'Guid' and 'Unit' properties of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Its Unit will be changed to kg. Only numeric parameters have units.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "guid": "13f74b6f-c4a4-4a0e-92f7-5606d299bc4b"
                  }
                },
                "Example 6": {
                  "summary": "Remove Unit",
                  "description": "This example demonstrates how to remove the 'Unit' property of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database by setting it to null.",
                  "value": {
                    "type": "numeric",
                    "unit": null
                  }
                },
                "Example 7": {
                  "summary": "Change interpolation and scale type",
                  "description": "This example demonstrates how to update the interpolation type and scale type of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. The parameter must be a numeric parameter.",
                  "value": {
                    "type": "numeric",
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersUpdateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a numeric parameter",
                  "description": "This example shows how to update all properties of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Its Unit will be changed to kg.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "help/strain-updated.html",
                    "name": "Strain (Updated)",
                    "guid": "a0f4ed7b-e06c-4589-bd43-d38b32784b9f"
                  }
                },
                "Example 2": {
                  "summary": "Everything for a discrete parameter",
                  "description": "This example shows how to update all properties of the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "helpPath": "help/basis-updated.html",
                    "name": "Basis (Updated)",
                    "guid": "ef50a552-f4a3-409d-9a03-f085c4617814"
                  }
                },
                "Example 3": {
                  "summary": "Update Guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Strain' parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Guid can be updated for both kinds of parameters.",
                  "value": {
                    "type": "numeric",
                    "guid": "16a53536-ad53-45a0-b4fb-8fc78e3edeed"
                  }
                },
                "Example 4": {
                  "summary": "Update Name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Strain' parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Name can be updated for both kinds of parameters.",
                  "value": {
                    "type": "discrete",
                    "name": "Strain (Updated)"
                  }
                },
                "Example 5": {
                  "summary": "Update Guid and Unit",
                  "description": "This example demonstrates how to update the 'Guid' and 'Unit' properties of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Its Unit will be changed to kg. Only numeric parameters have units.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "guid": "13f74b6f-c4a4-4a0e-92f7-5606d299bc4b"
                  }
                },
                "Example 6": {
                  "summary": "Remove Unit",
                  "description": "This example demonstrates how to remove the 'Unit' property of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database by setting it to null.",
                  "value": {
                    "type": "numeric",
                    "unit": null
                  }
                },
                "Example 7": {
                  "summary": "Change interpolation and scale type",
                  "description": "This example demonstrates how to update the interpolation type and scale type of the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. The parameter must be a numeric parameter.",
                  "value": {
                    "type": "numeric",
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
                },
                "example": {
                  "type": "numeric",
                  "isRestricted": false,
                  "unit": {
                    "symbol": "% strain",
                    "guid": "0000019b-0013-4fff-8fff-0000ffff0000"
                  },
                  "values": [
                    {
                      "value": 0.1,
                      "type": "numeric",
                      "isDefault": false,
                      "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                    },
                    {
                      "value": 1.0,
                      "type": "numeric",
                      "isDefault": true,
                      "guid": "00000005-000b-4fff-8fff-0005ffff0000"
                    }
                  ],
                  "interpolationType": "linear",
                  "scaleType": "linear",
                  "helpPath": "/help/Strain.html",
                  "displayNames": {
                    "en": "Strain",
                    "fr": "Souche"
                  },
                  "name": "Strain",
                  "guid": "00000005-000a-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Delete a parameter.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Parameter in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiExceptionsParameterDeletionException"
                },
                "example": {
                  "message": "Cannot delete parameter 'Strain' (GUID = '00000005-000a-4fff-8fff-0000ffff0000').",
                  "code": 400,
                  "errors": [
                    {
                      "message": "It is being used in one or more attributes.",
                      "reason": "InUse",
                      "referencedByType": "Attribute",
                      "referencedBy": [
                        {
                          "name": "Stress",
                          "guid": "af033295-75d5-4f92-96cf-280c0142bf1e"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters/{parameter-guid}:usages": {
      "get": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Get attributes which currently use the given parameter.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimObjects"
                }
              }
            }
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters/{parameter-guid}/parameter-values": {
      "post": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Create a new parameter value.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter value",
                  "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Setting the IsDefault flag to true means that the default value of the parameter will be changed to the newly created value.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "isDefault": true,
                    "name": "Cold"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter value",
                  "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "isDefault": false,
                    "name": "Heavy water"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter value",
                  "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Setting the IsDefault flag to true means that the default value of the parameter will be changed to the newly created value.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "isDefault": true,
                    "name": "Cold"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter value",
                  "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "isDefault": false,
                    "name": "Heavy water"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter value",
                  "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Setting the IsDefault flag to true means that the default value of the parameter will be changed to the newly created value.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "isDefault": true,
                    "name": "Cold"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter value",
                  "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "isDefault": false,
                    "name": "Heavy water"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter value",
                  "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Setting the IsDefault flag to true means that the default value of the parameter will be changed to the newly created value.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "isDefault": true,
                    "name": "Cold"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter value",
                  "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "isDefault": false,
                    "name": "Heavy water"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Numeric parameter value",
                    "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Setting the IsDefault flag to true means that the default value of the parameter will be changed to the newly created value.",
                    "value": {
                      "value": 10.0,
                      "type": "numeric",
                      "isDefault": true,
                      "name": "Cold"
                    }
                  },
                  "Example 2": {
                    "summary": "Discrete parameter value",
                    "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                    "value": {
                      "type": "discrete",
                      "isDefault": false,
                      "name": "Heavy water"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request. Parameter in use."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      },
      "put": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Replace the whole parameter value collection for a given parameter.\r\nThis will result in adding, modifying and deleting parameter values. If any of those operations fail, the whole operation fails.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValuesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Replace numeric parameter values",
                  "description": "This example demonstrates how to replace the parameter values for the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                  "value": {
                    "parameterValues": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Strain Value (Updated)",
                        "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                      },
                      {
                        "value": 5.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Strain Value (Added)"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Replace discrete parameter values",
                  "description": "This example demonstrates how to replace the parameter values for the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                  "value": {
                    "parameterValues": [
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Mean (Updated)",
                        "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                      },
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "A-basis (Updated)",
                        "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Basis Value (Added)"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValuesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Replace numeric parameter values",
                  "description": "This example demonstrates how to replace the parameter values for the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                  "value": {
                    "parameterValues": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Strain Value (Updated)",
                        "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                      },
                      {
                        "value": 5.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Strain Value (Added)"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Replace discrete parameter values",
                  "description": "This example demonstrates how to replace the parameter values for the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                  "value": {
                    "parameterValues": [
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Mean (Updated)",
                        "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                      },
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "A-basis (Updated)",
                        "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Basis Value (Added)"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValuesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Replace numeric parameter values",
                  "description": "This example demonstrates how to replace the parameter values for the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                  "value": {
                    "parameterValues": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Strain Value (Updated)",
                        "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                      },
                      {
                        "value": 5.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Strain Value (Added)"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Replace discrete parameter values",
                  "description": "This example demonstrates how to replace the parameter values for the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                  "value": {
                    "parameterValues": [
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Mean (Updated)",
                        "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                      },
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "A-basis (Updated)",
                        "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Basis Value (Added)"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValuesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Replace numeric parameter values",
                  "description": "This example demonstrates how to replace the parameter values for the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                  "value": {
                    "parameterValues": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "isDefault": true,
                        "name": "Strain Value (Updated)",
                        "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                      },
                      {
                        "value": 5.0,
                        "type": "numeric",
                        "isDefault": false,
                        "name": "Strain Value (Added)"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Replace discrete parameter values",
                  "description": "This example demonstrates how to replace the parameter values for the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                  "value": {
                    "parameterValues": [
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Mean (Updated)",
                        "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                      },
                      {
                        "type": "discrete",
                        "isDefault": true,
                        "name": "A-basis (Updated)",
                        "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                      },
                      {
                        "type": "discrete",
                        "isDefault": false,
                        "name": "Basis Value (Added)"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValuesInfo"
                },
                "examples": {
                  "Example 3": {
                    "summary": "Replace numeric parameter values",
                    "description": "This example demonstrates how to replace the parameter values for the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                    "value": {
                      "parameterValues": [
                        {
                          "value": 10.0,
                          "type": "numeric",
                          "isDefault": true,
                          "name": "Strain Value (Updated)",
                          "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                        },
                        {
                          "value": 5.0,
                          "type": "numeric",
                          "isDefault": false,
                          "name": "Strain Value (Added)"
                        }
                      ]
                    }
                  },
                  "Example 4": {
                    "summary": "Replace discrete parameter values",
                    "description": "This example demonstrates how to replace the parameter values for the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database. Guids will be used to match against existing values. If no guid is specified, it will be assumed it is a new parameter value.",
                    "value": {
                      "parameterValues": [
                        {
                          "type": "discrete",
                          "isDefault": false,
                          "name": "Mean (Updated)",
                          "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                        },
                        {
                          "type": "discrete",
                          "isDefault": true,
                          "name": "A-basis (Updated)",
                          "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                        },
                        {
                          "type": "discrete",
                          "isDefault": false,
                          "name": "Basis Value (Added)"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters/{parameter-guid}/parameter-values/{parameter-value-guid}": {
      "patch": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Update a parameter value.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parameter-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update numeric parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "isDefault": false,
                    "name": "Strain 0.1 (Updated)",
                    "guid": "401bfb78-e78d-43b9-a96b-cc1f79281fd9"
                  }
                },
                "Example 2": {
                  "summary": "Update discrete parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Mean' discrete parameter value (guid = 21a27377-12eb-413c-bac4-d4ffceda39d1) from the 'Basis' numeric parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "isDefault": false,
                    "name": "Mean (Updated)",
                    "guid": "3b47a060-f03b-433a-a85d-f198ffb4829c"
                  }
                },
                "Example 3": {
                  "summary": "Make default discrete",
                  "description": "This example demonstrates how to make the 'A-basis' discrete parameter value (guid = 505b5d32-0a4a-48af-9a7a-90c4caacd35c) from the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database default using a PATCH request.",
                  "value": {
                    "type": "discrete",
                    "isDefault": true
                  }
                },
                "Example 4": {
                  "summary": "Change guid of numeric",
                  "description": "This example demonstrates how to update guid of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database using a PATCH request.",
                  "value": {
                    "type": "numeric",
                    "guid": "d265650c-7f60-4068-bbd9-c746a021e5fd"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update numeric parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "isDefault": false,
                    "name": "Strain 0.1 (Updated)",
                    "guid": "401bfb78-e78d-43b9-a96b-cc1f79281fd9"
                  }
                },
                "Example 2": {
                  "summary": "Update discrete parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Mean' discrete parameter value (guid = 21a27377-12eb-413c-bac4-d4ffceda39d1) from the 'Basis' numeric parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "isDefault": false,
                    "name": "Mean (Updated)",
                    "guid": "3b47a060-f03b-433a-a85d-f198ffb4829c"
                  }
                },
                "Example 3": {
                  "summary": "Make default discrete",
                  "description": "This example demonstrates how to make the 'A-basis' discrete parameter value (guid = 505b5d32-0a4a-48af-9a7a-90c4caacd35c) from the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database default using a PATCH request.",
                  "value": {
                    "type": "discrete",
                    "isDefault": true
                  }
                },
                "Example 4": {
                  "summary": "Change guid of numeric",
                  "description": "This example demonstrates how to update guid of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database using a PATCH request.",
                  "value": {
                    "type": "numeric",
                    "guid": "d265650c-7f60-4068-bbd9-c746a021e5fd"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update numeric parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "isDefault": false,
                    "name": "Strain 0.1 (Updated)",
                    "guid": "401bfb78-e78d-43b9-a96b-cc1f79281fd9"
                  }
                },
                "Example 2": {
                  "summary": "Update discrete parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Mean' discrete parameter value (guid = 21a27377-12eb-413c-bac4-d4ffceda39d1) from the 'Basis' numeric parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "isDefault": false,
                    "name": "Mean (Updated)",
                    "guid": "3b47a060-f03b-433a-a85d-f198ffb4829c"
                  }
                },
                "Example 3": {
                  "summary": "Make default discrete",
                  "description": "This example demonstrates how to make the 'A-basis' discrete parameter value (guid = 505b5d32-0a4a-48af-9a7a-90c4caacd35c) from the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database default using a PATCH request.",
                  "value": {
                    "type": "discrete",
                    "isDefault": true
                  }
                },
                "Example 4": {
                  "summary": "Change guid of numeric",
                  "description": "This example demonstrates how to update guid of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database using a PATCH request.",
                  "value": {
                    "type": "numeric",
                    "guid": "d265650c-7f60-4068-bbd9-c746a021e5fd"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update numeric parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "isDefault": false,
                    "name": "Strain 0.1 (Updated)",
                    "guid": "401bfb78-e78d-43b9-a96b-cc1f79281fd9"
                  }
                },
                "Example 2": {
                  "summary": "Update discrete parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Mean' discrete parameter value (guid = 21a27377-12eb-413c-bac4-d4ffceda39d1) from the 'Basis' numeric parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "isDefault": false,
                    "name": "Mean (Updated)",
                    "guid": "3b47a060-f03b-433a-a85d-f198ffb4829c"
                  }
                },
                "Example 3": {
                  "summary": "Make default discrete",
                  "description": "This example demonstrates how to make the 'A-basis' discrete parameter value (guid = 505b5d32-0a4a-48af-9a7a-90c4caacd35c) from the 'Basis' discrete parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database default using a PATCH request.",
                  "value": {
                    "type": "discrete",
                    "isDefault": true
                  }
                },
                "Example 4": {
                  "summary": "Change guid of numeric",
                  "description": "This example demonstrates how to update guid of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database using a PATCH request.",
                  "value": {
                    "type": "numeric",
                    "guid": "d265650c-7f60-4068-bbd9-c746a021e5fd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
                },
                "examples": {
                  "Example 3": {
                    "summary": "Numeric parameter value",
                    "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database. Setting the IsDefault flag to true means that the default value of the parameter will be changed to the newly created value.",
                    "value": {
                      "value": 10.0,
                      "type": "numeric",
                      "isDefault": true,
                      "name": "Cold"
                    }
                  },
                  "Example 4": {
                    "summary": "Discrete parameter value",
                    "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                    "value": {
                      "type": "discrete",
                      "isDefault": false,
                      "name": "Heavy water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Parameter in use."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database, parameter or parameter value not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Delete a parameter value.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parameter-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Parameter in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiExceptionsParameterValueDeletionException"
                },
                "example": {
                  "message": "Cannot delete parameter value 'Mean' (GUID = '21a27377-12eb-413c-bac4-d4ffceda39d1').",
                  "code": 400,
                  "errors": [
                    {
                      "message": "It is being used in one or more parameters as a default value.",
                      "reason": "InUse",
                      "referencedByType": "DefaultParameterValue",
                      "referencedBy": [
                        {
                          "name": "Basis",
                          "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database, parameter or parameter value not found"
          }
        }
      }
    },
    "/v1alpha/profiles": {
      "get": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Get AllProfilesInfo",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAllProfilesInfo"
                },
                "example": {
                  "profiles": [
                    {
                      "key": "MI_Training",
                      "isImplicit": true,
                      "name": "MI Training"
                    },
                    {
                      "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                      "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Metals"
                    },
                    {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a",
                      "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Composites"
                    },
                    {
                      "key": "MITrainingAdditiveManufacturing-31ae18d9-eaf7-43ab-9b88-716c34e61658",
                      "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Additive Manufacturing"
                    }
                  ],
                  "defaultProfile": {
                    "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                    "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                    "groupName": "MI:Training Profiles",
                    "isImplicit": false,
                    "name": "MI:Training Metals"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Update AllProfilesInfo",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAllProfilesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update default profile",
                  "description": "This example demonstrates how to update default profile. Default Profile might be set to one of the profiles visible to user or to null.",
                  "value": {
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Remove default profile",
                  "description": "This example demonstrates how to remove default profile by setting it to null",
                  "value": {
                    "defaultProfile": null
                  }
                },
                "Example 3": {
                  "summary": "Update profiles order",
                  "description": "This example demonstrates how to reorder profiles. Profiles will be reordered in the order provided. Their values can not be changed. Full list of explicit profiles must be provided.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Everything for AllProfilesInfo",
                  "description": "This example shows all properties that can be updated for AllProfilesInfo.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ],
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAllProfilesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update default profile",
                  "description": "This example demonstrates how to update default profile. Default Profile might be set to one of the profiles visible to user or to null.",
                  "value": {
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Remove default profile",
                  "description": "This example demonstrates how to remove default profile by setting it to null",
                  "value": {
                    "defaultProfile": null
                  }
                },
                "Example 3": {
                  "summary": "Update profiles order",
                  "description": "This example demonstrates how to reorder profiles. Profiles will be reordered in the order provided. Their values can not be changed. Full list of explicit profiles must be provided.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Everything for AllProfilesInfo",
                  "description": "This example shows all properties that can be updated for AllProfilesInfo.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ],
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAllProfilesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update default profile",
                  "description": "This example demonstrates how to update default profile. Default Profile might be set to one of the profiles visible to user or to null.",
                  "value": {
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Remove default profile",
                  "description": "This example demonstrates how to remove default profile by setting it to null",
                  "value": {
                    "defaultProfile": null
                  }
                },
                "Example 3": {
                  "summary": "Update profiles order",
                  "description": "This example demonstrates how to reorder profiles. Profiles will be reordered in the order provided. Their values can not be changed. Full list of explicit profiles must be provided.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Everything for AllProfilesInfo",
                  "description": "This example shows all properties that can be updated for AllProfilesInfo.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ],
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAllProfilesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update default profile",
                  "description": "This example demonstrates how to update default profile. Default Profile might be set to one of the profiles visible to user or to null.",
                  "value": {
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Remove default profile",
                  "description": "This example demonstrates how to remove default profile by setting it to null",
                  "value": {
                    "defaultProfile": null
                  }
                },
                "Example 3": {
                  "summary": "Update profiles order",
                  "description": "This example demonstrates how to reorder profiles. Profiles will be reordered in the order provided. Their values can not be changed. Full list of explicit profiles must be provided.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Everything for AllProfilesInfo",
                  "description": "This example shows all properties that can be updated for AllProfilesInfo.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ],
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAllProfilesInfo"
                },
                "example": {
                  "profiles": [
                    {
                      "key": "MI_Training",
                      "isImplicit": true,
                      "name": "MI Training"
                    },
                    {
                      "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                      "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Metals"
                    },
                    {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a",
                      "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Composites"
                    },
                    {
                      "key": "MITrainingAdditiveManufacturing-31ae18d9-eaf7-43ab-9b88-716c34e61658",
                      "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Additive Manufacturing"
                    }
                  ],
                  "defaultProfile": {
                    "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                    "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                    "groupName": "MI:Training Profiles",
                    "isImplicit": false,
                    "name": "MI:Training Metals"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Create a new profile",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile",
                  "description": "This example demonstrates how to create a new profile",
                  "value": {
                    "name": "MI:Training Processes"
                  }
                },
                "Example 2": {
                  "summary": "Profile with specified guid",
                  "description": "This example demonstrates how to create a new profile with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "guid": "dbba42e5-8f73-4a7d-8207-25a530afb453",
                    "name": "MI:Training Processes"
                  }
                },
                "Example 3": {
                  "summary": "Full profile",
                  "description": "This example demonstrates how to create a new profile with all of its fields filled out.",
                  "value": {
                    "description": "#markdown\r\nFor process-oriented users.",
                    "homepageUrl": "TrainingProfiles/TrainingProcesses",
                    "guid": "0489fcd2-b9d3-4766-8f3a-ec3153783578",
                    "groupName": "MI:Training Profiles",
                    "name": "MI:Training Processes"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile",
                  "description": "This example demonstrates how to create a new profile",
                  "value": {
                    "name": "MI:Training Processes"
                  }
                },
                "Example 2": {
                  "summary": "Profile with specified guid",
                  "description": "This example demonstrates how to create a new profile with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "guid": "dbba42e5-8f73-4a7d-8207-25a530afb453",
                    "name": "MI:Training Processes"
                  }
                },
                "Example 3": {
                  "summary": "Full profile",
                  "description": "This example demonstrates how to create a new profile with all of its fields filled out.",
                  "value": {
                    "description": "#markdown\r\nFor process-oriented users.",
                    "homepageUrl": "TrainingProfiles/TrainingProcesses",
                    "guid": "0489fcd2-b9d3-4766-8f3a-ec3153783578",
                    "groupName": "MI:Training Profiles",
                    "name": "MI:Training Processes"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile",
                  "description": "This example demonstrates how to create a new profile",
                  "value": {
                    "name": "MI:Training Processes"
                  }
                },
                "Example 2": {
                  "summary": "Profile with specified guid",
                  "description": "This example demonstrates how to create a new profile with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "guid": "dbba42e5-8f73-4a7d-8207-25a530afb453",
                    "name": "MI:Training Processes"
                  }
                },
                "Example 3": {
                  "summary": "Full profile",
                  "description": "This example demonstrates how to create a new profile with all of its fields filled out.",
                  "value": {
                    "description": "#markdown\r\nFor process-oriented users.",
                    "homepageUrl": "TrainingProfiles/TrainingProcesses",
                    "guid": "0489fcd2-b9d3-4766-8f3a-ec3153783578",
                    "groupName": "MI:Training Profiles",
                    "name": "MI:Training Processes"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile",
                  "description": "This example demonstrates how to create a new profile",
                  "value": {
                    "name": "MI:Training Processes"
                  }
                },
                "Example 2": {
                  "summary": "Profile with specified guid",
                  "description": "This example demonstrates how to create a new profile with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "guid": "dbba42e5-8f73-4a7d-8207-25a530afb453",
                    "name": "MI:Training Processes"
                  }
                },
                "Example 3": {
                  "summary": "Full profile",
                  "description": "This example demonstrates how to create a new profile with all of its fields filled out.",
                  "value": {
                    "description": "#markdown\r\nFor process-oriented users.",
                    "homepageUrl": "TrainingProfiles/TrainingProcesses",
                    "guid": "0489fcd2-b9d3-4766-8f3a-ec3153783578",
                    "groupName": "MI:Training Profiles",
                    "name": "MI:Training Processes"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaProfile"
                },
                "example": {
                  "description": "#markdown\r\nFor metals-oriented users.",
                  "homepageUrl": "TrainingProfiles/MITrainingMetals",
                  "profileTables": [
                    {
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "MaterialUniverse",
                      "guid": "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    },
                    {
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "ProcessUniverse",
                      "guid": "81bb4607-e2a3-4c78-81fc-a18a09979c72"
                    }
                  ],
                  "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "groupName": "MI:Training Profiles",
                  "isImplicit": false,
                  "name": "MI:Training Metals"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v1alpha/profiles/{profile-guid}": {
      "get": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Get individual profile",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaProfile"
                },
                "example": {
                  "description": "#markdown\r\nFor metals-oriented users.",
                  "homepageUrl": "TrainingProfiles/MITrainingMetals",
                  "profileTables": [
                    {
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "MaterialUniverse",
                      "guid": "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    },
                    {
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "ProcessUniverse",
                      "guid": "81bb4607-e2a3-4c78-81fc-a18a09979c72"
                    }
                  ],
                  "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "groupName": "MI:Training Profiles",
                  "isImplicit": false,
                  "name": "MI:Training Metals"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Update a profile",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update a guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "fc1f2515-c097-4876-b3e2-5c748298e99c"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "name": "MI:Training Metals (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Everything for a profile",
                  "description": "This example demonstrates how to update all properties of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f). Profile tables will be reordered in the order provided. Their values can not be changed. Full list of profiles profileTables must be provided.",
                  "value": {
                    "description": "#markdown\r\nFor metals-oriented users. (Updated)",
                    "homepageUrl": "TrainingProfiles/TrainingMetalsUpdated",
                    "profileTableGuids": [
                      "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    ],
                    "guid": "2ca87635-e800-4bee-a582-9b96d3208eb3",
                    "groupName": "MI:Training Profiles (Updated)",
                    "name": "MI:Training Metals"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update a guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "fc1f2515-c097-4876-b3e2-5c748298e99c"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "name": "MI:Training Metals (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Everything for a profile",
                  "description": "This example demonstrates how to update all properties of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f). Profile tables will be reordered in the order provided. Their values can not be changed. Full list of profiles profileTables must be provided.",
                  "value": {
                    "description": "#markdown\r\nFor metals-oriented users. (Updated)",
                    "homepageUrl": "TrainingProfiles/TrainingMetalsUpdated",
                    "profileTableGuids": [
                      "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    ],
                    "guid": "2ca87635-e800-4bee-a582-9b96d3208eb3",
                    "groupName": "MI:Training Profiles (Updated)",
                    "name": "MI:Training Metals"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update a guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "fc1f2515-c097-4876-b3e2-5c748298e99c"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "name": "MI:Training Metals (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Everything for a profile",
                  "description": "This example demonstrates how to update all properties of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f). Profile tables will be reordered in the order provided. Their values can not be changed. Full list of profiles profileTables must be provided.",
                  "value": {
                    "description": "#markdown\r\nFor metals-oriented users. (Updated)",
                    "homepageUrl": "TrainingProfiles/TrainingMetalsUpdated",
                    "profileTableGuids": [
                      "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    ],
                    "guid": "2ca87635-e800-4bee-a582-9b96d3208eb3",
                    "groupName": "MI:Training Profiles (Updated)",
                    "name": "MI:Training Metals"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update a guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "fc1f2515-c097-4876-b3e2-5c748298e99c"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "name": "MI:Training Metals (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Everything for a profile",
                  "description": "This example demonstrates how to update all properties of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f). Profile tables will be reordered in the order provided. Their values can not be changed. Full list of profiles profileTables must be provided.",
                  "value": {
                    "description": "#markdown\r\nFor metals-oriented users. (Updated)",
                    "homepageUrl": "TrainingProfiles/TrainingMetalsUpdated",
                    "profileTableGuids": [
                      "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    ],
                    "guid": "2ca87635-e800-4bee-a582-9b96d3208eb3",
                    "groupName": "MI:Training Profiles (Updated)",
                    "name": "MI:Training Metals"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaProfile"
                },
                "example": {
                  "description": "#markdown\r\nFor metals-oriented users.",
                  "homepageUrl": "TrainingProfiles/MITrainingMetals",
                  "profileTables": [
                    {
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "MaterialUniverse",
                      "guid": "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    },
                    {
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "ProcessUniverse",
                      "guid": "81bb4607-e2a3-4c78-81fc-a18a09979c72"
                    }
                  ],
                  "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "groupName": "MI:Training Profiles",
                  "isImplicit": false,
                  "name": "MI:Training Metals"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Delete a profile",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request. Profile is set as default."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      }
    },
    "/v1alpha/profiles/{profile-guid}/profile-tables": {
      "get": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Get all profile tables of given profile",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaProfileTablesInfo"
                },
                "example": {
                  "profileTables": [
                    {
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "MaterialUniverse",
                      "guid": "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    },
                    {
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "ProcessUniverse",
                      "guid": "81bb4607-e2a3-4c78-81fc-a18a09979c72"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Create a new profile table",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f)",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e"
                  }
                },
                "Example 2": {
                  "summary": "Profile Table with specified guid",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "951ba7a7-c69e-4dc8-8504-8f94dae3f4a1"
                  }
                },
                "Example 3": {
                  "summary": "Full Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with all of its fields filled out.",
                  "value": {
                    "subsetGuid": "c2a6b6d0-540c-4927-b861-840644fc3968",
                    "layoutGuid": "f8379ae4-a8a8-4329-b9b5-cd0b2d285fd0",
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "e1def491-b86a-4431-89fa-cc9da5fb4c00"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f)",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e"
                  }
                },
                "Example 2": {
                  "summary": "Profile Table with specified guid",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "951ba7a7-c69e-4dc8-8504-8f94dae3f4a1"
                  }
                },
                "Example 3": {
                  "summary": "Full Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with all of its fields filled out.",
                  "value": {
                    "subsetGuid": "c2a6b6d0-540c-4927-b861-840644fc3968",
                    "layoutGuid": "f8379ae4-a8a8-4329-b9b5-cd0b2d285fd0",
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "e1def491-b86a-4431-89fa-cc9da5fb4c00"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f)",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e"
                  }
                },
                "Example 2": {
                  "summary": "Profile Table with specified guid",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "951ba7a7-c69e-4dc8-8504-8f94dae3f4a1"
                  }
                },
                "Example 3": {
                  "summary": "Full Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with all of its fields filled out.",
                  "value": {
                    "subsetGuid": "c2a6b6d0-540c-4927-b861-840644fc3968",
                    "layoutGuid": "f8379ae4-a8a8-4329-b9b5-cd0b2d285fd0",
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "e1def491-b86a-4431-89fa-cc9da5fb4c00"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f)",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e"
                  }
                },
                "Example 2": {
                  "summary": "Profile Table with specified guid",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "951ba7a7-c69e-4dc8-8504-8f94dae3f4a1"
                  }
                },
                "Example 3": {
                  "summary": "Full Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with all of its fields filled out.",
                  "value": {
                    "subsetGuid": "c2a6b6d0-540c-4927-b861-840644fc3968",
                    "layoutGuid": "f8379ae4-a8a8-4329-b9b5-cd0b2d285fd0",
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "e1def491-b86a-4431-89fa-cc9da5fb4c00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaProfileTable"
                },
                "example": {
                  "subsetGuid": "c43d5d46-1d6a-4fd3-8cc7-923e8592daec",
                  "subsetFallbackHint": "Metals",
                  "layoutGuid": "2826bb31-9fb5-4ca5-8db2-121ae944221d",
                  "layoutFallbackHint": "Metals",
                  "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                  "databaseFallbackHint": "MI:Training",
                  "tableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                  "tableFallbackHint": "Design Data",
                  "guid": "2aa49cb3-19a4-44e3-a389-278123c96631"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      }
    },
    "/v1alpha/profiles/{profile-guid}/profile-tables/{profile-table-guid}": {
      "get": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Get individual profile table",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "profile-table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaProfileTable"
                },
                "example": {
                  "subsetGuid": "c43d5d46-1d6a-4fd3-8cc7-923e8592daec",
                  "subsetFallbackHint": "Metals",
                  "layoutGuid": "2826bb31-9fb5-4ca5-8db2-121ae944221d",
                  "layoutFallbackHint": "Metals",
                  "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                  "databaseFallbackHint": "MI:Training",
                  "tableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                  "tableFallbackHint": "Design Data",
                  "guid": "2aa49cb3-19a4-44e3-a389-278123c96631"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile or profile table not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Update a profile table",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "profile-table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a profile table",
                  "description": "This example shows how to update all properties of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "layoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "guid": "713f4ccc-f138-4313-98fc-9111003cb234"
                  }
                },
                "Example 2": {
                  "summary": "Remove subset and layout",
                  "description": "This example shows how to remove the 'Subset' and 'Layout' properties from the 'Design Data' profile table (guid = 2aa49cb3-19a4-44e3-a389-278123c96631) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": null,
                    "layoutGuid": null
                  }
                },
                "Example 3": {
                  "summary": "Just guid",
                  "description": "This example shows how to update the 'Guid' property of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "7a5c10f2-8ce5-44b5-aaf1-339d62c7b838"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a profile table",
                  "description": "This example shows how to update all properties of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "layoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "guid": "713f4ccc-f138-4313-98fc-9111003cb234"
                  }
                },
                "Example 2": {
                  "summary": "Remove subset and layout",
                  "description": "This example shows how to remove the 'Subset' and 'Layout' properties from the 'Design Data' profile table (guid = 2aa49cb3-19a4-44e3-a389-278123c96631) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": null,
                    "layoutGuid": null
                  }
                },
                "Example 3": {
                  "summary": "Just guid",
                  "description": "This example shows how to update the 'Guid' property of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "7a5c10f2-8ce5-44b5-aaf1-339d62c7b838"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a profile table",
                  "description": "This example shows how to update all properties of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "layoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "guid": "713f4ccc-f138-4313-98fc-9111003cb234"
                  }
                },
                "Example 2": {
                  "summary": "Remove subset and layout",
                  "description": "This example shows how to remove the 'Subset' and 'Layout' properties from the 'Design Data' profile table (guid = 2aa49cb3-19a4-44e3-a389-278123c96631) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": null,
                    "layoutGuid": null
                  }
                },
                "Example 3": {
                  "summary": "Just guid",
                  "description": "This example shows how to update the 'Guid' property of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "7a5c10f2-8ce5-44b5-aaf1-339d62c7b838"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a profile table",
                  "description": "This example shows how to update all properties of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "layoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "guid": "713f4ccc-f138-4313-98fc-9111003cb234"
                  }
                },
                "Example 2": {
                  "summary": "Remove subset and layout",
                  "description": "This example shows how to remove the 'Subset' and 'Layout' properties from the 'Design Data' profile table (guid = 2aa49cb3-19a4-44e3-a389-278123c96631) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": null,
                    "layoutGuid": null
                  }
                },
                "Example 3": {
                  "summary": "Just guid",
                  "description": "This example shows how to update the 'Guid' property of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "7a5c10f2-8ce5-44b5-aaf1-339d62c7b838"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaProfileTable"
                },
                "example": {
                  "subsetGuid": "c43d5d46-1d6a-4fd3-8cc7-923e8592daec",
                  "subsetFallbackHint": "Metals",
                  "layoutGuid": "2826bb31-9fb5-4ca5-8db2-121ae944221d",
                  "layoutFallbackHint": "Metals",
                  "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                  "databaseFallbackHint": "MI:Training",
                  "tableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                  "tableFallbackHint": "Design Data",
                  "guid": "2aa49cb3-19a4-44e3-a389-278123c96631"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile or profile table not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Delete a profile table",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "profile-table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile or profile table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-link-groups": {
      "get": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Get all record link groups",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupsInfo"
                },
                "example": {
                  "recordLinkGroups": [
                    {
                      "identity": 115,
                      "type": "static",
                      "reverseName": "Training Exercise",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "MaterialUniverse",
                      "guid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                    },
                    {
                      "identity": 3,
                      "type": "dynamic",
                      "reverseName": "Smart Link to Training Record",
                      "reverseDisplayNames": {
                        "en": "en-Smart Link to Training Record",
                        "fr": "fr-Smart Link to Training Record"
                      },
                      "displayNames": {
                        "en": "en-Smart Link to MaterialUniverse",
                        "fr": "fr-Smart Link to MaterialUniverse"
                      },
                      "name": "Smart Link to MaterialUniverse",
                      "guid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                    },
                    {
                      "identity": 1,
                      "type": "crossDatabase",
                      "reverseName": "Second Training Database And Table - MI Training Exercise for Import",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "MI Training Exercise for Import - Second Training Database And Table",
                      "guid": "388d5de6-ee7d-4d47-b403-0d67c6682565"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Create a new record link group.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Static record link group",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself.",
                  "value": {
                    "includeIndirectLinks": false,
                    "type": "static",
                    "linkInfo": {
                      "linkTarget": {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe static self link reversed",
                    "name": "Material Universe static self link"
                  }
                },
                "Example 2": {
                  "summary": "Static record link group with specified guid",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe static link",
                    "name": "Process Universe static link",
                    "guid": "29fb0df3-a31a-4028-8c92-ed2c33a09295"
                  }
                },
                "Example 3": {
                  "summary": "Cross database record link group",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to a table in different databases. Since no database guid is specified this will link to all databases containing this table.",
                  "value": {
                    "includeIndirectLinks": false,
                    "type": "crossDatabase",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "tableGuid": "d5c4cc51-25c6-484d-b8a9-737cad9401b3"
                      }
                    },
                    "reverseName": "Cross database link to Material Universe",
                    "name": "Cross database link from Material Universe"
                  }
                },
                "Example 4": {
                  "summary": "Cross database record link group with specified guid and target database guid",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to a table in different database. Since the database guid is specified it will link to all versions of that specific database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "linkInfo": {
                      "linkTarget": {
                        "databaseGuid": "da3d4d35-1788-46fa-a773-bc1c01a3078b",
                        "tableGuid": "8a8abde3-3ce0-4296-af65-687e65a37e45"
                      }
                    },
                    "reverseName": "Cross database link to MI Training - Material Universe",
                    "name": "Cross database link from MI Training - Material Universe",
                    "guid": "f0634cf5-fb4d-4656-95cb-48b27ddc2ac1"
                  }
                },
                "Example 5": {
                  "summary": "Dynamic record link group",
                  "description": "This example demonstrates how to create a new dynamic record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself. Created link will have 'One to One' referential integrity model and will allow orphans.",
                  "value": {
                    "forbidOrphans": false,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "EN name",
                          "guid": "bd489a13-97ee-4933-a677-7a18513e0997"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "ISO name",
                          "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "linkInfo": {
                      "linkTarget": {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe dynamic self link reversed",
                    "name": "Material Universe dynamic self link"
                  }
                },
                "Example 6": {
                  "summary": "Dynamic record link group with all fields specified",
                  "description": "This example demonstrates how to create a new dynamic record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid, referential integrity model and forbid orphans flag. If the guid is not specified a random new Guid will be generated. If referential integrity model is not specified it defaults to 'One to One' model. If forbid orphans flag is not specified it defaults to allowing them. This link group will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToMany",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "EN name",
                          "guid": "bd489a13-97ee-4933-a677-7a18513e0997"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Other names",
                          "guid": "00000079-0001-4fff-8fff-3248ffff0000"
                        }
                      },
                      {
                        "attributeSource": {
                          "type": "discrete",
                          "displayNames": {},
                          "name": "Hot hardness rating",
                          "guid": "0000007c-0001-4fff-8fff-dd92ffff0000"
                        },
                        "attributeTarget": {
                          "type": "discrete",
                          "displayNames": {},
                          "name": "Air",
                          "guid": "000000cf-0001-4fff-8fff-3248ffff0000"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe dynamic link",
                    "name": "Process Universe dynamic link",
                    "guid": "7b9c5fef-ebf6-425c-98a2-d88e7c9e6e85"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Static record link group",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself.",
                  "value": {
                    "includeIndirectLinks": false,
                    "type": "static",
                    "linkInfo": {
                      "linkTarget": {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe static self link reversed",
                    "name": "Material Universe static self link"
                  }
                },
                "Example 2": {
                  "summary": "Static record link group with specified guid",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe static link",
                    "name": "Process Universe static link",
                    "guid": "29fb0df3-a31a-4028-8c92-ed2c33a09295"
                  }
                },
                "Example 3": {
                  "summary": "Cross database record link group",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to a table in different databases. Since no database guid is specified this will link to all databases containing this table.",
                  "value": {
                    "includeIndirectLinks": false,
                    "type": "crossDatabase",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "tableGuid": "d5c4cc51-25c6-484d-b8a9-737cad9401b3"
                      }
                    },
                    "reverseName": "Cross database link to Material Universe",
                    "name": "Cross database link from Material Universe"
                  }
                },
                "Example 4": {
                  "summary": "Cross database record link group with specified guid and target database guid",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to a table in different database. Since the database guid is specified it will link to all versions of that specific database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "linkInfo": {
                      "linkTarget": {
                        "databaseGuid": "da3d4d35-1788-46fa-a773-bc1c01a3078b",
                        "tableGuid": "8a8abde3-3ce0-4296-af65-687e65a37e45"
                      }
                    },
                    "reverseName": "Cross database link to MI Training - Material Universe",
                    "name": "Cross database link from MI Training - Material Universe",
                    "guid": "f0634cf5-fb4d-4656-95cb-48b27ddc2ac1"
                  }
                },
                "Example 5": {
                  "summary": "Dynamic record link group",
                  "description": "This example demonstrates how to create a new dynamic record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself. Created link will have 'One to One' referential integrity model and will allow orphans.",
                  "value": {
                    "forbidOrphans": false,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "EN name",
                          "guid": "bd489a13-97ee-4933-a677-7a18513e0997"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "ISO name",
                          "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "linkInfo": {
                      "linkTarget": {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe dynamic self link reversed",
                    "name": "Material Universe dynamic self link"
                  }
                },
                "Example 6": {
                  "summary": "Dynamic record link group with all fields specified",
                  "description": "This example demonstrates how to create a new dynamic record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid, referential integrity model and forbid orphans flag. If the guid is not specified a random new Guid will be generated. If referential integrity model is not specified it defaults to 'One to One' model. If forbid orphans flag is not specified it defaults to allowing them. This link group will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToMany",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "EN name",
                          "guid": "bd489a13-97ee-4933-a677-7a18513e0997"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Other names",
                          "guid": "00000079-0001-4fff-8fff-3248ffff0000"
                        }
                      },
                      {
                        "attributeSource": {
                          "type": "discrete",
                          "displayNames": {},
                          "name": "Hot hardness rating",
                          "guid": "0000007c-0001-4fff-8fff-dd92ffff0000"
                        },
                        "attributeTarget": {
                          "type": "discrete",
                          "displayNames": {},
                          "name": "Air",
                          "guid": "000000cf-0001-4fff-8fff-3248ffff0000"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe dynamic link",
                    "name": "Process Universe dynamic link",
                    "guid": "7b9c5fef-ebf6-425c-98a2-d88e7c9e6e85"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Static record link group",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself.",
                  "value": {
                    "includeIndirectLinks": false,
                    "type": "static",
                    "linkInfo": {
                      "linkTarget": {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe static self link reversed",
                    "name": "Material Universe static self link"
                  }
                },
                "Example 2": {
                  "summary": "Static record link group with specified guid",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe static link",
                    "name": "Process Universe static link",
                    "guid": "29fb0df3-a31a-4028-8c92-ed2c33a09295"
                  }
                },
                "Example 3": {
                  "summary": "Cross database record link group",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to a table in different databases. Since no database guid is specified this will link to all databases containing this table.",
                  "value": {
                    "includeIndirectLinks": false,
                    "type": "crossDatabase",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "tableGuid": "d5c4cc51-25c6-484d-b8a9-737cad9401b3"
                      }
                    },
                    "reverseName": "Cross database link to Material Universe",
                    "name": "Cross database link from Material Universe"
                  }
                },
                "Example 4": {
                  "summary": "Cross database record link group with specified guid and target database guid",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to a table in different database. Since the database guid is specified it will link to all versions of that specific database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "linkInfo": {
                      "linkTarget": {
                        "databaseGuid": "da3d4d35-1788-46fa-a773-bc1c01a3078b",
                        "tableGuid": "8a8abde3-3ce0-4296-af65-687e65a37e45"
                      }
                    },
                    "reverseName": "Cross database link to MI Training - Material Universe",
                    "name": "Cross database link from MI Training - Material Universe",
                    "guid": "f0634cf5-fb4d-4656-95cb-48b27ddc2ac1"
                  }
                },
                "Example 5": {
                  "summary": "Dynamic record link group",
                  "description": "This example demonstrates how to create a new dynamic record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself. Created link will have 'One to One' referential integrity model and will allow orphans.",
                  "value": {
                    "forbidOrphans": false,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "EN name",
                          "guid": "bd489a13-97ee-4933-a677-7a18513e0997"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "ISO name",
                          "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "linkInfo": {
                      "linkTarget": {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe dynamic self link reversed",
                    "name": "Material Universe dynamic self link"
                  }
                },
                "Example 6": {
                  "summary": "Dynamic record link group with all fields specified",
                  "description": "This example demonstrates how to create a new dynamic record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid, referential integrity model and forbid orphans flag. If the guid is not specified a random new Guid will be generated. If referential integrity model is not specified it defaults to 'One to One' model. If forbid orphans flag is not specified it defaults to allowing them. This link group will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToMany",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "EN name",
                          "guid": "bd489a13-97ee-4933-a677-7a18513e0997"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Other names",
                          "guid": "00000079-0001-4fff-8fff-3248ffff0000"
                        }
                      },
                      {
                        "attributeSource": {
                          "type": "discrete",
                          "displayNames": {},
                          "name": "Hot hardness rating",
                          "guid": "0000007c-0001-4fff-8fff-dd92ffff0000"
                        },
                        "attributeTarget": {
                          "type": "discrete",
                          "displayNames": {},
                          "name": "Air",
                          "guid": "000000cf-0001-4fff-8fff-3248ffff0000"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe dynamic link",
                    "name": "Process Universe dynamic link",
                    "guid": "7b9c5fef-ebf6-425c-98a2-d88e7c9e6e85"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Static record link group",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself.",
                  "value": {
                    "includeIndirectLinks": false,
                    "type": "static",
                    "linkInfo": {
                      "linkTarget": {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe static self link reversed",
                    "name": "Material Universe static self link"
                  }
                },
                "Example 2": {
                  "summary": "Static record link group with specified guid",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe static link",
                    "name": "Process Universe static link",
                    "guid": "29fb0df3-a31a-4028-8c92-ed2c33a09295"
                  }
                },
                "Example 3": {
                  "summary": "Cross database record link group",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to a table in different databases. Since no database guid is specified this will link to all databases containing this table.",
                  "value": {
                    "includeIndirectLinks": false,
                    "type": "crossDatabase",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "tableGuid": "d5c4cc51-25c6-484d-b8a9-737cad9401b3"
                      }
                    },
                    "reverseName": "Cross database link to Material Universe",
                    "name": "Cross database link from Material Universe"
                  }
                },
                "Example 4": {
                  "summary": "Cross database record link group with specified guid and target database guid",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to a table in different database. Since the database guid is specified it will link to all versions of that specific database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "linkInfo": {
                      "linkTarget": {
                        "databaseGuid": "da3d4d35-1788-46fa-a773-bc1c01a3078b",
                        "tableGuid": "8a8abde3-3ce0-4296-af65-687e65a37e45"
                      }
                    },
                    "reverseName": "Cross database link to MI Training - Material Universe",
                    "name": "Cross database link from MI Training - Material Universe",
                    "guid": "f0634cf5-fb4d-4656-95cb-48b27ddc2ac1"
                  }
                },
                "Example 5": {
                  "summary": "Dynamic record link group",
                  "description": "This example demonstrates how to create a new dynamic record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself. Created link will have 'One to One' referential integrity model and will allow orphans.",
                  "value": {
                    "forbidOrphans": false,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "EN name",
                          "guid": "bd489a13-97ee-4933-a677-7a18513e0997"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "ISO name",
                          "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "linkInfo": {
                      "linkTarget": {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe dynamic self link reversed",
                    "name": "Material Universe dynamic self link"
                  }
                },
                "Example 6": {
                  "summary": "Dynamic record link group with all fields specified",
                  "description": "This example demonstrates how to create a new dynamic record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid, referential integrity model and forbid orphans flag. If the guid is not specified a random new Guid will be generated. If referential integrity model is not specified it defaults to 'One to One' model. If forbid orphans flag is not specified it defaults to allowing them. This link group will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToMany",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "EN name",
                          "guid": "bd489a13-97ee-4933-a677-7a18513e0997"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Other names",
                          "guid": "00000079-0001-4fff-8fff-3248ffff0000"
                        }
                      },
                      {
                        "attributeSource": {
                          "type": "discrete",
                          "displayNames": {},
                          "name": "Hot hardness rating",
                          "guid": "0000007c-0001-4fff-8fff-dd92ffff0000"
                        },
                        "attributeTarget": {
                          "type": "discrete",
                          "displayNames": {},
                          "name": "Air",
                          "guid": "000000cf-0001-4fff-8fff-3248ffff0000"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "linkInfo": {
                      "linkSource": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "linkTarget": {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                      }
                    },
                    "reverseName": "Material Universe dynamic link",
                    "name": "Process Universe dynamic link",
                    "guid": "7b9c5fef-ebf6-425c-98a2-d88e7c9e6e85"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Static record link group",
                    "description": "This example demonstrates the returned value from getting a 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from MI_Training database.",
                    "value": {
                      "includeIndirectLinks": false,
                      "type": "static",
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "c9954321-b4d4-4443-949e-f9b161e2c8fb"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "73d8f19a-38df-4144-964d-cc1448d38ebb"
                        }
                      },
                      "identity": 125,
                      "reverseName": "Fatigue Statistical Data",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Fatigue Test Data",
                      "guid": "485da78d-d094-4edb-a5a9-077fe1bc02f2"
                    }
                  },
                  "Example 2": {
                    "summary": "Cross database record link group",
                    "description": "This example demonstrates the returned value from getting a cross database record link group from 'MaterialUniverse' table from MI_Training database.",
                    "value": {
                      "includeIndirectLinks": false,
                      "type": "crossDatabase",
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        },
                        "linkTarget": {
                          "databaseGuid": "55803216-3b29-4b39-b682-bd84429da38d",
                          "tableGuid": "a09a3374-c2c5-4781-95eb-3be712927710"
                        }
                      },
                      "identity": 1,
                      "reverseName": "MI Training - MaterialUniverse",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Different database - different table",
                      "guid": "146fe493-7fdc-4658-be16-3f21d727ce5f"
                    }
                  },
                  "Example 3": {
                    "summary": "Dynamic record link group",
                    "description": "This example demonstrates the returned value from getting a 'Tensile test data' dynamic record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from MI_Training database.",
                    "value": {
                      "forbidOrphans": false,
                      "referentialIntegrityModel": "oneToMany",
                      "attributePairs": [
                        {
                          "attributeSource": {
                            "type": "shortText",
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                          },
                          "attributeTarget": {
                            "type": "shortText",
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                          }
                        }
                      ],
                      "type": "dynamic",
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333"
                        }
                      },
                      "identity": 8,
                      "reverseName": "Further panel information",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Tensile test data",
                      "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-link-groups:inbound-link-groups": {
      "get": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Get all record link groups pointing towards provided table",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupsInfo"
                },
                "example": {
                  "recordLinkGroups": [
                    {
                      "identity": 115,
                      "type": "static",
                      "reverseName": "Training Exercise",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "MaterialUniverse",
                      "guid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                    },
                    {
                      "identity": 3,
                      "type": "dynamic",
                      "reverseName": "Smart Link to Training Record",
                      "reverseDisplayNames": {
                        "en": "en-Smart Link to Training Record",
                        "fr": "fr-Smart Link to Training Record"
                      },
                      "displayNames": {
                        "en": "en-Smart Link to MaterialUniverse",
                        "fr": "fr-Smart Link to MaterialUniverse"
                      },
                      "name": "Smart Link to MaterialUniverse",
                      "guid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                    },
                    {
                      "identity": 1,
                      "type": "crossDatabase",
                      "reverseName": "MI Training MaterialUniverse - Second Training Database And Table",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Second Training Database And Table - MI Training MaterialUniverse",
                      "guid": "5089f424-96cb-4edc-b3a0-77ed33c4b3ae"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-link-groups/{record-link-group-guid}/{record-link-group-type}": {
      "get": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Get individual record link group",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-type",
            "in": "path",
            "description": "The record link group type.",
            "required": true,
            "schema": {
              "enum": [
                "static",
                "dynamic",
                "crossDatabase"
              ],
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Static record link group",
                    "description": "This example demonstrates the returned value from getting a 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from MI_Training database.",
                    "value": {
                      "includeIndirectLinks": false,
                      "type": "static",
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "c9954321-b4d4-4443-949e-f9b161e2c8fb"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "73d8f19a-38df-4144-964d-cc1448d38ebb"
                        }
                      },
                      "identity": 125,
                      "reverseName": "Fatigue Statistical Data",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Fatigue Test Data",
                      "guid": "485da78d-d094-4edb-a5a9-077fe1bc02f2"
                    }
                  },
                  "Example 2": {
                    "summary": "Cross database record link group",
                    "description": "This example demonstrates the returned value from getting a cross database record link group from 'MaterialUniverse' table from MI_Training database.",
                    "value": {
                      "includeIndirectLinks": false,
                      "type": "crossDatabase",
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        },
                        "linkTarget": {
                          "databaseGuid": "9a050ca4-9426-4e3b-8254-39a1d9ed9d15",
                          "tableGuid": "ad148c65-689e-4f9a-b9b3-e8c8c9f28f9e"
                        }
                      },
                      "identity": 1,
                      "reverseName": "MI Training - MaterialUniverse",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Different database - different table",
                      "guid": "c1e174f9-06fc-4921-80eb-ae6aeca760df"
                    }
                  },
                  "Example 3": {
                    "summary": "Dynamic record link group",
                    "description": "This example demonstrates the returned value from getting a 'Tensile test data' dynamic record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from MI_Training database.",
                    "value": {
                      "forbidOrphans": false,
                      "referentialIntegrityModel": "oneToMany",
                      "attributePairs": [
                        {
                          "attributeSource": {
                            "type": "shortText",
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                          },
                          "attributeTarget": {
                            "type": "shortText",
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                          }
                        }
                      ],
                      "type": "dynamic",
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333"
                        }
                      },
                      "identity": 8,
                      "reverseName": "Further panel information",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Tensile test data",
                      "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or record link group not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Delete a record link group.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-type",
            "in": "path",
            "description": "The record link group type.",
            "required": true,
            "schema": {
              "enum": [
                "static",
                "dynamic",
                "crossDatabase"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or record link group not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-link-groups/{record-link-group-guid}": {
      "patch": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Update record link group.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "guid": "3c7d46b4-7275-47e7-a212-62ffb787bee9"
                  }
                },
                "Example 2": {
                  "summary": "Update name and reverse name",
                  "description": "This example demonstrates how to update the 'Name' and 'Reverse name' properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update everything for static record link group",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)",
                    "guid": "e986ced6-e7a6-4d4a-9a33-e9d69d185ac7"
                  }
                },
                "Example 4": {
                  "summary": "Update everything for cross database record link group",
                  "description": "This example demonstrates how to update all properties of cross database record link group from the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "reverseName": "Link To MI Training - Material Universe (Updated)",
                    "name": "Link From MI Training - Material Universe (Updated)",
                    "guid": "97df062c-b9a2-4264-aa4b-ba1e5041cfca"
                  }
                },
                "Example 5": {
                  "summary": "Update everything for dynamic record link group",
                  "description": "This example demonstrates how to update all properties of 'Tensile test data' dynamic record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from the 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from the MI_Training database.",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Panel Number",
                          "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Panel Number",
                          "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                        }
                      },
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Document reference",
                          "guid": "1228c02f-25e7-4748-bcfa-038c334c73e4"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Build ID",
                          "guid": "61796104-14e0-4d59-bdba-22a9277f4775"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "reverseName": "Further panel information (Updated)",
                    "name": "Tensile test data (Updated)",
                    "guid": "a533ac16-fd61-4ef3-a846-367e34e85c5e"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "guid": "3c7d46b4-7275-47e7-a212-62ffb787bee9"
                  }
                },
                "Example 2": {
                  "summary": "Update name and reverse name",
                  "description": "This example demonstrates how to update the 'Name' and 'Reverse name' properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update everything for static record link group",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)",
                    "guid": "e986ced6-e7a6-4d4a-9a33-e9d69d185ac7"
                  }
                },
                "Example 4": {
                  "summary": "Update everything for cross database record link group",
                  "description": "This example demonstrates how to update all properties of cross database record link group from the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "reverseName": "Link To MI Training - Material Universe (Updated)",
                    "name": "Link From MI Training - Material Universe (Updated)",
                    "guid": "97df062c-b9a2-4264-aa4b-ba1e5041cfca"
                  }
                },
                "Example 5": {
                  "summary": "Update everything for dynamic record link group",
                  "description": "This example demonstrates how to update all properties of 'Tensile test data' dynamic record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from the 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from the MI_Training database.",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Panel Number",
                          "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Panel Number",
                          "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                        }
                      },
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Document reference",
                          "guid": "1228c02f-25e7-4748-bcfa-038c334c73e4"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Build ID",
                          "guid": "61796104-14e0-4d59-bdba-22a9277f4775"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "reverseName": "Further panel information (Updated)",
                    "name": "Tensile test data (Updated)",
                    "guid": "a533ac16-fd61-4ef3-a846-367e34e85c5e"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "guid": "3c7d46b4-7275-47e7-a212-62ffb787bee9"
                  }
                },
                "Example 2": {
                  "summary": "Update name and reverse name",
                  "description": "This example demonstrates how to update the 'Name' and 'Reverse name' properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update everything for static record link group",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)",
                    "guid": "e986ced6-e7a6-4d4a-9a33-e9d69d185ac7"
                  }
                },
                "Example 4": {
                  "summary": "Update everything for cross database record link group",
                  "description": "This example demonstrates how to update all properties of cross database record link group from the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "reverseName": "Link To MI Training - Material Universe (Updated)",
                    "name": "Link From MI Training - Material Universe (Updated)",
                    "guid": "97df062c-b9a2-4264-aa4b-ba1e5041cfca"
                  }
                },
                "Example 5": {
                  "summary": "Update everything for dynamic record link group",
                  "description": "This example demonstrates how to update all properties of 'Tensile test data' dynamic record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from the 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from the MI_Training database.",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Panel Number",
                          "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Panel Number",
                          "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                        }
                      },
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Document reference",
                          "guid": "1228c02f-25e7-4748-bcfa-038c334c73e4"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Build ID",
                          "guid": "61796104-14e0-4d59-bdba-22a9277f4775"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "reverseName": "Further panel information (Updated)",
                    "name": "Tensile test data (Updated)",
                    "guid": "a533ac16-fd61-4ef3-a846-367e34e85c5e"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "guid": "3c7d46b4-7275-47e7-a212-62ffb787bee9"
                  }
                },
                "Example 2": {
                  "summary": "Update name and reverse name",
                  "description": "This example demonstrates how to update the 'Name' and 'Reverse name' properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update everything for static record link group",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)",
                    "guid": "e986ced6-e7a6-4d4a-9a33-e9d69d185ac7"
                  }
                },
                "Example 4": {
                  "summary": "Update everything for cross database record link group",
                  "description": "This example demonstrates how to update all properties of cross database record link group from the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "reverseName": "Link To MI Training - Material Universe (Updated)",
                    "name": "Link From MI Training - Material Universe (Updated)",
                    "guid": "97df062c-b9a2-4264-aa4b-ba1e5041cfca"
                  }
                },
                "Example 5": {
                  "summary": "Update everything for dynamic record link group",
                  "description": "This example demonstrates how to update all properties of 'Tensile test data' dynamic record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from the 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from the MI_Training database.",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Panel Number",
                          "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Panel Number",
                          "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                        }
                      },
                      {
                        "attributeSource": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Document reference",
                          "guid": "1228c02f-25e7-4748-bcfa-038c334c73e4"
                        },
                        "attributeTarget": {
                          "type": "shortText",
                          "displayNames": {},
                          "name": "Build ID",
                          "guid": "61796104-14e0-4d59-bdba-22a9277f4775"
                        }
                      }
                    ],
                    "type": "dynamic",
                    "reverseName": "Further panel information (Updated)",
                    "name": "Tensile test data (Updated)",
                    "guid": "a533ac16-fd61-4ef3-a846-367e34e85c5e"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
                },
                "examples": {
                  "Example 4": {
                    "summary": "Static record link group",
                    "description": "This example demonstrates the returned value from getting a 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from MI_Training database.",
                    "value": {
                      "includeIndirectLinks": false,
                      "type": "static",
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "c9954321-b4d4-4443-949e-f9b161e2c8fb"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "73d8f19a-38df-4144-964d-cc1448d38ebb"
                        }
                      },
                      "identity": 125,
                      "reverseName": "Fatigue Statistical Data",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Fatigue Test Data",
                      "guid": "485da78d-d094-4edb-a5a9-077fe1bc02f2"
                    }
                  },
                  "Example 5": {
                    "summary": "Cross database record link group",
                    "description": "This example demonstrates the returned value from getting a cross database record link group from 'MaterialUniverse' table from MI_Training database.",
                    "value": {
                      "includeIndirectLinks": false,
                      "type": "crossDatabase",
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        },
                        "linkTarget": {
                          "databaseGuid": "8ea31ea4-5031-455c-a03f-396f5d861bff",
                          "tableGuid": "07e9ce2a-7e85-4732-9c17-e95e9bb8216f"
                        }
                      },
                      "identity": 1,
                      "reverseName": "MI Training - MaterialUniverse",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Different database - different table",
                      "guid": "62072073-7b40-4911-a00e-4c92fa16f157"
                    }
                  },
                  "Example 6": {
                    "summary": "Dynamic record link group",
                    "description": "This example demonstrates the returned value from getting a 'Tensile test data' dynamic record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from MI_Training database.",
                    "value": {
                      "forbidOrphans": false,
                      "referentialIntegrityModel": "oneToMany",
                      "attributePairs": [
                        {
                          "attributeSource": {
                            "type": "shortText",
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                          },
                          "attributeTarget": {
                            "type": "shortText",
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                          }
                        }
                      ],
                      "type": "dynamic",
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333"
                        }
                      },
                      "identity": 8,
                      "reverseName": "Further panel information",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Tensile test data",
                      "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or record link group not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/standard-names": {
      "get": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Gets all standard names for a given database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaStandardNamesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Create a new standard name",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Standard name for attributes",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 2": {
                  "summary": "Standard name for parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                  "value": {
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 3": {
                  "summary": "Standard name for record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                  "value": {
                    "mappedRecordLinkGroups": [
                      {
                        "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 4": {
                  "summary": "Standard name for cross-database record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                  "value": {
                    "mappedCrossDatabaseRecordLinkGroups": [
                      {
                        "guid": "bc4623b6-6d5f-43cf-99d6-1c1e7ce4b3f1"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 5": {
                  "summary": "Standard name for attributes and parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Standard name for attributes",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 2": {
                  "summary": "Standard name for parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                  "value": {
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 3": {
                  "summary": "Standard name for record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                  "value": {
                    "mappedRecordLinkGroups": [
                      {
                        "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 4": {
                  "summary": "Standard name for cross-database record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                  "value": {
                    "mappedCrossDatabaseRecordLinkGroups": [
                      {
                        "guid": "bc4623b6-6d5f-43cf-99d6-1c1e7ce4b3f1"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 5": {
                  "summary": "Standard name for attributes and parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Standard name for attributes",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 2": {
                  "summary": "Standard name for parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                  "value": {
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 3": {
                  "summary": "Standard name for record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                  "value": {
                    "mappedRecordLinkGroups": [
                      {
                        "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 4": {
                  "summary": "Standard name for cross-database record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                  "value": {
                    "mappedCrossDatabaseRecordLinkGroups": [
                      {
                        "guid": "bc4623b6-6d5f-43cf-99d6-1c1e7ce4b3f1"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 5": {
                  "summary": "Standard name for attributes and parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Standard name for attributes",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 2": {
                  "summary": "Standard name for parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                  "value": {
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 3": {
                  "summary": "Standard name for record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                  "value": {
                    "mappedRecordLinkGroups": [
                      {
                        "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 4": {
                  "summary": "Standard name for cross-database record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                  "value": {
                    "mappedCrossDatabaseRecordLinkGroups": [
                      {
                        "guid": "bc4623b6-6d5f-43cf-99d6-1c1e7ce4b3f1"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 5": {
                  "summary": "Standard name for attributes and parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Standard name for attributes",
                    "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                    "value": {
                      "mappedAttributes": [
                        {
                          "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 2": {
                    "summary": "Standard name for parameters",
                    "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                    "value": {
                      "mappedParameters": [
                        {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 3": {
                    "summary": "Standard name for record link groups",
                    "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                    "value": {
                      "mappedRecordLinkGroups": [
                        {
                          "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 4": {
                    "summary": "Standard name for cross-database record link groups",
                    "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                    "value": {
                      "mappedCrossDatabaseRecordLinkGroups": [
                        {
                          "guid": "3f600818-e9ab-4dd4-8017-d1759c69b4d9"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 5": {
                    "summary": "Standard name for attributes and parameters",
                    "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                    "value": {
                      "mappedAttributes": [
                        {
                          "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "mappedParameters": [
                        {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "name": "Unification"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/standard-names/{standard-name-guid}": {
      "get": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Gets a standard name for a given database and guid.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "standard-name-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
                },
                "examples": {
                  "Example 6": {
                    "summary": "Standard name for attributes",
                    "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                    "value": {
                      "mappedAttributes": [
                        {
                          "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 7": {
                    "summary": "Standard name for parameters",
                    "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                    "value": {
                      "mappedParameters": [
                        {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 8": {
                    "summary": "Standard name for record link groups",
                    "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                    "value": {
                      "mappedRecordLinkGroups": [
                        {
                          "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 9": {
                    "summary": "Standard name for cross-database record link groups",
                    "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                    "value": {
                      "mappedCrossDatabaseRecordLinkGroups": [
                        {
                          "guid": "e3e49445-912f-4893-9a3a-7dd61a5e61b0"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 10": {
                    "summary": "Standard name for attributes and parameters",
                    "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                    "value": {
                      "mappedAttributes": [
                        {
                          "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "mappedParameters": [
                        {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "name": "Unification"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database or standard name not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Edit a standard name",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "standard-name-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "name": "Density (Updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "guid": "bd0ea115-8aad-4008-9389-736f776550f3"
                  }
                },
                "Example 3": {
                  "summary": "Update mapped attributes",
                  "description": "This example demonstrates how to update the mapped attributes of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Replace mapped attributes with parameters",
                  "description": "This example demonstrates how to remove the mapped attribute and add mapped parameters to the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "name": "Density (Updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "guid": "bd0ea115-8aad-4008-9389-736f776550f3"
                  }
                },
                "Example 3": {
                  "summary": "Update mapped attributes",
                  "description": "This example demonstrates how to update the mapped attributes of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Replace mapped attributes with parameters",
                  "description": "This example demonstrates how to remove the mapped attribute and add mapped parameters to the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "name": "Density (Updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "guid": "bd0ea115-8aad-4008-9389-736f776550f3"
                  }
                },
                "Example 3": {
                  "summary": "Update mapped attributes",
                  "description": "This example demonstrates how to update the mapped attributes of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Replace mapped attributes with parameters",
                  "description": "This example demonstrates how to remove the mapped attribute and add mapped parameters to the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "name": "Density (Updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "guid": "bd0ea115-8aad-4008-9389-736f776550f3"
                  }
                },
                "Example 3": {
                  "summary": "Update mapped attributes",
                  "description": "This example demonstrates how to update the mapped attributes of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Replace mapped attributes with parameters",
                  "description": "This example demonstrates how to remove the mapped attribute and add mapped parameters to the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
                },
                "examples": {
                  "Example 11": {
                    "summary": "Standard name for attributes",
                    "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                    "value": {
                      "mappedAttributes": [
                        {
                          "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 12": {
                    "summary": "Standard name for parameters",
                    "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                    "value": {
                      "mappedParameters": [
                        {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 13": {
                    "summary": "Standard name for record link groups",
                    "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                    "value": {
                      "mappedRecordLinkGroups": [
                        {
                          "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 14": {
                    "summary": "Standard name for cross-database record link groups",
                    "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                    "value": {
                      "mappedCrossDatabaseRecordLinkGroups": [
                        {
                          "guid": "6a9d3f38-0b49-47da-b8c0-1b74fa991472"
                        }
                      ],
                      "name": "Unification"
                    }
                  },
                  "Example 15": {
                    "summary": "Standard name for attributes and parameters",
                    "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                    "value": {
                      "mappedAttributes": [
                        {
                          "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "mappedParameters": [
                        {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "name": "Unification"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or standard name not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Delete a standard name.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "standard-name-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or standard name not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/subsets": {
      "get": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Get all subsets for table",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSubsetsInfo"
                },
                "example": {
                  "subsets": [
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {},
                      "name": "Polymers",
                      "guid": "00007645-0010-4fff-8fff-dd92ffff0000"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Create a new subset.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Subset",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Alloys"
                  }
                },
                "Example 2": {
                  "summary": "Subset with Guid",
                  "description": "This example demonstrates how to create a new subset with a specified guid value for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Alloys (guid)",
                    "guid": "6adf6b95-dbf0-41f1-b0c3-9dbfce84ecbb"
                  }
                },
                "Example 3": {
                  "summary": "Subset with associated layout",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with the 'Ceramics' layout associated.",
                  "value": {
                    "associatedLayout": {
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Alloys (Layout)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Subset",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Alloys"
                  }
                },
                "Example 2": {
                  "summary": "Subset with Guid",
                  "description": "This example demonstrates how to create a new subset with a specified guid value for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Alloys (guid)",
                    "guid": "6adf6b95-dbf0-41f1-b0c3-9dbfce84ecbb"
                  }
                },
                "Example 3": {
                  "summary": "Subset with associated layout",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with the 'Ceramics' layout associated.",
                  "value": {
                    "associatedLayout": {
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Alloys (Layout)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Subset",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Alloys"
                  }
                },
                "Example 2": {
                  "summary": "Subset with Guid",
                  "description": "This example demonstrates how to create a new subset with a specified guid value for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Alloys (guid)",
                    "guid": "6adf6b95-dbf0-41f1-b0c3-9dbfce84ecbb"
                  }
                },
                "Example 3": {
                  "summary": "Subset with associated layout",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with the 'Ceramics' layout associated.",
                  "value": {
                    "associatedLayout": {
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Alloys (Layout)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Subset",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Alloys"
                  }
                },
                "Example 2": {
                  "summary": "Subset with Guid",
                  "description": "This example demonstrates how to create a new subset with a specified guid value for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Alloys (guid)",
                    "guid": "6adf6b95-dbf0-41f1-b0c3-9dbfce84ecbb"
                  }
                },
                "Example 3": {
                  "summary": "Subset with associated layout",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with the 'Ceramics' layout associated.",
                  "value": {
                    "associatedLayout": {
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Alloys (Layout)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSubset"
                },
                "example": {
                  "associatedLayout": {
                    "name": "Ceramics",
                    "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  },
                  "displayNames": {},
                  "name": "Ceramics",
                  "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/subsets/{subset-guid}": {
      "get": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Get a subset with a specified guid for a given database and table.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "subset-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSubset"
                },
                "example": {
                  "associatedLayout": {
                    "displayNames": {
                      "en": "Ceramics Layout English Display Name",
                      "fr": "Ceramics Layout French Display Name"
                    },
                    "name": "Ceramics",
                    "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  },
                  "displayNames": {
                    "en": "Ceramics English Display Name",
                    "fr": "Ceramics French Display Name"
                  },
                  "name": "Ceramics",
                  "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database, table or subset not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Update a subset.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "subset-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a subset",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Ceramics (Updated)",
                    "guid": "b308adc8-8c68-47df-89da-ffabf5400799"
                  }
                },
                "Example 2": {
                  "summary": "Rename subset",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update associated layout",
                  "description": "This example demonstrates how to update associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove associated layout",
                  "description": "This example demonstrates how to remove associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": null
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a subset",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Ceramics (Updated)",
                    "guid": "b308adc8-8c68-47df-89da-ffabf5400799"
                  }
                },
                "Example 2": {
                  "summary": "Rename subset",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update associated layout",
                  "description": "This example demonstrates how to update associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove associated layout",
                  "description": "This example demonstrates how to remove associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": null
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a subset",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Ceramics (Updated)",
                    "guid": "b308adc8-8c68-47df-89da-ffabf5400799"
                  }
                },
                "Example 2": {
                  "summary": "Rename subset",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update associated layout",
                  "description": "This example demonstrates how to update associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove associated layout",
                  "description": "This example demonstrates how to remove associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": null
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a subset",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Ceramics (Updated)",
                    "guid": "b308adc8-8c68-47df-89da-ffabf5400799"
                  }
                },
                "Example 2": {
                  "summary": "Rename subset",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update associated layout",
                  "description": "This example demonstrates how to update associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove associated layout",
                  "description": "This example demonstrates how to remove associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSubset"
                },
                "example": {
                  "associatedLayout": {
                    "displayNames": {
                      "en": "Ceramics Layout English Display Name",
                      "fr": "Ceramics Layout French Display Name"
                    },
                    "name": "Ceramics",
                    "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  },
                  "displayNames": {
                    "en": "Ceramics English Display Name",
                    "fr": "Ceramics French Display Name"
                  },
                  "name": "Ceramics",
                  "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or subset not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Delete a subset.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "subset-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or subset not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables": {
      "get": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Get all tables",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaTablesInfo"
                },
                "example": {
                  "tables": [
                    {
                      "isHiddenFromBrowse": false,
                      "isHiddenFromSearch": false,
                      "isVersioned": false,
                      "displayNames": {
                        "en": "MaterialUniverse English Display Name",
                        "fr": "MaterialUniverse French Display Name"
                      },
                      "name": "MaterialUniverse",
                      "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    {
                      "isHiddenFromBrowse": false,
                      "isHiddenFromSearch": false,
                      "isVersioned": true,
                      "displayNames": {},
                      "name": "Design Data",
                      "guid": "0000b5e2-0011-4fff-8fff-0000ffff0000"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Create a new table.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database.",
                  "value": {
                    "name": "Coatings"
                  }
                },
                "Example 2": {
                  "summary": "Table with Guid",
                  "description": "This example demonstrates how to create a new table with a specified guid value in the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Coatings (Guid)",
                    "guid": "2792bf07-face-4990-ad18-a160ded3bb94"
                  }
                },
                "Example 3": {
                  "summary": "Hidden Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database that is not browsable or searchable. ",
                  "value": {
                    "isHiddenFromBrowse": true,
                    "isHiddenFromSearch": true,
                    "name": "Coatings (Hidden)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database.",
                  "value": {
                    "name": "Coatings"
                  }
                },
                "Example 2": {
                  "summary": "Table with Guid",
                  "description": "This example demonstrates how to create a new table with a specified guid value in the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Coatings (Guid)",
                    "guid": "2792bf07-face-4990-ad18-a160ded3bb94"
                  }
                },
                "Example 3": {
                  "summary": "Hidden Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database that is not browsable or searchable. ",
                  "value": {
                    "isHiddenFromBrowse": true,
                    "isHiddenFromSearch": true,
                    "name": "Coatings (Hidden)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database.",
                  "value": {
                    "name": "Coatings"
                  }
                },
                "Example 2": {
                  "summary": "Table with Guid",
                  "description": "This example demonstrates how to create a new table with a specified guid value in the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Coatings (Guid)",
                    "guid": "2792bf07-face-4990-ad18-a160ded3bb94"
                  }
                },
                "Example 3": {
                  "summary": "Hidden Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database that is not browsable or searchable. ",
                  "value": {
                    "isHiddenFromBrowse": true,
                    "isHiddenFromSearch": true,
                    "name": "Coatings (Hidden)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database.",
                  "value": {
                    "name": "Coatings"
                  }
                },
                "Example 2": {
                  "summary": "Table with Guid",
                  "description": "This example demonstrates how to create a new table with a specified guid value in the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Coatings (Guid)",
                    "guid": "2792bf07-face-4990-ad18-a160ded3bb94"
                  }
                },
                "Example 3": {
                  "summary": "Hidden Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database that is not browsable or searchable. ",
                  "value": {
                    "isHiddenFromBrowse": true,
                    "isHiddenFromSearch": true,
                    "name": "Coatings (Hidden)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaTable"
                },
                "example": {
                  "isHiddenFromBrowse": false,
                  "isHiddenFromSearch": false,
                  "isVersioned": false,
                  "displayNames": {},
                  "name": "Material Universe",
                  "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}": {
      "get": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Get a table with a specified guid for a given database.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaTable"
                },
                "example": {
                  "defaultSubset": {
                    "name": "All bulk materials",
                    "guid": "0000b1c5-0010-4fff-8fff-dd92ffff0000"
                  },
                  "subsets": [
                    {
                      "name": "Aerospace materials",
                      "guid": "0000fc72-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "All bulk materials",
                      "guid": "0000b1c5-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Polymers",
                      "guid": "00007645-0010-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "defaultLayout": {
                    "name": "All Attributes",
                    "guid": "384f9abe-0581-434d-a976-86952282207a"
                  },
                  "layouts": [
                    {
                      "name": "Aerospace materials",
                      "guid": "0000fc72-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "All Attributes",
                      "guid": "384f9abe-0581-434d-a976-86952282207a"
                    },
                    {
                      "name": "All bulk materials",
                      "guid": "0000b1c5-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Metals",
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Polymers",
                      "guid": "00007645-0009-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "isHiddenFromBrowse": false,
                  "isHiddenFromSearch": false,
                  "isVersioned": false,
                  "displayNames": {
                    "en": "MaterialUniverse English Display Name",
                    "fr": "MaterialUniverse French Display Name"
                  },
                  "name": "MaterialUniverse",
                  "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Update a table.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a table",
                  "description": "This example demonstrates how to update all properties of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": true,
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "name": "MaterialUniverse (Updated)",
                    "guid": "7c5cfa83-cd26-4eaf-94b5-b82293414fbb"
                  }
                },
                "Example 2": {
                  "summary": "Update 'IsHiddenFromBrowse'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromBrowse' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": true
                  }
                },
                "Example 3": {
                  "summary": "Update 'IsHiddenFromSearch'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromSearch' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromSearch": false
                  }
                },
                "Example 4": {
                  "summary": "Update default subset",
                  "description": "This example demonstrates how to update the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 5": {
                  "summary": "Remove default subset",
                  "description": "This example demonstrates how to remove the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": null
                  }
                },
                "Example 6": {
                  "summary": "Update default layout",
                  "description": "This example demonstrates how to update the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 7": {
                  "summary": "Remove default layout",
                  "description": "This example demonstrates how to remove the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": null
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a table",
                  "description": "This example demonstrates how to update all properties of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": true,
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "name": "MaterialUniverse (Updated)",
                    "guid": "7c5cfa83-cd26-4eaf-94b5-b82293414fbb"
                  }
                },
                "Example 2": {
                  "summary": "Update 'IsHiddenFromBrowse'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromBrowse' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": true
                  }
                },
                "Example 3": {
                  "summary": "Update 'IsHiddenFromSearch'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromSearch' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromSearch": false
                  }
                },
                "Example 4": {
                  "summary": "Update default subset",
                  "description": "This example demonstrates how to update the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 5": {
                  "summary": "Remove default subset",
                  "description": "This example demonstrates how to remove the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": null
                  }
                },
                "Example 6": {
                  "summary": "Update default layout",
                  "description": "This example demonstrates how to update the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 7": {
                  "summary": "Remove default layout",
                  "description": "This example demonstrates how to remove the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": null
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a table",
                  "description": "This example demonstrates how to update all properties of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": true,
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "name": "MaterialUniverse (Updated)",
                    "guid": "7c5cfa83-cd26-4eaf-94b5-b82293414fbb"
                  }
                },
                "Example 2": {
                  "summary": "Update 'IsHiddenFromBrowse'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromBrowse' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": true
                  }
                },
                "Example 3": {
                  "summary": "Update 'IsHiddenFromSearch'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromSearch' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromSearch": false
                  }
                },
                "Example 4": {
                  "summary": "Update default subset",
                  "description": "This example demonstrates how to update the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 5": {
                  "summary": "Remove default subset",
                  "description": "This example demonstrates how to remove the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": null
                  }
                },
                "Example 6": {
                  "summary": "Update default layout",
                  "description": "This example demonstrates how to update the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 7": {
                  "summary": "Remove default layout",
                  "description": "This example demonstrates how to remove the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": null
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a table",
                  "description": "This example demonstrates how to update all properties of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": true,
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "name": "MaterialUniverse (Updated)",
                    "guid": "7c5cfa83-cd26-4eaf-94b5-b82293414fbb"
                  }
                },
                "Example 2": {
                  "summary": "Update 'IsHiddenFromBrowse'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromBrowse' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": true
                  }
                },
                "Example 3": {
                  "summary": "Update 'IsHiddenFromSearch'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromSearch' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromSearch": false
                  }
                },
                "Example 4": {
                  "summary": "Update default subset",
                  "description": "This example demonstrates how to update the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 5": {
                  "summary": "Remove default subset",
                  "description": "This example demonstrates how to remove the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": null
                  }
                },
                "Example 6": {
                  "summary": "Update default layout",
                  "description": "This example demonstrates how to update the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 7": {
                  "summary": "Remove default layout",
                  "description": "This example demonstrates how to remove the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaTable"
                },
                "example": {
                  "defaultSubset": {
                    "name": "All bulk materials",
                    "guid": "0000b1c5-0010-4fff-8fff-dd92ffff0000"
                  },
                  "subsets": [
                    {
                      "name": "Aerospace materials",
                      "guid": "0000fc72-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "All bulk materials",
                      "guid": "0000b1c5-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Polymers",
                      "guid": "00007645-0010-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "defaultLayout": {
                    "name": "All Attributes",
                    "guid": "384f9abe-0581-434d-a976-86952282207a"
                  },
                  "layouts": [
                    {
                      "name": "Aerospace materials",
                      "guid": "0000fc72-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "All Attributes",
                      "guid": "384f9abe-0581-434d-a976-86952282207a"
                    },
                    {
                      "name": "All bulk materials",
                      "guid": "0000b1c5-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Metals",
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Polymers",
                      "guid": "00007645-0009-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "isHiddenFromBrowse": false,
                  "isHiddenFromSearch": false,
                  "isVersioned": false,
                  "displayNames": {
                    "en": "MaterialUniverse English Display Name",
                    "fr": "MaterialUniverse French Display Name"
                  },
                  "name": "MaterialUniverse",
                  "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Delete a table.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Table in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiExceptionsTableDeletionException"
                },
                "example": {
                  "message": "Cannot delete table 'Restricted Substances' (GUID = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f').",
                  "code": 400,
                  "errors": [
                    {
                      "message": "It is being used in one or more tabular attributes.",
                      "reason": "InUse",
                      "referencedByType": "TabularAttribute",
                      "referencedBy": [
                        {
                          "name": "Restricted substances associated with this material",
                          "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}/equivalent-units": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get equivalent units (one per unit system)",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitEquivalentsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}/equivalent-units/unit-system/{unit-system-guid}/equivalent-unit/{equivalent-unit-guid}:set-equivalent-unit": {
      "post": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Set the equivalent unit for a given unit system",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "unit-system-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "equivalent-unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Database, unit system, unit or equivalent unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get all units",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Create a new unit.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get individual units",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
                }
              }
            }
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Update unit.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Delete unit.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}:compatible-units": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get compatible units for unit",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}:usages": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get all usages of unit",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitUsage"
                }
              }
            }
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/unit-systems": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get all unit systems in the database",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitSystemsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Create a new unit system.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Unit System",
                  "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                  "value": {
                    "name": "Hawaiian common",
                    "guid": "f0a939d3-0aef-44d8-8926-9d6800833baf"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Unit System",
                  "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                  "value": {
                    "name": "Hawaiian common",
                    "guid": "f0a939d3-0aef-44d8-8926-9d6800833baf"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Unit System",
                  "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                  "value": {
                    "name": "Hawaiian common",
                    "guid": "f0a939d3-0aef-44d8-8926-9d6800833baf"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Unit System",
                  "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                  "value": {
                    "name": "Hawaiian common",
                    "guid": "f0a939d3-0aef-44d8-8926-9d6800833baf"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitSystem"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Unit System",
                    "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                    "value": {
                      "name": "Hawaiian common",
                      "guid": "483ee403-9e66-4cd0-8861-7bedaf0f1945"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/unit-systems/{unit-system-guid}": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get an individual unit system",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-system-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitSystem"
                },
                "examples": {
                  "Example 2": {
                    "summary": "Unit System",
                    "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                    "value": {
                      "name": "Hawaiian common",
                      "guid": "f19d85f4-9b22-4985-bd98-2127edb93a99"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database or unit system not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Update a unit system.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-system-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUpdateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a unit system",
                  "description": "This example demonstrates how to update all properties of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)",
                    "guid": "55ab79f0-42fb-4bf1-9f30-025de53d6655"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "guid": "a0954389-08b6-4a17-9afd-5eba1bc17d5e"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUpdateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a unit system",
                  "description": "This example demonstrates how to update all properties of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)",
                    "guid": "55ab79f0-42fb-4bf1-9f30-025de53d6655"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "guid": "a0954389-08b6-4a17-9afd-5eba1bc17d5e"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUpdateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a unit system",
                  "description": "This example demonstrates how to update all properties of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)",
                    "guid": "55ab79f0-42fb-4bf1-9f30-025de53d6655"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "guid": "a0954389-08b6-4a17-9afd-5eba1bc17d5e"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUpdateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a unit system",
                  "description": "This example demonstrates how to update all properties of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)",
                    "guid": "55ab79f0-42fb-4bf1-9f30-025de53d6655"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "guid": "a0954389-08b6-4a17-9afd-5eba1bc17d5e"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitSystem"
                },
                "examples": {
                  "Example 3": {
                    "summary": "Unit System",
                    "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                    "value": {
                      "name": "Hawaiian common",
                      "guid": "89759d9e-82f6-4399-8035-3798049ec032"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or unit system not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Delete a unit system.",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit-system-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or unit system not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-identity}:search": {
      "post": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 6": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 11": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 12": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 19": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 6": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 11": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 12": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 19": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 6": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 11": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 12": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 19": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 6": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 11": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 12": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 19": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}:search": {
      "post": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 20": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 29": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 36": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 38": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 20": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 29": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 36": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 38": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 20": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 29": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 36": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 38": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 20": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 29": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 36": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 38": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:search": {
      "post": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 6": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 11": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 12": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 19": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 6": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 11": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 12": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 19": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 6": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 11": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 12": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 19": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 6": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 11": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 12": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 19": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}:search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Runs a search against the integration schema.",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 20": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 29": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 36": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 38": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 20": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 29": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 36": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 38": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 20": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 29": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 36": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 38": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchRequest"
              },
              "examples": {
                "Example 20": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "identities": [
                        -4,
                        928,
                        886
                      ],
                      "value": "lead",
                      "identitiesToBoost": [
                        {
                          "attributeIdentity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "type": "attribute",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            {
                              "attributeCriterionType": "notApplicable",
                              "identity": 928,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -4,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -9,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": -10,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehaviour": "contains",
                        "type": "discreteTextValues"
                      },
                      "attributeCriterionType": "matches",
                      "identity": -6,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "type": "recordProperty",
                        "sortDirection": "descending"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute with identity 7555 to the table in MI_TRAINING with identity 107 and linking attribute with identity 10907",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 29": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING where there is a populated local short text tabular column with identity 7558",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "type": "shortText"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link where the local tabular short text column with identity 7558 has a value, and the picture attribute in the linked table with identity 10906 exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "value": "risk",
                            "textMatchBehaviour": "contains",
                            "type": "shortText"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 7558,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 10906,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link to table with identity 34 via the tabular attribute with identity 10930, and the hyperlink attribute with identity 5877 in the target record is populated",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 107,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "targetAttributeIdentity": 10907,
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableIdentity": 34,
                            "targetDatabaseKey": "MI_TRAINING",
                            "localCriterion": {
                              "innerCriterion": {
                                "type": "hyperlink"
                              },
                              "attributeCriterionType": "exists",
                              "identity": 5877,
                              "isMetaAttribute": false,
                              "type": "attribute"
                            },
                            "linkDatumType": "tabularAttribute",
                            "searchInReversedDirection": false,
                            "targetAttributeIdentity": 5873,
                            "type": "link"
                          },
                          "attributeCriterionType": "matches",
                          "identity": 10930,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute with identity 7555 contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehaviour": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 7555,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "attributeCriterionType": "exists",
                      "identity": 101,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctionalData"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 33,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 45,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 36": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "attributeCriterionType": "exists",
                          "identity": 87,
                          "isMetaAttribute": true,
                          "type": "attribute"
                        },
                        "type": "link"
                      },
                      "attributeCriterionType": "matches",
                      "identity": 65,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 38": {
                  "summary": "Float functional search",
                  "description": "A search on a float functional attribute for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "floatFunctionalGraph",
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false
                      },
                      "attributeCriterionType": "matches",
                      "identity": 12,
                      "isMetaAttribute": false,
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "type": "relevance",
                        "sortDirection": "ascending"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          }
        }
      }
    },
    "/v1alpha/searches/{searchIdentifier}/results": {
      "post": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "searchIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchResultsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchResultsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchResultsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchResultsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchSearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Search not found"
          }
        }
      }
    },
    "/v1alpha/searches/{searchIdentifier}": {
      "delete": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "searchIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Search not found"
          }
        }
      }
    },
    "/v1alpha/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Check whether the API is available",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GrantaMISearchRecordPropertyFakeAttributeNumbers": {
        "enum": [
          {
            "name": "Breadcrumbs",
            "identity": -10,
            "guid": "00000007-0000-0000-0000-000000000000"
          },
          {
            "name": "TreeName",
            "identity": -9,
            "guid": "00000006-0000-0000-0000-000000000000"
          },
          {
            "name": "TableIdentity",
            "identity": -8,
            "guid": "00000005-0000-0000-0000-000000000000"
          },
          {
            "name": "TableName",
            "identity": -7,
            "guid": "00000004-0000-0000-0000-000000000000"
          },
          {
            "name": "RecordColor",
            "identity": -6,
            "guid": "00000003-0000-0000-0000-000000000000"
          },
          {
            "name": "DatabaseKey",
            "identity": -5,
            "guid": "00000002-0000-0000-0000-000000000000"
          },
          {
            "name": "RecordName",
            "identity": -4,
            "guid": "00000001-0000-0000-0000-000000000000"
          },
          {
            "name": "RecordModifiedBy",
            "identity": -3,
            "guid": "00000009-0000-0000-0000-000000000000"
          },
          {
            "name": "RecordCreatedBy",
            "identity": -2,
            "guid": "00000008-0000-0000-0000-000000000000"
          }
        ],
        "type": "string",
        "description": "Values that can be used in place of an attribute identity to perform a search, aggregation or export of a record property. RecordCreatedBy and RecordModifiedBy cannot be used in free text search or aggregation.",
        "format": "int32"
      },
      "GrantaServerApiAdminMiVersion": {
        "type": "object",
        "properties": {
          "binaryCompatibilityVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "majorMinorVersion": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiAggregationsAggregation": {
        "type": "object",
        "additionalProperties": false,
        "description": "The results of aggregation.\r\n\r\nThis is one of: \r\n * GrantaServerApiAggregationsAttributeAggregation\r\n * GrantaServerApiAggregationsFreeTextAggregation",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "attribute": "#/components/schemas/GrantaServerApiAggregationsAttributeAggregation",
            "text": "#/components/schemas/GrantaServerApiAggregationsFreeTextAggregation"
          }
        }
      },
      "GrantaServerApiAggregationsAggregationCriterion": {
        "type": "object",
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiAggregationsAttributeAggregationCriterion\r\n * GrantaServerApiAggregationsFreeTextAggregationCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "attribute": "#/components/schemas/GrantaServerApiAggregationsAttributeAggregationCriterion",
            "text": "#/components/schemas/GrantaServerApiAggregationsFreeTextAggregationCriterion"
          }
        }
      },
      "GrantaServerApiAggregationsAggregationDatumCriterion": {
        "type": "object",
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiAggregationsDateTimeAggregationDatumCriterion\r\n * GrantaServerApiAggregationsDateTimeHistogramAggregationDatumCriterion\r\n * GrantaServerApiAggregationsDateTimeFixedWidthHistogramAggregationDatumCriterion\r\n * GrantaServerApiAggregationsDateTimeFixedCalendarWidthHistogramAggregationDatumCriterion\r\n * GrantaServerApiAggregationsDiscreteTextAggregationDatumCriterion\r\n * GrantaServerApiAggregationsIntegerAggregationDatumCriterion\r\n * GrantaServerApiAggregationsPointAggregationDatumCriterion\r\n * GrantaServerApiAggregationsRangeAggregationDatumCriterion\r\n * GrantaServerApiAggregationsIntegerHistogramAggregationDatumCriterion\r\n * GrantaServerApiAggregationsIntegerFixedWidthHistogramAggregationDatumCriterion\r\n * GrantaServerApiAggregationsPointHistogramAggregationDatumCriterion\r\n * GrantaServerApiAggregationsPointFixedWidthHistogramAggregationDatumCriterion\r\n * GrantaServerApiAggregationsRangeHistogramAggregationDatumCriterion\r\n * GrantaServerApiAggregationsRangeFixedWidthHistogramAggregationDatumCriterion\r\n * GrantaServerApiAggregationsShortTextAggregationDatumCriterion\r\n * GrantaServerApiAggregationsLinkAggregationDatumCriterion\r\n * GrantaServerApiAggregationsLogicalAggregationDatumCriterion\r\n * GrantaServerApiAggregationsFloatFunctionalAggregationDatumCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "dateTime": "#/components/schemas/GrantaServerApiAggregationsDateTimeAggregationDatumCriterion",
            "dateTimeHistogram": "#/components/schemas/GrantaServerApiAggregationsDateTimeHistogramAggregationDatumCriterion",
            "dateTimeFixedWidthHistogram": "#/components/schemas/GrantaServerApiAggregationsDateTimeFixedWidthHistogramAggregationDatumCriterion",
            "dateTimeFixedCalendarWidthHistogram": "#/components/schemas/GrantaServerApiAggregationsDateTimeFixedCalendarWidthHistogramAggregationDatumCriterion",
            "discreteText": "#/components/schemas/GrantaServerApiAggregationsDiscreteTextAggregationDatumCriterion",
            "integer": "#/components/schemas/GrantaServerApiAggregationsIntegerAggregationDatumCriterion",
            "point": "#/components/schemas/GrantaServerApiAggregationsPointAggregationDatumCriterion",
            "range": "#/components/schemas/GrantaServerApiAggregationsRangeAggregationDatumCriterion",
            "integerHistogram": "#/components/schemas/GrantaServerApiAggregationsIntegerHistogramAggregationDatumCriterion",
            "integerFixedWidthHistogram": "#/components/schemas/GrantaServerApiAggregationsIntegerFixedWidthHistogramAggregationDatumCriterion",
            "pointHistogram": "#/components/schemas/GrantaServerApiAggregationsPointHistogramAggregationDatumCriterion",
            "pointFixedWidthHistogram": "#/components/schemas/GrantaServerApiAggregationsPointFixedWidthHistogramAggregationDatumCriterion",
            "rangeHistogram": "#/components/schemas/GrantaServerApiAggregationsRangeHistogramAggregationDatumCriterion",
            "rangeFixedWidthHistogram": "#/components/schemas/GrantaServerApiAggregationsRangeFixedWidthHistogramAggregationDatumCriterion",
            "shortText": "#/components/schemas/GrantaServerApiAggregationsShortTextAggregationDatumCriterion",
            "link": "#/components/schemas/GrantaServerApiAggregationsLinkAggregationDatumCriterion",
            "logical": "#/components/schemas/GrantaServerApiAggregationsLogicalAggregationDatumCriterion",
            "floatFunctionalGraph": "#/components/schemas/GrantaServerApiAggregationsFloatFunctionalAggregationDatumCriterion"
          }
        }
      },
      "GrantaServerApiAggregationsAggregationDatumExistsCriterion": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GrantaServerApiAttributeType"
          }
        },
        "additionalProperties": false,
        "description": "Inner criterion of an attribute search criterion for when the only bit of information about the datum that we want to convey is its type"
      },
      "GrantaServerApiAggregationsAggregationsRequest": {
        "type": "object",
        "properties": {
          "criterion": {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          "aggregationCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationCriterion"
            },
            "description": "The aggregations you wish to perform.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A request for aggregation information from a particular scope. The type of information\r\nrequested can vary: for example, for attributes, it could be a request for minimum/maximum\r\nvalues, or for common text terms.\r\n            \r\nAn aggregation request is associated with a particular scope (database, table, integration\r\nschema, etc) based off the API invoked; however, the scope can be further narrowed down by\r\nproviding a criterion in the aggregation request. Only data from records matching that\r\ncriterion will be considered when aggregating data.\r\n            \r\nNote that only some types of criterion will be supported: in particular, criteria that involve\r\n\"matches\" criteria against functional attributes, or link-attribute criteria against record\r\nlink groups, are not eligible to be used as an aggregation query criterion."
      },
      "GrantaServerApiAggregationsAggregationsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiAggregationsAttributeAggregation": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregation"
          }
        ],
        "properties": {
          "attributeIdentity": {
            "type": "integer",
            "description": "The identity of the attribute that was aggregated over.",
            "format": "int32",
            "nullable": true
          },
          "attributeGuid": {
            "type": "string",
            "description": "The GUID of the attribute that was aggregated over.",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "type": "string",
            "default": "attribute"
          },
          "count": {
            "type": "integer",
            "description": "The number of records that have a populated (applicable) value for this attribute.\r\n(For multi-valued attributes: the number of records that have one or more populated\r\n(applicable) values for this attribute.)\r\n            \r\nFor a tabular attribute, this will be the number of records that have at least one\r\ntabular row in this attribute, even if those rows might be filtered out from users'\r\nviews in some clients.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "The results of aggregation over an attribute. In all cases this will report the number of records in\r\nthe aggregation scope that have a value for the attribute. In some cases, depending on the attribute\r\ntype, we may be able to report more information. For example, aggregating over a numeric attribute will\r\nalso provide the minimum and maximum values that attribute takes across records in the aggregation\r\nscope.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregation\r\n\r\nThis is one of: \r\n * GrantaServerApiAggregationsAttributeValueAggregation\r\n * GrantaServerApiAggregationsAttributeExistsAggregation",
        "discriminator": {
          "propertyName": "attributeAggregationType",
          "mapping": {
            "value": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation",
            "exists": "#/components/schemas/GrantaServerApiAggregationsAttributeExistsAggregation"
          }
        },
        "x-discriminator-value": "attribute"
      },
      "GrantaServerApiAggregationsAttributeAggregationCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationCriterion"
          }
        ],
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isMetaAttribute": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "default": "attribute"
          }
        },
        "additionalProperties": false,
        "description": "A criterion for requesting aggregations for a single specific attribute or meta-attribute. Exactly one of the identity or GUID must be provided.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationCriterion\r\n\r\nThis is one of: \r\n * GrantaServerApiAggregationsAttributeAggregationValueCriterion\r\n * GrantaServerApiAggregationsAttributeAggregationExistsCriterion",
        "discriminator": {
          "propertyName": "attributeAggregationCriterionType",
          "mapping": {
            "value": "#/components/schemas/GrantaServerApiAggregationsAttributeAggregationValueCriterion",
            "exists": "#/components/schemas/GrantaServerApiAggregationsAttributeAggregationExistsCriterion"
          }
        },
        "x-discriminator-value": "attribute"
      },
      "GrantaServerApiAggregationsAttributeAggregationExistsCriterion": {
        "required": [
          "attributeAggregationCriterionType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeAggregationCriterion"
          },
          {
            "type": "object",
            "properties": {
              "attributeAggregationCriterionType": {
                "type": "string",
                "default": "exists"
              },
              "innerCriterion": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumExistsCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A criterion for requesting aggregations for a single specific attribute or meta-attribute.\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeAggregationCriterion",
        "x-discriminator-value": "exists"
      },
      "GrantaServerApiAggregationsAttributeAggregationValueCriterion": {
        "required": [
          "attributeAggregationCriterionType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeAggregationCriterion"
          },
          {
            "type": "object",
            "properties": {
              "attributeAggregationCriterionType": {
                "type": "string",
                "default": "value"
              },
              "innerCriterion": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A criterion for requesting aggregations for a single specific attribute or meta-attribute,\r\nincluding summary information about the values assumed by the attribute.\r\n            \r\nFor a numeric attribute (integer, point, range, or date-time), the summary information will\r\nbe the minimum and maximum values assumed by the attribute on some record.\r\n            \r\nFor a simple text attribute (discrete, short-text), the summary information will be the most\r\ncommon terms in the search index for that attribute.\r\n            \r\nThis can also be used within the inner criteria of a 'link' attribute aggregation, to request\r\nan aggregation over a local tabular column.\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeAggregationCriterion",
        "x-discriminator-value": "value"
      },
      "GrantaServerApiAggregationsAttributeExistsAggregation": {
        "required": [
          "attributeAggregationType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeAggregation"
          },
          {
            "type": "object",
            "properties": {
              "attributeAggregationType": {
                "type": "string",
                "default": "exists"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The results of aggregation over an attribute, reporting only the number of records with a value\r\nfor the attribute.\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeAggregation",
        "x-discriminator-value": "exists"
      },
      "GrantaServerApiAggregationsAttributeValueAggregation": {
        "required": [
          "attributeAggregationType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeAggregation"
          }
        ],
        "properties": {
          "attributeAggregationType": {
            "type": "string",
            "default": "value"
          }
        },
        "additionalProperties": false,
        "description": "The results of aggregation over an attribute, reporting the number of records that have a value for\r\nthe attribute, plus additional aggregation information about the attribute values. The exact type of\r\nadditional information will depend on the type of attribute.\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeAggregation\r\n\r\nThis is one of: \r\n * GrantaServerApiAggregationsIntegerAttributeAggregation\r\n * GrantaServerApiAggregationsPointAttributeAggregation\r\n * GrantaServerApiAggregationsRangeAttributeAggregation\r\n * GrantaServerApiAggregationsIntegerAttributeHistogramAggregation\r\n * GrantaServerApiAggregationsPointAttributeHistogramAggregation\r\n * GrantaServerApiAggregationsRangeAttributeHistogramAggregation\r\n * GrantaServerApiAggregationsDateTimeAttributeAggregation\r\n * GrantaServerApiAggregationsDateTimeAttributeHistogramAggregation\r\n * GrantaServerApiAggregationsShortTextAttributeAggregation\r\n * GrantaServerApiAggregationsDiscreteTextAttributeAggregation\r\n * GrantaServerApiAggregationsLinkAttributeAggregation\r\n * GrantaServerApiAggregationsLogicalAttributeAggregation\r\n * GrantaServerApiAggregationsFloatFunctionalAttributeAggregation",
        "discriminator": {
          "propertyName": "datumType",
          "mapping": {
            "integer": "#/components/schemas/GrantaServerApiAggregationsIntegerAttributeAggregation",
            "point": "#/components/schemas/GrantaServerApiAggregationsPointAttributeAggregation",
            "range": "#/components/schemas/GrantaServerApiAggregationsRangeAttributeAggregation",
            "integerHistogram": "#/components/schemas/GrantaServerApiAggregationsIntegerAttributeHistogramAggregation",
            "pointHistogram": "#/components/schemas/GrantaServerApiAggregationsPointAttributeHistogramAggregation",
            "rangeHistogram": "#/components/schemas/GrantaServerApiAggregationsRangeAttributeHistogramAggregation",
            "dateTime": "#/components/schemas/GrantaServerApiAggregationsDateTimeAttributeAggregation",
            "dateTimeHistogram": "#/components/schemas/GrantaServerApiAggregationsDateTimeAttributeHistogramAggregation",
            "shortText": "#/components/schemas/GrantaServerApiAggregationsShortTextAttributeAggregation",
            "discreteText": "#/components/schemas/GrantaServerApiAggregationsDiscreteTextAttributeAggregation",
            "link": "#/components/schemas/GrantaServerApiAggregationsLinkAttributeAggregation",
            "logical": "#/components/schemas/GrantaServerApiAggregationsLogicalAttributeAggregation",
            "floatFunctionalGraph": "#/components/schemas/GrantaServerApiAggregationsFloatFunctionalAttributeAggregation"
          }
        },
        "x-discriminator-value": "value"
      },
      "GrantaServerApiAggregationsCalendarInterval": {
        "enum": [
          "minute",
          "hour",
          "day",
          "week",
          "month",
          "quarter",
          "year"
        ],
        "type": "string"
      },
      "GrantaServerApiAggregationsDateTimeAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "dateTime"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a datetime attribute. The returned aggregation will contain the minimum and maximum\r\nvalues, and a count of records with a value for the attribute.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "dateTime"
      },
      "GrantaServerApiAggregationsDateTimeAttributeAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "maximum": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "datumType": {
                "type": "string",
                "default": "dateTime"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "dateTime"
      },
      "GrantaServerApiAggregationsDateTimeAttributeHistogramAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "histogram": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsDateTimeHistogram"
              },
              "datumType": {
                "type": "string",
                "default": "dateTimeHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "dateTimeHistogram"
      },
      "GrantaServerApiAggregationsDateTimeFixedCalendarWidthHistogramAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "interval": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsCalendarInterval"
              },
              "offset": {
                "type": "string",
                "description": "Optional offset of the lowest bucket boundary, in SI time units. Must be an integer followed by one of the following units: ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). Defaults to 0. Must be less than the interval. Negative offsets (e.g. \"-6h\") are supported",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "dateTimeFixedCalendarWidthHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a date attribute. The returned aggregation will contain a histogram of the data with a fixed calendar interval.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "dateTimeFixedCalendarWidthHistogram"
      },
      "GrantaServerApiAggregationsDateTimeFixedWidthHistogramAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "interval": {
                "type": "string",
                "description": "Fixed size of the resulting histogram buckets, in SI time units. Must be an integer followed by one of the following units: ms (milliseconds), s (seconds), m (minutes), h (hours), d (days)",
                "nullable": true
              },
              "offset": {
                "type": "string",
                "description": "Optional offset of the lowest bucket boundary, in SI time units. Must be an integer followed by one of the following units: ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). Defaults to 0. Must be less than the interval. Negative offsets (e.g. \"-6h\") are supported",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "dateTimeFixedWidthHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a date attribute. The returned aggregation will contain a histogram of the data with a fixed interval.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "dateTimeFixedWidthHistogram"
      },
      "GrantaServerApiAggregationsDateTimeHistogram": {
        "type": "object",
        "properties": {
          "buckets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiAggregationsDateTimeHistogramBucket"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiAggregationsDateTimeHistogramAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "maximumNumberOfBuckets": {
                "type": "integer",
                "description": "The maximum number of buckets to return.",
                "format": "int32"
              },
              "type": {
                "type": "string",
                "default": "dateTimeHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within an datetime attribute. The returned aggregation will contain a histogram of the data with a fixed number of buckets. The buckets may have variable widths.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "dateTimeHistogram"
      },
      "GrantaServerApiAggregationsDateTimeHistogramBucket": {
        "type": "object",
        "properties": {
          "lower": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiAggregationsDiscreteTextAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "numberOfTerms": {
                "type": "integer",
                "description": "The maximum number of terms to return in this aggregation.",
                "format": "int32"
              },
              "prefix": {
                "type": "string",
                "description": "An optional textual prefix. If provided, only terms that start with this prefix will be\r\nconsidered in the aggregation.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "discreteText"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating textual data within a discrete attribute. The returned aggregation will contain the most common\r\nterms for the attribute across records in the aggregation scope, with a count of records for each term.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "discreteText"
      },
      "GrantaServerApiAggregationsDiscreteTextAttributeAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "terms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsTermWithCount"
                },
                "nullable": true
              },
              "datumType": {
                "type": "string",
                "default": "discreteText"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "discreteText"
      },
      "GrantaServerApiAggregationsFloatFunctionalAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "numberOfParameterValues": {
                "type": "integer",
                "description": "The maximum number of values to return in this aggregation.",
                "format": "int32"
              },
              "type": {
                "type": "string",
                "default": "floatFunctionalGraph"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating the graph information within a float functional attribute.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "floatFunctionalGraph"
      },
      "GrantaServerApiAggregationsFloatFunctionalAttributeAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "xAxisParameterIdentityValues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsValueWithCountOfSystemInt32"
                },
                "nullable": true
              },
              "xAxisParameterGuidValues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsValueWithCountOfSystemGuid"
                },
                "nullable": true
              },
              "showAsTableValues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsValueWithCountOfSystemBoolean"
                },
                "nullable": true
              },
              "minimumNumberOfSeries": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "maximumNumberOfSeries": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "datumType": {
                "type": "string",
                "default": "floatFunctionalGraph"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "floatFunctionalGraph"
      },
      "GrantaServerApiAggregationsFreeTextAggregation": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregation"
          },
          {
            "type": "object",
            "properties": {
              "guid": {
                "type": "string",
                "description": "The GUID of the input aggregation criterion.",
                "format": "uuid"
              },
              "terms": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The topmost terms in the specified attributes, across all relevant records. Due to how\r\nmatches in multiple attributes are reconciled, we cannot easily provide a document count,\r\nnor can we guarantee that the terms are perfectly correctly ordered.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "text"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The results of aggregation over an attribute.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregation",
        "x-discriminator-value": "text"
      },
      "GrantaServerApiAggregationsFreeTextAggregationCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationCriterion"
          },
          {
            "type": "object",
            "properties": {
              "criterionGuid": {
                "type": "string",
                "description": "A GUID to identify this free-text criterion, so that its results can be determined in the output.\r\nFor each input free-text aggregation criterion, there will be a free-text aggregation in the output\r\nwith a matching GUID.",
                "format": "uuid"
              },
              "identities": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              },
              "identitiesToExclude": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              },
              "guids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              },
              "guidsToExclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              },
              "numberOfTerms": {
                "type": "integer",
                "description": "The number of terms that should be returned",
                "format": "int32"
              },
              "prefix": {
                "type": "string",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "text"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A criterion for requesting a free text aggregation over a set of identities. If attribute identifiers are provided, all fields must use either identities or GUIDs\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationCriterion",
        "x-discriminator-value": "text"
      },
      "GrantaServerApiAggregationsHistogram": {
        "type": "object",
        "properties": {
          "buckets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiAggregationsHistogramBucket"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiAggregationsHistogramBucket": {
        "type": "object",
        "properties": {
          "lower": {
            "type": "number",
            "format": "double"
          },
          "upper": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiAggregationsIntegerAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "integer"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within an integer attribute. The returned aggregation will contain the minimum and maximum\r\nvalues, and a count of records with a value for the attribute.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "integer"
      },
      "GrantaServerApiAggregationsIntegerAttributeAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "maximum": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "datumType": {
                "type": "string",
                "default": "integer"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "integer"
      },
      "GrantaServerApiAggregationsIntegerAttributeHistogramAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "histogram": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsHistogram"
              },
              "datumType": {
                "type": "string",
                "default": "integerHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "integerHistogram"
      },
      "GrantaServerApiAggregationsIntegerFixedWidthHistogramAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "interval": {
                "type": "number",
                "description": "Fixed size of the resulting histogram buckets",
                "format": "double"
              },
              "offset": {
                "type": "number",
                "description": "Offset of the lowest bucket boundary. Defaults to 0. Must be less than the interval.",
                "format": "double"
              },
              "type": {
                "type": "string",
                "default": "integerFixedWidthHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within an integer attribute. The returned aggregation will contain a histogram of the data with a fixed interval.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "integerFixedWidthHistogram"
      },
      "GrantaServerApiAggregationsIntegerHistogramAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "maximumNumberOfBuckets": {
                "type": "integer",
                "format": "int32"
              },
              "type": {
                "type": "string",
                "default": "integerHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within an integer attribute. The returned aggregation will contain a histogram of the data with a fixed number of buckets. The buckets may have variable widths.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "integerHistogram"
      },
      "GrantaServerApiAggregationsLinkAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "link"
              },
              "localAggregationCriteria": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationCriterion"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a tabular attribute. The local columns specified will be individually aggregated\r\nacross all rows (including rows without linked records, which may be hidden in clients).\r\n            \r\nThe returned aggregation will contain a list of the individual column aggregations that have been performed. Within these\r\ncolumn aggregations, the 'record count' instead denotes the number of relevant tabular rows across all records in the\r\naggregation scope, rather than the number of records. This row count will include rows that may be hidden from the user's\r\nview in certain clients.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "link"
      },
      "GrantaServerApiAggregationsLinkAttributeAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "localAggregations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeAggregation"
                },
                "nullable": true
              },
              "datumType": {
                "type": "string",
                "default": "link"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "link"
      },
      "GrantaServerApiAggregationsLogicalAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "logical"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a logical attribute. The returned aggregation will contain a count of records with at least one value for the attribute,\r\nand a count of records for the true/false values.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "logical"
      },
      "GrantaServerApiAggregationsLogicalAttributeAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsValueWithCountOfSystemBoolean"
                },
                "nullable": true
              },
              "datumType": {
                "type": "string",
                "default": "logical"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "logical"
      },
      "GrantaServerApiAggregationsPointAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "point"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a point attribute. The returned aggregation will contain the minimum and maximum\r\nvalues (in database units), and a count of records with at least one value for the attribute.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "point"
      },
      "GrantaServerApiAggregationsPointAttributeAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "maximum": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "datumType": {
                "type": "string",
                "default": "point"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "point"
      },
      "GrantaServerApiAggregationsPointAttributeHistogramAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "histogram": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsHistogram"
              },
              "datumType": {
                "type": "string",
                "default": "pointHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "pointHistogram"
      },
      "GrantaServerApiAggregationsPointFixedWidthHistogramAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "interval": {
                "type": "number",
                "description": "Fixed size of the resulting histogram buckets",
                "format": "double"
              },
              "offset": {
                "type": "number",
                "description": "Offset of the lowest bucket boundary. Defaults to 0. Must be less than the interval.",
                "format": "double"
              },
              "type": {
                "type": "string",
                "default": "pointFixedWidthHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a point attribute. The returned aggregation will contain a histogram of the data with a fixed interval.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "pointFixedWidthHistogram"
      },
      "GrantaServerApiAggregationsPointHistogramAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "maximumNumberOfBuckets": {
                "type": "integer",
                "format": "int32"
              },
              "type": {
                "type": "string",
                "default": "pointHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a point attribute. The returned aggregation will contain a histogram of the data with a fixed number of buckets. The buckets may have variable widths.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "pointHistogram"
      },
      "GrantaServerApiAggregationsRangeAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "range"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a range attribute. The returned aggregation will contain the minimum and maximum\r\nvalues (in database units), and a count of records with a value for the attribute.\r\n            \r\nAs in MI elsewhere, a range with only one boundary specified is treated like a point, rather than an infinitely large range.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "range"
      },
      "GrantaServerApiAggregationsRangeAttributeAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "maximum": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "datumType": {
                "type": "string",
                "default": "range"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "range"
      },
      "GrantaServerApiAggregationsRangeAttributeHistogramAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "histogram": {
                "$ref": "#/components/schemas/GrantaServerApiAggregationsHistogram"
              },
              "datumType": {
                "type": "string",
                "default": "rangeHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "rangeHistogram"
      },
      "GrantaServerApiAggregationsRangeFixedWidthHistogramAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "interval": {
                "type": "number",
                "description": "Fixed size of the resulting histogram buckets",
                "format": "double"
              },
              "offset": {
                "type": "number",
                "description": "Offset of the lowest bucket boundary. Defaults to 0. Must be less than the interval.",
                "format": "double"
              },
              "type": {
                "type": "string",
                "default": "rangeFixedWidthHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a range attribute. The returned aggregation will contain a histogram of the data with a fixed interval.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "rangeFixedWidthHistogram"
      },
      "GrantaServerApiAggregationsRangeHistogramAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "maximumNumberOfBuckets": {
                "type": "integer",
                "format": "int32"
              },
              "type": {
                "type": "string",
                "default": "rangeHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a range attribute. The returned aggregation will contain a histogram of the data with a fixed number of buckets. The buckets may have variable widths.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "rangeHistogram"
      },
      "GrantaServerApiAggregationsShortTextAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "numberOfTerms": {
                "type": "integer",
                "description": "The maximum number of terms to return in this aggregation. If this is not provided,\r\nor if an invalid value is provided, then a default value of 10 will be assumed.",
                "format": "int32"
              },
              "prefix": {
                "type": "string",
                "description": "An optional textual prefix. If provided, only terms that start with this prefix will be\r\nconsidered in the aggregation.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "shortText"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a short-text attribute. The returned aggregation will contain the most common\r\nterms for the attribute across records in the aggregation scope, with a count of records for each term.\r\n\r\nThis extends: GrantaServerApiAggregationsAggregationDatumCriterion",
        "x-discriminator-value": "shortText"
      },
      "GrantaServerApiAggregationsShortTextAttributeAggregation": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiAggregationsAttributeValueAggregation"
          },
          {
            "type": "object",
            "properties": {
              "terms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiAggregationsTermWithCount"
                },
                "nullable": true
              },
              "datumType": {
                "type": "string",
                "default": "shortText"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiAggregationsAttributeValueAggregation",
        "x-discriminator-value": "shortText"
      },
      "GrantaServerApiAggregationsTermWithCount": {
        "type": "object",
        "properties": {
          "term": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A term from the search index, along with a count of how many times it occurs in some scope."
      },
      "GrantaServerApiAggregationsValueWithCountOfSystemBoolean": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A value from the search index, along with a count of how many times it occurs in some scope."
      },
      "GrantaServerApiAggregationsValueWithCountOfSystemGuid": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A value from the search index, along with a count of how many times it occurs in some scope."
      },
      "GrantaServerApiAggregationsValueWithCountOfSystemInt32": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A value from the search index, along with a count of how many times it occurs in some scope."
      },
      "GrantaServerApiAttributeType": {
        "enum": [
          "integer",
          "point",
          "range",
          "logical",
          "shortText",
          "longText",
          "dateTime",
          "discrete",
          "hyperlink",
          "file",
          "picture",
          "link",
          "floatFunctional",
          "discreteFunctional",
          "mathsFunctional"
        ],
        "type": "string",
        "description": "The types of attribute that are supported by the API."
      },
      "GrantaServerApiDataExportAttributeToExport": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiDataExportLinkAttributeToExport\r\n * GrantaServerApiDataExportSimpleAttributeToExport",
        "discriminator": {
          "propertyName": "attributeType",
          "mapping": {
            "link": "#/components/schemas/GrantaServerApiDataExportLinkAttributeToExport",
            "simple": "#/components/schemas/GrantaServerApiDataExportSimpleAttributeToExport"
          }
        }
      },
      "GrantaServerApiDataExportDataExportRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportAttributeToExport"
            },
            "nullable": true
          },
          "recordProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiRecordProperty"
            },
            "nullable": true
          },
          "recordHistoryIdentities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request object for exporting the attribute data from a list of records. Either the identity or GUID of the attributes to export must be provided"
      },
      "GrantaServerApiDataExportDataExportResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportRecordWithData"
            },
            "nullable": true
          },
          "failures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportExportFailure"
            },
            "description": "List the records that were requested, but that we failed to export any data for.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsApplicableDatum": {
        "type": "object",
        "properties": {
          "notApplicable": {
            "type": "boolean"
          },
          "attributeIdentity": {
            "type": "integer",
            "format": "int64"
          },
          "attributeGuid": {
            "type": "string",
            "format": "uuid"
          },
          "metaDatums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsDatum"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiDataExportDatumsBooleanDatum\r\n * GrantaServerApiDataExportDatumsDateTimeDatum\r\n * GrantaServerApiDataExportDatumsDiscreteDatum\r\n * GrantaServerApiDataExportDatumsFileDatum\r\n * GrantaServerApiDataExportDatumsFloatFunctionalDatum\r\n * GrantaServerApiDataExportDatumsDiscreteFunctionalDatum\r\n * GrantaServerApiDataExportDatumsHyperlinkDatum\r\n * GrantaServerApiDataExportDatumsLinkDatum\r\n * GrantaServerApiDataExportDatumsLongTextDatum\r\n * GrantaServerApiDataExportDatumsNumericDatum\r\n * GrantaServerApiDataExportDatumsPictureDatum\r\n * GrantaServerApiDataExportDatumsPointDatum\r\n * GrantaServerApiDataExportDatumsRangeDatum\r\n * GrantaServerApiDataExportDatumsShortTextDatum",
        "discriminator": {
          "propertyName": "datumType",
          "mapping": {
            "logical": "#/components/schemas/GrantaServerApiDataExportDatumsBooleanDatum",
            "dateTime": "#/components/schemas/GrantaServerApiDataExportDatumsDateTimeDatum",
            "discrete": "#/components/schemas/GrantaServerApiDataExportDatumsDiscreteDatum",
            "file": "#/components/schemas/GrantaServerApiDataExportDatumsFileDatum",
            "floatFunctional": "#/components/schemas/GrantaServerApiDataExportDatumsFloatFunctionalDatum",
            "discreteFunctional": "#/components/schemas/GrantaServerApiDataExportDatumsDiscreteFunctionalDatum",
            "hyperlink": "#/components/schemas/GrantaServerApiDataExportDatumsHyperlinkDatum",
            "link": "#/components/schemas/GrantaServerApiDataExportDatumsLinkDatum",
            "longText": "#/components/schemas/GrantaServerApiDataExportDatumsLongTextDatum",
            "integer": "#/components/schemas/GrantaServerApiDataExportDatumsNumericDatum",
            "picture": "#/components/schemas/GrantaServerApiDataExportDatumsPictureDatum",
            "point": "#/components/schemas/GrantaServerApiDataExportDatumsPointDatum",
            "range": "#/components/schemas/GrantaServerApiDataExportDatumsRangeDatum",
            "shortText": "#/components/schemas/GrantaServerApiDataExportDatumsShortTextDatum"
          }
        }
      },
      "GrantaServerApiDataExportDatumsBinaryData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsBooleanDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "logical"
              },
              "datumValue": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "logical"
      },
      "GrantaServerApiDataExportDatumsDateTimeDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "dateTime"
              },
              "datumValue": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "dateTime"
      },
      "GrantaServerApiDataExportDatumsDatum": {
        "type": "object",
        "properties": {
          "attributeIdentity": {
            "type": "integer",
            "format": "int64"
          },
          "attributeGuid": {
            "type": "string",
            "format": "uuid"
          },
          "metaDatums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsDatum"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsDiscreteDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "discrete"
              },
              "datumValue": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDiscreteValue"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "discrete"
      },
      "GrantaServerApiDataExportDatumsDiscreteFunctionalDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          }
        ],
        "properties": {
          "datumType": {
            "type": "string",
            "default": "discreteFunctional"
          },
          "xAxisParameter": {
            "$ref": "#/components/schemas/GrantaServerApiFunctionalDatumParameterInfo"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiFunctionalDatumParameterInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum\r\n\r\nThis is one of: \r\n * GrantaServerApiDataExportDatumsDiscreteFunctionalGridDatum\r\n * GrantaServerApiDataExportDatumsDiscreteFunctionalSeriesDatum",
        "discriminator": {
          "propertyName": "graphType",
          "mapping": {
            "grid": "#/components/schemas/GrantaServerApiDataExportDatumsDiscreteFunctionalGridDatum",
            "series": "#/components/schemas/GrantaServerApiDataExportDatumsDiscreteFunctionalSeriesDatum"
          }
        },
        "x-discriminator-value": "discreteFunctional"
      },
      "GrantaServerApiDataExportDatumsDiscreteFunctionalGridDatum": {
        "required": [
          "graphType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsDiscreteFunctionalDatum"
          },
          {
            "type": "object",
            "properties": {
              "graphType": {
                "type": "string",
                "default": "grid"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsDiscreteGridPoint"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsDiscreteFunctionalDatum",
        "x-discriminator-value": "grid"
      },
      "GrantaServerApiDataExportDatumsDiscreteFunctionalSeriesDatum": {
        "required": [
          "graphType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsDiscreteFunctionalDatum"
          },
          {
            "type": "object",
            "properties": {
              "graphType": {
                "type": "string",
                "default": "series"
              },
              "series": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsDiscreteSeries"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsDiscreteFunctionalDatum",
        "x-discriminator-value": "series"
      },
      "GrantaServerApiDataExportDatumsDiscreteGridPoint": {
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsParameterValue"
            },
            "nullable": true
          },
          "value": {
            "$ref": "#/components/schemas/GrantaServerApiDiscreteValue"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsDiscreteSeries": {
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsParameterValue"
            },
            "nullable": true
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsDiscreteSeriesPoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsDiscreteSeriesPoint": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "xName": {
            "type": "string",
            "nullable": true
          },
          "y": {
            "$ref": "#/components/schemas/GrantaServerApiDiscreteValue"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsFileDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "file"
              },
              "datumValue": {
                "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsBinaryData"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "file"
      },
      "GrantaServerApiDataExportDatumsFloatFunctionalDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          }
        ],
        "properties": {
          "datumType": {
            "type": "string",
            "default": "floatFunctional"
          },
          "unitSymbol": {
            "type": "string",
            "nullable": true
          },
          "xAxisParameter": {
            "$ref": "#/components/schemas/GrantaServerApiFunctionalDatumParameterInfo"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiFunctionalDatumParameterInfo"
            },
            "nullable": true
          },
          "isEstimated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum\r\n\r\nThis is one of: \r\n * GrantaServerApiDataExportDatumsFunctionalGridDatum\r\n * GrantaServerApiDataExportDatumsFunctionalSeriesDatum",
        "discriminator": {
          "propertyName": "graphType",
          "mapping": {
            "grid": "#/components/schemas/GrantaServerApiDataExportDatumsFunctionalGridDatum",
            "series": "#/components/schemas/GrantaServerApiDataExportDatumsFunctionalSeriesDatum"
          }
        },
        "x-discriminator-value": "floatFunctional"
      },
      "GrantaServerApiDataExportDatumsFunctionalGridDatum": {
        "required": [
          "graphType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsFloatFunctionalDatum"
          },
          {
            "type": "object",
            "properties": {
              "graphType": {
                "type": "string",
                "default": "grid"
              },
              "points": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsGridPoint"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsFloatFunctionalDatum",
        "x-discriminator-value": "grid"
      },
      "GrantaServerApiDataExportDatumsFunctionalSeriesDatum": {
        "required": [
          "graphType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsFloatFunctionalDatum"
          },
          {
            "type": "object",
            "properties": {
              "graphType": {
                "type": "string",
                "default": "series"
              },
              "series": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsSeries"
                },
                "nullable": true
              },
              "isLogarithmic": {
                "type": "boolean"
              },
              "isRange": {
                "type": "boolean"
              },
              "showAsTable": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsFloatFunctionalDatum",
        "x-discriminator-value": "series"
      },
      "GrantaServerApiDataExportDatumsGraphDecoration": {
        "enum": [
          "Lines",
          "Markers",
          "LinesAndMarkers"
        ],
        "type": "string",
        "description": "Indicates how a graphical representation of a graph should be rendered"
      },
      "GrantaServerApiDataExportDatumsGridPoint": {
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsParameterValue"
            },
            "nullable": true
          },
          "low": {
            "type": "number",
            "format": "double"
          },
          "high": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsHyperlink": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "formattedAddress": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsHyperlinkDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "hyperlink"
              },
              "datumValue": {
                "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsHyperlink"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "hyperlink"
      },
      "GrantaServerApiDataExportDatumsLinkDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          }
        ],
        "properties": {
          "datumType": {
            "type": "string",
            "default": "link"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum\r\n\r\nThis is one of: \r\n * GrantaServerApiDataExportDatumsLinkedRecordsDatum\r\n * GrantaServerApiDataExportDatumsTabularDatum",
        "discriminator": {
          "propertyName": "linkDatumType",
          "mapping": {
            "linkGroup": "#/components/schemas/GrantaServerApiDataExportDatumsLinkedRecordsDatum",
            "tabular": "#/components/schemas/GrantaServerApiDataExportDatumsTabularDatum"
          }
        },
        "x-discriminator-value": "link"
      },
      "GrantaServerApiDataExportDatumsLinkedRecordsDatum": {
        "required": [
          "linkDatumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsLinkDatum"
          },
          {
            "type": "object",
            "properties": {
              "linkGroupName": {
                "type": "string",
                "nullable": true
              },
              "linkAttributeType": {
                "$ref": "#/components/schemas/GrantaServerApiLinkAttributeType"
              },
              "exportInReversedDirection": {
                "type": "boolean"
              },
              "targetDatabaseGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "linkedRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportRecordWithData"
                },
                "nullable": true
              },
              "linkGroupNamesByDatabaseKey": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "nullable": true
                },
                "nullable": true
              },
              "linkGroupIdentitiesByDatabaseKey": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
                },
                "nullable": true
              },
              "linkDatumType": {
                "type": "string",
                "default": "linkGroup"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsLinkDatum",
        "x-discriminator-value": "linkGroup"
      },
      "GrantaServerApiDataExportDatumsLongTextDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "longText"
              },
              "datumValue": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "longText"
      },
      "GrantaServerApiDataExportDatumsNumericDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "integer"
              },
              "datumValue": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "integer"
      },
      "GrantaServerApiDataExportDatumsParameterValue": {
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GrantaServerApiParameterInfo"
          },
          "valueName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsPictureDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "picture"
              },
              "datumValue": {
                "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsBinaryData"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "picture"
      },
      "GrantaServerApiDataExportDatumsPoint": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsParameterValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsPointDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "point"
              },
              "datumValue": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsPoint"
                },
                "nullable": true
              },
              "isEstimated": {
                "type": "boolean"
              },
              "unit": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "point"
      },
      "GrantaServerApiDataExportDatumsRange": {
        "type": "object",
        "properties": {
          "highValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lowValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "highValueIsInclusive": {
            "type": "boolean"
          },
          "lowValueIsInclusive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsRangeDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "range"
              },
              "datumValue": {
                "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsRange"
              },
              "isEstimated": {
                "type": "boolean"
              },
              "unit": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "range"
      },
      "GrantaServerApiDataExportDatumsSeries": {
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsParameterValue"
            },
            "nullable": true
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsSeriesPoint"
            },
            "nullable": true
          },
          "graphDecoration": {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsGraphDecoration"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsSeriesPoint": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "xName": {
            "type": "string",
            "nullable": true
          },
          "yLow": {
            "type": "number",
            "format": "double"
          },
          "yHigh": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportDatumsShortTextDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumType": {
                "type": "string",
                "default": "shortText"
              },
              "datumValue": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsApplicableDatum",
        "x-discriminator-value": "shortText"
      },
      "GrantaServerApiDataExportDatumsTabularDatum": {
        "required": [
          "linkDatumType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsLinkDatum"
          },
          {
            "type": "object",
            "properties": {
              "attributeName": {
                "type": "string",
                "nullable": true
              },
              "tabularRows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsTabularRow"
                },
                "nullable": true
              },
              "linkDatumType": {
                "type": "string",
                "default": "tabular"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportDatumsLinkDatum",
        "x-discriminator-value": "tabular"
      },
      "GrantaServerApiDataExportDatumsTabularRow": {
        "type": "object",
        "properties": {
          "rowGuid": {
            "type": "string",
            "format": "uuid"
          },
          "linkingValue": {
            "type": "string",
            "nullable": true
          },
          "rowNumber": {
            "type": "integer",
            "format": "int32"
          },
          "localData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsDatum"
            },
            "nullable": true
          },
          "linkedRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIntegrationDataExportRecordReference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportExportFailure": {
        "type": "object",
        "properties": {
          "failureReason": {
            "type": "string",
            "nullable": true
          },
          "failedRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIntegrationDataExportRecordReference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportLinkAttributeToExport": {
        "required": [
          "attributeType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportAttributeToExport"
          },
          {
            "type": "object",
            "properties": {
              "localData": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportSimpleAttributeToExport"
                },
                "nullable": true
              },
              "targetTableGuid": {
                "type": "string",
                "description": "Table containing the linked records",
                "format": "uuid",
                "nullable": true
              },
              "targetDatabaseGuid": {
                "type": "string",
                "description": "Database containing the linked records. For reverse cross database links, this is the database where the link is defined.\r\nThis is not required for tabular links, and for cross-database link groups that don't have a target database.",
                "format": "uuid",
                "nullable": true
              },
              "targetAttributeIdentity": {
                "type": "integer",
                "description": "For tabular searching: this is the identity of the short-text linking attribute.\r\nOtherwise null.",
                "format": "int32",
                "nullable": true
              },
              "attributeType": {
                "type": "string",
                "default": "link"
              },
              "linkAttributeType": {
                "$ref": "#/components/schemas/GrantaServerApiLinkAttributeType"
              },
              "exportInReversedDirection": {
                "type": "boolean"
              },
              "recordProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiRecordProperty"
                },
                "description": "The properties to export on any linked records.",
                "nullable": true
              },
              "attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiDataExportAttributeToExport"
                },
                "description": "The attributes to export on any linked records.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Export request information for a 'link' attribute.\r\n\r\nThis extends: GrantaServerApiDataExportAttributeToExport",
        "x-discriminator-value": "link"
      },
      "GrantaServerApiDataExportParameterSettingDefinedAt": {
        "enum": [
          "parameter",
          "attribute",
          "datum"
        ],
        "type": "string"
      },
      "GrantaServerApiDataExportPropertiesCreatedByUserProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "createdByUser"
              },
              "createdByUser": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "createdByUser"
      },
      "GrantaServerApiDataExportPropertiesCreatedDateProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "createdDate"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "createdDate"
      },
      "GrantaServerApiDataExportPropertiesDatabaseKeyProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "databaseKey"
              },
              "databaseKey": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "databaseKey"
      },
      "GrantaServerApiDataExportPropertiesFullNameProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "fullName"
              },
              "fullName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "fullName"
      },
      "GrantaServerApiDataExportPropertiesLastModifiedByUserProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "lastModifiedByUser"
              },
              "lastModifiedByUser": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "lastModifiedByUser"
      },
      "GrantaServerApiDataExportPropertiesLastModifiedDateProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "lastModifiedDate"
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "lastModifiedDate"
      },
      "GrantaServerApiDataExportPropertiesProperty": {
        "type": "object",
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiDataExportPropertiesCreatedByUserProperty\r\n * GrantaServerApiDataExportPropertiesCreatedDateProperty\r\n * GrantaServerApiDataExportPropertiesDatabaseKeyProperty\r\n * GrantaServerApiDataExportPropertiesFullNameProperty\r\n * GrantaServerApiDataExportPropertiesLastModifiedDateProperty\r\n * GrantaServerApiDataExportPropertiesLastModifiedByUserProperty\r\n * GrantaServerApiDataExportPropertiesRecordColorProperty\r\n * GrantaServerApiDataExportPropertiesRecordGuidProperty\r\n * GrantaServerApiDataExportPropertiesRecordIdentityProperty\r\n * GrantaServerApiDataExportPropertiesRecordHistoryGuidProperty\r\n * GrantaServerApiDataExportPropertiesRecordHistoryIdentityProperty\r\n * GrantaServerApiDataExportPropertiesRecordTypeProperty\r\n * GrantaServerApiDataExportPropertiesReleasedDateProperty\r\n * GrantaServerApiDataExportPropertiesShortNameProperty\r\n * GrantaServerApiDataExportPropertiesTableGuidProperty\r\n * GrantaServerApiDataExportPropertiesTableIdentityProperty\r\n * GrantaServerApiDataExportPropertiesTableNameProperty\r\n * GrantaServerApiDataExportPropertiesVersionNumberProperty\r\n * GrantaServerApiDataExportPropertiesVersionStateProperty",
        "discriminator": {
          "propertyName": "propertyName",
          "mapping": {
            "createdByUser": "#/components/schemas/GrantaServerApiDataExportPropertiesCreatedByUserProperty",
            "createdDate": "#/components/schemas/GrantaServerApiDataExportPropertiesCreatedDateProperty",
            "databaseKey": "#/components/schemas/GrantaServerApiDataExportPropertiesDatabaseKeyProperty",
            "fullName": "#/components/schemas/GrantaServerApiDataExportPropertiesFullNameProperty",
            "lastModifiedDate": "#/components/schemas/GrantaServerApiDataExportPropertiesLastModifiedDateProperty",
            "lastModifiedByUser": "#/components/schemas/GrantaServerApiDataExportPropertiesLastModifiedByUserProperty",
            "recordColor": "#/components/schemas/GrantaServerApiDataExportPropertiesRecordColorProperty",
            "recordGuid": "#/components/schemas/GrantaServerApiDataExportPropertiesRecordGuidProperty",
            "recordIdentity": "#/components/schemas/GrantaServerApiDataExportPropertiesRecordIdentityProperty",
            "recordHistoryGuid": "#/components/schemas/GrantaServerApiDataExportPropertiesRecordHistoryGuidProperty",
            "recordHistoryIdentity": "#/components/schemas/GrantaServerApiDataExportPropertiesRecordHistoryIdentityProperty",
            "recordType": "#/components/schemas/GrantaServerApiDataExportPropertiesRecordTypeProperty",
            "releasedDate": "#/components/schemas/GrantaServerApiDataExportPropertiesReleasedDateProperty",
            "shortName": "#/components/schemas/GrantaServerApiDataExportPropertiesShortNameProperty",
            "tableGuid": "#/components/schemas/GrantaServerApiDataExportPropertiesTableGuidProperty",
            "tableIdentity": "#/components/schemas/GrantaServerApiDataExportPropertiesTableIdentityProperty",
            "tableName": "#/components/schemas/GrantaServerApiDataExportPropertiesTableNameProperty",
            "versionNumber": "#/components/schemas/GrantaServerApiDataExportPropertiesVersionNumberProperty",
            "versionState": "#/components/schemas/GrantaServerApiDataExportPropertiesVersionStateProperty"
          }
        }
      },
      "GrantaServerApiDataExportPropertiesRecordColorProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "recordColor"
              },
              "recordColor": {
                "$ref": "#/components/schemas/GrantaServerApiRecordColor"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "recordColor"
      },
      "GrantaServerApiDataExportPropertiesRecordGuidProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "recordGuid"
              },
              "recordGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "recordGuid"
      },
      "GrantaServerApiDataExportPropertiesRecordHistoryGuidProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "recordHistoryGuid"
              },
              "recordHistoryGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "recordHistoryGuid"
      },
      "GrantaServerApiDataExportPropertiesRecordHistoryIdentityProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "recordHistoryIdentity"
              },
              "recordHistoryIdentity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "recordHistoryIdentity"
      },
      "GrantaServerApiDataExportPropertiesRecordIdentityProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "recordIdentity"
              },
              "recordIdentity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "recordIdentity"
      },
      "GrantaServerApiDataExportPropertiesRecordTypeProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "recordType"
              },
              "recordType": {
                "$ref": "#/components/schemas/GrantaServerApiRecordType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "recordType"
      },
      "GrantaServerApiDataExportPropertiesReleasedDateProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "releasedDate"
              },
              "releasedDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "releasedDate"
      },
      "GrantaServerApiDataExportPropertiesShortNameProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "shortName"
              },
              "shortName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "shortName"
      },
      "GrantaServerApiDataExportPropertiesTableGuidProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "tableGuid"
              },
              "tableGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "tableGuid"
      },
      "GrantaServerApiDataExportPropertiesTableIdentityProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "tableIdentity"
              },
              "tableIdentity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "tableIdentity"
      },
      "GrantaServerApiDataExportPropertiesTableNameProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "tableName"
              },
              "tableName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "tableName"
      },
      "GrantaServerApiDataExportPropertiesVersionNumberProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "versionNumber"
              },
              "versionNumber": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "versionNumber"
      },
      "GrantaServerApiDataExportPropertiesVersionStateProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
          },
          {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string",
                "default": "versionState"
              },
              "versionState": {
                "$ref": "#/components/schemas/GrantaServerApiVersionState"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportPropertiesProperty",
        "x-discriminator-value": "versionState"
      },
      "GrantaServerApiDataExportRecordWithData": {
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string",
            "nullable": true
          },
          "recordHistoryIdentity": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsDatum"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiDataExportPropertiesProperty"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDataExportSimpleAttributeToExport": {
        "required": [
          "attributeType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiDataExportAttributeToExport"
          },
          {
            "type": "object",
            "properties": {
              "attributeType": {
                "type": "string",
                "default": "simple"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiDataExportAttributeToExport",
        "x-discriminator-value": "simple"
      },
      "GrantaServerApiDiscreteValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiDiskStatus": {
        "enum": [
          "Ok",
          "LowWatermarkReached",
          "HighWatermarkReached",
          "FloodStageReached"
        ],
        "type": "string",
        "description": "The status of the amount of space remaining on the disk."
      },
      "GrantaServerApiExceptionsAttributeDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/SystemNetHttpStatusCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiExceptionsErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiExceptionsConstantDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/SystemNetHttpStatusCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiExceptionsErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiExceptionsDiscreteTypeDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/SystemNetHttpStatusCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiExceptionsErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiExceptionsDiscreteValueDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/SystemNetHttpStatusCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiExceptionsErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiExceptionsErrorDetail": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiExceptionsParameterDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/SystemNetHttpStatusCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiExceptionsErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiExceptionsParameterValueDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/SystemNetHttpStatusCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiExceptionsErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiExceptionsTableDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/SystemNetHttpStatusCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiExceptionsErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiFunctionalDatumParameterInfo": {
        "type": "object",
        "properties": {
          "scaleTypeDefinedAt": {
            "$ref": "#/components/schemas/GrantaServerApiDataExportParameterSettingDefinedAt"
          },
          "interpolationMethodDefinedAt": {
            "$ref": "#/components/schemas/GrantaServerApiDataExportParameterSettingDefinedAt"
          },
          "defaultValueDefinedAt": {
            "$ref": "#/components/schemas/GrantaServerApiDataExportParameterSettingDefinedAt"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "unitSymbol": {
            "type": "string",
            "nullable": true
          },
          "scaleType": {
            "type": "string",
            "description": "Linear or Log",
            "nullable": true
          },
          "interpolationType": {
            "type": "string",
            "description": "Auto, None, Linear or CubicSpline",
            "nullable": true
          },
          "parameterType": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsParameterValue"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiIndexRecordFailure": {
        "type": "object",
        "properties": {
          "recordHistoryIdentity": {
            "type": "integer",
            "format": "int32"
          },
          "recordName": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "description": "This is the error message from the indexing exception. It may have been returned directly from Elasticsearch.",
            "nullable": true
          },
          "recordWasOversized": {
            "type": "boolean",
            "description": "Records that contain a large amount of data are intentionally not sent to the index. This size limit is configurable through\r\nMIServer.exe.config"
          }
        },
        "additionalProperties": false,
        "description": "Detail of a record that has failed to successfully index. A record that was not indexed will not be returned\r\nas a result in any searches."
      },
      "GrantaServerApiIntegrationDataExportIntegrationDataExportRequest": {
        "type": "object",
        "properties": {
          "recordReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIntegrationDataExportRecordReference"
            },
            "description": "A list of records to export. These are references to the underlying records in the source database",
            "nullable": true
          },
          "attributeIdentities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of attribute to export. These are the attribute identities from the integration schema.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiIntegrationDataExportRecordReference": {
        "type": "object",
        "properties": {
          "recordHistoryIdentity": {
            "type": "integer",
            "format": "int32"
          },
          "databaseKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The unique way to identify a record history (which may have multiple versions) in an MI system"
      },
      "GrantaServerApiIntegrationIntegrationSchemaStatus": {
        "type": "object",
        "properties": {
          "loadedDatabases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Loaded databases have been successfully indexed into the integration schema.",
            "nullable": true
          },
          "loadingDatabases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Databases which are in the process of loading.",
            "nullable": true
          },
          "notLoadedDatabases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Databases that are referenced in the schema but that are not yet loaded. This could be because they are still queued for\r\nload in the MI system, or because they have not yet been added.",
            "nullable": true
          },
          "erroredDatabases": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Databases that encountered an error while loading. These databases will not be available for searches.",
            "nullable": true
          },
          "loadedDatabaseIndexStatuses": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GrantaServerApiSearchIndexStatus"
            },
            "description": "Index information about all loaded databases, including the out of sync status.",
            "nullable": true
          },
          "searchIndexUpToDate": {
            "type": "boolean",
            "description": "Whether all changes up to and including the most recent database revision have been sent to the search index. This will return true\r\neven if some of those revisions could not be indexed"
          },
          "searchIndexInSync": {
            "type": "boolean",
            "description": "Returns false if the search index is out of sync with the database (i.e. because changes were made that could not be indexed)"
          },
          "searchIndexLocation": {
            "type": "string",
            "description": "The location of the index.",
            "nullable": true
          },
          "searchIndexIsReadOnly": {
            "type": "boolean",
            "description": "True if the index is read only.",
            "nullable": true
          },
          "diskStatus": {
            "$ref": "#/components/schemas/GrantaServerApiDiskStatus"
          },
          "diskThreshold": {
            "type": "string",
            "description": "The 'flood stage' threshold from Elasticsearch.",
            "nullable": true
          },
          "searchIndexUnavailable": {
            "type": "boolean",
            "description": "True if the index could not be contacted.",
            "nullable": true
          },
          "recordsThatFailedToIndex": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIndexRecordFailure"
            },
            "description": "Details of any records that failed to index.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiIntegrationSchemaAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/GrantaServerApiAttributeType"
          },
          "unitSymbol": {
            "type": "string",
            "description": "If isUnitted is true, then this must have a non empty value",
            "nullable": true
          },
          "isUnitted": {
            "type": "boolean",
            "nullable": true
          },
          "discreteTypeIdentity": {
            "type": "integer",
            "description": "A discrete attribute must define the identity of its discrete type (i.e. list of possible values)",
            "format": "int32",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiParameterInfo"
            },
            "description": "A float functional attribute must define a list of parameters.",
            "nullable": true
          },
          "targetDatabase": {
            "$ref": "#/components/schemas/GrantaServerApiObjectIdentifier"
          },
          "targetTable": {
            "$ref": "#/components/schemas/GrantaServerApiObjectIdentifier"
          },
          "graphType": {
            "type": "string",
            "description": "A float functional attribute must be either a Series or a Grid type graph.",
            "nullable": true
          },
          "xAxisParameter": {
            "type": "string",
            "description": "A float functional attribute must define an x-axis. This will be one of the parameters listed in parameters",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An attribute as defined in an integration schema."
      },
      "GrantaServerApiIntegrationSchemaDiscreteType": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An integration schema discrete type defines the list of values that a discrete attribute can take."
      },
      "GrantaServerApiIntegrationSchemaIntegrationSchemaOfGrantaServerApiObjectIdentifier": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaAttribute"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaLayout"
            },
            "nullable": true
          },
          "unitSystem": {
            "type": "string",
            "nullable": true
          },
          "discreteTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaDiscreteType"
            },
            "nullable": true
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaSourceOfGrantaServerApiObjectIdentifier"
            },
            "nullable": true
          },
          "accessControlCategoryValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "nullable": true
          },
          "securityGroups": {
            "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaSecurityGroups"
          }
        },
        "additionalProperties": false,
        "description": "A type representing an integration schema. An integration schema is a schema that describes\r\na shape that data must conform to, similar to an MI schema, but unlike an MI schema, an\r\nintegration schema does not have any corresponding data stored in it. Instead, an integration\r\nschema defines mappings or transformations from existing stored data, which may be a different\r\nshape from the integration schema."
      },
      "GrantaServerApiIntegrationSchemaLayout": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "attributeIdentities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An integration schema layout is named list of attribute identities."
      },
      "GrantaServerApiIntegrationSchemaLinkSourceType": {
        "enum": [
          "recordLink",
          "crossDatabaseLink",
          "reverseCrossDatabaseLink"
        ],
        "type": "string",
        "description": "Source links for an integration schema can either be static (within an single database), or cross database. Cross database links\r\nmust indicate which database they are defined in - a reverse cross database link is defined in the \"target\" database of the mapped\r\nintegration schema attribute."
      },
      "GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/GrantaServerApiObjectIdentifier"
          },
          "targetIdentity": {
            "type": "integer",
            "description": "The identity of the integration schema attribute",
            "format": "int32"
          },
          "parameterMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier"
            },
            "description": "Any mapped parameters (float functional attributes only). The target parameters must be defined on the target integration attribute.\r\nNot every parameters from the source database needs to be mapped for each attribute.",
            "nullable": true
          },
          "linkSourceType": {
            "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaLinkSourceType"
          }
        },
        "additionalProperties": false,
        "description": "A mapping between a source database item and an integration schema attribute."
      },
      "GrantaServerApiIntegrationSchemaSecurityGroups": {
        "type": "object",
        "properties": {
          "readGroup": {
            "type": "string",
            "description": "Members of this groups can read data from the integration schema.",
            "nullable": true
          },
          "adminGroup": {
            "type": "string",
            "description": "Members of this group can perform administrative tasks such as adding or deleting the schema.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The security groups that apply to an integration schema. If null or empty, the default MI security groups will be used."
      },
      "GrantaServerApiIntegrationSchemaSourceOfGrantaServerApiObjectIdentifier": {
        "type": "object",
        "properties": {
          "database": {
            "$ref": "#/components/schemas/GrantaServerApiObjectIdentifier"
          },
          "databaseKey": {
            "type": "string",
            "nullable": true
          },
          "table": {
            "$ref": "#/components/schemas/GrantaServerApiObjectIdentifier"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIntegrationSchemaMappingOfGrantaServerApiObjectIdentifier"
            },
            "description": "Mappings for items from this table to the integration schema attributes.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A source table from which integrated data will be taken."
      },
      "GrantaServerApiLinkAttributeType": {
        "enum": [
          "recordLink",
          "crossDatabaseLink",
          "dynamicLink",
          "tabularAttribute"
        ],
        "type": "string"
      },
      "GrantaServerApiListsDtoListBooleanCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoListCriterion"
          },
          {
            "type": "object",
            "properties": {
              "matchAny": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoListCriterion"
                },
                "nullable": true
              },
              "matchAll": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiListsDtoListCriterion"
                },
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "listBoolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "listBoolean: Criterion that wraps other criteria in order to specify how the results should be joined together. Used in searches for record lists.\r\n\r\nThis extends: GrantaServerApiListsDtoListCriterion",
        "x-discriminator-value": "listBoolean"
      },
      "GrantaServerApiListsDtoListCriterion": {
        "type": "object",
        "additionalProperties": false,
        "description": "The criterion to be used in a search for record lists.\r\n            \r\nMultiple criterion can be provided. These should be wrapped with a boolean criterion that specifies whether the search should return results that match \"any\" or \"all\" of the criteria.\r\nThese criteria can be nested to created complex search queries.\r\n\r\nThis is one of: \r\n * GrantaServerApiListsDtoListBooleanCriterion\r\n * GrantaServerApiListsDtoRecordListSearchCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "listBoolean": "#/components/schemas/GrantaServerApiListsDtoListBooleanCriterion",
            "recordList": "#/components/schemas/GrantaServerApiListsDtoRecordListSearchCriterion"
          }
        }
      },
      "GrantaServerApiListsDtoListItem": {
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "recordVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoPagingOptions": {
        "type": "object",
        "properties": {
          "startIndex": {
            "type": "integer",
            "description": "The index of the first list in the collection to be returned. If not provided it will start at index 0.",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "description": "The number of lists to be returned per page. If not provided the number of returned lists will be unlimited.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoRecordListCreate": {
        "type": "object",
        "properties": {
          "items": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListItems"
          },
          "identifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "awaitingApproval": {
            "type": "boolean"
          },
          "internalUse": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoRecordListHeader": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            },
            "nullable": true
          },
          "parentRecordListIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "createdUser": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoUserOrGroup"
          },
          "lastModifiedTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedUser": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoUserOrGroup"
          },
          "publishedTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedUser": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoUserOrGroup"
          },
          "isRevision": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "awaitingApproval": {
            "type": "boolean"
          },
          "internalUse": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoRecordListItems": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiListsDtoListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoRecordListPermissionFlagsDto": {
        "type": "object",
        "properties": {
          "isOwner": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is an owner of this list.\r\nNull means: do not change this flag's value when inserting into database.",
            "nullable": true
          },
          "isSubscribed": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is subscribed to this list.\r\nNull means: do not change this flag's value when inserting into database.",
            "nullable": true
          },
          "isCurator": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is a curator of this list.\r\nNull means: do not change this flag's value when inserting into database.",
            "nullable": true
          },
          "isAdministrator": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is an administrator of this list.\r\nNull means: do not change this flag's value when inserting into database.",
            "nullable": true
          },
          "isPublisher": {
            "type": "boolean",
            "description": "Flag indicating if this user or group is a publisher of this list.\r\nNull means: do not change this flag's value when inserting into database.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoRecordListProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "awaitingApproval": {
            "type": "boolean"
          },
          "internalUse": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoRecordListSearchCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoListCriterion"
          },
          {
            "type": "object",
            "properties": {
              "nameContains": {
                "type": "string",
                "nullable": true
              },
              "userRole": {
                "$ref": "#/components/schemas/GrantaServerApiListsDtoUserRole"
              },
              "isPublished": {
                "type": "boolean",
                "nullable": true
              },
              "isAwaitingApproval": {
                "type": "boolean",
                "nullable": true
              },
              "isInternalUse": {
                "type": "boolean",
                "nullable": true
              },
              "isRevision": {
                "type": "boolean",
                "description": "Restrict to record lists that are (non discarded) revisions.",
                "nullable": true
              },
              "containsRecordsInDatabases": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Limits results to lists containing records in any of of the specified databases",
                "nullable": true
              },
              "containsRecordsInIntegrationSchemas": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Limits results to lists containing records in any of the specified integration schemas",
                "nullable": true
              },
              "containsRecordsInTables": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Limits results to lists containing records in any of the specified tables",
                "nullable": true
              },
              "containsRecords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Limits results to lists containing any of the given records",
                "nullable": true
              },
              "userCanAddOrRemoveItems": {
                "type": "boolean",
                "description": "Limits results to lists where the current user can add or remove items.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "recordList"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "recordList: Search criterion for a set of record lists.\r\n            \r\nThe properties in the this class represent an AND search - only lists that match all of the non-null properties will be returned\r\n\r\nThis extends: GrantaServerApiListsDtoListCriterion",
        "x-discriminator-value": "recordList"
      },
      "GrantaServerApiListsDtoRecordListSearchInfo": {
        "type": "object",
        "properties": {
          "searchResultIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoRecordListSearchRequest": {
        "type": "object",
        "properties": {
          "searchCriterion": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoListCriterion"
          },
          "pagingOptions": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoPagingOptions"
          },
          "responseOptions": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoResponseOptions"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoRecordListSearchResult": {
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListHeader"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiListsDtoListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoResponseOptions": {
        "type": "object",
        "properties": {
          "includeUserActions": {
            "type": "boolean"
          },
          "includeUserPermissions": {
            "type": "boolean"
          },
          "includeRecordListItems": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoUserOrGroup": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoUserPermissionDto": {
        "type": "object",
        "properties": {
          "userOrGroupName": {
            "type": "string",
            "description": "The user or group name.",
            "nullable": true
          },
          "userOrGroupIdentifier": {
            "type": "string",
            "description": "The user or group identifier",
            "format": "uuid"
          },
          "flags": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoUserPermissionInputDto": {
        "type": "object",
        "properties": {
          "userOrGroupIdentifier": {
            "type": "string",
            "description": "The user or group identifier",
            "format": "uuid"
          },
          "flags": {
            "$ref": "#/components/schemas/GrantaServerApiListsDtoRecordListPermissionFlagsDto"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiListsDtoUserRole": {
        "enum": [
          "None",
          "Owner",
          "Subscriber",
          "Curator",
          "Administrator",
          "Publisher"
        ],
        "type": "string",
        "description": "A set of flags that can be used to describe the role or roles that a user has on a particular record list"
      },
      "GrantaServerApiObjectIdentifier": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "The GUID of this object. The GUID represents the object on a semantic level, and two objects of\r\nthe same type with the same GUID are considered to represent \"the same concept\". GUIDs should be\r\nrobust against data changes and database upgrades, and should be preferred where possible.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of this object. The name represents the object at a human-readable level, but two objects of\r\nthe same type with the same need not represent \"the same concept\". Because the name is less uniquely identifying,\r\nclients should prefer GUIDs where possible, and operations based on name instead of GUID may fail if the name\r\ncannot be uniquely resolved. Certain object types may consider names to be equivalent",
            "nullable": true
          },
          "identity": {
            "type": "integer",
            "description": "The underlying identity of this object. This represents the object at a data level, and two objects\r\nof the same type with the same identity are considered to represent \"the same object\". However, identities\r\nare not robust against database upgrades, and are only reliable and consistent within a currently-\r\nloaded database in a running MI instance. Clients should prefer GUIDs where possible, and operations\r\nbased on identity which persist data will be resolved to GUIDs instead (and may fail if this cannot\r\nbe done).",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Properties that identify an object within the MI system.\r\n            \r\nAn Granta.Server.Api.ObjectIdentifier created by MI will always contain values for all three\r\nproperties. An Granta.Server.Api.ObjectIdentifier created by a client need not contain values for\r\nall three properties, and is allowed to contain values or combinations of values that do\r\nnot correspond to an existing object in MI (in which case the Granta.Server.Api.ObjectIdentifier\r\nwill be resolved against MI objects first by GUID, and then by name, and finally by identity,\r\ntaking the first match and ignoring subsequent fields."
      },
      "GrantaServerApiParameterInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "unitSymbol": {
            "type": "string",
            "nullable": true
          },
          "scaleType": {
            "type": "string",
            "description": "Linear or Log",
            "nullable": true
          },
          "interpolationType": {
            "type": "string",
            "description": "Auto, None, Linear or CubicSpline",
            "nullable": true
          },
          "parameterType": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "$ref": "#/components/schemas/GrantaServerApiDataExportDatumsParameterValue"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiRecordColor": {
        "enum": [
          "red",
          "lime",
          "blue",
          "yellow",
          "fuchsia",
          "aqua",
          "maroon",
          "green",
          "navy",
          "olive",
          "purple",
          "teal",
          "gray",
          "black",
          "white",
          "silver"
        ],
        "type": "string",
        "description": "An API-level enum for the supported record colors."
      },
      "GrantaServerApiRecordProperty": {
        "enum": [
          "recordIdentity",
          "recordGuid",
          "recordHistoryIdentity",
          "recordHistoryGuid",
          "tableIdentity",
          "tableGuid",
          "tableName",
          "databaseKey",
          "createdByUser",
          "createdDate",
          "lastModifiedByUser",
          "lastModifiedDate",
          "recordType",
          "versionState",
          "versionNumber",
          "releasedDate",
          "fullName",
          "shortName",
          "recordColor"
        ],
        "type": "string",
        "description": "A record property represents data on a record that typically cannot be independently edited,\r\nas opposed to attribute data which may be edited on a record freely (albeit possibly requiring\r\nreleasing a new version). Record properties are usually tracked by the system automatically\r\nand are usually read-only.\r\nNote: for legacy reasons, some 'record properties' do not fall into these criteria, and do\r\nrepresent editable record fields more similar to attribute data. These record properties are\r\nusually exposed in this API as both 'record properties' and 'pseudo-attributes'."
      },
      "GrantaServerApiRecordType": {
        "enum": [
          "record",
          "generic",
          "folder"
        ],
        "type": "string",
        "description": "An API-level enum for the supported record types."
      },
      "GrantaServerApiSchemaAllProfilesInfo": {
        "type": "object",
        "properties": {
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimProfile"
            },
            "nullable": true
          },
          "defaultProfile": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimProfile"
          }
        },
        "additionalProperties": false,
        "description": "Object containing list of all profiles as well as default profile if it is set and can be found within the list."
      },
      "GrantaServerApiSchemaAttributesAttribute": {
        "type": "object",
        "properties": {
          "defaultThresholdType": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
          },
          "axisName": {
            "type": "string",
            "nullable": true
          },
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "aboutAttribute": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
          },
          "info": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute+AttributeInfo"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaAttributesPointAttribute\r\n * GrantaServerApiSchemaAttributesIntegerAttribute\r\n * GrantaServerApiSchemaAttributesRangeAttribute\r\n * GrantaServerApiSchemaAttributesLogicalAttribute\r\n * GrantaServerApiSchemaAttributesShortTextAttribute\r\n * GrantaServerApiSchemaAttributesLongTextAttribute\r\n * GrantaServerApiSchemaAttributesDateTimeAttribute\r\n * GrantaServerApiSchemaAttributesDiscreteAttribute\r\n * GrantaServerApiSchemaAttributesHyperlinkAttribute\r\n * GrantaServerApiSchemaAttributesFileAttribute\r\n * GrantaServerApiSchemaAttributesPictureAttribute\r\n * GrantaServerApiSchemaAttributesTabularAttribute\r\n * GrantaServerApiSchemaAttributesFloatFunctionalAttribute\r\n * GrantaServerApiSchemaAttributesDiscreteFunctionalAttribute\r\n * GrantaServerApiSchemaAttributesMathsFunctionalAttribute",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "point": "#/components/schemas/GrantaServerApiSchemaAttributesPointAttribute",
            "integer": "#/components/schemas/GrantaServerApiSchemaAttributesIntegerAttribute",
            "range": "#/components/schemas/GrantaServerApiSchemaAttributesRangeAttribute",
            "logical": "#/components/schemas/GrantaServerApiSchemaAttributesLogicalAttribute",
            "shortText": "#/components/schemas/GrantaServerApiSchemaAttributesShortTextAttribute",
            "longText": "#/components/schemas/GrantaServerApiSchemaAttributesLongTextAttribute",
            "dateTime": "#/components/schemas/GrantaServerApiSchemaAttributesDateTimeAttribute",
            "discrete": "#/components/schemas/GrantaServerApiSchemaAttributesDiscreteAttribute",
            "hyperlink": "#/components/schemas/GrantaServerApiSchemaAttributesHyperlinkAttribute",
            "file": "#/components/schemas/GrantaServerApiSchemaAttributesFileAttribute",
            "picture": "#/components/schemas/GrantaServerApiSchemaAttributesPictureAttribute",
            "link": "#/components/schemas/GrantaServerApiSchemaAttributesTabularAttribute",
            "floatFunctional": "#/components/schemas/GrantaServerApiSchemaAttributesFloatFunctionalAttribute",
            "discreteFunctional": "#/components/schemas/GrantaServerApiSchemaAttributesDiscreteFunctionalAttribute",
            "mathsFunctional": "#/components/schemas/GrantaServerApiSchemaAttributesMathsFunctionalAttribute"
          }
        }
      },
      "GrantaServerApiSchemaAttributesAttribute+AttributeInfo": {
        "type": "object",
        "properties": {
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "chartable": {
            "type": "boolean"
          },
          "expressionable": {
            "type": "boolean"
          },
          "linkable": {
            "type": "boolean"
          },
          "extendedName": {
            "type": "string",
            "nullable": true
          },
          "isMetaAttribute": {
            "type": "boolean"
          },
          "orderedMetaAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "standardNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "primaryDataLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "foreignDataLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "primaryDynamicLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "foreignDynamicLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaAttributesAttributeInterpolationMethod": {
        "enum": [
          "auto",
          "none",
          "linear",
          "cubicSpline"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaAttributesAttributeScaleType": {
        "enum": [
          "notSet",
          "linear",
          "logarithmic"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaAttributesAttributeThresholdType": {
        "enum": [
          "exists",
          "doesNotExist",
          "atLeast",
          "atMost",
          "equal",
          "between",
          "isOneOf",
          "contains",
          "isNot",
          "isAllOf",
          "none"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaAttributesAttributeValidateResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "description": "Gets whether the provided value was valid based on the attributes data rules."
          },
          "hasValidationRules": {
            "type": "boolean",
            "description": "Gets whether the attribute has any validation rules that were checked."
          },
          "valueChanged": {
            "type": "boolean",
            "description": "Gets whether the provided value was a new value compared to the existing value. Null if no record was provided.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaAttributesAttributesInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaAttributesDateTimeAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "dateTime"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "dateTime"
      },
      "GrantaServerApiSchemaAttributesDiscreteAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "discrete"
              },
              "discreteType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
              },
              "isMultiValued": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "discrete"
      },
      "GrantaServerApiSchemaAttributesDiscreteFunctionalAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "discreteFunctional"
              },
              "discreteType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesDiscreteFunctionalAttributeParameter"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "discreteFunctional"
      },
      "GrantaServerApiSchemaAttributesDiscreteFunctionalAttributeParameter": {
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
          },
          "defaultValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaAttributesFileAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "file"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "file"
      },
      "GrantaServerApiSchemaAttributesFloatFunctionalAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "floatFunctional"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter"
                },
                "nullable": true
              },
              "isRange": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "floatFunctional"
      },
      "GrantaServerApiSchemaAttributesFloatFunctionalAttributeParameter": {
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
          },
          "defaultValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "interpolationMethod": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeInterpolationMethod"
          },
          "scaleType": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeScaleType"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaAttributesHyperlinkAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "hyperlink"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "hyperlink"
      },
      "GrantaServerApiSchemaAttributesIntegerAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "integer"
              },
              "isUnique": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "integer"
      },
      "GrantaServerApiSchemaAttributesLogicalAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "logical"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "logical"
      },
      "GrantaServerApiSchemaAttributesLongTextAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "longText"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "longText"
      },
      "GrantaServerApiSchemaAttributesMathsContent": {
        "type": "object",
        "properties": {
          "curveLabel": {
            "type": "string",
            "nullable": true
          },
          "transposeAxes": {
            "type": "boolean"
          },
          "useLogarithmicScale": {
            "type": "boolean"
          },
          "expression": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimExpression"
          },
          "freeParameter": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
          },
          "parameterContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterContent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaAttributesMathsFunctionalAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "mathsFunctional"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
                },
                "nullable": true
              },
              "expressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimExpression"
                },
                "nullable": true
              },
              "allowExtrapolation": {
                "type": "boolean"
              },
              "isRange": {
                "type": "boolean"
              },
              "allowAllCompatibleExpressions": {
                "type": "boolean"
              },
              "defaultContent": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesMathsContent"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "mathsFunctional"
      },
      "GrantaServerApiSchemaAttributesPictureAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "picture"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "picture"
      },
      "GrantaServerApiSchemaAttributesPointAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "point"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              },
              "isMultiValued": {
                "type": "boolean"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "point"
      },
      "GrantaServerApiSchemaAttributesRangeAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "range"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "range"
      },
      "GrantaServerApiSchemaAttributesShortTextAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "shortText"
              },
              "isUnique": {
                "type": "boolean"
              },
              "dataRule": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "shortText"
      },
      "GrantaServerApiSchemaAttributesTabularAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "link"
              },
              "displayFullTable": {
                "type": "boolean"
              },
              "displaySummaryRowInline": {
                "type": "boolean"
              },
              "hideUnlinkedRows": {
                "type": "boolean"
              },
              "target": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesTabularAttributeTarget"
              },
              "tabularColumns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesAttribute",
        "x-discriminator-value": "link"
      },
      "GrantaServerApiSchemaAttributesTabularAttributeTarget": {
        "type": "object",
        "properties": {
          "targetDatabaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "targetDatabaseVersionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "targetTableGuid": {
            "type": "string",
            "format": "uuid"
          },
          "targetAttributeGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute": {
        "type": "object",
        "properties": {
          "defaultThresholdType": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
          },
          "axisName": {
            "type": "string",
            "nullable": true
          },
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "aboutAttribute": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdatePointAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateIntegerAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateRangeAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateLogicalAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateShortTextAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateLongTextAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateDateTimeAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateDiscreteAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateHyperlinkAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateFileAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdatePictureAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateTabularAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateDiscreteFunctionalAttribute\r\n * GrantaServerApiSchemaAttributesUpdateAttributesUpdateMathsFunctionalAttribute",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "point": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdatePointAttribute",
            "integer": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateIntegerAttribute",
            "range": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateRangeAttribute",
            "logical": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateLogicalAttribute",
            "shortText": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateShortTextAttribute",
            "longText": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateLongTextAttribute",
            "dateTime": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateDateTimeAttribute",
            "discrete": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateDiscreteAttribute",
            "hyperlink": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateHyperlinkAttribute",
            "file": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateFileAttribute",
            "picture": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdatePictureAttribute",
            "link": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateTabularAttribute",
            "floatFunctional": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute",
            "discreteFunctional": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateDiscreteFunctionalAttribute",
            "mathsFunctional": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateMathsFunctionalAttribute"
          }
        }
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateDateTimeAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "dateTime"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "dateTime"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateDiscreteAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "discrete"
              },
              "isMultiValued": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "discrete"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateDiscreteFunctionalAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "discreteFunctional"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesDiscreteFunctionalAttributeParameter"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "discreteFunctional"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateFileAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "file"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "file"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateFloatFunctionalAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "floatFunctional"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateFloatFunctionalAttributeParameter"
                },
                "nullable": true
              },
              "isRange": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "floatFunctional"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateHyperlinkAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "hyperlink"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "hyperlink"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateIntegerAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "integer"
              },
              "isUnique": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "integer"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateLogicalAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "logical"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "logical"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateLongTextAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "longText"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "longText"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateMathsFunctionalAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "mathsFunctional"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
                },
                "nullable": true
              },
              "expressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimExpression"
                },
                "nullable": true
              },
              "allowExtrapolation": {
                "type": "boolean"
              },
              "isRange": {
                "type": "boolean"
              },
              "defaultContent": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesMathsContent"
              },
              "allowAllCompatibleExpressions": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "mathsFunctional"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdatePictureAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "picture"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "picture"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdatePointAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "point"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              },
              "isMultiValued": {
                "type": "boolean"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "point"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateRangeAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "range"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "range"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateShortTextAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "shortText"
              },
              "isUnique": {
                "type": "boolean"
              },
              "dataRule": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "shortText"
      },
      "GrantaServerApiSchemaAttributesUpdateAttributesUpdateTabularAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "link"
              },
              "displayFullTable": {
                "type": "boolean"
              },
              "displaySummaryRowInline": {
                "type": "boolean"
              },
              "hideUnlinkedRows": {
                "type": "boolean"
              },
              "tabularColumns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaAttributesUpdateAttributesUpdateAttribute",
        "x-discriminator-value": "link"
      },
      "GrantaServerApiSchemaAttributesUpdateFloatFunctionalAttributeParameter": {
        "type": "object",
        "properties": {
          "parameterGuid": {
            "type": "string",
            "format": "uuid"
          },
          "defaultValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "interpolationMethod": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeInterpolationMethod"
          },
          "scaleType": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeScaleType"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaAttributesValidateAttributeRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The value to check an attributes data validation rules against",
            "nullable": true
          },
          "recordHistoryGuid": {
            "type": "string",
            "description": "The record you want to check the value against to see if the value has changed as well as being valid",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaConfigurationsConfiguration": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaConfigurationsConfigurationsInfo": {
        "type": "object",
        "properties": {
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimConfiguration"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaConfigurationsCreateConfiguration": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaConfigurationsUpdateConfiguration": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaConstantsConstant": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Constant used in equations"
      },
      "GrantaServerApiSchemaConstantsConstantsInfo": {
        "type": "object",
        "properties": {
          "constants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimConstant"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaConstantsCreateConstant": {
        "type": "object",
        "properties": {
          "unitGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaConstantsUpdateConstant": {
        "type": "object",
        "properties": {
          "unitGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaDataRule": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "regularExpression": {
            "type": "string",
            "nullable": true
          },
          "usedByAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaDataRulesInfo": {
        "type": "object",
        "properties": {
          "dataRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaDataRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaDatabase": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "isAccessControlled": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "versionGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaDatabaseStatus"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "indexInSync": {
            "type": "boolean",
            "nullable": true
          },
          "schemaVersion": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaDatabaseStatus": {
        "enum": [
          "Unknown",
          "OK",
          "Unloaded",
          "Loading",
          "Unloading",
          "FailedToLoad",
          "FailedToUnload",
          "Disabled"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaDatabasesInfo": {
        "type": "object",
        "properties": {
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimDatabase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaDiscreteType": {
        "type": "object",
        "properties": {
          "isOrdered": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaDiscreteTypesInfo": {
        "type": "object",
        "properties": {
          "discreteTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaDiscreteValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaDiscreteValuesInfo": {
        "type": "object",
        "properties": {
          "discreteValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaDiscreteValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaExpression": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
          },
          "attributeDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "constantDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "parameterDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaExpressionsInfo": {
        "type": "object",
        "properties": {
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimExpression"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaFilesCreateFolder": {
        "type": "object",
        "properties": {
          "parentGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaFilesFileHeader": {
        "type": "object",
        "properties": {
          "folderGuid": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "dataLength": {
            "type": "integer",
            "format": "int64"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaFilesFilesInfo": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimFile"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaFilesFolder": {
        "type": "object",
        "properties": {
          "parentGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaFilesFoldersInfo": {
        "type": "object",
        "properties": {
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaFilesFolder"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaFilesMoveFile": {
        "type": "object",
        "properties": {
          "folderGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaFilesMoveFolder": {
        "type": "object",
        "properties": {
          "parentGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaFilesUpdateFile": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaFilesUpdateFolder": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaLayoutsFullLayoutSection": {
        "required": [
          "sectionDetailType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSection"
          },
          {
            "type": "object",
            "properties": {
              "sectionDetailType": {
                "type": "string",
                "default": "full"
              },
              "sectionItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutItem"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaLayoutsLayoutSection",
        "x-discriminator-value": "full"
      },
      "GrantaServerApiSchemaLayoutsLayout": {
        "type": "object",
        "properties": {
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSection"
            },
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaLayoutsLayoutAttributeItem": {
        "required": [
          "itemType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutItem"
          },
          {
            "type": "object",
            "properties": {
              "itemType": {
                "type": "string",
                "default": "attribute"
              },
              "attributeType": {
                "$ref": "#/components/schemas/GrantaServerApiAttributeType"
              },
              "required": {
                "type": "boolean"
              },
              "readOnly": {
                "type": "boolean"
              },
              "metaAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutAttributeItem"
                },
                "nullable": true
              },
              "tabularColumns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutTabularColumn"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaLayoutsLayoutItem",
        "x-discriminator-value": "attribute"
      },
      "GrantaServerApiSchemaLayoutsLayoutItem": {
        "type": "object",
        "properties": {
          "underlyingEntityGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaLayoutsLayoutAttributeItem\r\n * GrantaServerApiSchemaLayoutsLayoutLinkItem",
        "discriminator": {
          "propertyName": "itemType",
          "mapping": {
            "attribute": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutAttributeItem",
            "link": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutLinkItem"
          }
        }
      },
      "GrantaServerApiSchemaLayoutsLayoutItemLinkType": {
        "enum": [
          "recordLink",
          "smartLink",
          "crossDatabaseLink",
          "associationChain"
        ],
        "type": "string",
        "description": "The types of layout items that represent links to another table."
      },
      "GrantaServerApiSchemaLayoutsLayoutItemType": {
        "enum": [
          "attribute",
          "link"
        ],
        "type": "string",
        "description": "The types of layout item that are supported by the API."
      },
      "GrantaServerApiSchemaLayoutsLayoutLinkItem": {
        "required": [
          "itemType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutItem"
          },
          {
            "type": "object",
            "properties": {
              "itemType": {
                "type": "string",
                "default": "link"
              },
              "linkType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutItemLinkType"
              },
              "targetDatabase": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "targetTable": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "forwards": {
                "type": "boolean"
              },
              "nextLink": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutLinkItem"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaLayoutsLayoutItem",
        "x-discriminator-value": "link"
      },
      "GrantaServerApiSchemaLayoutsLayoutSection": {
        "type": "object",
        "properties": {
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaSlimEntitiesSlimLayoutSection\r\n * GrantaServerApiSchemaLayoutsFullLayoutSection",
        "discriminator": {
          "propertyName": "sectionDetailType",
          "mapping": {
            "slim": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayoutSection",
            "full": "#/components/schemas/GrantaServerApiSchemaLayoutsFullLayoutSection"
          }
        }
      },
      "GrantaServerApiSchemaLayoutsLayoutSectionDetailType": {
        "enum": [
          "slim",
          "full"
        ],
        "type": "string",
        "description": "The types of detail returned for a layout section."
      },
      "GrantaServerApiSchemaLayoutsLayoutSectionsInfo": {
        "type": "object",
        "properties": {
          "layoutSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSection"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaLayoutsLayoutTabularColumn": {
        "type": "object",
        "properties": {
          "columnType": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumnDtoType"
          },
          "tabularColumnGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaLayoutsLayoutsInfo": {
        "type": "object",
        "properties": {
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaLayoutsNewLayoutAssociationChainItem": {
        "required": [
          "itemType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
          },
          {
            "type": "object",
            "properties": {
              "itemType": {
                "type": "string",
                "default": "associationChain"
              },
              "associationChainName": {
                "type": "string",
                "nullable": true
              },
              "associationChainLinks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutAssociationChainLink"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaLayoutsNewLayoutItem",
        "x-discriminator-value": "associationChain"
      },
      "GrantaServerApiSchemaLayoutsNewLayoutAssociationChainLink": {
        "type": "object",
        "properties": {
          "forwards": {
            "type": "boolean"
          },
          "tabularAttributeGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaLayoutsNewLayoutAttributeItem": {
        "required": [
          "itemType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
          },
          {
            "type": "object",
            "properties": {
              "itemType": {
                "type": "string",
                "default": "attribute"
              },
              "attributeGuid": {
                "type": "string",
                "format": "uuid"
              },
              "required": {
                "type": "boolean"
              },
              "readOnly": {
                "type": "boolean"
              },
              "metaAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutAttributeItem"
                },
                "nullable": true
              },
              "tabularColumnGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaLayoutsNewLayoutItem",
        "x-discriminator-value": "attribute"
      },
      "GrantaServerApiSchemaLayoutsNewLayoutCrossDatabaseLinkItem": {
        "required": [
          "itemType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
          },
          {
            "type": "object",
            "properties": {
              "itemType": {
                "type": "string",
                "default": "crossDatabaseLink"
              },
              "sourceDatabaseGuid": {
                "type": "string",
                "format": "uuid"
              },
              "sourceTableGuid": {
                "type": "string",
                "format": "uuid"
              },
              "linkGroupGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaLayoutsNewLayoutItem",
        "x-discriminator-value": "crossDatabaseLink"
      },
      "GrantaServerApiSchemaLayoutsNewLayoutItem": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaLayoutsNewLayoutAttributeItem\r\n * GrantaServerApiSchemaLayoutsNewLayoutRecordLinkItem\r\n * GrantaServerApiSchemaLayoutsNewLayoutSmartLinkItem\r\n * GrantaServerApiSchemaLayoutsNewLayoutCrossDatabaseLinkItem\r\n * GrantaServerApiSchemaLayoutsNewLayoutAssociationChainItem",
        "discriminator": {
          "propertyName": "itemType",
          "mapping": {
            "attribute": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutAttributeItem",
            "recordLink": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutRecordLinkItem",
            "smartLink": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutSmartLinkItem",
            "crossDatabaseLink": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutCrossDatabaseLinkItem",
            "associationChain": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutAssociationChainItem"
          }
        }
      },
      "GrantaServerApiSchemaLayoutsNewLayoutItemType": {
        "enum": [
          "attribute",
          "recordLink",
          "smartLink",
          "crossDatabaseLink",
          "associationChain"
        ],
        "type": "string",
        "description": "The types of new layout item that are supported by the API."
      },
      "GrantaServerApiSchemaLayoutsNewLayoutRecordLinkItem": {
        "required": [
          "itemType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
          },
          {
            "type": "object",
            "properties": {
              "itemType": {
                "type": "string",
                "default": "recordLink"
              },
              "linkGroupGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaLayoutsNewLayoutItem",
        "x-discriminator-value": "recordLink"
      },
      "GrantaServerApiSchemaLayoutsNewLayoutSmartLinkItem": {
        "required": [
          "itemType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsNewLayoutItem"
          },
          {
            "type": "object",
            "properties": {
              "itemType": {
                "type": "string",
                "default": "smartLink"
              },
              "forwards": {
                "type": "boolean"
              },
              "linkGroupGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaLayoutsNewLayoutItem",
        "x-discriminator-value": "smartLink"
      },
      "GrantaServerApiSchemaLayoutsUpdateLayout": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaParametersContinuousRange": {
        "type": "object",
        "properties": {
          "lowValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "highValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaParametersDiscreteParameter": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaParametersDiscreteParameterValue"
                },
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "discrete"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaParametersParameter",
        "x-discriminator-value": "discrete"
      },
      "GrantaServerApiSchemaParametersDiscreteParameterContent": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterContent"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "discrete"
              },
              "parameterValue": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
              },
              "parameterRange": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersDiscreteRange"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaParametersParameterContent",
        "x-discriminator-value": "discrete"
      },
      "GrantaServerApiSchemaParametersDiscreteParameterValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "discrete"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaParametersParameterValue",
        "x-discriminator-value": "discrete"
      },
      "GrantaServerApiSchemaParametersDiscreteRange": {
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaParametersNumericParameter": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "numeric"
              },
              "isRestricted": {
                "type": "boolean"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaParametersNumericParameterValue"
                },
                "nullable": true
              },
              "interpolationType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterInterpolationType"
              },
              "scaleType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterScaleType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaParametersParameter",
        "x-discriminator-value": "numeric"
      },
      "GrantaServerApiSchemaParametersNumericParameterContent": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterContent"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "numeric"
              },
              "value": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "parameterRange": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersContinuousRange"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaParametersParameterContent",
        "x-discriminator-value": "numeric"
      },
      "GrantaServerApiSchemaParametersNumericParameterValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "type": {
                "type": "string",
                "default": "numeric"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaParametersParameterValue",
        "x-discriminator-value": "numeric"
      },
      "GrantaServerApiSchemaParametersParameter": {
        "type": "object",
        "properties": {
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaParametersDiscreteParameter\r\n * GrantaServerApiSchemaParametersNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GrantaServerApiSchemaParametersDiscreteParameter",
            "numeric": "#/components/schemas/GrantaServerApiSchemaParametersNumericParameter"
          }
        }
      },
      "GrantaServerApiSchemaParametersParameterContent": {
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaParametersDiscreteParameterContent\r\n * GrantaServerApiSchemaParametersNumericParameterContent",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GrantaServerApiSchemaParametersDiscreteParameterContent",
            "numeric": "#/components/schemas/GrantaServerApiSchemaParametersNumericParameterContent"
          }
        }
      },
      "GrantaServerApiSchemaParametersParameterInterpolationType": {
        "enum": [
          "none",
          "linear",
          "cubicSpline"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaParametersParameterScaleType": {
        "enum": [
          "linear",
          "logarithmic"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaParametersParameterType": {
        "enum": [
          "discrete",
          "numeric"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaParametersParameterValue": {
        "type": "object",
        "properties": {
          "isDefault": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaParametersDiscreteParameterValue\r\n * GrantaServerApiSchemaParametersNumericParameterValue",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GrantaServerApiSchemaParametersDiscreteParameterValue",
            "numeric": "#/components/schemas/GrantaServerApiSchemaParametersNumericParameterValue"
          }
        }
      },
      "GrantaServerApiSchemaParametersParameterValueType": {
        "enum": [
          "discrete",
          "numeric"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaParametersParameterValuesInfo": {
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaParametersParametersInfo": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaParametersUpdateDiscreteParameter": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaParametersUpdateParameter"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "discrete"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaParametersUpdateParameter",
        "x-discriminator-value": "discrete"
      },
      "GrantaServerApiSchemaParametersUpdateNumericParameter": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaParametersUpdateParameter"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "numeric"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              },
              "interpolationType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterInterpolationType"
              },
              "scaleType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaParametersParameterScaleType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaParametersUpdateParameter",
        "x-discriminator-value": "numeric"
      },
      "GrantaServerApiSchemaParametersUpdateParameter": {
        "type": "object",
        "properties": {
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaParametersUpdateDiscreteParameter\r\n * GrantaServerApiSchemaParametersUpdateNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GrantaServerApiSchemaParametersUpdateDiscreteParameter",
            "numeric": "#/components/schemas/GrantaServerApiSchemaParametersUpdateNumericParameter"
          }
        }
      },
      "GrantaServerApiSchemaProfile": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "homepageUrl": {
            "type": "string",
            "nullable": true
          },
          "profileTables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimProfileTable"
            },
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "Key is a unique identifier of a profile. Separate from guid.",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "description": "Guid is a unique identifier of a profile. Separate from key.",
            "format": "uuid",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "isImplicit": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A profile, consisting of a set of tables from one or more databases."
      },
      "GrantaServerApiSchemaProfileTable": {
        "type": "object",
        "properties": {
          "subsetGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "subsetFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "layoutGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "layoutFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "databaseGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "databaseFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tableFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A table within a profile. Contains display customization."
      },
      "GrantaServerApiSchemaProfileTablesInfo": {
        "type": "object",
        "properties": {
          "profileTables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimProfileTable"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair": {
        "type": "object",
        "properties": {
          "attributeSource": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimAttribute"
          },
          "attributeTarget": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimAttribute"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaRecordLinkGroupsCrossDatabaseRecordLinkGroup": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
          },
          {
            "type": "object",
            "properties": {
              "includeIndirectLinks": {
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "default": "crossDatabase"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup",
        "x-discriminator-value": "crossDatabase"
      },
      "GrantaServerApiSchemaRecordLinkGroupsDynamicRecordLinkGroup": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
          },
          {
            "type": "object",
            "properties": {
              "forbidOrphans": {
                "type": "boolean"
              },
              "referentialIntegrityModel": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsReferentialIntegrityModel"
              },
              "attributePairs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair"
                },
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "dynamic"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup",
        "x-discriminator-value": "dynamic"
      },
      "GrantaServerApiSchemaRecordLinkGroupsLinkInfo": {
        "type": "object",
        "properties": {
          "linkSource": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsLinkTarget"
          },
          "linkTarget": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsLinkTarget"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaRecordLinkGroupsLinkTarget": {
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "databaseVersionGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup": {
        "type": "object",
        "properties": {
          "linkInfo": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsLinkInfo"
          },
          "identity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reverseName": {
            "type": "string",
            "nullable": true
          },
          "reverseDisplayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaRecordLinkGroupsStaticRecordLinkGroup\r\n * GrantaServerApiSchemaRecordLinkGroupsDynamicRecordLinkGroup\r\n * GrantaServerApiSchemaRecordLinkGroupsCrossDatabaseRecordLinkGroup",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "static": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsStaticRecordLinkGroup",
            "dynamic": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsDynamicRecordLinkGroup",
            "crossDatabase": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsCrossDatabaseRecordLinkGroup"
          }
        }
      },
      "GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType": {
        "enum": [
          "static",
          "dynamic",
          "crossDatabase"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupsInfo": {
        "type": "object",
        "properties": {
          "recordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaRecordLinkGroupsReferentialIntegrityModel": {
        "enum": [
          "oneToOne",
          "oneToMany",
          "manyToMany"
        ],
        "type": "string"
      },
      "GrantaServerApiSchemaRecordLinkGroupsStaticRecordLinkGroup": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup"
          },
          {
            "type": "object",
            "properties": {
              "includeIndirectLinks": {
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "default": "static"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroup",
        "x-discriminator-value": "static"
      },
      "GrantaServerApiSchemaRecordLinkGroupsUpdateCrossDatabaseRecordLinkGroup": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup"
          },
          {
            "type": "object",
            "properties": {
              "includeIndirectLinks": {
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "default": "crossDatabase"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup",
        "x-discriminator-value": "crossDatabase"
      },
      "GrantaServerApiSchemaRecordLinkGroupsUpdateDynamicRecordLinkGroup": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup"
          },
          {
            "type": "object",
            "properties": {
              "forbidOrphans": {
                "type": "boolean"
              },
              "referentialIntegrityModel": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsReferentialIntegrityModel"
              },
              "attributePairs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsAttributeLinkPair"
                },
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "dynamic"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup",
        "x-discriminator-value": "dynamic"
      },
      "GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup": {
        "type": "object",
        "properties": {
          "reverseName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaRecordLinkGroupsUpdateStaticRecordLinkGroup\r\n * GrantaServerApiSchemaRecordLinkGroupsUpdateDynamicRecordLinkGroup\r\n * GrantaServerApiSchemaRecordLinkGroupsUpdateCrossDatabaseRecordLinkGroup",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "static": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateStaticRecordLinkGroup",
            "dynamic": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateDynamicRecordLinkGroup",
            "crossDatabase": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateCrossDatabaseRecordLinkGroup"
          }
        }
      },
      "GrantaServerApiSchemaRecordLinkGroupsUpdateStaticRecordLinkGroup": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup"
          },
          {
            "type": "object",
            "properties": {
              "includeIndirectLinks": {
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "default": "static"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaRecordLinkGroupsUpdateRecordLinkGroup",
        "x-discriminator-value": "static"
      },
      "GrantaServerApiSchemaSlimEntitiesSlimAttribute": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GrantaServerApiAttributeType"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimConfiguration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimConstant": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Constant base data (name and guid)"
      },
      "GrantaServerApiSchemaSlimEntitiesSlimDatabase": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "versionGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaDatabaseStatus"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "indexInSync": {
            "type": "boolean",
            "nullable": true
          },
          "schemaVersion": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimExpression": {
        "type": "object",
        "properties": {
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimFile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimLayout": {
        "type": "object",
        "properties": {
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimLayoutSection": {
        "required": [
          "sectionDetailType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaLayoutsLayoutSection"
          },
          {
            "type": "object",
            "properties": {
              "sectionDetailType": {
                "type": "string",
                "default": "slim"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaLayoutsLayoutSection",
        "x-discriminator-value": "slim"
      },
      "GrantaServerApiSchemaSlimEntitiesSlimNamedEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimObjects": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimProfile": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key is a unique identifier of a profile. Separate from guid.",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "description": "Guid is a unique identifier of a profile. Separate from key.",
            "format": "uuid",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "isImplicit": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Profile stripped down to only the basic fields"
      },
      "GrantaServerApiSchemaSlimEntitiesSlimProfileTable": {
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "databaseFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tableFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Profile table stripped to just the basic fields"
      },
      "GrantaServerApiSchemaSlimEntitiesSlimRecordLinkGroup": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaRecordLinkGroupsRecordLinkGroupType"
          },
          "reverseName": {
            "type": "string",
            "nullable": true
          },
          "reverseDisplayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimSubset": {
        "type": "object",
        "properties": {
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimTable": {
        "type": "object",
        "properties": {
          "isHiddenFromBrowse": {
            "type": "boolean"
          },
          "isHiddenFromSearch": {
            "type": "boolean"
          },
          "isVersioned": {
            "type": "boolean"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimUnit": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSlimEntitiesSlimUnitSystem": {
        "type": "object",
        "properties": {
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unit system stripped down to its basic fields (mappings excluded)."
      },
      "GrantaServerApiSchemaStandardName": {
        "type": "object",
        "properties": {
          "mappedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "mappedParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "mappedRecordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "mappedCrossDatabaseRecordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaStandardNamesInfo": {
        "type": "object",
        "properties": {
          "standardNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaStandardName"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSubset": {
        "type": "object",
        "properties": {
          "associatedLayout": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaSubsetsInfo": {
        "type": "object",
        "properties": {
          "subsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimSubset"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaTable": {
        "type": "object",
        "properties": {
          "defaultSubset": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimSubset"
          },
          "subsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimSubset"
            },
            "nullable": true
          },
          "defaultLayout": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
            },
            "nullable": true
          },
          "isHiddenFromBrowse": {
            "type": "boolean"
          },
          "isHiddenFromSearch": {
            "type": "boolean"
          },
          "isVersioned": {
            "type": "boolean"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaTablesInfo": {
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimTable"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaTabularColumnsLinkedAttributeTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "linkedAttribute"
              },
              "linkedAttribute": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimAttribute"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "linkedAttribute"
      },
      "GrantaServerApiSchemaTabularColumnsLinkedColumnTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "linkedColumn"
              },
              "linkedAttribute": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimAttribute"
              },
              "linkedColumn": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "linkedColumn"
      },
      "GrantaServerApiSchemaTabularColumnsLinkedRecordTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "linkedRecord"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "linkedRecord"
      },
      "GrantaServerApiSchemaTabularColumnsLocalDateTimeTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localDateTime"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localDateTime"
      },
      "GrantaServerApiSchemaTabularColumnsLocalDiscreteTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localDiscrete"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              },
              "discreteType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localDiscrete"
      },
      "GrantaServerApiSchemaTabularColumnsLocalFileTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localFile"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localFile"
      },
      "GrantaServerApiSchemaTabularColumnsLocalHyperlinkTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localHyperlink"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localHyperlink"
      },
      "GrantaServerApiSchemaTabularColumnsLocalIntegerTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localInteger"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localInteger"
      },
      "GrantaServerApiSchemaTabularColumnsLocalLogicalTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localLogical"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localLogical"
      },
      "GrantaServerApiSchemaTabularColumnsLocalLongTextTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localLongText"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localLongText"
      },
      "GrantaServerApiSchemaTabularColumnsLocalPictureTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localPicture"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localPicture"
      },
      "GrantaServerApiSchemaTabularColumnsLocalPointTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localPoint"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localPoint"
      },
      "GrantaServerApiSchemaTabularColumnsLocalRangeTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localRange"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              },
              "unit": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localRange"
      },
      "GrantaServerApiSchemaTabularColumnsLocalShortTextTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "localShortText"
              },
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GrantaServerApiSchemaAttributesAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "localShortText"
      },
      "GrantaServerApiSchemaTabularColumnsTabularColumn": {
        "type": "object",
        "properties": {
          "showAsLink": {
            "type": "boolean"
          },
          "summaryRowEnabled": {
            "type": "boolean"
          },
          "summaryRowText": {
            "type": "string",
            "nullable": true
          },
          "rollUpType": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumnRollUpType"
          },
          "summaryRowRollUpType": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumnRollUpType"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSchemaTabularColumnsLinkedAttributeTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLinkedColumnTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLinkedRecordTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalPointTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalRangeTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalIntegerTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalLogicalTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalShortTextTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalLongTextTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalDateTimeTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalDiscreteTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalHyperlinkTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalFileTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsLocalPictureTabularColumn\r\n * GrantaServerApiSchemaTabularColumnsUnavailableTabularColumn",
        "discriminator": {
          "propertyName": "columnType",
          "mapping": {
            "linkedAttribute": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLinkedAttributeTabularColumn",
            "linkedColumn": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLinkedColumnTabularColumn",
            "linkedRecord": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLinkedRecordTabularColumn",
            "localPoint": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalPointTabularColumn",
            "localRange": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalRangeTabularColumn",
            "localInteger": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalIntegerTabularColumn",
            "localLogical": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalLogicalTabularColumn",
            "localShortText": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalShortTextTabularColumn",
            "localLongText": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalLongTextTabularColumn",
            "localDateTime": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalDateTimeTabularColumn",
            "localDiscrete": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalDiscreteTabularColumn",
            "localHyperlink": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalHyperlinkTabularColumn",
            "localFile": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalFileTabularColumn",
            "localPicture": "#/components/schemas/GrantaServerApiSchemaTabularColumnsLocalPictureTabularColumn",
            "unavailable": "#/components/schemas/GrantaServerApiSchemaTabularColumnsUnavailableTabularColumn"
          }
        }
      },
      "GrantaServerApiSchemaTabularColumnsTabularColumnDtoType": {
        "enum": [
          "linkedAttribute",
          "linkedRecord",
          "linkedColumn",
          "localInteger",
          "localPoint",
          "localRange",
          "localLogical",
          "localShortText",
          "localLongText",
          "localDateTime",
          "localDiscrete",
          "localHyperlink",
          "localFile",
          "localPicture",
          "unavailable"
        ],
        "type": "string",
        "description": "The types of tabular column."
      },
      "GrantaServerApiSchemaTabularColumnsTabularColumnRollUpType": {
        "enum": [
          "list",
          "max",
          "min",
          "mean",
          "stdDev",
          "sum",
          "count",
          "countDistinct",
          "listDistinct",
          "coefficientOfVariation",
          "chart"
        ],
        "type": "string",
        "description": "The roll up types of a tabular column."
      },
      "GrantaServerApiSchemaTabularColumnsUnavailableTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSchemaTabularColumnsTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "type": "string",
                "default": "unavailable"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSchemaTabularColumnsTabularColumn",
        "x-discriminator-value": "unavailable"
      },
      "GrantaServerApiSchemaUnitsUnit": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "equation": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUnitsUnitEquivalent": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
          },
          "unitSystem": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitSystem"
          },
          "equivalentUnit": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnit"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUnitsUnitEquivalentsInfo": {
        "type": "object",
        "properties": {
          "unitEquivalents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitEquivalent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUnitsUnitMapping": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
          },
          "equivalentUnit": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUnitsUnitSystem": {
        "type": "object",
        "properties": {
          "unitMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaUnitsUnitMapping"
            },
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unit system contains mappings from any unit to equivalent unit within this unit system.\r\nIf some unit comes from particular unit system it will be mapped to itself."
      },
      "GrantaServerApiSchemaUnitsUnitSystemsInfo": {
        "type": "object",
        "properties": {
          "unitSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnitSystem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUnitsUnitUsage": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "constants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimNamedEntity"
            },
            "nullable": true
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUnitsUnitsInfo": {
        "type": "object",
        "properties": {
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUnitsUpdateUnitSystem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUpdateDataRule": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "regularExpression": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUpdateDatabase": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "versionGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUpdateExpression": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimUnit"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUpdateProfile": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "homepageUrl": {
            "type": "string",
            "nullable": true
          },
          "profileTableGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "guid": {
            "type": "string",
            "description": "Guid is a unique identifier of a profile. Separate from key.",
            "format": "uuid",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A profile, consisting of a set of tables from one or more databases."
      },
      "GrantaServerApiSchemaUpdateProfileTable": {
        "type": "object",
        "properties": {
          "subsetGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "layoutGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A table within a profile. Contains display customization."
      },
      "GrantaServerApiSchemaUpdateSubset": {
        "type": "object",
        "properties": {
          "associatedLayout": {
            "$ref": "#/components/schemas/GrantaServerApiSchemaSlimEntitiesSlimLayout"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSchemaUpdateTable": {
        "type": "object",
        "properties": {
          "isHiddenFromBrowse": {
            "type": "boolean"
          },
          "isHiddenFromSearch": {
            "type": "boolean"
          },
          "defaultSubsetGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "defaultLayoutGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSearchAttributeCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          }
        ],
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isMetaAttribute": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "default": "attribute"
          }
        },
        "additionalProperties": false,
        "description": "Base class for attribute criterions. Exactly one of the attribute identity or GUID must be provided.\r\n\r\nThis extends: GrantaServerApiSearchCriterion\r\n\r\nThis is one of: \r\n * GrantaServerApiSearchAttributeMatchesCriterion\r\n * GrantaServerApiSearchAttributeExistsCriterion\r\n * GrantaServerApiSearchAttributeNotApplicableCriterion",
        "discriminator": {
          "propertyName": "attributeCriterionType",
          "mapping": {
            "matches": "#/components/schemas/GrantaServerApiSearchAttributeMatchesCriterion",
            "exists": "#/components/schemas/GrantaServerApiSearchAttributeExistsCriterion",
            "notApplicable": "#/components/schemas/GrantaServerApiSearchAttributeNotApplicableCriterion"
          }
        },
        "x-discriminator-value": "attribute"
      },
      "GrantaServerApiSearchAttributeExistsCriterion": {
        "required": [
          "attributeCriterionType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchAttributeCriterion"
          },
          {
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GrantaServerApiSearchDatumExistsCriterion"
              },
              "attributeCriterionType": {
                "type": "string",
                "default": "exists"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching record where there is data on the attribute specified. Exactly one of the attribute identity or GUID must be provided.\r\n\r\nThis extends: GrantaServerApiSearchAttributeCriterion",
        "x-discriminator-value": "exists"
      },
      "GrantaServerApiSearchAttributeMatchesCriterion": {
        "required": [
          "attributeCriterionType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchAttributeCriterion"
          },
          {
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
              },
              "attributeCriterionType": {
                "type": "string",
                "default": "matches"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for a search matching values in a given attribute. Exactly one of the attribute identity or GUID must be provided.\r\n\r\nThis extends: GrantaServerApiSearchAttributeCriterion",
        "x-discriminator-value": "matches"
      },
      "GrantaServerApiSearchAttributeNotApplicableCriterion": {
        "required": [
          "attributeCriterionType"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchAttributeCriterion"
          },
          {
            "type": "object",
            "properties": {
              "attributeCriterionType": {
                "type": "string",
                "default": "notApplicable"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching record where there is not applicable data on the attribute specified. Exactly one of the attribute identity or GUID must be provided.\r\n\r\nThis extends: GrantaServerApiSearchAttributeCriterion",
        "x-discriminator-value": "notApplicable"
      },
      "GrantaServerApiSearchAttributeSortCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchSortCriterion"
          },
          {
            "type": "object",
            "properties": {
              "identity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "guid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "attributeType": {
                "$ref": "#/components/schemas/GrantaServerApiAttributeType"
              },
              "sortType": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSortType"
              },
              "type": {
                "type": "string",
                "default": "attribute"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Specifies an attribute based sort criterion for a search query. Either the GUID or identity of the sorting attribute must be provided.\r\n\r\nThis extends: GrantaServerApiSearchSortCriterion",
        "x-discriminator-value": "attribute"
      },
      "GrantaServerApiSearchBooleanCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          {
            "type": "object",
            "properties": {
              "all": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
                },
                "description": "Only records that match all of these criteria are returned.",
                "nullable": true
              },
              "any": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
                },
                "description": "Only results that match any of these criteria are returned.",
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
                },
                "description": "Only results that match none of these criteria are returned.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "boolean: Criterion that wraps other criteria in order to specify how the results should be joined together.\r\n\r\nThis extends: GrantaServerApiSearchCriterion",
        "x-discriminator-value": "boolean"
      },
      "GrantaServerApiSearchBoostByGuid": {
        "type": "object",
        "properties": {
          "attributeGuid": {
            "type": "string",
            "format": "uuid"
          },
          "boostFactor": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSearchBoostByIdentity": {
        "type": "object",
        "properties": {
          "attributeIdentity": {
            "type": "integer",
            "format": "int32"
          },
          "boostFactor": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSearchCriterion": {
        "type": "object",
        "additionalProperties": false,
        "description": "The criterion to be used in a search.\r\n            \r\nMultiple criterion can be provided. These should be wrapped with a boolean criterion that specifies whether the search should return results that match \"any\", \"all\", or \"none\" of the criterion.\r\nThese criterion can be nested to created complex search queries.\r\n\r\nThis is one of: \r\n * GrantaServerApiSearchBooleanCriterion\r\n * GrantaServerApiSearchFreeTextCriterion\r\n * GrantaServerApiSearchRecordListMemberCriterion\r\n * GrantaServerApiSearchRecordPropertyCriterion\r\n * GrantaServerApiSearchRecordReferenceCriterion\r\n * GrantaServerApiSearchRecordAncestorCriterion\r\n * GrantaServerApiSearchRecordSubsetCriterion\r\n * GrantaServerApiSearchTabularLinkingValueCriterion\r\n * GrantaServerApiSearchAttributeCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "boolean": "#/components/schemas/GrantaServerApiSearchBooleanCriterion",
            "text": "#/components/schemas/GrantaServerApiSearchFreeTextCriterion",
            "recordListMember": "#/components/schemas/GrantaServerApiSearchRecordListMemberCriterion",
            "recordProperty": "#/components/schemas/GrantaServerApiSearchRecordPropertyCriterion",
            "reference": "#/components/schemas/GrantaServerApiSearchRecordReferenceCriterion",
            "recordAncestor": "#/components/schemas/GrantaServerApiSearchRecordAncestorCriterion",
            "subset": "#/components/schemas/GrantaServerApiSearchRecordSubsetCriterion",
            "tabularLinkingValue": "#/components/schemas/GrantaServerApiSearchTabularLinkingValueCriterion",
            "attribute": "#/components/schemas/GrantaServerApiSearchAttributeCriterion"
          }
        }
      },
      "GrantaServerApiSearchDateTimeDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "string",
                "description": "Greater than or equal to",
                "format": "date-time",
                "nullable": true
              },
              "lte": {
                "type": "string",
                "description": "Less than or equal to",
                "format": "date-time",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "dateTime"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "dateTime: Criterion for matching records where the datetime data is within the given bounds. If one of gte or lte is null, this will be an open ended search.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "dateTime"
      },
      "GrantaServerApiSearchDatumCriterion": {
        "type": "object",
        "additionalProperties": false,
        "description": "Inner criterion of an attribute search criterion. The specific criterion used should match the type of the attribute specified on the outer criterion (Note that there are multiple types that can be used with a discrete attribute, depending on the type of search.)\r\n\r\nThis is one of: \r\n * GrantaServerApiSearchDateTimeDatumCriterion\r\n * GrantaServerApiSearchDiscreteFunctionalRangeDatumCriterion\r\n * GrantaServerApiSearchDiscreteFunctionalValuesDatumCriterion\r\n * GrantaServerApiSearchDiscreteIdentityDatumCriterion\r\n * GrantaServerApiSearchDiscreteIdentityValuesDatumCriterion\r\n * GrantaServerApiSearchDiscreteGuidDatumCriterion\r\n * GrantaServerApiSearchDiscreteGuidValuesDatumCriterion\r\n * GrantaServerApiSearchDiscreteRangeDatumCriterion\r\n * GrantaServerApiSearchDiscreteTextDatumCriterion\r\n * GrantaServerApiSearchDiscreteTextValuesDatumCriterion\r\n * GrantaServerApiSearchFileDatumCriterion\r\n * GrantaServerApiSearchFloatFunctionalDatumCriterion\r\n * GrantaServerApiSearchFloatFunctionalGraphDatumCriterion\r\n * GrantaServerApiSearchHyperlinkDatumCriterion\r\n * GrantaServerApiSearchIntegerDatumCriterion\r\n * GrantaServerApiSearchLinkDatumCriterion\r\n * GrantaServerApiSearchLogicalDatumCriterion\r\n * GrantaServerApiSearchLongTextDatumCriterion\r\n * GrantaServerApiSearchMathsFunctionalDatumCriterion\r\n * GrantaServerApiSearchPictureDatumCriterion\r\n * GrantaServerApiSearchPointDatumCriterion\r\n * GrantaServerApiSearchRangeDatumCriterion\r\n * GrantaServerApiSearchShortTextDatumCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "dateTime": "#/components/schemas/GrantaServerApiSearchDateTimeDatumCriterion",
            "discreteFunctionalRange": "#/components/schemas/GrantaServerApiSearchDiscreteFunctionalRangeDatumCriterion",
            "discreteFunctionalValues": "#/components/schemas/GrantaServerApiSearchDiscreteFunctionalValuesDatumCriterion",
            "discreteIdentity": "#/components/schemas/GrantaServerApiSearchDiscreteIdentityDatumCriterion",
            "discreteIdentityValues": "#/components/schemas/GrantaServerApiSearchDiscreteIdentityValuesDatumCriterion",
            "discreteGuid": "#/components/schemas/GrantaServerApiSearchDiscreteGuidDatumCriterion",
            "discreteGuidValues": "#/components/schemas/GrantaServerApiSearchDiscreteGuidValuesDatumCriterion",
            "discreteRange": "#/components/schemas/GrantaServerApiSearchDiscreteRangeDatumCriterion",
            "discreteText": "#/components/schemas/GrantaServerApiSearchDiscreteTextDatumCriterion",
            "discreteTextValues": "#/components/schemas/GrantaServerApiSearchDiscreteTextValuesDatumCriterion",
            "file": "#/components/schemas/GrantaServerApiSearchFileDatumCriterion",
            "floatFunctionalData": "#/components/schemas/GrantaServerApiSearchFloatFunctionalDatumCriterion",
            "floatFunctionalGraph": "#/components/schemas/GrantaServerApiSearchFloatFunctionalGraphDatumCriterion",
            "hyperlink": "#/components/schemas/GrantaServerApiSearchHyperlinkDatumCriterion",
            "integer": "#/components/schemas/GrantaServerApiSearchIntegerDatumCriterion",
            "link": "#/components/schemas/GrantaServerApiSearchLinkDatumCriterion",
            "logical": "#/components/schemas/GrantaServerApiSearchLogicalDatumCriterion",
            "longText": "#/components/schemas/GrantaServerApiSearchLongTextDatumCriterion",
            "mathsFunctional": "#/components/schemas/GrantaServerApiSearchMathsFunctionalDatumCriterion",
            "picture": "#/components/schemas/GrantaServerApiSearchPictureDatumCriterion",
            "point": "#/components/schemas/GrantaServerApiSearchPointDatumCriterion",
            "range": "#/components/schemas/GrantaServerApiSearchRangeDatumCriterion",
            "shortText": "#/components/schemas/GrantaServerApiSearchShortTextDatumCriterion"
          }
        }
      },
      "GrantaServerApiSearchDatumExistsCriterion": {
        "type": "object",
        "additionalProperties": false,
        "description": "Inner criterion of an attribute search criterion for when the only bit of information about the datum that we want to convey is its type\r\nFor link datum types, linking information must also be provided.\r\n\r\nThis is one of: \r\n * GrantaServerApiSearchLinkExistsDatumCriterion\r\n * GrantaServerApiSearchSimpleDatumExistsCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "link": "#/components/schemas/GrantaServerApiSearchLinkExistsDatumCriterion",
            "type": "#/components/schemas/GrantaServerApiSearchSimpleDatumExistsCriterion"
          }
        }
      },
      "GrantaServerApiSearchDiscreteFunctionalRangeDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "discreteFunctionalRange"
              },
              "gte": {
                "type": "integer",
                "description": "Greater than or equal to",
                "format": "int32",
                "nullable": true
              },
              "lte": {
                "type": "integer",
                "description": "Less than or equal to",
                "format": "int32",
                "nullable": true
              },
              "constraints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchParameterConstraint"
                },
                "description": "Optional unit string. If not included, the gte and lte values are assumed to be in database units.",
                "nullable": true,
                "readOnly": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteFunctionalRange: Criterion for matching records with discrete functional data where the discrete values are in the given range. If one of gte or lte is null, this will be an open ended search\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "discreteFunctionalRange"
      },
      "GrantaServerApiSearchDiscreteFunctionalValuesDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "anyIdentities": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Match any of these discrete type identities",
                "nullable": true
              },
              "anyGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Match any of these discrete type GUIDs",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "discreteFunctionalValues"
              },
              "constraints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchParameterConstraint"
                },
                "description": "Constraints on the parameters of the attribute. Unspecified parameters will be assumed to be unconstrained.",
                "nullable": true,
                "readOnly": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteFunctionalValues: Criterion for matching records with discrete functional data where the discrete values are one of the given values. Either identities or GUIDs should be provided.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "discreteFunctionalValues"
      },
      "GrantaServerApiSearchDiscreteGuidDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "default": "discreteGuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteGuid: Criterion for matching records where the GUID of the discrete data matches the specified value.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "discreteGuid"
      },
      "GrantaServerApiSearchDiscreteGuidValuesDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "all": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Match all of these discrete value GUIDs",
                "nullable": true
              },
              "any": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Match any of these discrete type GUIDs",
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Match none of the discrete type GUIDs",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "discreteGuidValues"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteGuidValues: Criterion for matching records where the discrete data matches any, all and/or none of the provided discrete value GUIDs. One or more field can be null.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "discreteGuidValues"
      },
      "GrantaServerApiSearchDiscreteIdentityDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              },
              "type": {
                "type": "string",
                "default": "discreteIdentity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteIdentity: Criterion for matching records where the identity of the discrete data matches the specified value.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "discreteIdentity"
      },
      "GrantaServerApiSearchDiscreteIdentityValuesDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "all": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Match all of these discrete value identities",
                "nullable": true
              },
              "any": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Match any of these discrete type identities",
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Match none of the discrete type identities",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "discreteIdentityValues"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteIdentityValues: Criterion for matching records where the discrete data matches any, all and/or none of the provided discrete value identities. One or more field can be null.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "discreteIdentityValues"
      },
      "GrantaServerApiSearchDiscreteParameterNameConstraint": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchParameterConstraint"
          },
          {
            "type": "object",
            "properties": {
              "any": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "discreteName"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchParameterConstraint",
        "x-discriminator-value": "discreteName"
      },
      "GrantaServerApiSearchDiscreteParameterValueConstraint": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchParameterConstraint"
          },
          {
            "type": "object",
            "properties": {
              "any": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                },
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                },
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "discreteValue"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchParameterConstraint",
        "x-discriminator-value": "discreteValue"
      },
      "GrantaServerApiSearchDiscreteRangeDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "integer",
                "description": "Greater than or equal to",
                "format": "int32",
                "nullable": true
              },
              "lte": {
                "type": "integer",
                "description": "Less than or equal to",
                "format": "int32",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "discreteRange"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteRange: Criterion for matching records for where the discrete values are in the given range. If one of gte or lte is null, this will be an open ended search\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "discreteRange"
      },
      "GrantaServerApiSearchDiscreteTextDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              },
              "textMatchBehaviour": {
                "$ref": "#/components/schemas/GrantaServerApiSearchTextMatchBehaviour"
              },
              "type": {
                "type": "string",
                "default": "discreteText"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteText: Criterion for matching records where the text of the discrete data contains the specified value.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "discreteText"
      },
      "GrantaServerApiSearchDiscreteTextValuesDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "all": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "any": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "textMatchBehaviour": {
                "$ref": "#/components/schemas/GrantaServerApiSearchTextMatchBehaviour"
              },
              "type": {
                "type": "string",
                "default": "discreteTextValues"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteTextValues: Criterion for matching records where the text in the discrete data matches all, any and/or none of the specified text strings. One of more field can be null.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "discreteTextValues"
      },
      "GrantaServerApiSearchDoubleSortingValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchSortingValue"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "type": {
                "type": "string",
                "default": "double"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchSortingValue",
        "x-discriminator-value": "double"
      },
      "GrantaServerApiSearchFileDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "file"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "file"
      },
      "GrantaServerApiSearchFloatFunctionalDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "floatFunctionalData"
              },
              "gte": {
                "type": "number",
                "description": "Greater than or equal to",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "description": "Less than or equal to",
                "format": "double",
                "nullable": true
              },
              "unit": {
                "type": "string",
                "description": "Optional unit string. If not included, the gte and lte values are assumed to be in database units.",
                "nullable": true
              },
              "constraints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchParameterConstraint"
                },
                "description": "Constraints on the parameters of the attribute. Unspecified parameters will be assumed to be unconstrained.",
                "nullable": true,
                "readOnly": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "floatFunctionalData: Criterion for matching records with float functional data\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "floatFunctionalData"
      },
      "GrantaServerApiSearchFloatFunctionalGraphDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "floatFunctionalGraph"
              },
              "xAxisParameterIdentity": {
                "type": "integer",
                "description": "Optional x axis parameter filter.",
                "format": "int32",
                "nullable": true
              },
              "xAxisParameterGuid": {
                "type": "string",
                "description": "Optional x axis parameter filter.",
                "format": "uuid",
                "nullable": true
              },
              "numberOfSeriesLte": {
                "type": "integer",
                "description": "Optional filter for the number of series.",
                "format": "int32",
                "nullable": true
              },
              "numberOfSeriesGte": {
                "type": "integer",
                "description": "Optional filter for the number of series.",
                "format": "int32",
                "nullable": true
              },
              "showAsTable": {
                "type": "boolean",
                "description": "Optional filter for data on the \"Show as table\" property",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "floatFunctionalGraph: Criterion for matching records with float functional data\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "floatFunctionalGraph"
      },
      "GrantaServerApiSearchFreeTextCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          {
            "type": "object",
            "properties": {
              "identities": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              },
              "value": {
                "type": "string",
                "nullable": true
              },
              "identitiesToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchBoostByIdentity"
                },
                "nullable": true
              },
              "identitiesToExclude": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              },
              "guids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              },
              "guidsToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchBoostByGuid"
                },
                "nullable": true
              },
              "guidsToExclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "text"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Runs a query for the specified term. An optional list of attribute identities is provided - if this is missing (null), we search everything; if it's empty, we'll return nothing.  If attribute identifiers are provided, all fields must use either identities or GUIDs\r\n\r\nThis extends: GrantaServerApiSearchCriterion",
        "x-discriminator-value": "text"
      },
      "GrantaServerApiSearchHyperlinkDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "hyperlink"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "hyperlink: Criterion for matching records where the hyperlink description contains the given value.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "hyperlink"
      },
      "GrantaServerApiSearchIndexStatus": {
        "type": "object",
        "properties": {
          "searchIndexUpToDate": {
            "type": "boolean",
            "description": "Whether all changes up to and including the most recent database revision have been sent to the search index. This will return true\r\neven if some of those revisions could not be indexed"
          },
          "searchIndexInSync": {
            "type": "boolean",
            "description": "Returns false if the search index is out of sync with the database (i.e. because changes were made that could not be indexed)"
          },
          "searchIndexLocation": {
            "type": "string",
            "description": "The location of the index.",
            "nullable": true
          },
          "searchIndexIsReadOnly": {
            "type": "boolean",
            "description": "True if the index is read only.",
            "nullable": true
          },
          "diskStatus": {
            "$ref": "#/components/schemas/GrantaServerApiDiskStatus"
          },
          "diskThreshold": {
            "type": "string",
            "description": "The 'flood stage' threshold from Elasticsearch.",
            "nullable": true
          },
          "searchIndexUnavailable": {
            "type": "boolean",
            "description": "True if the index could not be contacted.",
            "nullable": true
          },
          "recordsThatFailedToIndex": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiIndexRecordFailure"
            },
            "description": "Details of any records that failed to index.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSearchIntegerDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "integer",
                "description": "Greater than or equal to",
                "format": "int32",
                "nullable": true
              },
              "lte": {
                "type": "integer",
                "description": "Less than or equal to",
                "format": "int32",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "integer"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "integer: Criterion for matching records where the integer data is within the given bounds. If one of gte or lte is null, this will be an open ended search.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "integer"
      },
      "GrantaServerApiSearchLinkDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "targetTableIdentity": {
                "type": "integer",
                "description": "Table containing the linked records",
                "format": "int32",
                "nullable": true
              },
              "targetTableGuid": {
                "type": "string",
                "description": "Table containing the linked records",
                "format": "uuid",
                "nullable": true
              },
              "targetDatabaseKey": {
                "type": "string",
                "description": "Database containing the linked records. For reverse cross database links, this is the database where the link is defined",
                "nullable": true
              },
              "localCriterion": {
                "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
              },
              "linkDatumType": {
                "$ref": "#/components/schemas/GrantaServerApiLinkAttributeType"
              },
              "searchInReversedDirection": {
                "type": "boolean"
              },
              "targetAttributeIdentity": {
                "type": "integer",
                "description": "For tabular searching: this is the identity of the short-text linking attribute.\r\nOtherwise null.",
                "format": "int32",
                "nullable": true
              },
              "targetAttributeGuid": {
                "type": "string",
                "description": "For tabular searching: this is the GUID of the short-text linking attribute.\r\nOtherwise null.",
                "format": "uuid",
                "nullable": true
              },
              "innerCriterion": {
                "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
              },
              "type": {
                "type": "string",
                "default": "link"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "link: Criterion for matching records that are linked to records that match the inner criterion. The target database and table specify the location of the linked records.\r\nThe inner criterion must be a criterion that applies to the records in the linked table. The link group followed will be the link group specified on the outer AttributeCriterion.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "link"
      },
      "GrantaServerApiSearchLinkExistsDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumExistsCriterion"
          },
          {
            "type": "object",
            "properties": {
              "targetTableIdentity": {
                "type": "integer",
                "description": "Table containing the linked records",
                "format": "int32",
                "nullable": true
              },
              "targetTableGuid": {
                "type": "string",
                "description": "Table containing the linked records",
                "format": "uuid",
                "nullable": true
              },
              "targetDatabaseKey": {
                "type": "string",
                "description": "Database containing the linked records. For reverse cross database links, this is the database where the link is defined",
                "nullable": true
              },
              "linkDatumType": {
                "$ref": "#/components/schemas/GrantaServerApiLinkAttributeType"
              },
              "searchInReversedDirection": {
                "type": "boolean"
              },
              "targetAttributeIdentity": {
                "type": "integer",
                "description": "For tabular searching: this is the identity of the short-text linking attribute.\r\nOtherwise null.",
                "format": "int32",
                "nullable": true
              },
              "targetAttributeGuid": {
                "type": "string",
                "description": "For tabular searching: this is the GUID of the short-text linking attribute.\r\nOtherwise null.",
                "format": "uuid",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "link"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "link: Criterion for matching records that are linked to records by the given link group. The target database and table specify the location of the linked records.\r\n\r\nThis extends: GrantaServerApiSearchDatumExistsCriterion",
        "x-discriminator-value": "link"
      },
      "GrantaServerApiSearchLinkingValueMatchBehaviour": {
        "enum": [
          "AllRows",
          "VisibleRows",
          "ExactMatchMatchingRows",
          "FreeTextMatchingRows"
        ],
        "type": "string",
        "description": "Enum for use in the Granta.Server.Api.Search.TabularLinkingValueCriterion to control which tabular rows are returned"
      },
      "GrantaServerApiSearchLogicalDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "description": "Logical search value"
              },
              "type": {
                "type": "string",
                "default": "logical"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "logical"
      },
      "GrantaServerApiSearchLongSortingValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchSortingValue"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string",
                "default": "long"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchSortingValue",
        "x-discriminator-value": "long"
      },
      "GrantaServerApiSearchLongTextDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Long text search value",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "longText"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "longText"
      },
      "GrantaServerApiSearchMathsFunctionalDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "mathsFunctional"
              },
              "gte": {
                "type": "number",
                "description": "Greater than or equal to",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "description": "Less than or equal to",
                "format": "double",
                "nullable": true
              },
              "unit": {
                "type": "string",
                "description": "Optional unit string. If not included, the gte and lte values are assumed to be in database units.",
                "nullable": true
              },
              "constraints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GrantaServerApiSearchParameterConstraint"
                },
                "description": "Constraints on the parameters of the attribute. Unspecified parameters will be assumed to be unconstrained.",
                "nullable": true,
                "readOnly": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "mathsFunctional: Criterion for matching records with maths functional data (EELs)\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "mathsFunctional"
      },
      "GrantaServerApiSearchNumericParameterConstraint": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchParameterConstraint"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "unit": {
                "type": "string",
                "nullable": true
              },
              "scaleType": {
                "type": "string",
                "description": "Optionally, override the scale type of the parameter. Can be Linear or Log",
                "nullable": true
              },
              "interpolationType": {
                "type": "string",
                "description": "Optionally, override the interpolation type of the parameter. Can be Auto, None, Linear or CubicSpline",
                "nullable": true
              },
              "significantFigures": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "numeric"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchParameterConstraint",
        "x-discriminator-value": "numeric"
      },
      "GrantaServerApiSearchPagingOptions": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "description": "The number of results that should be returned in each page",
            "format": "int32"
          },
          "keepAliveInMinutes": {
            "type": "integer",
            "description": "The length of time that the paginated search should be kept in memory",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "pageNumber": {
            "type": "integer",
            "description": "(Optional) the (1-indexed) number of the page to return from the search. No pages are returned if not provided",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An optional field for paging options. If provided on a request, the response will contain an identifier that can be used to retrieve the other pages. Page size must be smaller than 10,000"
      },
      "GrantaServerApiSearchParameterConstraint": {
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GrantaServerApiObjectIdentifier"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSearchDiscreteParameterNameConstraint\r\n * GrantaServerApiSearchDiscreteParameterValueConstraint\r\n * GrantaServerApiSearchNumericParameterConstraint",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discreteName": "#/components/schemas/GrantaServerApiSearchDiscreteParameterNameConstraint",
            "discreteValue": "#/components/schemas/GrantaServerApiSearchDiscreteParameterValueConstraint",
            "numeric": "#/components/schemas/GrantaServerApiSearchNumericParameterConstraint"
          }
        }
      },
      "GrantaServerApiSearchPictureDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "picture"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "picture: Criterion for matching records where picture data exists.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "picture"
      },
      "GrantaServerApiSearchPointDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "number",
                "description": "Greater than or equal",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "description": "Less than or equal",
                "format": "double",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "point"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching records where the point data is within the given bounds. If one of gte or lte is null, this will be an open ended search.\r\nIf this is a unitted attribute, the search values should be given in terms of the units defined for the attribute in the database/integration schema.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "point"
      },
      "GrantaServerApiSearchRangeDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "number",
                "description": "Greater than or equal to",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "description": "Less than or equal to",
                "format": "double",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "range"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching records where the range data is within the given bounds. If one of gte or lte is null, this will be an open ended search.\r\nIf this is a unitted attribute, the search values should be given in terms of the units defined for the attribute in the database/integration schema.\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "range"
      },
      "GrantaServerApiSearchRecordAncestorCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          {
            "type": "object",
            "properties": {
              "ancestorIdentity": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "directParentOnly": {
                "type": "boolean",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "recordAncestor"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion that returns records with a specific parent or ancestor. If no ancestor identity is provided, returns records that sit directly below the table\r\n\r\nThis extends: GrantaServerApiSearchCriterion",
        "x-discriminator-value": "recordAncestor"
      },
      "GrantaServerApiSearchRecordListMemberCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          {
            "type": "object",
            "properties": {
              "recordListIdentifiers": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "recordListMember"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion that returns records contained within at least one of the referenced record lists.\r\n\r\nThis extends: GrantaServerApiSearchCriterion",
        "x-discriminator-value": "recordListMember"
      },
      "GrantaServerApiSearchRecordPropertyCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          {
            "type": "object",
            "properties": {
              "property": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchableRecordProperty"
              },
              "innerCriterion": {
                "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
              },
              "type": {
                "type": "string",
                "default": "recordProperty"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for a search matching values in a given record property.\r\n\r\nThis extends: GrantaServerApiSearchCriterion",
        "x-discriminator-value": "recordProperty"
      },
      "GrantaServerApiSearchRecordPropertySortCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchSortCriterion"
          },
          {
            "type": "object",
            "properties": {
              "property": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSearchableRecordProperty"
              },
              "sortType": {
                "$ref": "#/components/schemas/GrantaServerApiSearchSortType"
              },
              "type": {
                "type": "string",
                "default": "recordProperty"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Specifies a record property based sort criterion for a search query.\r\n\r\nThis extends: GrantaServerApiSearchSortCriterion",
        "x-discriminator-value": "recordProperty"
      },
      "GrantaServerApiSearchRecordReferenceCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          {
            "type": "object",
            "properties": {
              "databaseKey": {
                "type": "string",
                "nullable": true
              },
              "recordIdentity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "recordHistoryIdentity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "recordGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "reference"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion that returns records matching a specific reference. The database key must be provided, along with either the record GUID or the record identity.\r\n\r\nThis extends: GrantaServerApiSearchCriterion",
        "x-discriminator-value": "reference"
      },
      "GrantaServerApiSearchRecordSubsetCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          {
            "type": "object",
            "properties": {
              "subsetIdentity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "subsetGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "subset"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion that returns records matching a specific subset. The database key must be provided, along with either the subset GUID or the subset identity.\r\n\r\nThis extends: GrantaServerApiSearchCriterion",
        "x-discriminator-value": "subset"
      },
      "GrantaServerApiSearchRelevanceSortCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchSortCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "relevance"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Specifies a relevance based sort criterion for a search query\r\n\r\nThis extends: GrantaServerApiSearchSortCriterion",
        "x-discriminator-value": "relevance"
      },
      "GrantaServerApiSearchSearchRequest": {
        "type": "object",
        "properties": {
          "criterion": {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          "sortCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSearchSortCriterion"
            },
            "description": "An optional set of attribute based sort criteria. If none are provided, the results will be sorted in descending relevance order.",
            "nullable": true
          },
          "pagingOptions": {
            "$ref": "#/components/schemas/GrantaServerApiSearchPagingOptions"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSearchSearchResponse": {
        "type": "object",
        "properties": {
          "searchIdentifier": {
            "type": "string",
            "description": "If the search request had paging options specified, this will return an identifier that can be used to get the rest of the results",
            "format": "uuid",
            "nullable": true
          },
          "totalResultCount": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantaServerApiSearchSearchResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSearchSearchResult": {
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string",
            "nullable": true
          },
          "recordHistoryIdentity": {
            "type": "integer",
            "format": "int64"
          },
          "recordIdentity": {
            "type": "integer",
            "format": "int64"
          },
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "recordGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "recordName": {
            "type": "string",
            "nullable": true
          },
          "treeName": {
            "type": "string",
            "nullable": true
          },
          "recordColor": {
            "type": "string",
            "nullable": true
          },
          "tableIdentity": {
            "type": "integer",
            "format": "int32"
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          },
          "cubicSplineStatus": {
            "type": "string",
            "nullable": true
          },
          "versionControlState": {
            "type": "string",
            "nullable": true
          },
          "versionNumber": {
            "type": "integer",
            "format": "int64"
          },
          "parentIdentity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/GrantaServerApiRecordType"
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sortingValue": {
            "$ref": "#/components/schemas/GrantaServerApiSearchSortingValue"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSearchSearchResultsRequest": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "description": "The (1-indexed) number of the page to return from a search\r\nThe size of the page was determined by the original query",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GrantaServerApiSearchSearchableRecordProperty": {
        "enum": [
          "createdDate",
          "creator",
          "lastModifiedDate",
          "lastModifier",
          "recordType",
          "colour",
          "versionState",
          "versionNumber",
          "recordName",
          "treeName",
          "databaseKey",
          "tableName",
          "tableIdentity"
        ],
        "type": "string",
        "description": "Properties of a record that can be used to in searches"
      },
      "GrantaServerApiSearchShortTextDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              },
              "textMatchBehaviour": {
                "$ref": "#/components/schemas/GrantaServerApiSearchTextMatchBehaviour"
              },
              "type": {
                "type": "string",
                "default": "shortText"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchDatumCriterion",
        "x-discriminator-value": "shortText"
      },
      "GrantaServerApiSearchSimpleDatumExistsCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchDatumExistsCriterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "type"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GrantaServerApiSearchDatumExistsCriterion",
        "x-discriminator-value": "type"
      },
      "GrantaServerApiSearchSortCriterion": {
        "type": "object",
        "properties": {
          "sortDirection": {
            "$ref": "#/components/schemas/GrantaServerApiSearchSortDirection"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSearchAttributeSortCriterion\r\n * GrantaServerApiSearchRecordPropertySortCriterion\r\n * GrantaServerApiSearchRelevanceSortCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "attribute": "#/components/schemas/GrantaServerApiSearchAttributeSortCriterion",
            "recordProperty": "#/components/schemas/GrantaServerApiSearchRecordPropertySortCriterion",
            "relevance": "#/components/schemas/GrantaServerApiSearchRelevanceSortCriterion"
          }
        }
      },
      "GrantaServerApiSearchSortDirection": {
        "enum": [
          "ascending",
          "descending"
        ],
        "type": "string"
      },
      "GrantaServerApiSearchSortType": {
        "enum": [
          "natural",
          "alphabetical"
        ],
        "type": "string",
        "description": "For a text-type sort, whether the results should use a pure alphabetical or a natural sort (where multi-digit numbers within strings are treated as a single character for the purposes of sorting)."
      },
      "GrantaServerApiSearchSortingValue": {
        "type": "object",
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GrantaServerApiSearchDoubleSortingValue\r\n * GrantaServerApiSearchLongSortingValue\r\n * GrantaServerApiSearchStringSortingValue",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "double": "#/components/schemas/GrantaServerApiSearchDoubleSortingValue",
            "long": "#/components/schemas/GrantaServerApiSearchLongSortingValue",
            "text": "#/components/schemas/GrantaServerApiSearchStringSortingValue"
          }
        }
      },
      "GrantaServerApiSearchStringSortingValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchSortingValue"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              },
              "type": {
                "type": "string",
                "default": "text"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchSortingValue",
        "x-discriminator-value": "text"
      },
      "GrantaServerApiSearchTabularLinkingValueCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantaServerApiSearchCriterion"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "linkingValueMatchBehaviour": {
                "$ref": "#/components/schemas/GrantaServerApiSearchLinkingValueMatchBehaviour"
              },
              "type": {
                "type": "string",
                "default": "tabularLinkingValue"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GrantaServerApiSearchCriterion",
        "x-discriminator-value": "tabularLinkingValue"
      },
      "GrantaServerApiSearchTextMatchBehaviour": {
        "enum": [
          "contains",
          "exactMatch",
          "exactMatchCaseInsensitive"
        ],
        "type": "string"
      },
      "GrantaServerApiVersionState": {
        "enum": [
          "unversioned",
          "unreleased",
          "released",
          "superseded",
          "withdrawn"
        ],
        "type": "string",
        "description": "API-level enum for version control state."
      },
      "JsonPatchDocument": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "SystemNetHttpStatusCode": {
        "enum": [
          100,
          101,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          426,
          500,
          501,
          502,
          503,
          504,
          505
        ],
        "type": "integer",
        "format": "int32"
      }
    }
  }
}