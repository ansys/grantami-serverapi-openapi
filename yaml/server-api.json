{
  "openapi": "3.0.1",
  "info": {
    "title": "MI Server API",
    "version": "v1"
  },
  "paths": {
    "/v1alpha/activity-log/entries": {
      "post": {
        "tags": [
          "ActivityLog"
        ],
        "summary": "Get filtered activity log entries, ordered from newest to oldest.",
        "operationId": "GetEntries",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size. Defaults to 1 000. The limit is 10 000.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number. Defaults to 1.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "description": "Filter object used to narrow down the entries to return.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaActivityLogEntriesFilter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Get activity log entries after a specific date",
                  "description": "Get activity log entries after a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": false,
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 2": {
                  "summary": "Get activity log entries after or on a specific date",
                  "description": "Get activity log entries after or on a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 3": {
                  "summary": "Get activity log entries before a specific date",
                  "description": "Get activity log entries before a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFromInclusive": false,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 4": {
                  "summary": "Get activity log entries before or on a specific date",
                  "description": "Get activity log entries before or on a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFromInclusive": false,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": true
                    }
                  }
                },
                "Example 5": {
                  "summary": "Get activity log entries between specific dates",
                  "description": "Get activity log entries between specific dates. Inclusive flag defaults to false. If both dates are specified, 'to date' must be later than 'from date'.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": true
                    }
                  }
                },
                "Example 6": {
                  "summary": "Get activity log entries where username is the exact match (case-insensitive)",
                  "description": "Get activity log entries where username is the exact match (case-insensitive). If username filter is specified, `usernameToMatch` must be set. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "usernameFilter": {
                      "usernameToMatch": "mi_user",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 7": {
                  "summary": "Get activity log entries where username contains the specified value (case-insensitive)",
                  "description": "Get activity log entries where username contains the specified value (case-insensitive). If username filter is specified, `usernameToMatch` must be set. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "usernameFilter": {
                      "usernameToMatch": "admin",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 8": {
                  "summary": "Get activity log entries where application names match the specified list",
                  "description": "Get activity log entries where application names match the specified list. If application names collection filter is specified `applicationNamesToMatch` must be set. Elements in the list are compared case-insensitive and require an exact match. `collectionMatchType` defaults to `collectionExactMatch`.",
                  "value": {
                    "applicationNamesCollectionFilter": {
                      "applicationNamesToMatch": [
                        "MI Explore",
                        "Server API"
                      ],
                      "collectionMatchType": "collectionExactMatch"
                    }
                  }
                },
                "Example 9": {
                  "summary": "Get activity log entries where application names include those from the specified list",
                  "description": "Get activity log entries where application names include those from the specified list. If application names collection filter is specified `applicationNamesToMatch` must be set. Elements in the list are compared case-insensitive and require an exact match. `collectionMatchType` defaults to `collectionExactMatch`.",
                  "value": {
                    "applicationNamesCollectionFilter": {
                      "applicationNamesToMatch": [
                        "MI Explore",
                        "Server API"
                      ],
                      "collectionMatchType": "collectionContains"
                    }
                  }
                },
                "Example 10": {
                  "summary": "Get activity log entries where at least one of the application names matches the specified value (case-insensitive)",
                  "description": "Get activity log entries where at least one of the application names matches the specified value. If application name filter is specified `applicationNameToMatch` must be set. Value is compared case-insensitive. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI Explore",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 11": {
                  "summary": "Get activity log entries where at least one of the application names contains the specified value (case-insensitive)",
                  "description": "Get activity log entries where at least one of the application names contains the specified value. If application name filter is specified `applicationNameToMatch` must be set. Value is compared case-insensitive. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 12": {
                  "summary": "Get activity log entries where database key matches specified value (case-insensitive)",
                  "description": "Get activity log entries where database key matches specified value (case-insensitive). If database key filter is specified `databaseKeyToMatch` must be set, but can be null to match entries without database value. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "MI_Training",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 13": {
                  "summary": "Get activity log entries where database key contains specified value (case-insensitive)",
                  "description": "Get activity log entries where database key contains specified value (case-insensitive). For this request `databaseKeyToMatch` must be set and CANNOT be null.",
                  "value": {
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "training",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 14": {
                  "summary": "Get activity log entries where usage mode is equal to 'view'",
                  "description": "Get activity log entries where usage mode is equal to 'view'. If usage mode filter is specified `usageModeToMatch` must be specified.",
                  "value": {
                    "usageModeFilter": {
                      "usageModeToMatch": "view"
                    }
                  }
                },
                "Example 15": {
                  "summary": "Get activity log entries where usage mode is equal to 'edit'",
                  "description": "Get activity log entries where usage mode is equal to 'edit'. If usage mode filter is specified `usageModeToMatch` must be specified.",
                  "value": {
                    "usageModeFilter": {
                      "usageModeToMatch": "edit"
                    }
                  }
                },
                "Example 16": {
                  "summary": "Get activity log entries that meet multiple filters",
                  "description": "Get activity log entries since 7 days ago (inclusive), for which the username contains the word 'admin', with at least one application name matching 'MI Explore' (case-insensitive), database key that matches 'MI_Training' (case-insensitive) and usage mode equal to 'view'.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateToInclusive": false
                    },
                    "usernameFilter": {
                      "usernameToMatch": "admin",
                      "matchType": "containsCaseInsensitive"
                    },
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI Explore",
                      "matchType": "exactMatchCaseInsensitive"
                    },
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "MI_Training",
                      "matchType": "exactMatchCaseInsensitive"
                    },
                    "usageModeFilter": {
                      "usageModeToMatch": "view"
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaActivityLogEntriesFilter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Get activity log entries after a specific date",
                  "description": "Get activity log entries after a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": false,
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 2": {
                  "summary": "Get activity log entries after or on a specific date",
                  "description": "Get activity log entries after or on a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 3": {
                  "summary": "Get activity log entries before a specific date",
                  "description": "Get activity log entries before a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFromInclusive": false,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 4": {
                  "summary": "Get activity log entries before or on a specific date",
                  "description": "Get activity log entries before or on a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFromInclusive": false,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": true
                    }
                  }
                },
                "Example 5": {
                  "summary": "Get activity log entries between specific dates",
                  "description": "Get activity log entries between specific dates. Inclusive flag defaults to false. If both dates are specified, 'to date' must be later than 'from date'.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": true
                    }
                  }
                },
                "Example 6": {
                  "summary": "Get activity log entries where username is the exact match (case-insensitive)",
                  "description": "Get activity log entries where username is the exact match (case-insensitive). If username filter is specified, `usernameToMatch` must be set. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "usernameFilter": {
                      "usernameToMatch": "mi_user",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 7": {
                  "summary": "Get activity log entries where username contains the specified value (case-insensitive)",
                  "description": "Get activity log entries where username contains the specified value (case-insensitive). If username filter is specified, `usernameToMatch` must be set. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "usernameFilter": {
                      "usernameToMatch": "admin",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 8": {
                  "summary": "Get activity log entries where application names match the specified list",
                  "description": "Get activity log entries where application names match the specified list. If application names collection filter is specified `applicationNamesToMatch` must be set. Elements in the list are compared case-insensitive and require an exact match. `collectionMatchType` defaults to `collectionExactMatch`.",
                  "value": {
                    "applicationNamesCollectionFilter": {
                      "applicationNamesToMatch": [
                        "MI Explore",
                        "Server API"
                      ],
                      "collectionMatchType": "collectionExactMatch"
                    }
                  }
                },
                "Example 9": {
                  "summary": "Get activity log entries where application names include those from the specified list",
                  "description": "Get activity log entries where application names include those from the specified list. If application names collection filter is specified `applicationNamesToMatch` must be set. Elements in the list are compared case-insensitive and require an exact match. `collectionMatchType` defaults to `collectionExactMatch`.",
                  "value": {
                    "applicationNamesCollectionFilter": {
                      "applicationNamesToMatch": [
                        "MI Explore",
                        "Server API"
                      ],
                      "collectionMatchType": "collectionContains"
                    }
                  }
                },
                "Example 10": {
                  "summary": "Get activity log entries where at least one of the application names matches the specified value (case-insensitive)",
                  "description": "Get activity log entries where at least one of the application names matches the specified value. If application name filter is specified `applicationNameToMatch` must be set. Value is compared case-insensitive. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI Explore",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 11": {
                  "summary": "Get activity log entries where at least one of the application names contains the specified value (case-insensitive)",
                  "description": "Get activity log entries where at least one of the application names contains the specified value. If application name filter is specified `applicationNameToMatch` must be set. Value is compared case-insensitive. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 12": {
                  "summary": "Get activity log entries where database key matches specified value (case-insensitive)",
                  "description": "Get activity log entries where database key matches specified value (case-insensitive). If database key filter is specified `databaseKeyToMatch` must be set, but can be null to match entries without database value. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "MI_Training",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 13": {
                  "summary": "Get activity log entries where database key contains specified value (case-insensitive)",
                  "description": "Get activity log entries where database key contains specified value (case-insensitive). For this request `databaseKeyToMatch` must be set and CANNOT be null.",
                  "value": {
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "training",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 14": {
                  "summary": "Get activity log entries where usage mode is equal to 'view'",
                  "description": "Get activity log entries where usage mode is equal to 'view'. If usage mode filter is specified `usageModeToMatch` must be specified.",
                  "value": {
                    "usageModeFilter": {
                      "usageModeToMatch": "view"
                    }
                  }
                },
                "Example 15": {
                  "summary": "Get activity log entries where usage mode is equal to 'edit'",
                  "description": "Get activity log entries where usage mode is equal to 'edit'. If usage mode filter is specified `usageModeToMatch` must be specified.",
                  "value": {
                    "usageModeFilter": {
                      "usageModeToMatch": "edit"
                    }
                  }
                },
                "Example 16": {
                  "summary": "Get activity log entries that meet multiple filters",
                  "description": "Get activity log entries since 7 days ago (inclusive), for which the username contains the word 'admin', with at least one application name matching 'MI Explore' (case-insensitive), database key that matches 'MI_Training' (case-insensitive) and usage mode equal to 'view'.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateToInclusive": false
                    },
                    "usernameFilter": {
                      "usernameToMatch": "admin",
                      "matchType": "containsCaseInsensitive"
                    },
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI Explore",
                      "matchType": "exactMatchCaseInsensitive"
                    },
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "MI_Training",
                      "matchType": "exactMatchCaseInsensitive"
                    },
                    "usageModeFilter": {
                      "usageModeToMatch": "view"
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaActivityLogEntriesFilter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Get activity log entries after a specific date",
                  "description": "Get activity log entries after a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": false,
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 2": {
                  "summary": "Get activity log entries after or on a specific date",
                  "description": "Get activity log entries after or on a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 3": {
                  "summary": "Get activity log entries before a specific date",
                  "description": "Get activity log entries before a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFromInclusive": false,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 4": {
                  "summary": "Get activity log entries before or on a specific date",
                  "description": "Get activity log entries before or on a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFromInclusive": false,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": true
                    }
                  }
                },
                "Example 5": {
                  "summary": "Get activity log entries between specific dates",
                  "description": "Get activity log entries between specific dates. Inclusive flag defaults to false. If both dates are specified, 'to date' must be later than 'from date'.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": true
                    }
                  }
                },
                "Example 6": {
                  "summary": "Get activity log entries where username is the exact match (case-insensitive)",
                  "description": "Get activity log entries where username is the exact match (case-insensitive). If username filter is specified, `usernameToMatch` must be set. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "usernameFilter": {
                      "usernameToMatch": "mi_user",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 7": {
                  "summary": "Get activity log entries where username contains the specified value (case-insensitive)",
                  "description": "Get activity log entries where username contains the specified value (case-insensitive). If username filter is specified, `usernameToMatch` must be set. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "usernameFilter": {
                      "usernameToMatch": "admin",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 8": {
                  "summary": "Get activity log entries where application names match the specified list",
                  "description": "Get activity log entries where application names match the specified list. If application names collection filter is specified `applicationNamesToMatch` must be set. Elements in the list are compared case-insensitive and require an exact match. `collectionMatchType` defaults to `collectionExactMatch`.",
                  "value": {
                    "applicationNamesCollectionFilter": {
                      "applicationNamesToMatch": [
                        "MI Explore",
                        "Server API"
                      ],
                      "collectionMatchType": "collectionExactMatch"
                    }
                  }
                },
                "Example 9": {
                  "summary": "Get activity log entries where application names include those from the specified list",
                  "description": "Get activity log entries where application names include those from the specified list. If application names collection filter is specified `applicationNamesToMatch` must be set. Elements in the list are compared case-insensitive and require an exact match. `collectionMatchType` defaults to `collectionExactMatch`.",
                  "value": {
                    "applicationNamesCollectionFilter": {
                      "applicationNamesToMatch": [
                        "MI Explore",
                        "Server API"
                      ],
                      "collectionMatchType": "collectionContains"
                    }
                  }
                },
                "Example 10": {
                  "summary": "Get activity log entries where at least one of the application names matches the specified value (case-insensitive)",
                  "description": "Get activity log entries where at least one of the application names matches the specified value. If application name filter is specified `applicationNameToMatch` must be set. Value is compared case-insensitive. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI Explore",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 11": {
                  "summary": "Get activity log entries where at least one of the application names contains the specified value (case-insensitive)",
                  "description": "Get activity log entries where at least one of the application names contains the specified value. If application name filter is specified `applicationNameToMatch` must be set. Value is compared case-insensitive. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 12": {
                  "summary": "Get activity log entries where database key matches specified value (case-insensitive)",
                  "description": "Get activity log entries where database key matches specified value (case-insensitive). If database key filter is specified `databaseKeyToMatch` must be set, but can be null to match entries without database value. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "MI_Training",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 13": {
                  "summary": "Get activity log entries where database key contains specified value (case-insensitive)",
                  "description": "Get activity log entries where database key contains specified value (case-insensitive). For this request `databaseKeyToMatch` must be set and CANNOT be null.",
                  "value": {
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "training",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 14": {
                  "summary": "Get activity log entries where usage mode is equal to 'view'",
                  "description": "Get activity log entries where usage mode is equal to 'view'. If usage mode filter is specified `usageModeToMatch` must be specified.",
                  "value": {
                    "usageModeFilter": {
                      "usageModeToMatch": "view"
                    }
                  }
                },
                "Example 15": {
                  "summary": "Get activity log entries where usage mode is equal to 'edit'",
                  "description": "Get activity log entries where usage mode is equal to 'edit'. If usage mode filter is specified `usageModeToMatch` must be specified.",
                  "value": {
                    "usageModeFilter": {
                      "usageModeToMatch": "edit"
                    }
                  }
                },
                "Example 16": {
                  "summary": "Get activity log entries that meet multiple filters",
                  "description": "Get activity log entries since 7 days ago (inclusive), for which the username contains the word 'admin', with at least one application name matching 'MI Explore' (case-insensitive), database key that matches 'MI_Training' (case-insensitive) and usage mode equal to 'view'.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateToInclusive": false
                    },
                    "usernameFilter": {
                      "usernameToMatch": "admin",
                      "matchType": "containsCaseInsensitive"
                    },
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI Explore",
                      "matchType": "exactMatchCaseInsensitive"
                    },
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "MI_Training",
                      "matchType": "exactMatchCaseInsensitive"
                    },
                    "usageModeFilter": {
                      "usageModeToMatch": "view"
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaActivityLogEntriesFilter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Get activity log entries after a specific date",
                  "description": "Get activity log entries after a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": false,
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 2": {
                  "summary": "Get activity log entries after or on a specific date",
                  "description": "Get activity log entries after or on a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 3": {
                  "summary": "Get activity log entries before a specific date",
                  "description": "Get activity log entries before a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFromInclusive": false,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": false
                    }
                  }
                },
                "Example 4": {
                  "summary": "Get activity log entries before or on a specific date",
                  "description": "Get activity log entries before or on a specific date. Inclusive flag defaults to false. If date filter is specified either from or to date must be set.",
                  "value": {
                    "dateFilter": {
                      "dateFromInclusive": false,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": true
                    }
                  }
                },
                "Example 5": {
                  "summary": "Get activity log entries between specific dates",
                  "description": "Get activity log entries between specific dates. Inclusive flag defaults to false. If both dates are specified, 'to date' must be later than 'from date'.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateTo": "2025-08-01T00:00:00Z",
                      "dateToInclusive": true
                    }
                  }
                },
                "Example 6": {
                  "summary": "Get activity log entries where username is the exact match (case-insensitive)",
                  "description": "Get activity log entries where username is the exact match (case-insensitive). If username filter is specified, `usernameToMatch` must be set. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "usernameFilter": {
                      "usernameToMatch": "mi_user",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 7": {
                  "summary": "Get activity log entries where username contains the specified value (case-insensitive)",
                  "description": "Get activity log entries where username contains the specified value (case-insensitive). If username filter is specified, `usernameToMatch` must be set. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "usernameFilter": {
                      "usernameToMatch": "admin",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 8": {
                  "summary": "Get activity log entries where application names match the specified list",
                  "description": "Get activity log entries where application names match the specified list. If application names collection filter is specified `applicationNamesToMatch` must be set. Elements in the list are compared case-insensitive and require an exact match. `collectionMatchType` defaults to `collectionExactMatch`.",
                  "value": {
                    "applicationNamesCollectionFilter": {
                      "applicationNamesToMatch": [
                        "MI Explore",
                        "Server API"
                      ],
                      "collectionMatchType": "collectionExactMatch"
                    }
                  }
                },
                "Example 9": {
                  "summary": "Get activity log entries where application names include those from the specified list",
                  "description": "Get activity log entries where application names include those from the specified list. If application names collection filter is specified `applicationNamesToMatch` must be set. Elements in the list are compared case-insensitive and require an exact match. `collectionMatchType` defaults to `collectionExactMatch`.",
                  "value": {
                    "applicationNamesCollectionFilter": {
                      "applicationNamesToMatch": [
                        "MI Explore",
                        "Server API"
                      ],
                      "collectionMatchType": "collectionContains"
                    }
                  }
                },
                "Example 10": {
                  "summary": "Get activity log entries where at least one of the application names matches the specified value (case-insensitive)",
                  "description": "Get activity log entries where at least one of the application names matches the specified value. If application name filter is specified `applicationNameToMatch` must be set. Value is compared case-insensitive. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI Explore",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 11": {
                  "summary": "Get activity log entries where at least one of the application names contains the specified value (case-insensitive)",
                  "description": "Get activity log entries where at least one of the application names contains the specified value. If application name filter is specified `applicationNameToMatch` must be set. Value is compared case-insensitive. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 12": {
                  "summary": "Get activity log entries where database key matches specified value (case-insensitive)",
                  "description": "Get activity log entries where database key matches specified value (case-insensitive). If database key filter is specified `databaseKeyToMatch` must be set, but can be null to match entries without database value. `matchType` defaults to `exactMatchCaseInsensitive`.",
                  "value": {
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "MI_Training",
                      "matchType": "exactMatchCaseInsensitive"
                    }
                  }
                },
                "Example 13": {
                  "summary": "Get activity log entries where database key contains specified value (case-insensitive)",
                  "description": "Get activity log entries where database key contains specified value (case-insensitive). For this request `databaseKeyToMatch` must be set and CANNOT be null.",
                  "value": {
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "training",
                      "matchType": "containsCaseInsensitive"
                    }
                  }
                },
                "Example 14": {
                  "summary": "Get activity log entries where usage mode is equal to 'view'",
                  "description": "Get activity log entries where usage mode is equal to 'view'. If usage mode filter is specified `usageModeToMatch` must be specified.",
                  "value": {
                    "usageModeFilter": {
                      "usageModeToMatch": "view"
                    }
                  }
                },
                "Example 15": {
                  "summary": "Get activity log entries where usage mode is equal to 'edit'",
                  "description": "Get activity log entries where usage mode is equal to 'edit'. If usage mode filter is specified `usageModeToMatch` must be specified.",
                  "value": {
                    "usageModeFilter": {
                      "usageModeToMatch": "edit"
                    }
                  }
                },
                "Example 16": {
                  "summary": "Get activity log entries that meet multiple filters",
                  "description": "Get activity log entries since 7 days ago (inclusive), for which the username contains the word 'admin', with at least one application name matching 'MI Explore' (case-insensitive), database key that matches 'MI_Training' (case-insensitive) and usage mode equal to 'view'.",
                  "value": {
                    "dateFilter": {
                      "dateFrom": "2025-07-30T00:00:00Z",
                      "dateFromInclusive": true,
                      "dateToInclusive": false
                    },
                    "usernameFilter": {
                      "usernameToMatch": "admin",
                      "matchType": "containsCaseInsensitive"
                    },
                    "applicationNameFilter": {
                      "applicationNameToMatch": "MI Explore",
                      "matchType": "exactMatchCaseInsensitive"
                    },
                    "databaseKeyFilter": {
                      "databaseKeyToMatch": "MI_Training",
                      "matchType": "exactMatchCaseInsensitive"
                    },
                    "usageModeFilter": {
                      "usageModeToMatch": "view"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaActivityLogEntriesInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Example response for getting activity log entries.",
                    "description": "Example response for getting activity log entries.",
                    "value": {
                      "entries": [
                        {
                          "date": "2025-08-06T00:00:00+00:00",
                          "username": "mi_user",
                          "applicationNames": [
                            "MI Viewer"
                          ],
                          "databaseKey": "MI_TRAINING",
                          "usageMode": "edit"
                        },
                        {
                          "date": "2025-08-05T00:00:00+00:00",
                          "username": "mi_user",
                          "applicationNames": [
                            "MI Explore",
                            "Server API"
                          ],
                          "databaseKey": "MI_TRAINING",
                          "usageMode": "view"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaActivityLogEntriesInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Example response for getting activity log entries.",
                    "description": "Example response for getting activity log entries.",
                    "value": {
                      "entries": [
                        {
                          "date": "2025-08-06T00:00:00+00:00",
                          "username": "mi_user",
                          "applicationNames": [
                            "MI Viewer"
                          ],
                          "databaseKey": "MI_TRAINING",
                          "usageMode": "edit"
                        },
                        {
                          "date": "2025-08-05T00:00:00+00:00",
                          "username": "mi_user",
                          "applicationNames": [
                            "MI Explore",
                            "Server API"
                          ],
                          "databaseKey": "MI_TRAINING",
                          "usageMode": "view"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaActivityLogEntriesInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Example response for getting activity log entries.",
                    "description": "Example response for getting activity log entries.",
                    "value": {
                      "entries": [
                        {
                          "date": "2025-08-06T00:00:00+00:00",
                          "username": "mi_user",
                          "applicationNames": [
                            "MI Viewer"
                          ],
                          "databaseKey": "MI_TRAINING",
                          "usageMode": "edit"
                        },
                        {
                          "date": "2025-08-05T00:00:00+00:00",
                          "username": "mi_user",
                          "applicationNames": [
                            "MI Explore",
                            "Server API"
                          ],
                          "databaseKey": "MI_TRAINING",
                          "usageMode": "view"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-identity}:aggregations": {
      "post": {
        "tags": [
          "Aggregation"
        ],
        "summary": "Runs an aggregation against the table.",
        "operationId": "DatabaseAggregationForTableWithIdentity",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "b1400ea0-38eb-4804-9a8a-6c7121f624d1",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "ca2a3439-6bae-4dc8-acd1-17e0639f92bd",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 7": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "80c00216-b886-4e5a-a702-e023726cc185",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "b1400ea0-38eb-4804-9a8a-6c7121f624d1",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "ca2a3439-6bae-4dc8-acd1-17e0639f92bd",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 7": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "80c00216-b886-4e5a-a702-e023726cc185",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "b1400ea0-38eb-4804-9a8a-6c7121f624d1",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "ca2a3439-6bae-4dc8-acd1-17e0639f92bd",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 7": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "80c00216-b886-4e5a-a702-e023726cc185",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "b1400ea0-38eb-4804-9a8a-6c7121f624d1",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "ca2a3439-6bae-4dc8-acd1-17e0639f92bd",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 7": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "80c00216-b886-4e5a-a702-e023726cc185",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}:aggregations": {
      "post": {
        "tags": [
          "Aggregation"
        ],
        "summary": "Runs an aggregation against the table.",
        "operationId": "DatabaseAggregationForTableWithGuid",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 9": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "37912827-6ff6-426a-98d2-8ad298deb862",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "c418441f-3d98-4bf7-999b-f063530e83e4",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "04f81d90-fffb-4a7a-963b-fab986c650f1",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 9": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "37912827-6ff6-426a-98d2-8ad298deb862",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "c418441f-3d98-4bf7-999b-f063530e83e4",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "04f81d90-fffb-4a7a-963b-fab986c650f1",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 9": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "37912827-6ff6-426a-98d2-8ad298deb862",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "c418441f-3d98-4bf7-999b-f063530e83e4",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "04f81d90-fffb-4a7a-963b-fab986c650f1",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 9": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "37912827-6ff6-426a-98d2-8ad298deb862",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "c418441f-3d98-4bf7-999b-f063530e83e4",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "04f81d90-fffb-4a7a-963b-fab986c650f1",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:aggregations": {
      "post": {
        "tags": [
          "Aggregation"
        ],
        "summary": "Runs an aggregation against the database.",
        "operationId": "DatabaseAggregation",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 17": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 18": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 19": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "8eaf6320-10e5-457e-b3a3-cf2f47dd2fa6",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 22": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "b9237aec-5afe-484d-b64e-f7b9df0dacee",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "cae71300-dfa7-455d-8a33-2dbf48c53e5a",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 17": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 18": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 19": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "8eaf6320-10e5-457e-b3a3-cf2f47dd2fa6",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 22": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "b9237aec-5afe-484d-b64e-f7b9df0dacee",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "cae71300-dfa7-455d-8a33-2dbf48c53e5a",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 17": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 18": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 19": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "8eaf6320-10e5-457e-b3a3-cf2f47dd2fa6",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 22": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "b9237aec-5afe-484d-b64e-f7b9df0dacee",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "cae71300-dfa7-455d-8a33-2dbf48c53e5a",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 17": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 18": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 19": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 21": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "8eaf6320-10e5-457e-b3a3-cf2f47dd2fa6",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 22": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "b9237aec-5afe-484d-b64e-f7b9df0dacee",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "cae71300-dfa7-455d-8a33-2dbf48c53e5a",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}:aggregations": {
      "post": {
        "tags": [
          "Aggregation"
        ],
        "summary": "Runs an aggregation against the integration schema.",
        "operationId": "IntegrationAggregation",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 25": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 26": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "efaab443-b5e8-4a38-89ba-1b712206d065",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 30": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "cdf7a193-491f-4958-ab6d-68e2b63da9b0",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 31": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "dc3481ba-6401-4428-a511-c8c2c5a4692d",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 32": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 25": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 26": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "efaab443-b5e8-4a38-89ba-1b712206d065",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 30": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "cdf7a193-491f-4958-ab6d-68e2b63da9b0",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 31": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "dc3481ba-6401-4428-a511-c8c2c5a4692d",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 32": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 25": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 26": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "efaab443-b5e8-4a38-89ba-1b712206d065",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 30": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "cdf7a193-491f-4958-ab6d-68e2b63da9b0",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 31": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "dc3481ba-6401-4428-a511-c8c2c5a4692d",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 32": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAggregationsRequest"
              },
              "examples": {
                "Example 25": {
                  "summary": "Attribute exists aggregation",
                  "description": "Simple aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute.",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "exists",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 26": {
                  "summary": "Numeric attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 8965 (Counter). Returns the count of records with a value for this attribute, along with its minimum and maximum values",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "type": "integer"
                        },
                        "identity": 8965,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 27": {
                  "summary": "Text attribute value aggregation",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns the count of records with a value for this attribute, along with a list of its 10 most common terms",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Text attribute value aggregation with prefix",
                  "description": "Aggregation in MI_TRAINING on an integer attribute with identity 10907 (CAS Number). Returns a list of the 10 most common terms in this attribute that start with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "st",
                          "type": "shortText"
                        },
                        "identity": 10907,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Free text aggregation",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in all attributes and tabular local columns that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "efaab443-b5e8-4a38-89ba-1b712206d065",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "all"
                        },
                        "localColumns": {
                          "filterOn": "all"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 30": {
                  "summary": "Free text aggregation on specific attributes",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in the attributes -4 (record name), -7 (short name) and 10907 (CAS Number) that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "cdf7a193-491f-4958-ab6d-68e2b63da9b0",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "identities": [
                            -4,
                            -7,
                            10907
                          ],
                          "guids": [],
                          "filterOn": "specific"
                        },
                        "localColumns": {
                          "filterOn": "none"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 31": {
                  "summary": "Free text aggregation with excluded tabular columns",
                  "description": "Aggregation in MI_TRAINING that returns a list of the 10 most common terms in tabular local columns excluding 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table that begin with the characters 'st' (case insensitive)",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "aggregationCriteria": [
                      {
                        "criterionGuid": "dc3481ba-6401-4428-a511-c8c2c5a4692d",
                        "numberOfTerms": 10,
                        "prefix": "st",
                        "attributes": {
                          "filterOn": "none"
                        },
                        "localColumns": {
                          "excludedIdentities": [],
                          "excludedGuids": [
                            "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                            "bfb3edea-be3e-4598-a711-6abb171a4569"
                          ],
                          "filterOn": "exclude"
                        },
                        "type": "text"
                      }
                    ]
                  }
                },
                "Example 32": {
                  "summary": "Aggregation with query",
                  "description": "Aggregation in MI_TRAINING on a discrete attribute with identity 5876 (Rating), that only returns the common terms in records that also match the search criterion that the picture attribute 5872 (Issue Date) exists",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "dateTime"
                      },
                      "identity": 5872,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "aggregationCriteria": [
                      {
                        "innerCriterion": {
                          "numberOfTerms": 10,
                          "prefix": "",
                          "type": "discreteText"
                        },
                        "identity": 5876,
                        "isMetaAttribute": false,
                        "attributeAggregationCriterionType": "value",
                        "type": "attribute"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAggregationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          },
          "422": {
            "description": "MI not in attribute-based access control mode"
          }
        }
      }
    },
    "/v1alpha/blob-infos/dataupdater": {
      "get": {
        "tags": [
          "BlobInfos"
        ],
        "summary": "Get a list of all blob descriptors for databases that the user is admin of.",
        "operationId": "GetAllDataUpdaterBlobInfos",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaBlobInfoDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaBlobInfoDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaBlobInfoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/blob-infos/dataupdater/{database-key}/{blob-path}": {
      "get": {
        "tags": [
          "BlobInfos"
        ],
        "summary": "Get a list of blob descriptors for a specific database, optionally limited by their relative path.",
        "operationId": "GetDataUpdaterBlobInfos",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database key.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "blob-path",
            "in": "path",
            "description": "Path to look under. Can be empty",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recursive",
            "in": "query",
            "description": "Whether to look under sub-paths as well.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaBlobInfoDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaBlobInfoDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaBlobInfoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/blobs/dataUpdater/{database-key}/{blobPath}": {
      "get": {
        "tags": [
          "Blobs"
        ],
        "summary": "Retrieve DataUpdater blob contents by its path.",
        "operationId": "DownloadDataUpdaterBlob",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "blobPath",
            "in": "path",
            "description": "Blob path to a single blob (including its name).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Blob not found"
          }
        }
      },
      "put": {
        "tags": [
          "Blobs"
        ],
        "summary": "Store DataUpdater blob contents.",
        "operationId": "UploadDataUpdaterBlob",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "blobPath",
            "in": "path",
            "description": "Blob path to a single blob (including its name).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaBlobInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaBlobInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaBlobInfoDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Blobs"
        ],
        "summary": "Delete DataUpdater blob.",
        "operationId": "DeleteDataUpdaterBlob",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "blobPath",
            "in": "path",
            "description": "Blob path to a single blob (including its name).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1alpha/bulk": {
      "post": {
        "tags": [
          "Bulk"
        ],
        "summary": "Handles multiple requests.\r\nThe requests should be independent - they could be executed in any order.\r\nThe response will contain a response item for each request item, in the same order as the request items.\r\nRequests that return file or image responses cannot be sent via the bulk endpoint.",
        "operationId": "Bulk",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaBulkRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Edit two attributes",
                  "description": "This example demonstrates how to edit several attributes in the 'MI_TRAINING' database in a single request.  It creates a new date-time attribute 'Casting Date' in the 'Metals Pedigree' table, and renames the 'Metal' attribute in the 'MaterialsUniverse' table.",
                  "value": {
                    "requests": [
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes",
                        "method": "POST",
                        "body": {
                          "type": "dateTime",
                          "defaultThresholdType": "exists",
                          "name": "Casting Date"
                        }
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/attributes/0000000b-0001-4fff-8fff-dd92ffff0000",
                        "method": "PATCH",
                        "body": {
                          "type": "discrete",
                          "defaultThresholdType": "exists",
                          "name": "Metals (updated)"
                        }
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Get attributes and meta-attributes from different tables.",
                  "description": "This example demonstrates how to get different attributes in the MI_TRAINING database in a single request. The attributes are: 'Alloy' in the 'Metals Pedigree' table; 'Metals' in the 'MaterialUniverse' table; and meta-attribute 'Notes' on attribute 'Flammability' in the 'MaterialUniverse' table",
                  "value": {
                    "requests": [
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes/A93A36C1-78D6-4254-B245-C7445D1038DA",
                        "method": "GET"
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/attributes/0000000b-0001-4fff-8fff-dd92ffff0000",
                        "method": "GET"
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/meta-attributes/00000298-0001-4fff-8fff-dd92ffff0000",
                        "method": "GET"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaBulkRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Edit two attributes",
                  "description": "This example demonstrates how to edit several attributes in the 'MI_TRAINING' database in a single request.  It creates a new date-time attribute 'Casting Date' in the 'Metals Pedigree' table, and renames the 'Metal' attribute in the 'MaterialsUniverse' table.",
                  "value": {
                    "requests": [
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes",
                        "method": "POST",
                        "body": {
                          "type": "dateTime",
                          "defaultThresholdType": "exists",
                          "name": "Casting Date"
                        }
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/attributes/0000000b-0001-4fff-8fff-dd92ffff0000",
                        "method": "PATCH",
                        "body": {
                          "type": "discrete",
                          "defaultThresholdType": "exists",
                          "name": "Metals (updated)"
                        }
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Get attributes and meta-attributes from different tables.",
                  "description": "This example demonstrates how to get different attributes in the MI_TRAINING database in a single request. The attributes are: 'Alloy' in the 'Metals Pedigree' table; 'Metals' in the 'MaterialUniverse' table; and meta-attribute 'Notes' on attribute 'Flammability' in the 'MaterialUniverse' table",
                  "value": {
                    "requests": [
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes/A93A36C1-78D6-4254-B245-C7445D1038DA",
                        "method": "GET"
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/attributes/0000000b-0001-4fff-8fff-dd92ffff0000",
                        "method": "GET"
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/meta-attributes/00000298-0001-4fff-8fff-dd92ffff0000",
                        "method": "GET"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaBulkRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Edit two attributes",
                  "description": "This example demonstrates how to edit several attributes in the 'MI_TRAINING' database in a single request.  It creates a new date-time attribute 'Casting Date' in the 'Metals Pedigree' table, and renames the 'Metal' attribute in the 'MaterialsUniverse' table.",
                  "value": {
                    "requests": [
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes",
                        "method": "POST",
                        "body": {
                          "type": "dateTime",
                          "defaultThresholdType": "exists",
                          "name": "Casting Date"
                        }
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/attributes/0000000b-0001-4fff-8fff-dd92ffff0000",
                        "method": "PATCH",
                        "body": {
                          "type": "discrete",
                          "defaultThresholdType": "exists",
                          "name": "Metals (updated)"
                        }
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Get attributes and meta-attributes from different tables.",
                  "description": "This example demonstrates how to get different attributes in the MI_TRAINING database in a single request. The attributes are: 'Alloy' in the 'Metals Pedigree' table; 'Metals' in the 'MaterialUniverse' table; and meta-attribute 'Notes' on attribute 'Flammability' in the 'MaterialUniverse' table",
                  "value": {
                    "requests": [
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes/A93A36C1-78D6-4254-B245-C7445D1038DA",
                        "method": "GET"
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/attributes/0000000b-0001-4fff-8fff-dd92ffff0000",
                        "method": "GET"
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/meta-attributes/00000298-0001-4fff-8fff-dd92ffff0000",
                        "method": "GET"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaBulkRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Edit two attributes",
                  "description": "This example demonstrates how to edit several attributes in the 'MI_TRAINING' database in a single request.  It creates a new date-time attribute 'Casting Date' in the 'Metals Pedigree' table, and renames the 'Metal' attribute in the 'MaterialsUniverse' table.",
                  "value": {
                    "requests": [
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes",
                        "method": "POST",
                        "body": {
                          "type": "dateTime",
                          "defaultThresholdType": "exists",
                          "name": "Casting Date"
                        }
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/attributes/0000000b-0001-4fff-8fff-dd92ffff0000",
                        "method": "PATCH",
                        "body": {
                          "type": "discrete",
                          "defaultThresholdType": "exists",
                          "name": "Metals (updated)"
                        }
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Get attributes and meta-attributes from different tables.",
                  "description": "This example demonstrates how to get different attributes in the MI_TRAINING database in a single request. The attributes are: 'Alloy' in the 'Metals Pedigree' table; 'Metals' in the 'MaterialUniverse' table; and meta-attribute 'Notes' on attribute 'Flammability' in the 'MaterialUniverse' table",
                  "value": {
                    "requests": [
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes/A93A36C1-78D6-4254-B245-C7445D1038DA",
                        "method": "GET"
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/attributes/0000000b-0001-4fff-8fff-dd92ffff0000",
                        "method": "GET"
                      },
                      {
                        "path": "/v1alpha/databases/MI_Training/tables/0000dd92-0011-4fff-8fff-0000ffff0000/meta-attributes/00000298-0001-4fff-8fff-dd92ffff0000",
                        "method": "GET"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaBulkInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Bulk response for editing two attributes.",
                    "description": "The bulk response includes a response item for each request sent.",
                    "value": {
                      "data": [
                        {
                          "status": 201,
                          "body": {
                            "defaultThresholdType": "atLeast",
                            "info": {
                              "typeCode": "DAT",
                              "chartable": false,
                              "expressionable": false,
                              "linkable": true,
                              "extendedName": "Casting Date",
                              "isMetaAttribute": false,
                              "orderedMetaAttributes": [],
                              "primaryDataLinkGroups": [],
                              "foreignDataLinkGroups": [],
                              "primarySmartLinkGroups": [],
                              "foreignSmartLinkGroups": []
                            },
                            "type": "dateTime",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "ad27baf0-42e9-4136-bc96-9dbbf116e265"
                            },
                            "name": "Casting Date",
                            "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                          },
                          "headers": {
                            "location": "https://host-name/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes/fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                          }
                        },
                        {
                          "status": 200,
                          "body": {
                            "isMultiValued": false,
                            "defaultThresholdType": "exists",
                            "info": {
                              "typeCode": "DISC",
                              "chartable": false,
                              "expressionable": false,
                              "linkable": false,
                              "extendedName": "Metals (updated)",
                              "isMetaAttribute": false
                            },
                            "type": "discrete",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                            },
                            "name": "Metals (updated)",
                            "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                          },
                          "headers": {}
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaBulkInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Bulk response for editing two attributes.",
                    "description": "The bulk response includes a response item for each request sent.",
                    "value": {
                      "data": [
                        {
                          "status": 201,
                          "body": {
                            "defaultThresholdType": "atLeast",
                            "info": {
                              "typeCode": "DAT",
                              "chartable": false,
                              "expressionable": false,
                              "linkable": true,
                              "extendedName": "Casting Date",
                              "isMetaAttribute": false,
                              "orderedMetaAttributes": [],
                              "primaryDataLinkGroups": [],
                              "foreignDataLinkGroups": [],
                              "primarySmartLinkGroups": [],
                              "foreignSmartLinkGroups": []
                            },
                            "type": "dateTime",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "ad27baf0-42e9-4136-bc96-9dbbf116e265"
                            },
                            "name": "Casting Date",
                            "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                          },
                          "headers": {
                            "location": "https://host-name/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes/fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                          }
                        },
                        {
                          "status": 200,
                          "body": {
                            "isMultiValued": false,
                            "defaultThresholdType": "exists",
                            "info": {
                              "typeCode": "DISC",
                              "chartable": false,
                              "expressionable": false,
                              "linkable": false,
                              "extendedName": "Metals (updated)",
                              "isMetaAttribute": false
                            },
                            "type": "discrete",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                            },
                            "name": "Metals (updated)",
                            "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                          },
                          "headers": {}
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaBulkInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Bulk response for editing two attributes.",
                    "description": "The bulk response includes a response item for each request sent.",
                    "value": {
                      "data": [
                        {
                          "status": 201,
                          "body": {
                            "defaultThresholdType": "atLeast",
                            "info": {
                              "typeCode": "DAT",
                              "chartable": false,
                              "expressionable": false,
                              "linkable": true,
                              "extendedName": "Casting Date",
                              "isMetaAttribute": false,
                              "orderedMetaAttributes": [],
                              "primaryDataLinkGroups": [],
                              "foreignDataLinkGroups": [],
                              "primarySmartLinkGroups": [],
                              "foreignSmartLinkGroups": []
                            },
                            "type": "dateTime",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "ad27baf0-42e9-4136-bc96-9dbbf116e265"
                            },
                            "name": "Casting Date",
                            "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                          },
                          "headers": {
                            "location": "https://host-name/v1alpha/databases/MI_Training/tables/ad27baf0-42e9-4136-bc96-9dbbf116e265/attributes/fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                          }
                        },
                        {
                          "status": 200,
                          "body": {
                            "isMultiValued": false,
                            "defaultThresholdType": "exists",
                            "info": {
                              "typeCode": "DISC",
                              "chartable": false,
                              "expressionable": false,
                              "linkable": false,
                              "extendedName": "Metals (updated)",
                              "isMetaAttribute": false
                            },
                            "type": "discrete",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                            },
                            "name": "Metals (updated)",
                            "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                          },
                          "headers": {}
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get a datum for a given database, table, record history, record version and attribute.",
        "operationId": "GetDatumForVersionFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "filterEmptyCells",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filterEmptyRows",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Integer datum.",
                    "description": "Example response for an integer datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 2": {
                    "summary": "Logical datum.",
                    "description": "Example response for a logical datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 3": {
                    "summary": "Short Text datum.",
                    "description": "Example response for a short text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "shortText",
                      "value": "Resistant to strong acid",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 4": {
                    "summary": "Long Text datum.",
                    "description": "Example response for a long text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "longText",
                      "richTextValue": {
                        "text": "Resistant to strong acid",
                        "type": "plain"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 5": {
                    "summary": "Hyperlink datum.",
                    "description": "Example response for a hyperlink datum with a value of localhost",
                    "value": {
                      "datumType": "hyperlink",
                      "address": "http://localhost",
                      "description": "local host",
                      "target": "newWindow",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 6": {
                    "summary": "DateTime datum.",
                    "description": "Example response for a DateTime datum with a value of January 1st, 2000",
                    "value": {
                      "datumType": "dateTime",
                      "dateTime": "2000-01-01T00:00:00+00:00",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 7": {
                    "summary": "Range datum.",
                    "description": "Example response for a range datum with both low and high range values set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1200.0,
                      "highValue": 1275.0,
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 8": {
                    "summary": "Range datum - low bound only.",
                    "description": "Example response for a range datum with only the low range value set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1.75,
                      "highValue": "NaN",
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 9": {
                    "summary": "Point datum - single valued.",
                    "description": "Example response for a single valued point datum",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 12.7,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          }
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 10": {
                    "summary": "Point datum - multi valued with parameters.",
                    "description": "Example response for a multi valued point datum with parameters",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 1.2,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 273.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Weak acids",
                                  "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "pointValue": 1.4,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 303.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Strong acids",
                                  "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table, record history, record version, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get a datum for a given attribute and the latest version of a record history in given database and table.",
        "operationId": "GetDatumForLatestFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "filterEmptyCells",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filterEmptyRows",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 11": {
                    "summary": "Integer datum.",
                    "description": "Example response for an integer datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 12": {
                    "summary": "Logical datum.",
                    "description": "Example response for a logical datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 13": {
                    "summary": "Short Text datum.",
                    "description": "Example response for a short text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "shortText",
                      "value": "Resistant to strong acid",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 14": {
                    "summary": "Long Text datum.",
                    "description": "Example response for a long text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "longText",
                      "richTextValue": {
                        "text": "Resistant to strong acid",
                        "type": "plain"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 15": {
                    "summary": "Hyperlink datum.",
                    "description": "Example response for a hyperlink datum with a value of localhost",
                    "value": {
                      "datumType": "hyperlink",
                      "address": "http://localhost",
                      "description": "local host",
                      "target": "newWindow",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 16": {
                    "summary": "DateTime datum.",
                    "description": "Example response for a DateTime datum with a value of January 1st, 2000",
                    "value": {
                      "datumType": "dateTime",
                      "dateTime": "2000-01-01T00:00:00+00:00",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 17": {
                    "summary": "Range datum.",
                    "description": "Example response for a range datum with both low and high range values set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1200.0,
                      "highValue": 1275.0,
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 18": {
                    "summary": "Range datum - low bound only.",
                    "description": "Example response for a range datum with only the low range value set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1.75,
                      "highValue": "NaN",
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 19": {
                    "summary": "Point datum - single valued.",
                    "description": "Example response for a single valued point datum",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 12.7,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          }
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 20": {
                    "summary": "Point datum - multi valued with parameters.",
                    "description": "Example response for a multi valued point datum with parameters",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 1.2,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 273.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Weak acids",
                                  "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "pointValue": 1.4,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 303.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Strong acids",
                                  "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get a datum for a given database, record history, record version and attribute.",
        "operationId": "GetDatumForVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "filterEmptyCells",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filterEmptyRows",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 21": {
                    "summary": "Integer datum.",
                    "description": "Example response for an integer datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 22": {
                    "summary": "Logical datum.",
                    "description": "Example response for a logical datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 23": {
                    "summary": "Short Text datum.",
                    "description": "Example response for a short text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "shortText",
                      "value": "Resistant to strong acid",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 24": {
                    "summary": "Long Text datum.",
                    "description": "Example response for a long text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "longText",
                      "richTextValue": {
                        "text": "Resistant to strong acid",
                        "type": "plain"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 25": {
                    "summary": "Hyperlink datum.",
                    "description": "Example response for a hyperlink datum with a value of localhost",
                    "value": {
                      "datumType": "hyperlink",
                      "address": "http://localhost",
                      "description": "local host",
                      "target": "newWindow",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 26": {
                    "summary": "DateTime datum.",
                    "description": "Example response for a DateTime datum with a value of January 1st, 2000",
                    "value": {
                      "datumType": "dateTime",
                      "dateTime": "2000-01-01T00:00:00+00:00",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 27": {
                    "summary": "Range datum.",
                    "description": "Example response for a range datum with both low and high range values set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1200.0,
                      "highValue": 1275.0,
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 28": {
                    "summary": "Range datum - low bound only.",
                    "description": "Example response for a range datum with only the low range value set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1.75,
                      "highValue": "NaN",
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 29": {
                    "summary": "Point datum - single valued.",
                    "description": "Example response for a single valued point datum",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 12.7,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          }
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 30": {
                    "summary": "Point datum - multi valued with parameters.",
                    "description": "Example response for a multi valued point datum with parameters",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 1.2,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 273.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Weak acids",
                                  "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "pointValue": 1.4,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 303.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Strong acids",
                                  "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, record history, record version, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get a datum for a given attribute and the latest version of a record history in given database.",
        "operationId": "GetDatumForLatest",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "filterEmptyCells",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filterEmptyRows",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 31": {
                    "summary": "Integer datum.",
                    "description": "Example response for an integer datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 32": {
                    "summary": "Logical datum.",
                    "description": "Example response for a logical datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 33": {
                    "summary": "Short Text datum.",
                    "description": "Example response for a short text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "shortText",
                      "value": "Resistant to strong acid",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 34": {
                    "summary": "Long Text datum.",
                    "description": "Example response for a long text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "longText",
                      "richTextValue": {
                        "text": "Resistant to strong acid",
                        "type": "plain"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 35": {
                    "summary": "Hyperlink datum.",
                    "description": "Example response for a hyperlink datum with a value of localhost",
                    "value": {
                      "datumType": "hyperlink",
                      "address": "http://localhost",
                      "description": "local host",
                      "target": "newWindow",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 36": {
                    "summary": "DateTime datum.",
                    "description": "Example response for a DateTime datum with a value of January 1st, 2000",
                    "value": {
                      "datumType": "dateTime",
                      "dateTime": "2000-01-01T00:00:00+00:00",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 37": {
                    "summary": "Range datum.",
                    "description": "Example response for a range datum with both low and high range values set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1200.0,
                      "highValue": 1275.0,
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 38": {
                    "summary": "Range datum - low bound only.",
                    "description": "Example response for a range datum with only the low range value set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1.75,
                      "highValue": "NaN",
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 39": {
                    "summary": "Point datum - single valued.",
                    "description": "Example response for a single valued point datum",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 12.7,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          }
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 40": {
                    "summary": "Point datum - multi valued with parameters.",
                    "description": "Example response for a multi valued point datum with parameters",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 1.2,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 273.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Weak acids",
                                  "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "pointValue": 1.4,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 303.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Strong acids",
                                  "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}:export": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get the binary data for a given database, table, record history, record version and attribute. Must be a file or picture attribute.",
        "operationId": "ExportBinaryDataForVersionFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "maxWidth",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "400": {
            "description": "Attribute is not an exportable type"
          },
          "404": {
            "description": "Database, table, record history, record version, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}:export": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get the binary data for a given attribute and the latest version of a record history in given database and table. Must be a file or picture attribute.",
        "operationId": "ExportBinaryDataForLatestFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "maxWidth",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "400": {
            "description": "Attribute is not an exportable type"
          },
          "404": {
            "description": "Database, table, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}:export": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get the binary data for a given database, record history, record version and attribute. Must be a file or picture attribute.",
        "operationId": "ExportBinaryDataForVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "maxWidth",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "400": {
            "description": "Attribute is not an exportable type"
          },
          "404": {
            "description": "Database, record history, record version, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}:export": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get the binary data for a given attribute and the latest version of a record history in given database. Must be a file or picture attribute.",
        "operationId": "ExportBinaryDataForLatest",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "maxWidth",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "400": {
            "description": "Attribute is not an exportable type"
          },
          "404": {
            "description": "Database, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get a datum for a given database, table, record history, record version, tabular attribute, row and column.",
        "operationId": "GetCellDatumForVersionFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Integer cell datum.",
                    "description": "Example response for an integer cell datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 2": {
                    "summary": "Logical cell datum.",
                    "description": "Example response for a logical cell datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table, record history, record version, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get a datum for a given tabular attribute, row and column and the latest version of a record history in given database and table.",
        "operationId": "GetCellDatumForLatestFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 3": {
                    "summary": "Integer cell datum.",
                    "description": "Example response for an integer cell datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 4": {
                    "summary": "Logical cell datum.",
                    "description": "Example response for a logical cell datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table, record history, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get a datum for a given database, record history, record version, tabular attribute, row and column.",
        "operationId": "GetCellDatumForVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 5": {
                    "summary": "Integer cell datum.",
                    "description": "Example response for an integer cell datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 6": {
                    "summary": "Logical cell datum.",
                    "description": "Example response for a logical cell datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, record history, record version, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get a datum for a given tabular attribute, row and column and the latest version of a record history in given database.",
        "operationId": "GetCellDatumForLatest",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 7": {
                    "summary": "Integer cell datum.",
                    "description": "Example response for an integer cell datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 8": {
                    "summary": "Logical cell datum.",
                    "description": "Example response for a logical cell datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, record history, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}:export": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get the binary data for a given database, table, record history, record version, tabular attribute, row and column. Must be a file or picture column.",
        "operationId": "ExportCellBinaryDataForVersionFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "maxWidth",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "400": {
            "description": "Column is not an exportable type"
          },
          "404": {
            "description": "Database, table, record history, record version, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}:export": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get the binary data for a given tabular attribute, row and column and the latest version of a record history in given database and table. Must be a file or picture column.",
        "operationId": "ExportCellBinaryDataForLatestFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "maxWidth",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "400": {
            "description": "Column is not an exportable type"
          },
          "404": {
            "description": "Database, table, record history, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}:export": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get the binary data for a given database, record history, record version, tabular attribute, row and column. Must be a file or picture column.",
        "operationId": "ExportCellBinaryDataForVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "maxWidth",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "400": {
            "description": "Column is not an exportable type"
          },
          "404": {
            "description": "Database, record history, record version, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}:export": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Get the binary data for a given tabular attribute, row and column and the latest version of a record history in given database. Must be a file or picture column.",
        "operationId": "ExportCellBinaryDataForLatest",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "maxWidth",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "400": {
            "description": "Column is not an exportable type"
          },
          "404": {
            "description": "Database, record history, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/attributes/{attribute-guid}": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a datum for a given attribute and record history in a given database and table.",
        "operationId": "SetDatumForAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 1": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 2": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 3": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 4": {
                  "summary": "Discrete datum - single valued",
                  "description": "This example demonstrates how to set the value for a discrete datum for attribute 'Metals' (GUID = '0000000b-0001-4fff-8fff-dd92ffff0000') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "00000583-0007-4fff-8fff-0083ffff0000"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Discrete datum - multi valued",
                  "description": "This example demonstrates how to set multiple values for a discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 7": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 8": {
                  "summary": "Point datum - single valued",
                  "description": "This example demonstrates how to set the value for a single valued point datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Point datum - multi valued with parameters",
                  "description": "This example demonstrates how to set the values for a multi valued point datum with parameters. All values are taken to be in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 1.26,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 273.16
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1.31,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.56
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4642417+00:00"
                  }
                },
                "Example 11": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 12": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                },
                "Example 13": {
                  "summary": "Tabular datum",
                  "description": "This example demonstrates how to set the value for a Tabular datum for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'. Specific cell datums can be set via per cell datum endpoints.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "linkingValue": "1327-53-3"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Tabular datum - rows reordering",
                  "description": "This example demonstrates how to update the value for a Tabular datum reordering its rows for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "guid": "d7438ba7-7233-4429-be8b-0d5e03e5903c",
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "guid": "58ab44e2-23d2-42ef-9749-2da1fd542f9b",
                        "linkingValue": "84-74-2"
                      },
                      {
                        "guid": "cc775763-3986-4ba6-8722-45b3940c5269",
                        "linkingValue": "117-81-7"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 1": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 2": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 3": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 4": {
                  "summary": "Discrete datum - single valued",
                  "description": "This example demonstrates how to set the value for a discrete datum for attribute 'Metals' (GUID = '0000000b-0001-4fff-8fff-dd92ffff0000') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "00000583-0007-4fff-8fff-0083ffff0000"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Discrete datum - multi valued",
                  "description": "This example demonstrates how to set multiple values for a discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 7": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 8": {
                  "summary": "Point datum - single valued",
                  "description": "This example demonstrates how to set the value for a single valued point datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Point datum - multi valued with parameters",
                  "description": "This example demonstrates how to set the values for a multi valued point datum with parameters. All values are taken to be in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 1.26,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 273.16
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1.31,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.56
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4642417+00:00"
                  }
                },
                "Example 11": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 12": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                },
                "Example 13": {
                  "summary": "Tabular datum",
                  "description": "This example demonstrates how to set the value for a Tabular datum for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'. Specific cell datums can be set via per cell datum endpoints.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "linkingValue": "1327-53-3"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Tabular datum - rows reordering",
                  "description": "This example demonstrates how to update the value for a Tabular datum reordering its rows for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "guid": "d7438ba7-7233-4429-be8b-0d5e03e5903c",
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "guid": "58ab44e2-23d2-42ef-9749-2da1fd542f9b",
                        "linkingValue": "84-74-2"
                      },
                      {
                        "guid": "cc775763-3986-4ba6-8722-45b3940c5269",
                        "linkingValue": "117-81-7"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 1": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 2": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 3": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 4": {
                  "summary": "Discrete datum - single valued",
                  "description": "This example demonstrates how to set the value for a discrete datum for attribute 'Metals' (GUID = '0000000b-0001-4fff-8fff-dd92ffff0000') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "00000583-0007-4fff-8fff-0083ffff0000"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Discrete datum - multi valued",
                  "description": "This example demonstrates how to set multiple values for a discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 7": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 8": {
                  "summary": "Point datum - single valued",
                  "description": "This example demonstrates how to set the value for a single valued point datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Point datum - multi valued with parameters",
                  "description": "This example demonstrates how to set the values for a multi valued point datum with parameters. All values are taken to be in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 1.26,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 273.16
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1.31,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.56
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4642417+00:00"
                  }
                },
                "Example 11": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 12": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                },
                "Example 13": {
                  "summary": "Tabular datum",
                  "description": "This example demonstrates how to set the value for a Tabular datum for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'. Specific cell datums can be set via per cell datum endpoints.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "linkingValue": "1327-53-3"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Tabular datum - rows reordering",
                  "description": "This example demonstrates how to update the value for a Tabular datum reordering its rows for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "guid": "d7438ba7-7233-4429-be8b-0d5e03e5903c",
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "guid": "58ab44e2-23d2-42ef-9749-2da1fd542f9b",
                        "linkingValue": "84-74-2"
                      },
                      {
                        "guid": "cc775763-3986-4ba6-8722-45b3940c5269",
                        "linkingValue": "117-81-7"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 1": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 2": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 3": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 4": {
                  "summary": "Discrete datum - single valued",
                  "description": "This example demonstrates how to set the value for a discrete datum for attribute 'Metals' (GUID = '0000000b-0001-4fff-8fff-dd92ffff0000') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "00000583-0007-4fff-8fff-0083ffff0000"
                      }
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Discrete datum - multi valued",
                  "description": "This example demonstrates how to set multiple values for a discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 7": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 8": {
                  "summary": "Point datum - single valued",
                  "description": "This example demonstrates how to set the value for a single valued point datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Point datum - multi valued with parameters",
                  "description": "This example demonstrates how to set the values for a multi valued point datum with parameters. All values are taken to be in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 1.26,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 273.16
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1.31,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.56
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 10": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4642417+00:00"
                  }
                },
                "Example 11": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 12": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                },
                "Example 13": {
                  "summary": "Tabular datum",
                  "description": "This example demonstrates how to set the value for a Tabular datum for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'. Specific cell datums can be set via per cell datum endpoints.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "linkingValue": "1327-53-3"
                      }
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Tabular datum - rows reordering",
                  "description": "This example demonstrates how to update the value for a Tabular datum reordering its rows for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "guid": "d7438ba7-7233-4429-be8b-0d5e03e5903c",
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "guid": "58ab44e2-23d2-42ef-9749-2da1fd542f9b",
                        "linkingValue": "84-74-2"
                      },
                      {
                        "guid": "cc775763-3986-4ba6-8722-45b3940c5269",
                        "linkingValue": "117-81-7"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Integer datum.",
                    "description": "Example response for an integer datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 2": {
                    "summary": "Logical datum.",
                    "description": "Example response for a logical datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 3": {
                    "summary": "Short Text datum.",
                    "description": "Example response for a short text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "shortText",
                      "value": "Resistant to strong acid",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 4": {
                    "summary": "Long Text datum.",
                    "description": "Example response for a long text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "longText",
                      "richTextValue": {
                        "text": "Resistant to strong acid",
                        "type": "plain"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 5": {
                    "summary": "Hyperlink datum.",
                    "description": "Example response for a hyperlink datum with a value of localhost",
                    "value": {
                      "datumType": "hyperlink",
                      "address": "http://localhost",
                      "description": "local host",
                      "target": "newWindow",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 6": {
                    "summary": "DateTime datum.",
                    "description": "Example response for a DateTime datum with a value of January 1st, 2000",
                    "value": {
                      "datumType": "dateTime",
                      "dateTime": "2000-01-01T00:00:00+00:00",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 7": {
                    "summary": "Range datum.",
                    "description": "Example response for a range datum with both low and high range values set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1200.0,
                      "highValue": 1275.0,
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 8": {
                    "summary": "Range datum - low bound only.",
                    "description": "Example response for a range datum with only the low range value set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1.75,
                      "highValue": "NaN",
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 9": {
                    "summary": "Point datum - single valued.",
                    "description": "Example response for a single valued point datum",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 12.7,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          }
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 10": {
                    "summary": "Point datum - multi valued with parameters.",
                    "description": "Example response for a multi valued point datum with parameters",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 1.2,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 273.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Weak acids",
                                  "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "pointValue": 1.4,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 303.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Strong acids",
                                  "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history or attribute not found"
          },
          "422": {
            "description": "Validation of the data value fails e.g. for integer data where the attribute is marked as having unique values."
          }
        }
      },
      "delete": {
        "tags": [
          "Data"
        ],
        "summary": "Deletes a datum for a given attribute and record history, along with all meta attributes datums associated with it, in a given database and table.",
        "operationId": "DeleteDatumForAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/attributes/{attribute-guid}": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a datum for a given attribute and record history in a given database.",
        "operationId": "SetDatumForAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 15": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 16": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 17": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 18": {
                  "summary": "Discrete datum - single valued",
                  "description": "This example demonstrates how to set the value for a discrete datum for attribute 'Metals' (GUID = '0000000b-0001-4fff-8fff-dd92ffff0000') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "00000583-0007-4fff-8fff-0083ffff0000"
                      }
                    ]
                  }
                },
                "Example 19": {
                  "summary": "Discrete datum - multi valued",
                  "description": "This example demonstrates how to set multiple values for a discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 21": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 22": {
                  "summary": "Point datum - single valued",
                  "description": "This example demonstrates how to set the value for a single valued point datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Point datum - multi valued with parameters",
                  "description": "This example demonstrates how to set the values for a multi valued point datum with parameters. All values are taken to be in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 1.26,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 273.16
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1.31,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.56
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 25": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 26": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                },
                "Example 27": {
                  "summary": "Tabular datum",
                  "description": "This example demonstrates how to set the value for a Tabular datum for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'. Specific cell datums can be set via per cell datum endpoints.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "linkingValue": "1327-53-3"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular datum - rows reordering",
                  "description": "This example demonstrates how to update the value for a Tabular datum reordering its rows for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "guid": "d7438ba7-7233-4429-be8b-0d5e03e5903c",
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "guid": "58ab44e2-23d2-42ef-9749-2da1fd542f9b",
                        "linkingValue": "84-74-2"
                      },
                      {
                        "guid": "cc775763-3986-4ba6-8722-45b3940c5269",
                        "linkingValue": "117-81-7"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 15": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 16": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 17": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 18": {
                  "summary": "Discrete datum - single valued",
                  "description": "This example demonstrates how to set the value for a discrete datum for attribute 'Metals' (GUID = '0000000b-0001-4fff-8fff-dd92ffff0000') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "00000583-0007-4fff-8fff-0083ffff0000"
                      }
                    ]
                  }
                },
                "Example 19": {
                  "summary": "Discrete datum - multi valued",
                  "description": "This example demonstrates how to set multiple values for a discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 21": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 22": {
                  "summary": "Point datum - single valued",
                  "description": "This example demonstrates how to set the value for a single valued point datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Point datum - multi valued with parameters",
                  "description": "This example demonstrates how to set the values for a multi valued point datum with parameters. All values are taken to be in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 1.26,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 273.16
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1.31,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.56
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 25": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 26": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                },
                "Example 27": {
                  "summary": "Tabular datum",
                  "description": "This example demonstrates how to set the value for a Tabular datum for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'. Specific cell datums can be set via per cell datum endpoints.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "linkingValue": "1327-53-3"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular datum - rows reordering",
                  "description": "This example demonstrates how to update the value for a Tabular datum reordering its rows for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "guid": "d7438ba7-7233-4429-be8b-0d5e03e5903c",
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "guid": "58ab44e2-23d2-42ef-9749-2da1fd542f9b",
                        "linkingValue": "84-74-2"
                      },
                      {
                        "guid": "cc775763-3986-4ba6-8722-45b3940c5269",
                        "linkingValue": "117-81-7"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 15": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 16": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 17": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 18": {
                  "summary": "Discrete datum - single valued",
                  "description": "This example demonstrates how to set the value for a discrete datum for attribute 'Metals' (GUID = '0000000b-0001-4fff-8fff-dd92ffff0000') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "00000583-0007-4fff-8fff-0083ffff0000"
                      }
                    ]
                  }
                },
                "Example 19": {
                  "summary": "Discrete datum - multi valued",
                  "description": "This example demonstrates how to set multiple values for a discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 21": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 22": {
                  "summary": "Point datum - single valued",
                  "description": "This example demonstrates how to set the value for a single valued point datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Point datum - multi valued with parameters",
                  "description": "This example demonstrates how to set the values for a multi valued point datum with parameters. All values are taken to be in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 1.26,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 273.16
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1.31,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.56
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 25": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 26": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                },
                "Example 27": {
                  "summary": "Tabular datum",
                  "description": "This example demonstrates how to set the value for a Tabular datum for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'. Specific cell datums can be set via per cell datum endpoints.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "linkingValue": "1327-53-3"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular datum - rows reordering",
                  "description": "This example demonstrates how to update the value for a Tabular datum reordering its rows for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "guid": "d7438ba7-7233-4429-be8b-0d5e03e5903c",
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "guid": "58ab44e2-23d2-42ef-9749-2da1fd542f9b",
                        "linkingValue": "84-74-2"
                      },
                      {
                        "guid": "cc775763-3986-4ba6-8722-45b3940c5269",
                        "linkingValue": "117-81-7"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 15": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 16": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 17": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 18": {
                  "summary": "Discrete datum - single valued",
                  "description": "This example demonstrates how to set the value for a discrete datum for attribute 'Metals' (GUID = '0000000b-0001-4fff-8fff-dd92ffff0000') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "00000583-0007-4fff-8fff-0083ffff0000"
                      }
                    ]
                  }
                },
                "Example 19": {
                  "summary": "Discrete datum - multi valued",
                  "description": "This example demonstrates how to set multiple values for a discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "discrete",
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                },
                "Example 20": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 21": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 22": {
                  "summary": "Point datum - single valued",
                  "description": "This example demonstrates how to set the value for a single valued point datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 23": {
                  "summary": "Point datum - multi valued with parameters",
                  "description": "This example demonstrates how to set the values for a multi valued point datum with parameters. All values are taken to be in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 1.26,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 273.16
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1.31,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.56
                            }
                          },
                          {
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 24": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 25": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 26": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                },
                "Example 27": {
                  "summary": "Tabular datum",
                  "description": "This example demonstrates how to set the value for a Tabular datum for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Alumino silicate - 1720' (Record History GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'. Specific cell datums can be set via per cell datum endpoints.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "linkingValue": "1327-53-3"
                      }
                    ]
                  }
                },
                "Example 28": {
                  "summary": "Tabular datum - rows reordering",
                  "description": "This example demonstrates how to update the value for a Tabular datum reordering its rows for attribute 'Restricted substances associated with this material' (GUID = '51e51832-0bcc-4fe0-bb95-ddd6917dc554') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "setDatumType": "tabular",
                    "rows": [
                      {
                        "guid": "d7438ba7-7233-4429-be8b-0d5e03e5903c",
                        "linkingValue": "85535-84-8"
                      },
                      {
                        "guid": "58ab44e2-23d2-42ef-9749-2da1fd542f9b",
                        "linkingValue": "84-74-2"
                      },
                      {
                        "guid": "cc775763-3986-4ba6-8722-45b3940c5269",
                        "linkingValue": "117-81-7"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 11": {
                    "summary": "Integer datum.",
                    "description": "Example response for an integer datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 12": {
                    "summary": "Logical datum.",
                    "description": "Example response for a logical datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 13": {
                    "summary": "Short Text datum.",
                    "description": "Example response for a short text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "shortText",
                      "value": "Resistant to strong acid",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 14": {
                    "summary": "Long Text datum.",
                    "description": "Example response for a long text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "longText",
                      "richTextValue": {
                        "text": "Resistant to strong acid",
                        "type": "plain"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 15": {
                    "summary": "Hyperlink datum.",
                    "description": "Example response for a hyperlink datum with a value of localhost",
                    "value": {
                      "datumType": "hyperlink",
                      "address": "http://localhost",
                      "description": "local host",
                      "target": "newWindow",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 16": {
                    "summary": "DateTime datum.",
                    "description": "Example response for a DateTime datum with a value of January 1st, 2000",
                    "value": {
                      "datumType": "dateTime",
                      "dateTime": "2000-01-01T00:00:00+00:00",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 17": {
                    "summary": "Range datum.",
                    "description": "Example response for a range datum with both low and high range values set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1200.0,
                      "highValue": 1275.0,
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 18": {
                    "summary": "Range datum - low bound only.",
                    "description": "Example response for a range datum with only the low range value set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1.75,
                      "highValue": "NaN",
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 19": {
                    "summary": "Point datum - single valued.",
                    "description": "Example response for a single valued point datum",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 12.7,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          }
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 20": {
                    "summary": "Point datum - multi valued with parameters.",
                    "description": "Example response for a multi valued point datum with parameters",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 1.2,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 273.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Weak acids",
                                  "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "pointValue": 1.4,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 303.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Strong acids",
                                  "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history or attribute not found"
          },
          "422": {
            "description": "Validation of the data value fails e.g. for integer data where the attribute is marked as having unique values."
          }
        }
      },
      "delete": {
        "tags": [
          "Data"
        ],
        "summary": "Deletes a datum for a given attribute and record history, along with all meta attributes datums associated with it, in a given database.",
        "operationId": "DeleteDatumForAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a cell datum for a given record history, tabular attribute, row and column in a given database and table.",
        "operationId": "SetCellDatumForTabularAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 1": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer cell datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 2": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical cell datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 3": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text cell datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 4": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 5": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 6": {
                  "summary": "Point datum",
                  "description": "This example demonstrates how to set the value for a point cell datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 7": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime cell datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 8": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink cell datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 9": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text cell datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 1": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer cell datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 2": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical cell datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 3": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text cell datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 4": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 5": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 6": {
                  "summary": "Point datum",
                  "description": "This example demonstrates how to set the value for a point cell datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 7": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime cell datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 8": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink cell datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 9": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text cell datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 1": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer cell datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 2": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical cell datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 3": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text cell datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 4": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 5": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 6": {
                  "summary": "Point datum",
                  "description": "This example demonstrates how to set the value for a point cell datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 7": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime cell datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 8": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink cell datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 9": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text cell datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 1": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer cell datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 2": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical cell datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 3": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text cell datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 4": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 5": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 6": {
                  "summary": "Point datum",
                  "description": "This example demonstrates how to set the value for a point cell datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 7": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime cell datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 8": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink cell datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 9": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text cell datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 21": {
                    "summary": "Integer datum.",
                    "description": "Example response for an integer datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 22": {
                    "summary": "Logical datum.",
                    "description": "Example response for a logical datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 23": {
                    "summary": "Short Text datum.",
                    "description": "Example response for a short text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "shortText",
                      "value": "Resistant to strong acid",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 24": {
                    "summary": "Long Text datum.",
                    "description": "Example response for a long text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "longText",
                      "richTextValue": {
                        "text": "Resistant to strong acid",
                        "type": "plain"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 25": {
                    "summary": "Hyperlink datum.",
                    "description": "Example response for a hyperlink datum with a value of localhost",
                    "value": {
                      "datumType": "hyperlink",
                      "address": "http://localhost",
                      "description": "local host",
                      "target": "newWindow",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 26": {
                    "summary": "DateTime datum.",
                    "description": "Example response for a DateTime datum with a value of January 1st, 2000",
                    "value": {
                      "datumType": "dateTime",
                      "dateTime": "2000-01-01T00:00:00+00:00",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 27": {
                    "summary": "Range datum.",
                    "description": "Example response for a range datum with both low and high range values set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1200.0,
                      "highValue": 1275.0,
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 28": {
                    "summary": "Range datum - low bound only.",
                    "description": "Example response for a range datum with only the low range value set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1.75,
                      "highValue": "NaN",
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 29": {
                    "summary": "Point datum - single valued.",
                    "description": "Example response for a single valued point datum",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 12.7,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          }
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 30": {
                    "summary": "Point datum - multi valued with parameters.",
                    "description": "Example response for a multi valued point datum with parameters",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 1.2,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 273.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Weak acids",
                                  "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "pointValue": 1.4,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 303.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Strong acids",
                                  "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history, tabular attribute, row or column not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Data"
        ],
        "summary": "Deletes a cell datum for a given record history, tabular attribute, row and column in a given database and table.",
        "operationId": "DeleteCellDatumForTabularAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a cell datum for a given record history, tabular attribute, row and column in a given database.",
        "operationId": "SetCellDatumForTabularAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 10": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer cell datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 11": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical cell datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 12": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text cell datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 13": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 14": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 15": {
                  "summary": "Point datum",
                  "description": "This example demonstrates how to set the value for a point cell datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime cell datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 17": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink cell datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 18": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text cell datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 10": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer cell datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 11": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical cell datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 12": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text cell datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 13": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 14": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 15": {
                  "summary": "Point datum",
                  "description": "This example demonstrates how to set the value for a point cell datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime cell datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 17": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink cell datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 18": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text cell datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 10": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer cell datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 11": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical cell datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 12": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text cell datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 13": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 14": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 15": {
                  "summary": "Point datum",
                  "description": "This example demonstrates how to set the value for a point cell datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime cell datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 17": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink cell datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 18": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text cell datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSetDatum"
              },
              "examples": {
                "Example 10": {
                  "summary": "Integer datum",
                  "description": "This example demonstrates how to set the value for an integer cell datum.",
                  "value": {
                    "setDatumType": "integer",
                    "value": 34
                  }
                },
                "Example 11": {
                  "summary": "Logical datum",
                  "description": "This example demonstrates how to set the value for a logical cell datum.",
                  "value": {
                    "setDatumType": "logical",
                    "value": true
                  }
                },
                "Example 12": {
                  "summary": "Short text datum",
                  "description": "This example demonstrates how to set the value for a short text cell datum.",
                  "value": {
                    "setDatumType": "shortText",
                    "value": "TResistant to strong acid"
                  }
                },
                "Example 13": {
                  "summary": "Range datum",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 27.3,
                    "highValue": 31.2,
                    "lowValueIsInclusive": true,
                    "highValueIsInclusive": true,
                    "estimated": false
                  }
                },
                "Example 14": {
                  "summary": "Range datum with upper range unbounded",
                  "description": "This example demonstrates how to set the value for a range cell datum with values in database units and the upper range unbounded.",
                  "value": {
                    "setDatumType": "range",
                    "lowValue": 750.0,
                    "highValue": "NaN",
                    "lowValueIsInclusive": false,
                    "highValueIsInclusive": false,
                    "estimated": false
                  }
                },
                "Example 15": {
                  "summary": "Point datum",
                  "description": "This example demonstrates how to set the value for a point cell datum with a value in database units.",
                  "value": {
                    "setDatumType": "point",
                    "estimated": false,
                    "values": [
                      {
                        "pointValue": 12.7
                      }
                    ]
                  }
                },
                "Example 16": {
                  "summary": "DateTime datum",
                  "description": "This example demonstrates how to set the value for a DateTime cell datum.",
                  "value": {
                    "setDatumType": "datetime",
                    "value": "2025-08-06T13:33:22.4798686+00:00"
                  }
                },
                "Example 17": {
                  "summary": "Hyperlink datum",
                  "description": "This example demonstrates how to set the value for a Hyperlink cell datum.",
                  "value": {
                    "setDatumType": "hyperLink",
                    "address": "http://localhost",
                    "description": "local host",
                    "target": "newWindow"
                  }
                },
                "Example 18": {
                  "summary": "Long Text datum",
                  "description": "This example demonstrates how to set the value for a Long Text cell datum.",
                  "value": {
                    "setDatumType": "longText",
                    "richTextValue": {
                      "text": "Debug Text",
                      "type": "plain"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatum"
                },
                "examples": {
                  "Example 31": {
                    "summary": "Integer datum.",
                    "description": "Example response for an integer datum with a value of 7.",
                    "value": {
                      "datumType": "integer",
                      "value": 7,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 32": {
                    "summary": "Logical datum.",
                    "description": "Example response for a logical datum with a value of 'true'",
                    "value": {
                      "datumType": "logical",
                      "value": true,
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 33": {
                    "summary": "Short Text datum.",
                    "description": "Example response for a short text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "shortText",
                      "value": "Resistant to strong acid",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 34": {
                    "summary": "Long Text datum.",
                    "description": "Example response for a long text datum with a value of 'Resistant to strong acid'",
                    "value": {
                      "datumType": "longText",
                      "richTextValue": {
                        "text": "Resistant to strong acid",
                        "type": "plain"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 35": {
                    "summary": "Hyperlink datum.",
                    "description": "Example response for a hyperlink datum with a value of localhost",
                    "value": {
                      "datumType": "hyperlink",
                      "address": "http://localhost",
                      "description": "local host",
                      "target": "newWindow",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 36": {
                    "summary": "DateTime datum.",
                    "description": "Example response for a DateTime datum with a value of January 1st, 2000",
                    "value": {
                      "datumType": "dateTime",
                      "dateTime": "2000-01-01T00:00:00+00:00",
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 37": {
                    "summary": "Range datum.",
                    "description": "Example response for a range datum with both low and high range values set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1200.0,
                      "highValue": 1275.0,
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 38": {
                    "summary": "Range datum - low bound only.",
                    "description": "Example response for a range datum with only the low range value set",
                    "value": {
                      "datumType": "range",
                      "lowValue": 1.75,
                      "highValue": "NaN",
                      "lowValueIsInclusive": false,
                      "highValueIsInclusive": false,
                      "estimated": false,
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 39": {
                    "summary": "Point datum - single valued.",
                    "description": "Example response for a single valued point datum",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 12.7,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          }
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  },
                  "Example 40": {
                    "summary": "Point datum - multi valued with parameters.",
                    "description": "Example response for a multi valued point datum with parameters",
                    "value": {
                      "datumType": "point",
                      "estimated": false,
                      "values": [
                        {
                          "pointValue": 1.2,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 273.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Weak acids",
                                  "guid": "877e2141-2f1b-4cd5-b5ec-6664c20fac9c"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "pointValue": 1.4,
                          "unit": {
                            "symbol": "MPa",
                            "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                          },
                          "parametersAndValues": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 303.16,
                                "unit": {
                                  "symbol": "K",
                                  "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                                }
                              }
                            },
                            {
                              "parameter": {
                                "name": "Chemical Environment",
                                "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                              },
                              "parameterDataValue": {
                                "parameterType": "discrete",
                                "parameterValue": {
                                  "type": "discrete",
                                  "name": "Strong acids",
                                  "guid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "notApplicable": "applicable"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history, tabular attribute, row or column not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Data"
        ],
        "summary": "Deletes a cell datum for a given record history, tabular attribute, row and column in a given database.",
        "operationId": "DeleteCellDatumForTabularAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history, tabular attribute, row, column or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/attributes/{attribute-guid}:import-file": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a file datum for a given attribute and record history in a given database and table.",
        "operationId": "SetFileDatumForAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "File to import.",
                    "format": "binary"
                  },
                  "Description": {
                    "type": "string",
                    "description": "File description."
                  },
                  "Target": {
                    "type": "string",
                    "description": "Sets the hyperlink target for the datum. Possible values are: 'NewWindow', 'Top', 'Parent', 'Tree', 'Content', 'CurrentFrame'. Defaults to 'NewWindow'."
                  },
                  "AllowIndex": {
                    "type": "boolean",
                    "description": "Sets whether the datum will be available in the search index. Defaults to 'False'."
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Target": {
                  "style": "form"
                },
                "AllowIndex": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/attributes/{attribute-guid}:import-file": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a file datum for a given attribute and record history in a given database.",
        "operationId": "SetFileDatumForAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "File to import.",
                    "format": "binary"
                  },
                  "Description": {
                    "type": "string",
                    "description": "File description."
                  },
                  "Target": {
                    "type": "string",
                    "description": "Sets the hyperlink target for the datum. Possible values are: 'NewWindow', 'Top', 'Parent', 'Tree', 'Content', 'CurrentFrame'. Defaults to 'NewWindow'."
                  },
                  "AllowIndex": {
                    "type": "boolean",
                    "description": "Sets whether the datum will be available in the search index. Defaults to 'False'."
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Target": {
                  "style": "form"
                },
                "AllowIndex": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/attributes/{attribute-guid}:import-picture": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a picture datum for a given attribute and record history in a given database and table.",
        "operationId": "SetPictureDatumForAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Picture": {
                    "type": "string",
                    "description": "Picture to import.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Picture": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPictureDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history or attribute not found"
          },
          "415": {
            "description": "Invalid image file"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/attributes/{attribute-guid}:import-picture": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a picture datum for a given attribute and record history in a given database.",
        "operationId": "SetPictureDatumForAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Picture": {
                    "type": "string",
                    "description": "Picture to import.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Picture": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPictureDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history or attribute not found"
          },
          "415": {
            "description": "Invalid image file"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}:import-file": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a cell file datum for a given record history, tabular attribute, row and column in a given database and table.",
        "operationId": "SetCellFileDatumForTabularAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "File to import.",
                    "format": "binary"
                  },
                  "Description": {
                    "type": "string",
                    "description": "File description."
                  },
                  "Target": {
                    "type": "string",
                    "description": "Sets the hyperlink target for the datum. Possible values are: 'NewWindow', 'Top', 'Parent', 'Tree', 'Content', 'CurrentFrame'. Defaults to 'NewWindow'."
                  },
                  "AllowIndex": {
                    "type": "boolean",
                    "description": "Sets whether the datum will be available in the search index. Defaults to 'False'."
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Target": {
                  "style": "form"
                },
                "AllowIndex": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history, tabular attribute, row or column not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}:import-file": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a cell file datum for a given record history, tabular attribute, row and column in a given database.",
        "operationId": "SetCellFileDatumForTabularAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "File to import.",
                    "format": "binary"
                  },
                  "Description": {
                    "type": "string",
                    "description": "File description."
                  },
                  "Target": {
                    "type": "string",
                    "description": "Sets the hyperlink target for the datum. Possible values are: 'NewWindow', 'Top', 'Parent', 'Tree', 'Content', 'CurrentFrame'. Defaults to 'NewWindow'."
                  },
                  "AllowIndex": {
                    "type": "boolean",
                    "description": "Sets whether the datum will be available in the search index. Defaults to 'False'."
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Target": {
                  "style": "form"
                },
                "AllowIndex": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history, tabular attribute, row or column not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}:import-picture": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a cell picture datum for a given record history, tabular attribute, row and column in a given database and table.",
        "operationId": "SetCellPictureDatumForTabularAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Picture": {
                    "type": "string",
                    "description": "Picture to import.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Picture": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPictureDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history, tabular attribute, row or column not found"
          },
          "415": {
            "description": "Invalid image file"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/attributes/{attribute-guid}/rows/{row-guid}/columns/{column-guid}:import-picture": {
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Create or edit a cell picture datum for a given record history, tabular attribute, row and column in a given database.",
        "operationId": "SetCellPictureDatumForTabularAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "row-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "column-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Picture": {
                    "type": "string",
                    "description": "Picture to import.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Picture": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPictureDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history, tabular attribute, row or column not found"
          },
          "415": {
            "description": "Invalid image file"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/attributes/{attribute-guid}:set-not-applicable": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Sets a datum as 'not applicable' for a given attribute and record history in a given database and table.",
        "operationId": "SetDatumNotApplicableFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/attributes/{attribute-guid}:set-not-applicable": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Sets a datum as 'not applicable' for a given attribute and record history in a given database.",
        "operationId": "SetDatumNotApplicable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/attributes/{attribute-guid}/discrete:append-values": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Append values to the multi-valued discrete datum for a given discrete attribute and record history in a given database and table.",
        "operationId": "AppendValuesForDiscreteAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendDiscreteValues"
              },
              "examples": {
                "Example 1": {
                  "summary": "Append single discrete value",
                  "description": "This example demonstrates how to append a single value to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Append multiple discrete values",
                  "description": "This example demonstrates how to append multiple values to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendDiscreteValues"
              },
              "examples": {
                "Example 1": {
                  "summary": "Append single discrete value",
                  "description": "This example demonstrates how to append a single value to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Append multiple discrete values",
                  "description": "This example demonstrates how to append multiple values to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendDiscreteValues"
              },
              "examples": {
                "Example 1": {
                  "summary": "Append single discrete value",
                  "description": "This example demonstrates how to append a single value to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Append multiple discrete values",
                  "description": "This example demonstrates how to append multiple values to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendDiscreteValues"
              },
              "examples": {
                "Example 1": {
                  "summary": "Append single discrete value",
                  "description": "This example demonstrates how to append a single value to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Append multiple discrete values",
                  "description": "This example demonstrates how to append multiple values to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history, discrete attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/attributes/{attribute-guid}/discrete:append-values": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Append values to the multi-valued discrete datum for a given discrete attribute and record history in a given database.",
        "operationId": "AppendValuesForDiscreteAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendDiscreteValues"
              },
              "examples": {
                "Example 3": {
                  "summary": "Append single discrete value",
                  "description": "This example demonstrates how to append a single value to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Append multiple discrete values",
                  "description": "This example demonstrates how to append multiple values to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendDiscreteValues"
              },
              "examples": {
                "Example 3": {
                  "summary": "Append single discrete value",
                  "description": "This example demonstrates how to append a single value to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Append multiple discrete values",
                  "description": "This example demonstrates how to append multiple values to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendDiscreteValues"
              },
              "examples": {
                "Example 3": {
                  "summary": "Append single discrete value",
                  "description": "This example demonstrates how to append a single value to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Append multiple discrete values",
                  "description": "This example demonstrates how to append multiple values to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendDiscreteValues"
              },
              "examples": {
                "Example 3": {
                  "summary": "Append single discrete value",
                  "description": "This example demonstrates how to append a single value to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Append multiple discrete values",
                  "description": "This example demonstrates how to append multiple values to the discrete datum for multi valued attribute 'Additive' (GUID = 'ec51581f-4a78-4b1b-81df-83382c541b7b') and record 'Shore A35' (Record History GUID = '8348e2a2-7b97-44e7-94a1-cb8358a06407') from table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "discreteValues": [
                      {
                        "guid": "6f797d8d-3e0f-4799-b82d-e395d6b6f4b4"
                      },
                      {
                        "guid": "fa78c22a-cefd-42d3-9787-173c68b8485f"
                      },
                      {
                        "guid": "76b327e7-f7f7-4e2d-b617-cc1822687af0"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history, discrete attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/attributes/{attribute-guid}/point:append-values": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Append values to the multi-valued point datum for a given point attribute and record history in a given database and table.",
        "operationId": "AppendValuesForPointAttributeFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendPointValues"
              },
              "examples": {
                "Example 1": {
                  "summary": "Append single point value with parameters",
                  "description": "This example demonstrates how to append a single value to the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Append multiple point values with parameters",
                  "description": "This example demonstrates how to append multiple values to the the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1240.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1290.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendPointValues"
              },
              "examples": {
                "Example 1": {
                  "summary": "Append single point value with parameters",
                  "description": "This example demonstrates how to append a single value to the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Append multiple point values with parameters",
                  "description": "This example demonstrates how to append multiple values to the the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1240.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1290.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendPointValues"
              },
              "examples": {
                "Example 1": {
                  "summary": "Append single point value with parameters",
                  "description": "This example demonstrates how to append a single value to the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Append multiple point values with parameters",
                  "description": "This example demonstrates how to append multiple values to the the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1240.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1290.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendPointValues"
              },
              "examples": {
                "Example 1": {
                  "summary": "Append single point value with parameters",
                  "description": "This example demonstrates how to append a single value to the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Append multiple point values with parameters",
                  "description": "This example demonstrates how to append multiple values to the the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1240.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1290.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPointDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history, point attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/attributes/{attribute-guid}/point:append-values": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Append values to the multi-valued point datum for a given point attribute and record history in a given database.",
        "operationId": "AppendValuesForPointAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendPointValues"
              },
              "examples": {
                "Example 3": {
                  "summary": "Append single point value with parameters",
                  "description": "This example demonstrates how to append a single value to the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Append multiple point values with parameters",
                  "description": "This example demonstrates how to append multiple values to the the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1240.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1290.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendPointValues"
              },
              "examples": {
                "Example 3": {
                  "summary": "Append single point value with parameters",
                  "description": "This example demonstrates how to append a single value to the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Append multiple point values with parameters",
                  "description": "This example demonstrates how to append multiple values to the the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1240.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1290.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendPointValues"
              },
              "examples": {
                "Example 3": {
                  "summary": "Append single point value with parameters",
                  "description": "This example demonstrates how to append a single value to the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Append multiple point values with parameters",
                  "description": "This example demonstrates how to append multiple values to the the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1240.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1290.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppendPointValues"
              },
              "examples": {
                "Example 3": {
                  "summary": "Append single point value with parameters",
                  "description": "This example demonstrates how to append a single value to the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Append multiple point values with parameters",
                  "description": "This example demonstrates how to append multiple values to the the point datum for multi valued attribute 'Yield Strength' (GUID = '2b233cf4-fd42-4ab0-b8de-2227c9b71248') and record 'Ti' (Record History GUID = '9eda63e8-c035-451f-9ccb-c9ff47f9a755') from table 'Training Exercise for Import' (GUID = '0404f83b-64fb-47b1-8f3c-3388c513c9b0') from database 'MI Training'.",
                  "value": {
                    "values": [
                      {
                        "pointValue": 1190.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1240.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "pointValue": 1290.0,
                        "parametersAndValues": [
                          {
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "parameterValue": {
                              "parameterType": "numeric",
                              "parameterValue": 293.0
                            }
                          },
                          {
                            "parameter": {
                              "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                            },
                            "parameterValue": {
                              "parameterType": "discrete",
                              "parameterValue": {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPointDatum"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, record history, point attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:search-index-status": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Get Search Index Status for a given database",
        "operationId": "GetSearchIndexStatus",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "include-errors",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchIndexStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchIndexStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchIndexStatus"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden is returned if include diagnostics is requested and the current user is not an administrator"
          },
          "404": {
            "description": "Database key not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-identity}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given table. The user must be an Admin user for the database.",
        "operationId": "GenerateSchemaFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-name}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given table. The user must be an Admin user for the database.",
        "operationId": "GenerateSchemaFromTableName",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-identity}/layout/{layout-identity}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given layout. The user must be an Admin user for the database.",
        "operationId": "GenerateSchemaFromLayout",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layout-identity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-name}/layout/{layout-identity}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given layout. The user must be an Admin user for the database.",
        "operationId": "GenerateSchemaFromLayoutWithTableName",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layout-identity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-identity}/layout/{layout-name}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given layout. The user must be an Admin user for the database.",
        "operationId": "GenerateSchemaFromLayoutName",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layout-name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-name}/layout/{layout-name}:generate-integration-schema": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema from the attributes in the given layout. The user must be an Admin user for the database.",
        "operationId": "GenerateSchemaFromLayoutNameWithTableName",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layout-name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/standard-names:generate-integration-schema": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema with attributes for each provided standard name in the given database. The user must be an Admin user for the database.",
        "operationId": "GenerateSchemaFromStandardNames",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/standard-names:generate-integration-schema": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "Generate an integration schema with attributes for each provided standard name. This will include attribute from all loaded databases for which the user is an Admin.",
        "operationId": "GenerateSchemaFromStandardNamesAllDatabases",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGeneratedIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:export": {
      "post": {
        "tags": [
          "DataExport"
        ],
        "summary": "Export data from the given database.",
        "operationId": "ExportData",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export by Record History",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record history GUIDs.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordHistoryGuids": [
                      "ba22491d-b470-42cf-80d7-531ff81b1583",
                      "d0237d48-ddd2-4916-b24c-86ba51f25b52"
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Data Export by Record Version",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record version GUIDs.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordVersionGuids": [
                      "00000026-000e-4fff-8fff-dd92ffff0000",
                      "0000098c-000e-4fff-8fff-dd92ffff0000"
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Linked Records Export",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Linked Records Export - no target specified",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. This export does not specify the target of the link group (database, table), so the one defined in the schema will be used as default instead.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Linked Records Export - In Reversed Direction",
                  "description": "This example demonstrates how to export linked records from the record 'MTS-615721' in the 'Tensile Test Data' table from the 'MI_Training' database, following the record link group 'Metals Pedigree', which is the reverse of link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "ad27baf0-42e9-4136-bc96-9dbbf116e265",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": true,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "a7d055c8-300c-4b0f-9d22-a4ea2c4a8251"
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Linked Records Export - include indirect links",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data' including indirectly linked records. By default the behavior of indirect links is inherited from the link definition.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "include",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 7": {
                  "summary": "Linked Records Export - exclude indirect links",
                  "description": "This example demonstrates how to export linked records from the record '300°F' in the 'Tensile Statistical Data' table from the 'MI_Training' database, following the record link group 'Design Data' excluding indirectly linked records. By default the behavior of indirect links is inherited from the link definition.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "exclude",
                        "guid": "0aa93d4c-1393-4cf5-b172-3855349ef42c"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "f3182449-8042-4bd2-89e5-88505cbbc85f"
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Linked Records Export - Smart Link",
                  "description": "This example demonstrates how to export linked records from the record 'LBU14' in the 'Composite Pedigree' table from the 'MI_Training' database, following the smart record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "smartLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "c8b93abd-f834-464e-b02e-a3cb52a04507"
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Linked Data Export",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' and 'Test Temperature'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Linked Data Export - Rollup",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' with 'Mean' rollup and 'Test Temperature' with 'Max' rollup.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "rollUpType": "mean",
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "rollUpType": "max",
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Tabular Data Export",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It includes the local column 'Amount', the linked attribute 'Chemical name' (in the 'Restricted substances' table), and the linked column 'Effective date' from the 'Legislations restricting its use' tabular attribute",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "localData": [],
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "b48b1749-63e3-4233-8c4d-8d5857442955"
                              }
                            ],
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Tabular Data Export - no target specified",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It includes the local column 'Amount', the linked attribute 'Chemical name' (in the 'Restricted substances' table), and the linked column 'Effective date' from the 'Legislations restricting its use' tabular attribute. This export does not specify the tabular targets (database, table and attribute), so the ones defined in the schema will be used as defaults instead.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "localData": [],
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "b48b1749-63e3-4233-8c4d-8d5857442955"
                              }
                            ],
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Tabular Data Filtered Export",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. Only rows where there is a linked record in the 'All Substances' subset will be returned ",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          }
                        ],
                        "linkedRecordsExportBehavior": {
                          "tabularRowBehavior": "onlyRowsWithVisibleLinkedRecords",
                          "rollUpTypes": [],
                          "linkedRecordsCriterion": {
                            "subsetGuid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9",
                            "type": "subset"
                          }
                        },
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Tabular Data With Summary Row and Tabular Rollup",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It will include a tabular rollup of the maximum of the 'SVHC under REACH' attribute, and a summary row of the linked records and their chemical names",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "summaryRollUpType": "listDistinct",
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "rollUpType": "max",
                            "attributeType": "simple",
                            "guid": "ed238f84-fe8f-4cdc-a07d-82d358462b32"
                          }
                        ],
                        "linkedRecordsExportBehavior": {
                          "summaryRollUpType": "listDistinct",
                          "rollUpTypes": []
                        },
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Tabular Data With Linked Columns Tabular Rollup",
                  "description": "This example demonstrates how to export tabular data from the record 'PVC-elastomer (Shore A35)' in the 'MaterialUniverse' table from database 'MI Training'. It exports data from the tabular attribute 'Restricted substances associated with this material'. It will include a tabular rollup of the linked Legislation records, and the minimum of the 'Rating' attribute in the 'Legislations and Lists' table.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "localData": [],
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "recordProperties": [
                              "fullName"
                            ],
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "fbbe284e-ad31-4b01-a371-34bc0ff1d2d0"
                              },
                              {
                                "rollUpType": "min",
                                "attributeType": "simple",
                                "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                              }
                            ],
                            "linkedRecordsExportBehavior": {
                              "rollUpTypes": [
                                "list"
                              ]
                            },
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "8348e2a2-7b97-44e7-94a1-cb8358a06407"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export by Record History",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record history GUIDs.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordHistoryGuids": [
                      "ba22491d-b470-42cf-80d7-531ff81b1583",
                      "d0237d48-ddd2-4916-b24c-86ba51f25b52"
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Data Export by Record Version",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record version GUIDs.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordVersionGuids": [
                      "00000026-000e-4fff-8fff-dd92ffff0000",
                      "0000098c-000e-4fff-8fff-dd92ffff0000"
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Linked Records Export",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Linked Records Export - no target specified",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. This export does not specify the target of the link group (database, table), so the one defined in the schema will be used as default instead.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Linked Records Export - In Reversed Direction",
                  "description": "This example demonstrates how to export linked records from the record 'MTS-615721' in the 'Tensile Test Data' table from the 'MI_Training' database, following the record link group 'Metals Pedigree', which is the reverse of link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "ad27baf0-42e9-4136-bc96-9dbbf116e265",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": true,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "a7d055c8-300c-4b0f-9d22-a4ea2c4a8251"
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Linked Records Export - include indirect links",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data' including indirectly linked records. By default the behavior of indirect links is inherited from the link definition.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "include",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 7": {
                  "summary": "Linked Records Export - exclude indirect links",
                  "description": "This example demonstrates how to export linked records from the record '300°F' in the 'Tensile Statistical Data' table from the 'MI_Training' database, following the record link group 'Design Data' excluding indirectly linked records. By default the behavior of indirect links is inherited from the link definition.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "exclude",
                        "guid": "0aa93d4c-1393-4cf5-b172-3855349ef42c"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "f3182449-8042-4bd2-89e5-88505cbbc85f"
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Linked Records Export - Smart Link",
                  "description": "This example demonstrates how to export linked records from the record 'LBU14' in the 'Composite Pedigree' table from the 'MI_Training' database, following the smart record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "smartLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "c8b93abd-f834-464e-b02e-a3cb52a04507"
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Linked Data Export",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' and 'Test Temperature'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Linked Data Export - Rollup",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' with 'Mean' rollup and 'Test Temperature' with 'Max' rollup.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "rollUpType": "mean",
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "rollUpType": "max",
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Tabular Data Export",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It includes the local column 'Amount', the linked attribute 'Chemical name' (in the 'Restricted substances' table), and the linked column 'Effective date' from the 'Legislations restricting its use' tabular attribute",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "localData": [],
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "b48b1749-63e3-4233-8c4d-8d5857442955"
                              }
                            ],
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Tabular Data Export - no target specified",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It includes the local column 'Amount', the linked attribute 'Chemical name' (in the 'Restricted substances' table), and the linked column 'Effective date' from the 'Legislations restricting its use' tabular attribute. This export does not specify the tabular targets (database, table and attribute), so the ones defined in the schema will be used as defaults instead.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "localData": [],
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "b48b1749-63e3-4233-8c4d-8d5857442955"
                              }
                            ],
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Tabular Data Filtered Export",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. Only rows where there is a linked record in the 'All Substances' subset will be returned ",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          }
                        ],
                        "linkedRecordsExportBehavior": {
                          "tabularRowBehavior": "onlyRowsWithVisibleLinkedRecords",
                          "rollUpTypes": [],
                          "linkedRecordsCriterion": {
                            "subsetGuid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9",
                            "type": "subset"
                          }
                        },
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Tabular Data With Summary Row and Tabular Rollup",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It will include a tabular rollup of the maximum of the 'SVHC under REACH' attribute, and a summary row of the linked records and their chemical names",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "summaryRollUpType": "listDistinct",
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "rollUpType": "max",
                            "attributeType": "simple",
                            "guid": "ed238f84-fe8f-4cdc-a07d-82d358462b32"
                          }
                        ],
                        "linkedRecordsExportBehavior": {
                          "summaryRollUpType": "listDistinct",
                          "rollUpTypes": []
                        },
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Tabular Data With Linked Columns Tabular Rollup",
                  "description": "This example demonstrates how to export tabular data from the record 'PVC-elastomer (Shore A35)' in the 'MaterialUniverse' table from database 'MI Training'. It exports data from the tabular attribute 'Restricted substances associated with this material'. It will include a tabular rollup of the linked Legislation records, and the minimum of the 'Rating' attribute in the 'Legislations and Lists' table.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "localData": [],
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "recordProperties": [
                              "fullName"
                            ],
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "fbbe284e-ad31-4b01-a371-34bc0ff1d2d0"
                              },
                              {
                                "rollUpType": "min",
                                "attributeType": "simple",
                                "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                              }
                            ],
                            "linkedRecordsExportBehavior": {
                              "rollUpTypes": [
                                "list"
                              ]
                            },
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "8348e2a2-7b97-44e7-94a1-cb8358a06407"
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export by Record History",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record history GUIDs.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordHistoryGuids": [
                      "ba22491d-b470-42cf-80d7-531ff81b1583",
                      "d0237d48-ddd2-4916-b24c-86ba51f25b52"
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Data Export by Record Version",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record version GUIDs.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordVersionGuids": [
                      "00000026-000e-4fff-8fff-dd92ffff0000",
                      "0000098c-000e-4fff-8fff-dd92ffff0000"
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Linked Records Export",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Linked Records Export - no target specified",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. This export does not specify the target of the link group (database, table), so the one defined in the schema will be used as default instead.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Linked Records Export - In Reversed Direction",
                  "description": "This example demonstrates how to export linked records from the record 'MTS-615721' in the 'Tensile Test Data' table from the 'MI_Training' database, following the record link group 'Metals Pedigree', which is the reverse of link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "ad27baf0-42e9-4136-bc96-9dbbf116e265",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": true,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "a7d055c8-300c-4b0f-9d22-a4ea2c4a8251"
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Linked Records Export - include indirect links",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data' including indirectly linked records. By default the behavior of indirect links is inherited from the link definition.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "include",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 7": {
                  "summary": "Linked Records Export - exclude indirect links",
                  "description": "This example demonstrates how to export linked records from the record '300°F' in the 'Tensile Statistical Data' table from the 'MI_Training' database, following the record link group 'Design Data' excluding indirectly linked records. By default the behavior of indirect links is inherited from the link definition.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "exclude",
                        "guid": "0aa93d4c-1393-4cf5-b172-3855349ef42c"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "f3182449-8042-4bd2-89e5-88505cbbc85f"
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Linked Records Export - Smart Link",
                  "description": "This example demonstrates how to export linked records from the record 'LBU14' in the 'Composite Pedigree' table from the 'MI_Training' database, following the smart record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "smartLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "c8b93abd-f834-464e-b02e-a3cb52a04507"
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Linked Data Export",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' and 'Test Temperature'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Linked Data Export - Rollup",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' with 'Mean' rollup and 'Test Temperature' with 'Max' rollup.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "rollUpType": "mean",
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "rollUpType": "max",
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Tabular Data Export",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It includes the local column 'Amount', the linked attribute 'Chemical name' (in the 'Restricted substances' table), and the linked column 'Effective date' from the 'Legislations restricting its use' tabular attribute",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "localData": [],
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "b48b1749-63e3-4233-8c4d-8d5857442955"
                              }
                            ],
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Tabular Data Export - no target specified",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It includes the local column 'Amount', the linked attribute 'Chemical name' (in the 'Restricted substances' table), and the linked column 'Effective date' from the 'Legislations restricting its use' tabular attribute. This export does not specify the tabular targets (database, table and attribute), so the ones defined in the schema will be used as defaults instead.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "localData": [],
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "b48b1749-63e3-4233-8c4d-8d5857442955"
                              }
                            ],
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Tabular Data Filtered Export",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. Only rows where there is a linked record in the 'All Substances' subset will be returned ",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          }
                        ],
                        "linkedRecordsExportBehavior": {
                          "tabularRowBehavior": "onlyRowsWithVisibleLinkedRecords",
                          "rollUpTypes": [],
                          "linkedRecordsCriterion": {
                            "subsetGuid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9",
                            "type": "subset"
                          }
                        },
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Tabular Data With Summary Row and Tabular Rollup",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It will include a tabular rollup of the maximum of the 'SVHC under REACH' attribute, and a summary row of the linked records and their chemical names",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "summaryRollUpType": "listDistinct",
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "rollUpType": "max",
                            "attributeType": "simple",
                            "guid": "ed238f84-fe8f-4cdc-a07d-82d358462b32"
                          }
                        ],
                        "linkedRecordsExportBehavior": {
                          "summaryRollUpType": "listDistinct",
                          "rollUpTypes": []
                        },
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Tabular Data With Linked Columns Tabular Rollup",
                  "description": "This example demonstrates how to export tabular data from the record 'PVC-elastomer (Shore A35)' in the 'MaterialUniverse' table from database 'MI Training'. It exports data from the tabular attribute 'Restricted substances associated with this material'. It will include a tabular rollup of the linked Legislation records, and the minimum of the 'Rating' attribute in the 'Legislations and Lists' table.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "localData": [],
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "recordProperties": [
                              "fullName"
                            ],
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "fbbe284e-ad31-4b01-a371-34bc0ff1d2d0"
                              },
                              {
                                "rollUpType": "min",
                                "attributeType": "simple",
                                "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                              }
                            ],
                            "linkedRecordsExportBehavior": {
                              "rollUpTypes": [
                                "list"
                              ]
                            },
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "8348e2a2-7b97-44e7-94a1-cb8358a06407"
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export by Record History",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record history GUIDs.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordHistoryGuids": [
                      "ba22491d-b470-42cf-80d7-531ff81b1583",
                      "d0237d48-ddd2-4916-b24c-86ba51f25b52"
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Data Export by Record Version",
                  "description": "This example demonstrates how to export data for attributes 'Shape factor' and 'Young's modulus' from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record version GUIDs.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "00000144-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "attributeType": "simple",
                        "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "recordProperties": [
                      "fullName",
                      "recordColor"
                    ],
                    "recordVersionGuids": [
                      "00000026-000e-4fff-8fff-dd92ffff0000",
                      "0000098c-000e-4fff-8fff-dd92ffff0000"
                    ]
                  }
                },
                "Example 3": {
                  "summary": "Linked Records Export",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Linked Records Export - no target specified",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. This export does not specify the target of the link group (database, table), so the one defined in the schema will be used as default instead.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Linked Records Export - In Reversed Direction",
                  "description": "This example demonstrates how to export linked records from the record 'MTS-615721' in the 'Tensile Test Data' table from the 'MI_Training' database, following the record link group 'Metals Pedigree', which is the reverse of link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "ad27baf0-42e9-4136-bc96-9dbbf116e265",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": true,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "a7d055c8-300c-4b0f-9d22-a4ea2c4a8251"
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Linked Records Export - include indirect links",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data' including indirectly linked records. By default the behavior of indirect links is inherited from the link definition.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "include",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 7": {
                  "summary": "Linked Records Export - exclude indirect links",
                  "description": "This example demonstrates how to export linked records from the record '300°F' in the 'Tensile Statistical Data' table from the 'MI_Training' database, following the record link group 'Design Data' excluding indirectly linked records. By default the behavior of indirect links is inherited from the link definition.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "exclude",
                        "guid": "0aa93d4c-1393-4cf5-b172-3855349ef42c"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "f3182449-8042-4bd2-89e5-88505cbbc85f"
                    ]
                  }
                },
                "Example 8": {
                  "summary": "Linked Records Export - Smart Link",
                  "description": "This example demonstrates how to export linked records from the record 'LBU14' in the 'Composite Pedigree' table from the 'MI_Training' database, following the smart record link group 'Tensile Test Data'.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "smartLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName"
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "c8b93abd-f834-464e-b02e-a3cb52a04507"
                    ]
                  }
                },
                "Example 9": {
                  "summary": "Linked Data Export",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' and 'Test Temperature'.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 10": {
                  "summary": "Linked Data Export - Rollup",
                  "description": "This example demonstrates how to export linked records from the record 'Batch 921' in the 'Metals Pedigree' table from the 'MI_Training' database, following the record link group 'Tensile Test Data'. It includes the linked records' full name and color, and data for attributes 'Young's Modulus (11-axis)' with 'Mean' rollup and 'Test Temperature' with 'Max' rollup.",
                  "value": {
                    "attributes": [
                      {
                        "attributeType": "simple",
                        "guid": "a93a36c1-78d6-4254-b245-c7445d1038da"
                      },
                      {
                        "localData": [],
                        "targetTableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "attributeType": "link",
                        "linkAttributeType": "recordLink",
                        "exportInReversedDirection": false,
                        "recordProperties": [
                          "fullName",
                          "recordColor"
                        ],
                        "attributes": [
                          {
                            "rollUpType": "mean",
                            "attributeType": "simple",
                            "guid": "086c31a6-b047-4ee1-bdb7-ce66ea9e9b46"
                          },
                          {
                            "rollUpType": "max",
                            "attributeType": "simple",
                            "guid": "b3503337-8287-4946-b312-2100fb51779d"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "ac20ee4d-9ad2-4e39-91bc-668b0570904f"
                      }
                    ],
                    "recordProperties": [
                      "tableName",
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "d2f51a3d-c274-4a1e-b7c9-8ba2976202cc"
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Tabular Data Export",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It includes the local column 'Amount', the linked attribute 'Chemical name' (in the 'Restricted substances' table), and the linked column 'Effective date' from the 'Legislations restricting its use' tabular attribute",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "localData": [],
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "b48b1749-63e3-4233-8c4d-8d5857442955"
                              }
                            ],
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Tabular Data Export - no target specified",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It includes the local column 'Amount', the linked attribute 'Chemical name' (in the 'Restricted substances' table), and the linked column 'Effective date' from the 'Legislations restricting its use' tabular attribute. This export does not specify the tabular targets (database, table and attribute), so the ones defined in the schema will be used as defaults instead.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "localData": [],
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "b48b1749-63e3-4233-8c4d-8d5857442955"
                              }
                            ],
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Tabular Data Filtered Export",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. Only rows where there is a linked record in the 'All Substances' subset will be returned ",
                  "value": {
                    "attributes": [
                      {
                        "localData": [
                          {
                            "attributeType": "simple",
                            "guid": "089b6f3e-02bb-4f66-ab9e-0e6961f4d69e"
                          }
                        ],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          }
                        ],
                        "linkedRecordsExportBehavior": {
                          "tabularRowBehavior": "onlyRowsWithVisibleLinkedRecords",
                          "rollUpTypes": [],
                          "linkedRecordsCriterion": {
                            "subsetGuid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9",
                            "type": "subset"
                          }
                        },
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 14": {
                  "summary": "Tabular Data With Summary Row and Tabular Rollup",
                  "description": "This example demonstrates how to export tabular data from the record 'Barium silicate' in the 'MaterialUniverse' table from the 'MI_Training' database. It exports data from the tabular attribute 'Restricted substances associated with this material'. It will include a tabular rollup of the maximum of the 'SVHC under REACH' attribute, and a summary row of the linked records and their chemical names",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "summaryRollUpType": "listDistinct",
                            "attributeType": "simple",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          {
                            "rollUpType": "max",
                            "attributeType": "simple",
                            "guid": "ed238f84-fe8f-4cdc-a07d-82d358462b32"
                          }
                        ],
                        "linkedRecordsExportBehavior": {
                          "summaryRollUpType": "listDistinct",
                          "rollUpTypes": []
                        },
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "17877254-3a26-4a28-94d6-9f6be164914c"
                    ]
                  }
                },
                "Example 15": {
                  "summary": "Tabular Data With Linked Columns Tabular Rollup",
                  "description": "This example demonstrates how to export tabular data from the record 'PVC-elastomer (Shore A35)' in the 'MaterialUniverse' table from database 'MI Training'. It exports data from the tabular attribute 'Restricted substances associated with this material'. It will include a tabular rollup of the linked Legislation records, and the minimum of the 'Rating' attribute in the 'Legislations and Lists' table.",
                  "value": {
                    "attributes": [
                      {
                        "localData": [],
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "attributeType": "link",
                        "linkAttributeType": "tabularAttribute",
                        "exportInReversedDirection": false,
                        "attributes": [
                          {
                            "localData": [],
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "attributeType": "link",
                            "linkAttributeType": "tabularAttribute",
                            "exportInReversedDirection": false,
                            "recordProperties": [
                              "fullName"
                            ],
                            "attributes": [
                              {
                                "attributeType": "simple",
                                "guid": "fbbe284e-ad31-4b01-a371-34bc0ff1d2d0"
                              },
                              {
                                "rollUpType": "min",
                                "attributeType": "simple",
                                "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                              }
                            ],
                            "linkedRecordsExportBehavior": {
                              "rollUpTypes": [
                                "list"
                              ]
                            },
                            "indirectLinksBehavior": "fromLinkDefinition",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          }
                        ],
                        "indirectLinksBehavior": "fromLinkDefinition",
                        "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                      }
                    ],
                    "recordProperties": [
                      "fullName"
                    ],
                    "recordHistoryGuids": [
                      "8348e2a2-7b97-44e7-94a1-cb8358a06407"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataExportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataExportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataExportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}:export": {
      "post": {
        "tags": [
          "DataExport"
        ],
        "summary": "Export data from the integration schema.",
        "operationId": "ExportDataFromIntegrationSchema",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaIntegrationDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export by Record History",
                  "description": "This example demonstrates how to export data for Integration Schema attribute with identity 1 from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database.",
                  "value": {
                    "recordReferences": [
                      {
                        "recordReferenceType": "history",
                        "recordHistoryGuid": "ba22491d-b470-42cf-80d7-531ff81b1583",
                        "databaseKey": "MI_TRAINING"
                      },
                      {
                        "recordReferenceType": "history",
                        "recordHistoryGuid": "d0237d48-ddd2-4916-b24c-86ba51f25b52",
                        "databaseKey": "MI_TRAINING"
                      }
                    ],
                    "attributeIdentities": [
                      1
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Data Export by Record Version",
                  "description": "This example demonstrates how to export data for Integration Schema attribute with identity 1 from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record version GUIDs.",
                  "value": {
                    "recordReferences": [
                      {
                        "recordVersionGuid": "00000026-000e-4fff-8fff-dd92ffff0000",
                        "recordReferenceType": "version",
                        "databaseKey": "MI_TRAINING"
                      },
                      {
                        "recordVersionGuid": "0000098c-000e-4fff-8fff-dd92ffff0000",
                        "recordReferenceType": "version",
                        "databaseKey": "MI_TRAINING"
                      }
                    ],
                    "attributeIdentities": [
                      1
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaIntegrationDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export by Record History",
                  "description": "This example demonstrates how to export data for Integration Schema attribute with identity 1 from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database.",
                  "value": {
                    "recordReferences": [
                      {
                        "recordReferenceType": "history",
                        "recordHistoryGuid": "ba22491d-b470-42cf-80d7-531ff81b1583",
                        "databaseKey": "MI_TRAINING"
                      },
                      {
                        "recordReferenceType": "history",
                        "recordHistoryGuid": "d0237d48-ddd2-4916-b24c-86ba51f25b52",
                        "databaseKey": "MI_TRAINING"
                      }
                    ],
                    "attributeIdentities": [
                      1
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Data Export by Record Version",
                  "description": "This example demonstrates how to export data for Integration Schema attribute with identity 1 from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record version GUIDs.",
                  "value": {
                    "recordReferences": [
                      {
                        "recordVersionGuid": "00000026-000e-4fff-8fff-dd92ffff0000",
                        "recordReferenceType": "version",
                        "databaseKey": "MI_TRAINING"
                      },
                      {
                        "recordVersionGuid": "0000098c-000e-4fff-8fff-dd92ffff0000",
                        "recordReferenceType": "version",
                        "databaseKey": "MI_TRAINING"
                      }
                    ],
                    "attributeIdentities": [
                      1
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaIntegrationDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export by Record History",
                  "description": "This example demonstrates how to export data for Integration Schema attribute with identity 1 from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database.",
                  "value": {
                    "recordReferences": [
                      {
                        "recordReferenceType": "history",
                        "recordHistoryGuid": "ba22491d-b470-42cf-80d7-531ff81b1583",
                        "databaseKey": "MI_TRAINING"
                      },
                      {
                        "recordReferenceType": "history",
                        "recordHistoryGuid": "d0237d48-ddd2-4916-b24c-86ba51f25b52",
                        "databaseKey": "MI_TRAINING"
                      }
                    ],
                    "attributeIdentities": [
                      1
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Data Export by Record Version",
                  "description": "This example demonstrates how to export data for Integration Schema attribute with identity 1 from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record version GUIDs.",
                  "value": {
                    "recordReferences": [
                      {
                        "recordVersionGuid": "00000026-000e-4fff-8fff-dd92ffff0000",
                        "recordReferenceType": "version",
                        "databaseKey": "MI_TRAINING"
                      },
                      {
                        "recordVersionGuid": "0000098c-000e-4fff-8fff-dd92ffff0000",
                        "recordReferenceType": "version",
                        "databaseKey": "MI_TRAINING"
                      }
                    ],
                    "attributeIdentities": [
                      1
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaIntegrationDataExportRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data Export by Record History",
                  "description": "This example demonstrates how to export data for Integration Schema attribute with identity 1 from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database.",
                  "value": {
                    "recordReferences": [
                      {
                        "recordReferenceType": "history",
                        "recordHistoryGuid": "ba22491d-b470-42cf-80d7-531ff81b1583",
                        "databaseKey": "MI_TRAINING"
                      },
                      {
                        "recordReferenceType": "history",
                        "recordHistoryGuid": "d0237d48-ddd2-4916-b24c-86ba51f25b52",
                        "databaseKey": "MI_TRAINING"
                      }
                    ],
                    "attributeIdentities": [
                      1
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Data Export by Record Version",
                  "description": "This example demonstrates how to export data for Integration Schema attribute with identity 1 from the records 'Alumino Silicate - 1720' and '250 Maraging Steel' in the 'MaterialUniverse' table from the 'MI_Training' database, by specifying the record version GUIDs.",
                  "value": {
                    "recordReferences": [
                      {
                        "recordVersionGuid": "00000026-000e-4fff-8fff-dd92ffff0000",
                        "recordReferenceType": "version",
                        "databaseKey": "MI_TRAINING"
                      },
                      {
                        "recordVersionGuid": "0000098c-000e-4fff-8fff-dd92ffff0000",
                        "recordReferenceType": "version",
                        "databaseKey": "MI_TRAINING"
                      }
                    ],
                    "attributeIdentities": [
                      1
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataExportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataExportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataExportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          },
          "422": {
            "description": "MI not in attribute-based access control mode"
          }
        }
      }
    },
    "/v1alpha/dataupdater/updates": {
      "get": {
        "tags": [
          "DataUpdater"
        ],
        "operationId": "GetAllUpdates",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaDataUpdate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaDataUpdate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaDataUpdate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/dataupdater/updates/{database-key}": {
      "get": {
        "tags": [
          "DataUpdater"
        ],
        "operationId": "GetUpdatesForDatabase",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaDataUpdate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaDataUpdate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaDataUpdate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataUpdater"
        ],
        "summary": "Register an update",
        "operationId": "RegisterUpdate",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRegisterUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRegisterUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRegisterUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRegisterUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataUpdateToken"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataUpdateToken"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataUpdateToken"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/dataupdater/updates/{database-key}/{update-token-guid}": {
      "get": {
        "tags": [
          "DataUpdater"
        ],
        "operationId": "GetUpdate",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "update-token-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataUpdate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataUpdate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataUpdate"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/dataupdater/updates/{database-key}/{update-token-guid}:dry-run": {
      "post": {
        "tags": [
          "DataUpdater"
        ],
        "summary": "Start a dry run job for a given update",
        "operationId": "DryRunUpdate",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "update-token-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/dataupdater/updates/{database-key}/{update-token-guid}:apply": {
      "post": {
        "tags": [
          "DataUpdater"
        ],
        "summary": "Start an apply job for a given update",
        "operationId": "ApplyUpdate",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "update-token-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}/graph": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get the graph for a given database, table, record history, record version and attribute. Must be a float or discrete functional attribute.",
        "operationId": "GetGraphForVersionFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGraph"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Float series graph.",
                    "description": "Example response for a float series graph with X-axis parameter 'Number of Cycles' and a constraint parameter of 'Temperature'. The graph contains 2 series each containing 4 points.",
                    "value": {
                      "functionalType": "float",
                      "series": [
                        {
                          "constraints": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 300.0
                              }
                            }
                          ],
                          "points": [
                            {
                              "xValue": 1000.0,
                              "yLowValue": 53.12,
                              "yHighValue": 54.5,
                              "estimated": false
                            },
                            {
                              "xValue": 5000.0,
                              "yLowValue": 62.58,
                              "yHighValue": 64.57,
                              "estimated": false
                            },
                            {
                              "xValue": 25000.0,
                              "yLowValue": 73.06,
                              "yHighValue": 74.9,
                              "estimated": false
                            },
                            {
                              "xValue": 12500.0,
                              "yLowValue": 85.34,
                              "yHighValue": 87.91,
                              "estimated": false
                            }
                          ],
                          "graphDecoration": "linesOnly"
                        },
                        {
                          "constraints": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 400.0
                              }
                            }
                          ],
                          "points": [
                            {
                              "xValue": 1000.0,
                              "yLowValue": 95.86,
                              "yHighValue": 97.43,
                              "estimated": false
                            },
                            {
                              "xValue": 5000.0,
                              "yLowValue": 106.7,
                              "yHighValue": 108.42,
                              "estimated": true
                            },
                            {
                              "xValue": 25000.0,
                              "yLowValue": 119.85,
                              "yHighValue": 121.04,
                              "estimated": true
                            },
                            {
                              "xValue": 12500.0,
                              "yLowValue": 134.75,
                              "yHighValue": 137.19,
                              "estimated": false
                            }
                          ],
                          "graphDecoration": "linesOnly"
                        }
                      ],
                      "graphType": "series",
                      "xAxisParameter": {
                        "type": "numeric",
                        "name": "Number of Cycles",
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      "constraintParameters": [
                        {
                          "type": "numeric",
                          "name": "Temperature",
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "numberOfPoints": 8
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Attribute is not a float or discrete functional attribute"
          },
          "404": {
            "description": "Database, table, record history, record version, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}/graph": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get the graph for a given attribute and the latest version of a record history in a given database and table. Must be a float or discrete functional attribute.",
        "operationId": "GetGraphForLatestFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGraph"
                },
                "examples": {
                  "Example 2": {
                    "summary": "Float series graph.",
                    "description": "Example response for a float series graph with X-axis parameter 'Number of Cycles' and a constraint parameter of 'Temperature'. The graph contains 2 series each containing 4 points.",
                    "value": {
                      "functionalType": "float",
                      "series": [
                        {
                          "constraints": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 300.0
                              }
                            }
                          ],
                          "points": [
                            {
                              "xValue": 1000.0,
                              "yLowValue": 53.12,
                              "yHighValue": 54.5,
                              "estimated": false
                            },
                            {
                              "xValue": 5000.0,
                              "yLowValue": 62.58,
                              "yHighValue": 64.57,
                              "estimated": false
                            },
                            {
                              "xValue": 25000.0,
                              "yLowValue": 73.06,
                              "yHighValue": 74.9,
                              "estimated": false
                            },
                            {
                              "xValue": 12500.0,
                              "yLowValue": 85.34,
                              "yHighValue": 87.91,
                              "estimated": false
                            }
                          ],
                          "graphDecoration": "linesOnly"
                        },
                        {
                          "constraints": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 400.0
                              }
                            }
                          ],
                          "points": [
                            {
                              "xValue": 1000.0,
                              "yLowValue": 95.86,
                              "yHighValue": 97.43,
                              "estimated": false
                            },
                            {
                              "xValue": 5000.0,
                              "yLowValue": 106.7,
                              "yHighValue": 108.42,
                              "estimated": true
                            },
                            {
                              "xValue": 25000.0,
                              "yLowValue": 119.85,
                              "yHighValue": 121.04,
                              "estimated": true
                            },
                            {
                              "xValue": 12500.0,
                              "yLowValue": 134.75,
                              "yHighValue": 137.19,
                              "estimated": false
                            }
                          ],
                          "graphDecoration": "linesOnly"
                        }
                      ],
                      "graphType": "series",
                      "xAxisParameter": {
                        "type": "numeric",
                        "name": "Number of Cycles",
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      "constraintParameters": [
                        {
                          "type": "numeric",
                          "name": "Temperature",
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "numberOfPoints": 8
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Attribute is not a float or discrete functional attribute"
          },
          "404": {
            "description": "Database, table, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}/graph": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get a graph for a given database, record history, record version and attribute. Must be a float or discrete functional attribute.",
        "operationId": "GetGraphForVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGraph"
                },
                "examples": {
                  "Example 3": {
                    "summary": "Float series graph.",
                    "description": "Example response for a float series graph with X-axis parameter 'Number of Cycles' and a constraint parameter of 'Temperature'. The graph contains 2 series each containing 4 points.",
                    "value": {
                      "functionalType": "float",
                      "series": [
                        {
                          "constraints": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 300.0
                              }
                            }
                          ],
                          "points": [
                            {
                              "xValue": 1000.0,
                              "yLowValue": 53.12,
                              "yHighValue": 54.5,
                              "estimated": false
                            },
                            {
                              "xValue": 5000.0,
                              "yLowValue": 62.58,
                              "yHighValue": 64.57,
                              "estimated": false
                            },
                            {
                              "xValue": 25000.0,
                              "yLowValue": 73.06,
                              "yHighValue": 74.9,
                              "estimated": false
                            },
                            {
                              "xValue": 12500.0,
                              "yLowValue": 85.34,
                              "yHighValue": 87.91,
                              "estimated": false
                            }
                          ],
                          "graphDecoration": "linesOnly"
                        },
                        {
                          "constraints": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 400.0
                              }
                            }
                          ],
                          "points": [
                            {
                              "xValue": 1000.0,
                              "yLowValue": 95.86,
                              "yHighValue": 97.43,
                              "estimated": false
                            },
                            {
                              "xValue": 5000.0,
                              "yLowValue": 106.7,
                              "yHighValue": 108.42,
                              "estimated": true
                            },
                            {
                              "xValue": 25000.0,
                              "yLowValue": 119.85,
                              "yHighValue": 121.04,
                              "estimated": true
                            },
                            {
                              "xValue": 12500.0,
                              "yLowValue": 134.75,
                              "yHighValue": 137.19,
                              "estimated": false
                            }
                          ],
                          "graphDecoration": "linesOnly"
                        }
                      ],
                      "graphType": "series",
                      "xAxisParameter": {
                        "type": "numeric",
                        "name": "Number of Cycles",
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      "constraintParameters": [
                        {
                          "type": "numeric",
                          "name": "Temperature",
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "numberOfPoints": 8
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Attribute is not a float or discrete functional attribute"
          },
          "404": {
            "description": "Database, record history, record version, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}/graph": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get the graph for a given attribute and the latest version of a record history in a given database. Must be a float or discrete functional attribute.",
        "operationId": "GetGraphForLatest",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGraph"
                },
                "examples": {
                  "Example 4": {
                    "summary": "Float series graph.",
                    "description": "Example response for a float series graph with X-axis parameter 'Number of Cycles' and a constraint parameter of 'Temperature'. The graph contains 2 series each containing 4 points.",
                    "value": {
                      "functionalType": "float",
                      "series": [
                        {
                          "constraints": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 300.0
                              }
                            }
                          ],
                          "points": [
                            {
                              "xValue": 1000.0,
                              "yLowValue": 53.12,
                              "yHighValue": 54.5,
                              "estimated": false
                            },
                            {
                              "xValue": 5000.0,
                              "yLowValue": 62.58,
                              "yHighValue": 64.57,
                              "estimated": false
                            },
                            {
                              "xValue": 25000.0,
                              "yLowValue": 73.06,
                              "yHighValue": 74.9,
                              "estimated": false
                            },
                            {
                              "xValue": 12500.0,
                              "yLowValue": 85.34,
                              "yHighValue": 87.91,
                              "estimated": false
                            }
                          ],
                          "graphDecoration": "linesOnly"
                        },
                        {
                          "constraints": [
                            {
                              "parameter": {
                                "name": "Temperature",
                                "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                              },
                              "parameterDataValue": {
                                "parameterType": "numeric",
                                "parameterValue": 400.0
                              }
                            }
                          ],
                          "points": [
                            {
                              "xValue": 1000.0,
                              "yLowValue": 95.86,
                              "yHighValue": 97.43,
                              "estimated": false
                            },
                            {
                              "xValue": 5000.0,
                              "yLowValue": 106.7,
                              "yHighValue": 108.42,
                              "estimated": true
                            },
                            {
                              "xValue": 25000.0,
                              "yLowValue": 119.85,
                              "yHighValue": 121.04,
                              "estimated": true
                            },
                            {
                              "xValue": 12500.0,
                              "yLowValue": 134.75,
                              "yHighValue": 137.19,
                              "estimated": false
                            }
                          ],
                          "graphDecoration": "linesOnly"
                        }
                      ],
                      "graphType": "series",
                      "xAxisParameter": {
                        "type": "numeric",
                        "name": "Number of Cycles",
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      "constraintParameters": [
                        {
                          "type": "numeric",
                          "name": "Temperature",
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "numberOfPoints": 8
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Attribute is not a float or discrete functional attribute"
          },
          "404": {
            "description": "Database, table, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}/graph:evaluate": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Evaluate the graph for a given set of parameter values for a given database, table, record history, record version and attribute. Must be a float or discrete functional attribute.",
        "operationId": "EvaluateGraphForVersionFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGraphValue"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Range graph value - value exists.",
                    "description": "Example response for evaluating a float functional graph where a value does exist at the input parameter values.",
                    "value": {
                      "graphValueType": "range",
                      "lowValue": 8.659,
                      "highValue": 8.703,
                      "lowValueIsInclusive": true,
                      "highValueIsInclusive": true,
                      "estimated": false,
                      "interpolated": false
                    }
                  },
                  "Example 2": {
                    "summary": "Range graph value - interpolated value.",
                    "description": "Example response for evaluating a float functional graph where an interpolated value is returned at the input parameter values.",
                    "value": {
                      "graphValueType": "range",
                      "lowValue": 8.659,
                      "highValue": 8.703,
                      "lowValueIsInclusive": true,
                      "highValueIsInclusive": true,
                      "estimated": false,
                      "interpolated": true
                    }
                  },
                  "Example 3": {
                    "summary": "Discrete graph value - value exists.",
                    "description": "Example response for evaluating a discrete functional graph where a value does exist at the input parameter values.",
                    "value": {
                      "graphValueType": "discrete",
                      "value": {
                        "isProtected": false,
                        "name": "Used in Production",
                        "guid": "725244fb-c182-418a-91d8-c07294990c13"
                      }
                    }
                  },
                  "Example 4": {
                    "summary": "No value exists.",
                    "description": "Example response for evaluating a functional graph where no value exist at the input parameter values.",
                    "value": {
                      "graphValueType": "noValueExists"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Attribute is not a float or discrete functional attribute"
          },
          "404": {
            "description": "Database, table, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}/graph:evaluate": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Evaluate the graph for a given set of parameter values for a given attribute and the latest version of a record history in a given database and table. Must be a float or discrete functional attribute.",
        "operationId": "EvaluateGraphValueForLatestFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 2": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 2": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 2": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 2": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGraphValue"
                },
                "examples": {
                  "Example 5": {
                    "summary": "Range graph value - value exists.",
                    "description": "Example response for evaluating a float functional graph where a value does exist at the input parameter values.",
                    "value": {
                      "graphValueType": "range",
                      "lowValue": 8.659,
                      "highValue": 8.703,
                      "lowValueIsInclusive": true,
                      "highValueIsInclusive": true,
                      "estimated": false,
                      "interpolated": false
                    }
                  },
                  "Example 6": {
                    "summary": "Range graph value - interpolated value.",
                    "description": "Example response for evaluating a float functional graph where an interpolated value is returned at the input parameter values.",
                    "value": {
                      "graphValueType": "range",
                      "lowValue": 8.659,
                      "highValue": 8.703,
                      "lowValueIsInclusive": true,
                      "highValueIsInclusive": true,
                      "estimated": false,
                      "interpolated": true
                    }
                  },
                  "Example 7": {
                    "summary": "Discrete graph value - value exists.",
                    "description": "Example response for evaluating a discrete functional graph where a value does exist at the input parameter values.",
                    "value": {
                      "graphValueType": "discrete",
                      "value": {
                        "isProtected": false,
                        "name": "Used in Production",
                        "guid": "725244fb-c182-418a-91d8-c07294990c13"
                      }
                    }
                  },
                  "Example 8": {
                    "summary": "No value exists.",
                    "description": "Example response for evaluating a functional graph where no value exist at the input parameter values.",
                    "value": {
                      "graphValueType": "noValueExists"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Attribute is not a float or discrete functional attribute"
          },
          "404": {
            "description": "Database, table, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/record-versions/{record-version-guid}/attributes/{attribute-guid}/graph:evaluate": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Evaluate the graph for a given set of parameter values for a given database, record history, record version and attribute. Must be a float or discrete functional attribute.",
        "operationId": "EvaluateGraphForVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 3": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 3": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 3": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 3": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGraphValue"
                },
                "examples": {
                  "Example 9": {
                    "summary": "Range graph value - value exists.",
                    "description": "Example response for evaluating a float functional graph where a value does exist at the input parameter values.",
                    "value": {
                      "graphValueType": "range",
                      "lowValue": 8.659,
                      "highValue": 8.703,
                      "lowValueIsInclusive": true,
                      "highValueIsInclusive": true,
                      "estimated": false,
                      "interpolated": false
                    }
                  },
                  "Example 10": {
                    "summary": "Range graph value - interpolated value.",
                    "description": "Example response for evaluating a float functional graph where an interpolated value is returned at the input parameter values.",
                    "value": {
                      "graphValueType": "range",
                      "lowValue": 8.659,
                      "highValue": 8.703,
                      "lowValueIsInclusive": true,
                      "highValueIsInclusive": true,
                      "estimated": false,
                      "interpolated": true
                    }
                  },
                  "Example 11": {
                    "summary": "Discrete graph value - value exists.",
                    "description": "Example response for evaluating a discrete functional graph where a value does exist at the input parameter values.",
                    "value": {
                      "graphValueType": "discrete",
                      "value": {
                        "isProtected": false,
                        "name": "Used in Production",
                        "guid": "725244fb-c182-418a-91d8-c07294990c13"
                      }
                    }
                  },
                  "Example 12": {
                    "summary": "No value exists.",
                    "description": "Example response for evaluating a functional graph where no value exist at the input parameter values.",
                    "value": {
                      "graphValueType": "noValueExists"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Attribute is not a float or discrete functional attribute"
          },
          "404": {
            "description": "Database, table, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/latest/attributes/{attribute-guid}/graph:evaluate": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Evaluate the graph for a given set of parameter values for a given attribute and the latest version of a record history in a given database. Must be a float or discrete functional attribute.",
        "operationId": "EvaluateGraphValueForLatest",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 4": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 4": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 4": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGraphEvaluationSettings"
              },
              "examples": {
                "Example 4": {
                  "summary": "Numeric and Discrete Parameters",
                  "description": "This example demonstrates how to evaluate a graph with a value of 273.14K for the numeric parameter Temperature and a value of Strong Acids for the discrete parameter Chemical Environment.",
                  "value": {
                    "parametersWithValues": [
                      {
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "parameterValue": {
                          "parameterType": "numeric",
                          "parameterValue": 273.14
                        }
                      },
                      {
                        "parameterGuid": "b7cee874-160f-439a-a784-b887c516b2d5",
                        "parameterValue": {
                          "parameterType": "discrete",
                          "parameterValueGuid": "6168c5e2-551c-49d3-90bd-ce196adf6310"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGraphValue"
                },
                "examples": {
                  "Example 13": {
                    "summary": "Range graph value - value exists.",
                    "description": "Example response for evaluating a float functional graph where a value does exist at the input parameter values.",
                    "value": {
                      "graphValueType": "range",
                      "lowValue": 8.659,
                      "highValue": 8.703,
                      "lowValueIsInclusive": true,
                      "highValueIsInclusive": true,
                      "estimated": false,
                      "interpolated": false
                    }
                  },
                  "Example 14": {
                    "summary": "Range graph value - interpolated value.",
                    "description": "Example response for evaluating a float functional graph where an interpolated value is returned at the input parameter values.",
                    "value": {
                      "graphValueType": "range",
                      "lowValue": 8.659,
                      "highValue": 8.703,
                      "lowValueIsInclusive": true,
                      "highValueIsInclusive": true,
                      "estimated": false,
                      "interpolated": true
                    }
                  },
                  "Example 15": {
                    "summary": "Discrete graph value - value exists.",
                    "description": "Example response for evaluating a discrete functional graph where a value does exist at the input parameter values.",
                    "value": {
                      "graphValueType": "discrete",
                      "value": {
                        "isProtected": false,
                        "name": "Used in Production",
                        "guid": "725244fb-c182-418a-91d8-c07294990c13"
                      }
                    }
                  },
                  "Example 16": {
                    "summary": "No value exists.",
                    "description": "Example response for evaluating a functional graph where no value exist at the input parameter values.",
                    "value": {
                      "graphValueType": "noValueExists"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Attribute is not a float or discrete functional attribute"
          },
          "404": {
            "description": "Database, table, record history, attribute or datum not found"
          }
        }
      }
    },
    "/v1alpha/help-location/url/{help-key}": {
      "get": {
        "tags": [
          "HelpLocation"
        ],
        "summary": "Returns the URL that the given helpKey maps to.",
        "operationId": "GetHelpUrl",
        "parameters": [
          {
            "name": "help-key",
            "in": "path",
            "description": "The help key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/v1alpha/help-location/redirect/{help-key}": {
      "get": {
        "tags": [
          "HelpLocation"
        ],
        "summary": "Redirects client to the URL that the given helpKey maps to.",
        "operationId": "GetHelpUrlRedirect",
        "parameters": [
          {
            "name": "help-key",
            "in": "path",
            "description": "The help key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "302": {
            "description": "Redirect to the help location."
          }
        }
      }
    },
    "/v1alpha/identities": {
      "post": {
        "tags": [
          "Identities"
        ],
        "summary": "For internal use only.\r\nTranslates guids to identities.",
        "operationId": "TranslateGuidsToIdentities",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaTranslateGuidsToIdentitiesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaTranslateGuidsToIdentitiesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaTranslateGuidsToIdentitiesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaTranslateGuidsToIdentitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaTranslateGuidsToIdentitiesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/v1alpha/integration-schemas": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Lists the available integration schemas.",
        "operationId": "Schemas",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Add an integration schema. Will fail if the schema is not valid, or if the user is not both a global administrator and an administrator for the schema.",
        "operationId": "AddSchema",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGuidOnlyIntegrationSchemaOfObjectIdentifier"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGuidOnlyIntegrationSchemaOfObjectIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGuidOnlyIntegrationSchemaOfObjectIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGuidOnlyIntegrationSchemaOfObjectIdentifier"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Returns validation errors information"
          },
          "403": {
            "description": "Forbidden. User is not a global administrator or an administrator for the schema"
          },
          "422": {
            "description": "MI not in attribute-based access control mode"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}:search-index-status": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Returns the status of a given integration schema.",
        "operationId": "GetStatusForIntegrationSchema",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include-errors",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaStatus"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1alpha/integration-schemas:search-index-status": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Returns the status of all available integration schemas.",
        "operationId": "AllSchemaStatus",
        "parameters": [
          {
            "name": "include-errors",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/GsaIntegrationSchemaStatus"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/GsaIntegrationSchemaStatus"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/GsaIntegrationSchemaStatus"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}": {
      "put": {
        "tags": [
          "Integration"
        ],
        "summary": "Updates an integration schema.\r\nWill fail if the schema does not exist, is not valid, or if the user is not both a global administrator and an administrator for the schema.",
        "operationId": "UpdateSchema",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGuidOnlyIntegrationSchemaOfObjectIdentifier"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGuidOnlyIntegrationSchemaOfObjectIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGuidOnlyIntegrationSchemaOfObjectIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGuidOnlyIntegrationSchemaOfObjectIdentifier"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Returns validation errors information"
          },
          "403": {
            "description": "Forbidden. User is not a global administrator or an administrator for the schema"
          },
          "404": {
            "description": "Not Found. Schema does not exist"
          },
          "422": {
            "description": "MI not in attribute-based access control mode"
          }
        }
      },
      "delete": {
        "tags": [
          "Integration"
        ],
        "summary": "Delete an integration schema. Will fail if the schema does not exist, or if the user is not both a global administrator and an administrator for the schema.",
        "operationId": "DeleteSchema",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "description": "Schema to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Schema deleted"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Schema not found"
          }
        }
      },
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Returns the full object representing the integration schema.\r\nNames and identities of source items will be populated if they can be found in the databases currently loaded in MI, otherwise just the GUIDs will be returned.",
        "operationId": "GetSchema",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "description": "The schema name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeImplicitAttributes",
            "in": "query",
            "description": "Whether to add in the schema attributes derived from certain record properties (e.g. Record Name) that are implicitly in all integration schemas. False by default.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaOfObjectIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaOfObjectIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaIntegrationSchemaOfObjectIdentifier"
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          },
          "422": {
            "description": "MI not in attribute-based access control mode"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}/attributes": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Returns a list of the attributes defined in the integration schema.",
        "operationId": "SchemaTargets",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "description": "The schema name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeImplicitAttributes",
            "in": "query",
            "description": "Whether to add in the schema attributes derived from certain record properties (e.g. Record Name) that are implicitly in all integration schemas. False by default.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaIntegrationAttribute"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaIntegrationAttribute"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaIntegrationAttribute"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          },
          "422": {
            "description": "MI not in attribute-based access control mode"
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}/sources/database/{database-key}/table/{table-identity}": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Returns a list of the schema source mapping from the given table. Will fail if the database is not loaded in MI.\r\nNames and identities of source items will be populated.",
        "operationId": "SchemaTableMappings",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaSourceOfObjectIdentifier"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaSourceOfObjectIdentifier"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaSourceOfObjectIdentifier"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          },
          "422": {
            "description": "MI not in attribute-based access control mode"
          }
        }
      }
    },
    "/v1alpha/job-queue/jobs": {
      "get": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Get a list of jobs.",
        "operationId": "GetJobs",
        "parameters": [
          {
            "name": "jobType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "descriptionFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "submitterNameFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGetJobsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGetJobsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGetJobsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Create a new job.",
        "operationId": "CreateJob",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateJobRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateJobRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateJobRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateJobRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Delete specified jobs.",
        "operationId": "DeleteJobs",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          "422": {
            "description": "No job IDs were specified"
          },
          "500": {
            "description": "Failed to delete one or more jobs"
          }
        }
      }
    },
    "/v1alpha/job-queue/jobs/{id}": {
      "get": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Get job by ID.",
        "operationId": "GetJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      },
      "patch": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Update a job.",
        "operationId": "UpdateJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateJobRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateJobRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateJobRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      },
      "delete": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Delete a job.",
        "operationId": "DeleteJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Success - no content"
          },
          "404": {
            "description": "Job not found"
          }
        }
      }
    },
    "/v1alpha/job-queue/jobs/{id}:retrieve-definition": {
      "get": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Get a job creation object based on an existing job.",
        "operationId": "RestoreJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaCreateJobRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaCreateJobRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaCreateJobRequest"
                }
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      }
    },
    "/v1alpha/job-queue/jobs/{id}:move-to-top": {
      "post": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Move a job to the top of the queue (actually sets the scheduled execution date to now, could be done with patch method).",
        "operationId": "MoveToTop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Job not found"
          }
        }
      }
    },
    "/v1alpha/job-queue/jobs/{id}:resubmit": {
      "post": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Resubmit a job.",
        "operationId": "Resubmit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaResubmitJobRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaResubmitJobRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaResubmitJobRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaResubmitJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaJob"
                }
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      }
    },
    "/v1alpha/job-queue/files": {
      "post": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Uploads an ephemeral file and returns an ID which can subsequently be used to refer to that file in a job creation request. Ephemeral files have a short lifespan\r\nand should be used to provide file data to jobs only. They should not be used as file storage.",
        "operationId": "UploadFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/job-queue/jobs/{id}/outputs": {
      "get": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Get a job's output filenames.",
        "operationId": "GetOutputFilenames",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      }
    },
    "/v1alpha/job-queue/jobs/{id}/outputs:export": {
      "get": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Retrieve a job output file.",
        "operationId": "GetJobOutputFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Job or file not found"
          }
        }
      }
    },
    "/v1alpha/job-queue/current-user": {
      "get": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Get the current user.",
        "operationId": "GetCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaCurrentUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaCurrentUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaCurrentUser"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/job-queue/processing-configuration": {
      "get": {
        "tags": [
          "JobQueue"
        ],
        "summary": "Get the processing configuration.",
        "operationId": "GetProcessingConfig",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProcessingConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProcessingConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProcessingConfig"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/license/user-license:ensure-checked-out": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Either checks out a user license for the requesting user, or returns an error response if no such license is available.\r\nThis method is a no-op because it relies on license check to happen within Granta.Server.Api.Auth.UserContextFilter",
        "operationId": "EnsureUserLicenseAvailable",
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcObjectResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcObjectResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcObjectResult"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/license/server-licenses:ensure-checked-out": {
      "post": {
        "tags": [
          "License"
        ],
        "summary": "Checks out server wide licenses and returns a bool for each provided app name indicating if\r\nthe relevant license(s) required have been checked out.",
        "operationId": "CheckoutAppLicense",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppNameLicenseCheckoutRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "License request",
                  "description": "This example demonstrates a request to the endpoint to check if the relevant licenses required to use BoM Analyzer are checked out. This endpoint currently does not support all application names and unsupported names will not be returned in the response.",
                  "value": {
                    "appNames": [
                      "MI BoM Analyzer"
                    ]
                  }
                },
                "Example 2": {
                  "summary": "License request with multiple application names",
                  "description": "This example demonstrates a request to the endpoint to check if the relevant licenses for each application name have been checked out. This endpoint currently does not support all application names and unsupported names will not be returned in the response.",
                  "value": {
                    "appNames": [
                      "RS Reports",
                      "Sustainability Analytics"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppNameLicenseCheckoutRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "License request",
                  "description": "This example demonstrates a request to the endpoint to check if the relevant licenses required to use BoM Analyzer are checked out. This endpoint currently does not support all application names and unsupported names will not be returned in the response.",
                  "value": {
                    "appNames": [
                      "MI BoM Analyzer"
                    ]
                  }
                },
                "Example 2": {
                  "summary": "License request with multiple application names",
                  "description": "This example demonstrates a request to the endpoint to check if the relevant licenses for each application name have been checked out. This endpoint currently does not support all application names and unsupported names will not be returned in the response.",
                  "value": {
                    "appNames": [
                      "RS Reports",
                      "Sustainability Analytics"
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppNameLicenseCheckoutRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "License request",
                  "description": "This example demonstrates a request to the endpoint to check if the relevant licenses required to use BoM Analyzer are checked out. This endpoint currently does not support all application names and unsupported names will not be returned in the response.",
                  "value": {
                    "appNames": [
                      "MI BoM Analyzer"
                    ]
                  }
                },
                "Example 2": {
                  "summary": "License request with multiple application names",
                  "description": "This example demonstrates a request to the endpoint to check if the relevant licenses for each application name have been checked out. This endpoint currently does not support all application names and unsupported names will not be returned in the response.",
                  "value": {
                    "appNames": [
                      "RS Reports",
                      "Sustainability Analytics"
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAppNameLicenseCheckoutRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "License request",
                  "description": "This example demonstrates a request to the endpoint to check if the relevant licenses required to use BoM Analyzer are checked out. This endpoint currently does not support all application names and unsupported names will not be returned in the response.",
                  "value": {
                    "appNames": [
                      "MI BoM Analyzer"
                    ]
                  }
                },
                "Example 2": {
                  "summary": "License request with multiple application names",
                  "description": "This example demonstrates a request to the endpoint to check if the relevant licenses for each application name have been checked out. This endpoint currently does not support all application names and unsupported names will not be returned in the response.",
                  "value": {
                    "appNames": [
                      "RS Reports",
                      "Sustainability Analytics"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAppNameLicenseCheckoutResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAppNameLicenseCheckoutResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAppNameLicenseCheckoutResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/license/server-licenses": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Get info on which server licenses are enabled, and the license expiry date.",
        "operationId": "GetServerLicense",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaEnabledLicensesInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaEnabledLicensesInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaEnabledLicensesInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lists/audit/search": {
      "post": {
        "tags": [
          "ListAuditLog"
        ],
        "summary": "Posts a search request, and returns an object containing search result identifier",
        "operationId": "RunListAuditLogSearch",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaListAuditLogSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Record list audit log search",
                  "description": "Search for the audit log items for the first 10 times the given list had an item added or removed",
                  "value": {
                    "listIdentifiers": [
                      "610d7ed0-618c-4e60-b647-e5c387932af3"
                    ],
                    "listActionsToInclude": [
                      "ItemAdded",
                      "ItemRemoved"
                    ],
                    "pagingOptions": {
                      "startIndex": 0,
                      "pageSize": 10
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaListAuditLogSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Record list audit log search",
                  "description": "Search for the audit log items for the first 10 times the given list had an item added or removed",
                  "value": {
                    "listIdentifiers": [
                      "610d7ed0-618c-4e60-b647-e5c387932af3"
                    ],
                    "listActionsToInclude": [
                      "ItemAdded",
                      "ItemRemoved"
                    ],
                    "pagingOptions": {
                      "startIndex": 0,
                      "pageSize": 10
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaListAuditLogSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Record list audit log search",
                  "description": "Search for the audit log items for the first 10 times the given list had an item added or removed",
                  "value": {
                    "listIdentifiers": [
                      "610d7ed0-618c-4e60-b647-e5c387932af3"
                    ],
                    "listActionsToInclude": [
                      "ItemAdded",
                      "ItemRemoved"
                    ],
                    "pagingOptions": {
                      "startIndex": 0,
                      "pageSize": 10
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaListAuditLogSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Record list audit log search",
                  "description": "Search for the audit log items for the first 10 times the given list had an item added or removed",
                  "value": {
                    "listIdentifiers": [
                      "610d7ed0-618c-4e60-b647-e5c387932af3"
                    ],
                    "listActionsToInclude": [
                      "ItemAdded",
                      "ItemRemoved"
                    ],
                    "pagingOptions": {
                      "startIndex": 0,
                      "pageSize": 10
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListSearchInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListSearchInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListSearchInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/lists/audit/search/results/{resultResourceIdentifier}": {
      "get": {
        "tags": [
          "ListAuditLog"
        ],
        "summary": "Returns the search results found in the specified resource",
        "operationId": "GetListAuditLogSearchResults",
        "parameters": [
          {
            "name": "resultResourceIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaListAuditLogItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaListAuditLogItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaListAuditLogItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Search result not found"
          },
          "410": {
            "description": "Search result no longer available"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/items": {
      "get": {
        "tags": [
          "ListItem"
        ],
        "summary": "Returns the items in the given list",
        "operationId": "GetListItems",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListItemsInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListItemsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListItemsInfo"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/items/add": {
      "post": {
        "tags": [
          "ListItem"
        ],
        "summary": "Adds the specified items to an existing list.",
        "operationId": "AddItemsToList",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordListItemsInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordListItemsInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordListItemsInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordListItemsInfo"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListItemsInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListItemsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListItemsInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/items/remove": {
      "post": {
        "tags": [
          "ListItem"
        ],
        "summary": "Removed the specified items from an existing list.",
        "operationId": "RemoveItemsFromList",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDeleteRecordListItems"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDeleteRecordListItems"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDeleteRecordListItems"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDeleteRecordListItems"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListItemsInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListItemsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListItemsInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists": {
      "get": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Returns all lists visible to the calling user",
        "operationId": "GetAllLists",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeadersInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeadersInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeadersInfo"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Creates a new list with the specified properties and items.",
        "operationId": "CreateList",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordList"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordList"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/lists/search": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Posts a search request, and returns an object containing search result identifier",
        "operationId": "RunRecordListsSearch",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRecordListSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRecordListSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRecordListSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRecordListSearchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListSearchInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListSearchInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListSearchInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/lists/search/results/{resultResourceIdentifier}": {
      "get": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Returns the search results found in the specified resource",
        "operationId": "GetRecordListSearchResults",
        "parameters": [
          {
            "name": "resultResourceIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListSearchResultsInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListSearchResultsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListSearchResultsInfo"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Search result not found"
          },
          "410": {
            "description": "Search result no longer available"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}": {
      "get": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Returns the given list if it exists and the calling user has read access to it",
        "operationId": "GetList",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      },
      "patch": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Performs a partial update on the properties of a list.",
        "operationId": "UpdateList",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordListProperties"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update the name of list",
                  "description": "Update the name of a list",
                  "value": {
                    "name": "new name",
                    "published": false,
                    "awaitingApproval": false,
                    "internalUse": false
                  }
                },
                "Example 2": {
                  "summary": "Update everything for a list",
                  "description": "Update everything for a list",
                  "value": {
                    "name": "new name",
                    "description": "new description",
                    "notes": "new notes",
                    "published": false,
                    "awaitingApproval": true,
                    "internalUse": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordListProperties"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update the name of list",
                  "description": "Update the name of a list",
                  "value": {
                    "name": "new name",
                    "published": false,
                    "awaitingApproval": false,
                    "internalUse": false
                  }
                },
                "Example 2": {
                  "summary": "Update everything for a list",
                  "description": "Update everything for a list",
                  "value": {
                    "name": "new name",
                    "description": "new description",
                    "notes": "new notes",
                    "published": false,
                    "awaitingApproval": true,
                    "internalUse": true
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordListProperties"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update the name of list",
                  "description": "Update the name of a list",
                  "value": {
                    "name": "new name",
                    "published": false,
                    "awaitingApproval": false,
                    "internalUse": false
                  }
                },
                "Example 2": {
                  "summary": "Update everything for a list",
                  "description": "Update everything for a list",
                  "value": {
                    "name": "new name",
                    "description": "new description",
                    "notes": "new notes",
                    "published": false,
                    "awaitingApproval": true,
                    "internalUse": true
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordListProperties"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update the name of list",
                  "description": "Update the name of a list",
                  "value": {
                    "name": "new name",
                    "published": false,
                    "awaitingApproval": false,
                    "internalUse": false
                  }
                },
                "Example 2": {
                  "summary": "Update everything for a list",
                  "description": "Update everything for a list",
                  "value": {
                    "name": "new name",
                    "description": "new description",
                    "notes": "new notes",
                    "published": false,
                    "awaitingApproval": true,
                    "internalUse": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      },
      "delete": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Delete an existing list.",
        "operationId": "DeleteList",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/request-approval": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Update the status of an existing list to \"awaiting approval\".",
        "operationId": "RequestApproval",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/reset": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Update the status of an existing list to not be \"awaiting approval\".",
        "operationId": "ResetAwaitingApproval",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/publish": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Update the status of an existing list to \"published\". The list must be awaiting approval, and not already published.\r\nThe \"awaiting approval\" flag will be reset to false.",
        "operationId": "PublishList",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/unpublish": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Update the status of an existing list to \"unpublished\". The list must be published, and awaiting approval.\r\nThe \"awaiting approval\" flag will be reset to false.",
        "operationId": "UnpublishList",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/revise": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Creates a private copy of a list that can be revised.",
        "operationId": "ReviseList",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/copy": {
      "post": {
        "tags": [
          "ListManagement"
        ],
        "summary": "Creates a copy of the list and its items",
        "operationId": "CopyList",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListHeader"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/permissions/subscribe": {
      "post": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Subscribes the calling user to the specified list.",
        "operationId": "Subscribe",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermission"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/permissions/unsubscribe": {
      "post": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Unsubscribes the calling user from the specified list.",
        "operationId": "Unsubscribe",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermission"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          },
          "422": {
            "description": "Unsubscribe Failed"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/permissions": {
      "get": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Gets all permissions associated with the specified list.",
        "operationId": "GetPermissions",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermissionsInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermissionsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermissionsInfo"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list not found"
          }
        }
      },
      "post": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Sets permissions for the specified list. Returns a collection of the created/updated permissions.",
        "operationId": "SetPermissions",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUserPermissionsInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUserPermissionsInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUserPermissionsInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUserPermissionsInfo"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermissionsInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermissionsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUserPermissionsInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list or user or group not found"
          }
        }
      }
    },
    "/api/v1/lists/list/{listIdentifier}/permissions/user/{userIdentifier}": {
      "get": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Gets the permission flags of the permission associating the specified list with the specified user.",
        "operationId": "GetPermissionsForUser",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListPermissionFlags"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListPermissionFlags"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListPermissionFlags"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User or group, record list or record list permission not found"
          }
        }
      },
      "put": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "Sets the permission flags of the permission associating the specified list with the specified user.",
        "operationId": "SetPermissionsForUser",
        "parameters": [
          {
            "name": "listIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordListPermissionFlags"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordListPermissionFlags"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordListPermissionFlags"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordListPermissionFlags"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListPermissionFlags"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListPermissionFlags"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordListPermissionFlags"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Record list or user or group not found"
          }
        }
      }
    },
    "/v1alpha/metrics/jobs": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get a summary of jobs currently running or completed since the start time.",
        "operationId": "GetJobsSummary",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGetJobsSummaryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGetJobsSummaryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGetJobsSummaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/permission-categories": {
      "get": {
        "tags": [
          "Permission-Based Access Control"
        ],
        "summary": "Get all permission-based access control categories for the specified database.",
        "operationId": "GetPermissionCategories",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPermissionCategoriesInfo"
                },
                "example": {
                  "categories": [
                    {
                      "name": "Geo",
                      "guid": "3b240fb6-5324-4138-859e-55cb5d9054d9"
                    },
                    {
                      "name": "Sensitivity",
                      "guid": "19439325-6225-4c99-88c6-bef325fc973e"
                    },
                    {
                      "name": "Division",
                      "guid": "5f2def44-555e-4713-bf30-6b4eb03b4888"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          },
          "422": {
            "description": "MI not in permission-based access control mode"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/permission-categories/{category-guid}": {
      "get": {
        "tags": [
          "Permission-Based Access Control"
        ],
        "summary": "Get a permission-based access control category with a specified guid.",
        "operationId": "GetPermissionCategory",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "category-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPermissionCategory"
                },
                "example": {
                  "permissions": [
                    {
                      "name": "US",
                      "guid": "71db12b8-6de0-41e8-bb07-60baee037275"
                    },
                    {
                      "name": "EMEA",
                      "guid": "7a9e6b8d-f065-46b0-9643-5f3322b6ae65"
                    },
                    {
                      "name": "APAC",
                      "guid": "8afe636c-9be5-40ab-a3e5-ccd4b43566be"
                    }
                  ],
                  "name": "Geo",
                  "guid": "3b240fb6-5324-4138-859e-55cb5d9054d9"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or category not found"
          },
          "422": {
            "description": "MI not in permission-based access control mode"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/permission-categories/{category-guid}/permissions": {
      "get": {
        "tags": [
          "Permission-Based Access Control"
        ],
        "summary": "Get all permission-based access control permissions for the specified category.",
        "operationId": "GetPermissionsInCategory",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "category-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPermissionsInfo"
                },
                "example": {
                  "permissions": [
                    {
                      "name": "US",
                      "guid": "71db12b8-6de0-41e8-bb07-60baee037275"
                    },
                    {
                      "name": "EMEA",
                      "guid": "7a9e6b8d-f065-46b0-9643-5f3322b6ae65"
                    },
                    {
                      "name": "APAC",
                      "guid": "8afe636c-9be5-40ab-a3e5-ccd4b43566be"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or category not found"
          },
          "422": {
            "description": "MI not in permission-based access control mode"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/permission-categories/{category-guid}/permissions/{permission-guid}": {
      "get": {
        "tags": [
          "Permission-Based Access Control"
        ],
        "summary": "Get a permission-based access control permission with a given guid in the specified category.",
        "operationId": "GetPermissionInCategory",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "category-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "permission-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaPermission"
                },
                "example": {
                  "role": "DOMAIN\\US",
                  "description": "Members of the US role",
                  "setMessage": "Permission set",
                  "unsetMessage": "No permission set",
                  "name": "US",
                  "guid": "71db12b8-6de0-41e8-bb07-60baee037275"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or category or permission not found"
          },
          "422": {
            "description": "MI not in permission-based access control mode"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}": {
      "get": {
        "tags": [
          "Records - Record Histories"
        ],
        "summary": "Get a record history with a specified guid for a given database and table.",
        "operationId": "GetRecordHistoryFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistory"
                },
                "example": {
                  "isFolder": false,
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "parent": {
                    "guid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                  },
                  "recordVersions": [
                    {
                      "versionNumber": 1,
                      "versionState": "unversioned",
                      "name": "Alumino silicate - 1720",
                      "guid": "00000026-000e-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "subsets": [
                    {
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "guid": "ba22491d-b470-42cf-80d7-531ff81b1583"
                }
              }
            }
          },
          "404": {
            "description": "Database, table or record history not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}": {
      "get": {
        "tags": [
          "Records - Record Histories"
        ],
        "summary": "Get a record history with a specified guid for a given database.",
        "operationId": "GetRecordHistory",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistory"
                },
                "example": {
                  "isFolder": false,
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "parent": {
                    "guid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                  },
                  "recordVersions": [
                    {
                      "versionNumber": 1,
                      "versionState": "unversioned",
                      "name": "Alumino silicate - 1720",
                      "guid": "00000026-000e-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "subsets": [
                    {
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "guid": "ba22491d-b470-42cf-80d7-531ff81b1583"
                }
              }
            }
          },
          "404": {
            "description": "Database or record history not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories": {
      "post": {
        "tags": [
          "Records - Record Histories"
        ],
        "summary": "Create a new record history.",
        "operationId": "CreateRecordHistory",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Record History",
                  "description": "This example demonstrates how to create a new record history at the root of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordType": "record",
                    "name": "New Record Name"
                  }
                },
                "Example 2": {
                  "summary": "Record History with Tree Name and Parent",
                  "description": "This example demonstrates how to create a new record history with a specified tree name under the 'Alumino Silicate' folder (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "record",
                    "name": "Alumino Silicate - 1756",
                    "shortName": "1756",
                    "parent": {
                      "guid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                    }
                  }
                },
                "Example 3": {
                  "summary": "Record History for a 'folder' with specified guid",
                  "description": "This example demonstrates how to create a new 'folder' with no 'tree name' (so is set to the 'full name') and a specified guid under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "folder",
                    "name": "Borosilicate",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "guid": "154943e6-ee97-47a1-8566-2f2a2003dee7"
                  }
                },
                "Example 4": {
                  "summary": "Record History with specified color",
                  "description": "This example demonstrates how to create a new 'folder' with a specified color under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "folder",
                    "name": "Borosilicate",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "recordColor": "lime"
                  }
                },
                "Example 5": {
                  "summary": "Record History for a 'generic'",
                  "description": "This example demonstrates how to create a new 'generic' under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "generic",
                    "name": "Soda-zinc",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Record History",
                  "description": "This example demonstrates how to create a new record history at the root of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordType": "record",
                    "name": "New Record Name"
                  }
                },
                "Example 2": {
                  "summary": "Record History with Tree Name and Parent",
                  "description": "This example demonstrates how to create a new record history with a specified tree name under the 'Alumino Silicate' folder (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "record",
                    "name": "Alumino Silicate - 1756",
                    "shortName": "1756",
                    "parent": {
                      "guid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                    }
                  }
                },
                "Example 3": {
                  "summary": "Record History for a 'folder' with specified guid",
                  "description": "This example demonstrates how to create a new 'folder' with no 'tree name' (so is set to the 'full name') and a specified guid under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "folder",
                    "name": "Borosilicate",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "guid": "154943e6-ee97-47a1-8566-2f2a2003dee7"
                  }
                },
                "Example 4": {
                  "summary": "Record History with specified color",
                  "description": "This example demonstrates how to create a new 'folder' with a specified color under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "folder",
                    "name": "Borosilicate",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "recordColor": "lime"
                  }
                },
                "Example 5": {
                  "summary": "Record History for a 'generic'",
                  "description": "This example demonstrates how to create a new 'generic' under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "generic",
                    "name": "Soda-zinc",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Record History",
                  "description": "This example demonstrates how to create a new record history at the root of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordType": "record",
                    "name": "New Record Name"
                  }
                },
                "Example 2": {
                  "summary": "Record History with Tree Name and Parent",
                  "description": "This example demonstrates how to create a new record history with a specified tree name under the 'Alumino Silicate' folder (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "record",
                    "name": "Alumino Silicate - 1756",
                    "shortName": "1756",
                    "parent": {
                      "guid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                    }
                  }
                },
                "Example 3": {
                  "summary": "Record History for a 'folder' with specified guid",
                  "description": "This example demonstrates how to create a new 'folder' with no 'tree name' (so is set to the 'full name') and a specified guid under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "folder",
                    "name": "Borosilicate",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "guid": "154943e6-ee97-47a1-8566-2f2a2003dee7"
                  }
                },
                "Example 4": {
                  "summary": "Record History with specified color",
                  "description": "This example demonstrates how to create a new 'folder' with a specified color under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "folder",
                    "name": "Borosilicate",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "recordColor": "lime"
                  }
                },
                "Example 5": {
                  "summary": "Record History for a 'generic'",
                  "description": "This example demonstrates how to create a new 'generic' under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "generic",
                    "name": "Soda-zinc",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Record History",
                  "description": "This example demonstrates how to create a new record history at the root of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordType": "record",
                    "name": "New Record Name"
                  }
                },
                "Example 2": {
                  "summary": "Record History with Tree Name and Parent",
                  "description": "This example demonstrates how to create a new record history with a specified tree name under the 'Alumino Silicate' folder (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "record",
                    "name": "Alumino Silicate - 1756",
                    "shortName": "1756",
                    "parent": {
                      "guid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                    }
                  }
                },
                "Example 3": {
                  "summary": "Record History for a 'folder' with specified guid",
                  "description": "This example demonstrates how to create a new 'folder' with no 'tree name' (so is set to the 'full name') and a specified guid under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "folder",
                    "name": "Borosilicate",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "guid": "154943e6-ee97-47a1-8566-2f2a2003dee7"
                  }
                },
                "Example 4": {
                  "summary": "Record History with specified color",
                  "description": "This example demonstrates how to create a new 'folder' with a specified color under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "folder",
                    "name": "Borosilicate",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "recordColor": "lime"
                  }
                },
                "Example 5": {
                  "summary": "Record History for a 'generic'",
                  "description": "This example demonstrates how to create a new 'generic' under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "recordType": "generic",
                    "name": "Soda-zinc",
                    "parent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistory"
                },
                "example": {
                  "isFolder": false,
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "parent": {
                    "guid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                  },
                  "recordVersions": [
                    {
                      "versionNumber": 1,
                      "versionState": "unversioned",
                      "name": "New Alumino Silicate Record",
                      "guid": "1c906ece-ee7b-4e9e-bb28-db8643285c6c"
                    }
                  ],
                  "subsets": [],
                  "guid": "4cf20ad4-80ee-4e3e-8fc9-b9b7e5cfc6ec"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}:move": {
      "post": {
        "tags": [
          "Records - Record Histories"
        ],
        "summary": "Move a record history to be under a new parent.",
        "operationId": "MoveRecordHistoryInTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Record History",
                  "description": "This example demonstrates how to move an existing record history to under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Move Record History to be directly under the Table.",
                  "description": "In order to move an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {}
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Record History",
                  "description": "This example demonstrates how to move an existing record history to under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Move Record History to be directly under the Table.",
                  "description": "In order to move an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {}
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Record History",
                  "description": "This example demonstrates how to move an existing record history to under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Move Record History to be directly under the Table.",
                  "description": "In order to move an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {}
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Record History",
                  "description": "This example demonstrates how to move an existing record history to under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Move Record History to be directly under the Table.",
                  "description": "In order to move an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistory"
                },
                "example": {
                  "isFolder": false,
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "parent": {
                    "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                  },
                  "recordVersions": [
                    {
                      "versionNumber": 1,
                      "versionState": "unversioned",
                      "name": "Alumino silicate - 1720",
                      "guid": "00000026-000e-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "subsets": [
                    {
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "guid": "ba22491d-b470-42cf-80d7-531ff81b1583"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistoryMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent is not a folder.",
                    "value": {
                      "message": "Cannot move record history with GUID 'ba22491d-b470-42cf-80d7-531ff81b1583'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '17877254-3a26-4a28-94d6-9f6be164914c') is not a folder.",
                          "reason": "ParentNotAFolder"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "New parent is not in the same table.",
                    "value": {
                      "message": "Cannot move record history with GUID '0a0a07f6-20d8-4292-a275-a7385398d8a2'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '5a842e54-e143-45f5-aec8-18fb84f4fe03') is not in the same table.",
                          "reason": "ParentNotInSameTable"
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "The 'short name' of the record to be moved is not unique under the new parent.",
                    "value": {
                      "message": "Cannot move record history with GUID 'b39060d9-ac86-48dc-9e75-7ea241b7a556'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "A record with the short name 'Sheet' already exists in the parent folder.",
                          "reason": "ShortNameExistsInFolder"
                        }
                      ]
                    }
                  },
                  "Example 4": {
                    "summary": "New parent is withdrawn.",
                    "value": {
                      "message": "Cannot move record history with GUID 'ce294339-e59d-4be1-a96c-f9e92adb71ac'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '4afa8a76-cd32-4835-be9d-31756bb9b7fb') is withdrawn or has a withdrawn ancestor.",
                          "reason": "ParentIsWithdrawn"
                        }
                      ]
                    }
                  },
                  "Example 5": {
                    "summary": "The new parent is a descendant of the record history to be moved so would cause a circular reference in the hierarchy.",
                    "value": {
                      "message": "Cannot move record history with GUID '5a842e54-e143-45f5-aec8-18fb84f4fe03'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') is a descendant so will cause a circular reference.",
                          "reason": "ParentIsADescendant"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or record history not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}:move": {
      "post": {
        "tags": [
          "Records - Record Histories"
        ],
        "summary": "Move a record history to be under a new parent.",
        "operationId": "MoveRecordHistory",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveRecordHistory"
              },
              "examples": {
                "Example 3": {
                  "summary": "Move Record History",
                  "description": "This example demonstrates how to move an existing record history to under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Move Record History to be directly under the Table.",
                  "description": "In order to move an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {}
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveRecordHistory"
              },
              "examples": {
                "Example 3": {
                  "summary": "Move Record History",
                  "description": "This example demonstrates how to move an existing record history to under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Move Record History to be directly under the Table.",
                  "description": "In order to move an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {}
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveRecordHistory"
              },
              "examples": {
                "Example 3": {
                  "summary": "Move Record History",
                  "description": "This example demonstrates how to move an existing record history to under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Move Record History to be directly under the Table.",
                  "description": "In order to move an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {}
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveRecordHistory"
              },
              "examples": {
                "Example 3": {
                  "summary": "Move Record History",
                  "description": "This example demonstrates how to move an existing record history to under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Move Record History to be directly under the Table.",
                  "description": "In order to move an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistory"
                },
                "example": {
                  "isFolder": false,
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "parent": {
                    "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                  },
                  "recordVersions": [
                    {
                      "versionNumber": 1,
                      "versionState": "unversioned",
                      "name": "Alumino silicate - 1720",
                      "guid": "00000026-000e-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "subsets": [
                    {
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "guid": "ba22491d-b470-42cf-80d7-531ff81b1583"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistoryMoveException"
                },
                "examples": {
                  "Example 6": {
                    "summary": "New parent is not a folder.",
                    "value": {
                      "message": "Cannot move record history with GUID 'ba22491d-b470-42cf-80d7-531ff81b1583'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '17877254-3a26-4a28-94d6-9f6be164914c') is not a folder.",
                          "reason": "ParentNotAFolder"
                        }
                      ]
                    }
                  },
                  "Example 7": {
                    "summary": "New parent is not in the same table.",
                    "value": {
                      "message": "Cannot move record history with GUID '0a0a07f6-20d8-4292-a275-a7385398d8a2'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '5a842e54-e143-45f5-aec8-18fb84f4fe03') is not in the same table.",
                          "reason": "ParentNotInSameTable"
                        }
                      ]
                    }
                  },
                  "Example 8": {
                    "summary": "The 'short name' of the record to be moved is not unique under the new parent.",
                    "value": {
                      "message": "Cannot move record history with GUID 'b39060d9-ac86-48dc-9e75-7ea241b7a556'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "A record with the short name 'Sheet' already exists in the parent folder.",
                          "reason": "ShortNameExistsInFolder"
                        }
                      ]
                    }
                  },
                  "Example 9": {
                    "summary": "New parent is withdrawn.",
                    "value": {
                      "message": "Cannot move record history with GUID 'ce294339-e59d-4be1-a96c-f9e92adb71ac'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '4afa8a76-cd32-4835-be9d-31756bb9b7fb') is withdrawn or has a withdrawn ancestor.",
                          "reason": "ParentIsWithdrawn"
                        }
                      ]
                    }
                  },
                  "Example 10": {
                    "summary": "The new parent is a descendant of the record history to be moved so would cause a circular reference in the hierarchy.",
                    "value": {
                      "message": "Cannot move record history with GUID '5a842e54-e143-45f5-aec8-18fb84f4fe03'.",
                      "code": "recordHistoryMove",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = 'ba22491d-b470-42cf-80d7-531ff81b1583') is a descendant so will cause a circular reference.",
                          "reason": "ParentIsADescendant"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or record history not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}:copy": {
      "post": {
        "tags": [
          "Records - Record Histories"
        ],
        "summary": "Make a copy of a record history.",
        "operationId": "CopyRecordHistoryInTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCopyRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Copy Record History - no name change - add new record to the new parent's subsets",
                  "description": "This example demonstrates how to copy an existing record history, by default the 'name' and 'short name' are not changed. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromParent"
                  }
                },
                "Example 2": {
                  "summary": "Copy Record History - with name change - add new record to the original record's subsets",
                  "description": "This example demonstrates how to copy an existing record history and change the 'short name' of the newly created record version. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromOriginalRecord",
                    "newShortName": "Short name for new record"
                  }
                },
                "Example 3": {
                  "summary": "Copy Record History to be directly under the Table - don't copy any subsets.",
                  "description": "In order to copy an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {
                    "subsetOption": "none",
                    "newShortName": "Short name for new record"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCopyRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Copy Record History - no name change - add new record to the new parent's subsets",
                  "description": "This example demonstrates how to copy an existing record history, by default the 'name' and 'short name' are not changed. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromParent"
                  }
                },
                "Example 2": {
                  "summary": "Copy Record History - with name change - add new record to the original record's subsets",
                  "description": "This example demonstrates how to copy an existing record history and change the 'short name' of the newly created record version. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromOriginalRecord",
                    "newShortName": "Short name for new record"
                  }
                },
                "Example 3": {
                  "summary": "Copy Record History to be directly under the Table - don't copy any subsets.",
                  "description": "In order to copy an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {
                    "subsetOption": "none",
                    "newShortName": "Short name for new record"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCopyRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Copy Record History - no name change - add new record to the new parent's subsets",
                  "description": "This example demonstrates how to copy an existing record history, by default the 'name' and 'short name' are not changed. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromParent"
                  }
                },
                "Example 2": {
                  "summary": "Copy Record History - with name change - add new record to the original record's subsets",
                  "description": "This example demonstrates how to copy an existing record history and change the 'short name' of the newly created record version. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromOriginalRecord",
                    "newShortName": "Short name for new record"
                  }
                },
                "Example 3": {
                  "summary": "Copy Record History to be directly under the Table - don't copy any subsets.",
                  "description": "In order to copy an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {
                    "subsetOption": "none",
                    "newShortName": "Short name for new record"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCopyRecordHistory"
              },
              "examples": {
                "Example 1": {
                  "summary": "Copy Record History - no name change - add new record to the new parent's subsets",
                  "description": "This example demonstrates how to copy an existing record history, by default the 'name' and 'short name' are not changed. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromParent"
                  }
                },
                "Example 2": {
                  "summary": "Copy Record History - with name change - add new record to the original record's subsets",
                  "description": "This example demonstrates how to copy an existing record history and change the 'short name' of the newly created record version. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromOriginalRecord",
                    "newShortName": "Short name for new record"
                  }
                },
                "Example 3": {
                  "summary": "Copy Record History to be directly under the Table - don't copy any subsets.",
                  "description": "In order to copy an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {
                    "subsetOption": "none",
                    "newShortName": "Short name for new record"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistory"
                },
                "example": {
                  "isFolder": false,
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "parent": {
                    "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                  },
                  "recordVersions": [
                    {
                      "versionNumber": 1,
                      "versionState": "unversioned",
                      "name": "Alumino silicate - 1720",
                      "guid": "00000026-000e-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "subsets": [
                    {
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "guid": "befc6b91-951c-4e7f-a3c9-44b3e764f09e"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistoryCopyException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent is not a folder.",
                    "value": {
                      "message": "Cannot copy record history with GUID 'ba22491d-b470-42cf-80d7-531ff81b1583'.",
                      "code": "recordHistoryCopy",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '17877254-3a26-4a28-94d6-9f6be164914c') is not a folder.",
                          "reason": "ParentNotAFolder"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "New parent is not in the same table.",
                    "value": {
                      "message": "Cannot copy record history with GUID '0a0a07f6-20d8-4292-a275-a7385398d8a2'.",
                      "code": "recordHistoryCopy",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '5a842e54-e143-45f5-aec8-18fb84f4fe03') is not in the same table.",
                          "reason": "ParentNotInSameTable"
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "The 'short name' of the record to be copied is not unique under the new parent.",
                    "value": {
                      "message": "Cannot copy record history with GUID 'b39060d9-ac86-48dc-9e75-7ea241b7a556'.",
                      "code": "recordHistoryCopy",
                      "errors": [
                        {
                          "message": "A record with the short name 'Sheet' already exists in the parent folder.",
                          "reason": "ShortNameExistsInFolder"
                        }
                      ]
                    }
                  },
                  "Example 4": {
                    "summary": "New parent is withdrawn.",
                    "value": {
                      "message": "Cannot copy record history with GUID 'ce294339-e59d-4be1-a96c-f9e92adb71ac'.",
                      "code": "recordHistoryCopy",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '4afa8a76-cd32-4835-be9d-31756bb9b7fb') is withdrawn or has a withdrawn ancestor.",
                          "reason": "ParentIsWithdrawn"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or record history not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}:copy": {
      "post": {
        "tags": [
          "Records - Record Histories"
        ],
        "summary": "Make a copy of a record history.",
        "operationId": "CopyRecordHistory",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCopyRecordHistory"
              },
              "examples": {
                "Example 4": {
                  "summary": "Copy Record History - no name change - add new record to the new parent's subsets",
                  "description": "This example demonstrates how to copy an existing record history, by default the 'name' and 'short name' are not changed. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromParent"
                  }
                },
                "Example 5": {
                  "summary": "Copy Record History - with name change - add new record to the original record's subsets",
                  "description": "This example demonstrates how to copy an existing record history and change the 'short name' of the newly created record version. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromOriginalRecord",
                    "newShortName": "Short name for new record"
                  }
                },
                "Example 6": {
                  "summary": "Copy Record History to be directly under the Table - don't copy any subsets.",
                  "description": "In order to copy an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {
                    "subsetOption": "none",
                    "newShortName": "Short name for new record"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCopyRecordHistory"
              },
              "examples": {
                "Example 4": {
                  "summary": "Copy Record History - no name change - add new record to the new parent's subsets",
                  "description": "This example demonstrates how to copy an existing record history, by default the 'name' and 'short name' are not changed. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromParent"
                  }
                },
                "Example 5": {
                  "summary": "Copy Record History - with name change - add new record to the original record's subsets",
                  "description": "This example demonstrates how to copy an existing record history and change the 'short name' of the newly created record version. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromOriginalRecord",
                    "newShortName": "Short name for new record"
                  }
                },
                "Example 6": {
                  "summary": "Copy Record History to be directly under the Table - don't copy any subsets.",
                  "description": "In order to copy an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {
                    "subsetOption": "none",
                    "newShortName": "Short name for new record"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCopyRecordHistory"
              },
              "examples": {
                "Example 4": {
                  "summary": "Copy Record History - no name change - add new record to the new parent's subsets",
                  "description": "This example demonstrates how to copy an existing record history, by default the 'name' and 'short name' are not changed. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromParent"
                  }
                },
                "Example 5": {
                  "summary": "Copy Record History - with name change - add new record to the original record's subsets",
                  "description": "This example demonstrates how to copy an existing record history and change the 'short name' of the newly created record version. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromOriginalRecord",
                    "newShortName": "Short name for new record"
                  }
                },
                "Example 6": {
                  "summary": "Copy Record History to be directly under the Table - don't copy any subsets.",
                  "description": "In order to copy an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {
                    "subsetOption": "none",
                    "newShortName": "Short name for new record"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCopyRecordHistory"
              },
              "examples": {
                "Example 4": {
                  "summary": "Copy Record History - no name change - add new record to the new parent's subsets",
                  "description": "This example demonstrates how to copy an existing record history, by default the 'name' and 'short name' are not changed. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromParent"
                  }
                },
                "Example 5": {
                  "summary": "Copy Record History - with name change - add new record to the original record's subsets",
                  "description": "This example demonstrates how to copy an existing record history and change the 'short name' of the newly created record version. The the new record history is created under the 'Glasses' folder (guid = f92315e2-f836-4c2e-aba1-6d8a1a49e8a3) of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "newParent": {
                      "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                    },
                    "subsetOption": "fromOriginalRecord",
                    "newShortName": "Short name for new record"
                  }
                },
                "Example 6": {
                  "summary": "Copy Record History to be directly under the Table - don't copy any subsets.",
                  "description": "In order to copy an existing record history to be at the top of the 'record tree' i.e directly under the 'Table' then do not specify the 'NewParent' property.",
                  "value": {
                    "subsetOption": "none",
                    "newShortName": "Short name for new record"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistory"
                },
                "example": {
                  "isFolder": false,
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "parent": {
                    "guid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3"
                  },
                  "recordVersions": [
                    {
                      "versionNumber": 1,
                      "versionState": "unversioned",
                      "name": "Alumino silicate - 1720",
                      "guid": "00000026-000e-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "subsets": [
                    {
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "guid": "c04bbf86-550b-40bf-8e53-75c1576a04c0"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordHistoryCopyException"
                },
                "examples": {
                  "Example 5": {
                    "summary": "New parent is not a folder.",
                    "value": {
                      "message": "Cannot copy record history with GUID 'ba22491d-b470-42cf-80d7-531ff81b1583'.",
                      "code": "recordHistoryCopy",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '17877254-3a26-4a28-94d6-9f6be164914c') is not a folder.",
                          "reason": "ParentNotAFolder"
                        }
                      ]
                    }
                  },
                  "Example 6": {
                    "summary": "New parent is not in the same table.",
                    "value": {
                      "message": "Cannot copy record history with GUID '0a0a07f6-20d8-4292-a275-a7385398d8a2'.",
                      "code": "recordHistoryCopy",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '5a842e54-e143-45f5-aec8-18fb84f4fe03') is not in the same table.",
                          "reason": "ParentNotInSameTable"
                        }
                      ]
                    }
                  },
                  "Example 7": {
                    "summary": "The 'short name' of the record to be copied is not unique under the new parent.",
                    "value": {
                      "message": "Cannot copy record history with GUID 'b39060d9-ac86-48dc-9e75-7ea241b7a556'.",
                      "code": "recordHistoryCopy",
                      "errors": [
                        {
                          "message": "A record with the short name 'Sheet' already exists in the parent folder.",
                          "reason": "ShortNameExistsInFolder"
                        }
                      ]
                    }
                  },
                  "Example 8": {
                    "summary": "New parent is withdrawn.",
                    "value": {
                      "message": "Cannot copy record history with GUID 'ce294339-e59d-4be1-a96c-f9e92adb71ac'.",
                      "code": "recordHistoryCopy",
                      "errors": [
                        {
                          "message": "New parent record history (GUID = '4afa8a76-cd32-4835-be9d-31756bb9b7fb') is withdrawn or has a withdrawn ancestor.",
                          "reason": "ParentIsWithdrawn"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or record history not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/latest": {
      "get": {
        "tags": [
          "Records - Record Histories"
        ],
        "summary": "Get the latest record version for a record history for a given database and table.",
        "operationId": "GetLatestRecordVersionFromTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordVersion"
                },
                "example": {
                  "recordHistory": {
                    "guid": "ba22491d-b470-42cf-80d7-531ff81b1583"
                  },
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "databaseKey": "MI_TRAINING",
                  "createdByUser": "A User",
                  "createdDate": "2018-01-01T00:00:00+00:00",
                  "lastModifiedByUser": "A User",
                  "lastModifiedDate": "2018-01-02T00:00:00+00:00",
                  "recordType": "record",
                  "shortName": "Alumino silicate - 1720",
                  "recordColor": "fuchsia",
                  "userCapabilities": {
                    "canWrite": true,
                    "canModify": true,
                    "canRelease": false,
                    "canGetModifiableVersion": false,
                    "canWithdraw": false,
                    "canDelete": true
                  },
                  "versionNumber": 1,
                  "versionState": "unversioned",
                  "name": "Alumino silicate - 1720",
                  "guid": "00000026-000e-4fff-8fff-dd92ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database, table or record history not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/record-histories/{record-history-guid}/latest": {
      "get": {
        "tags": [
          "Records - Record Histories"
        ],
        "summary": "Get the latest record version for a record history for a given database.",
        "operationId": "GetLatestRecordVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordVersion"
                },
                "example": {
                  "recordHistory": {
                    "guid": "ba22491d-b470-42cf-80d7-531ff81b1583"
                  },
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "databaseKey": "MI_TRAINING",
                  "createdByUser": "A User",
                  "createdDate": "2018-01-01T00:00:00+00:00",
                  "lastModifiedByUser": "A User",
                  "lastModifiedDate": "2018-01-02T00:00:00+00:00",
                  "recordType": "record",
                  "shortName": "Alumino silicate - 1720",
                  "recordColor": "fuchsia",
                  "userCapabilities": {
                    "canWrite": true,
                    "canModify": true,
                    "canRelease": false,
                    "canGetModifiableVersion": false,
                    "canWithdraw": false,
                    "canDelete": true
                  },
                  "versionNumber": 1,
                  "versionState": "unversioned",
                  "name": "Alumino silicate - 1720",
                  "guid": "00000026-000e-4fff-8fff-dd92ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database or record history not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}": {
      "get": {
        "tags": [
          "Records - Record Versions"
        ],
        "summary": "Get a record version with a specified guid for a given database, table and record history.",
        "operationId": "GetRecordVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordVersion"
                },
                "example": {
                  "recordHistory": {
                    "guid": "ba22491d-b470-42cf-80d7-531ff81b1583"
                  },
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": false,
                    "name": "MaterialUniverse",
                    "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                  },
                  "databaseKey": "MI_TRAINING",
                  "createdByUser": "A User",
                  "createdDate": "2018-01-01T00:00:00+00:00",
                  "lastModifiedByUser": "A User",
                  "lastModifiedDate": "2018-01-02T00:00:00+00:00",
                  "recordType": "record",
                  "shortName": "Alumino silicate - 1720",
                  "recordColor": "fuchsia",
                  "userCapabilities": {
                    "canWrite": true,
                    "canModify": true,
                    "canRelease": false,
                    "canGetModifiableVersion": false,
                    "canWithdraw": false,
                    "canDelete": true
                  },
                  "versionNumber": 1,
                  "versionState": "unversioned",
                  "name": "Alumino silicate - 1720",
                  "guid": "00000026-000e-4fff-8fff-dd92ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database, table, record history or record version not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Records - Record Versions"
        ],
        "summary": "Deletes the record version.  If the table is version controlled, only the current unreleased record version can be deleted.",
        "operationId": "DeleteRecordVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request. Table is version controlled and record version is not unreleased."
          },
          "404": {
            "description": "Database, table, record history or record version not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}:release": {
      "post": {
        "tags": [
          "Records - Record Versions"
        ],
        "summary": "Releases the record version.  Must be an unreleased record version.",
        "operationId": "ReleaseRecordVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordVersion"
                },
                "example": {
                  "recordHistory": {
                    "guid": "0a0a07f6-20d8-4292-a275-a7385398d8a2"
                  },
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": true,
                    "name": "Restricted Substances",
                    "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                  },
                  "databaseKey": "MI_TRAINING",
                  "createdByUser": "A User",
                  "createdDate": "2018-01-01T00:00:00+00:00",
                  "lastModifiedByUser": "A User",
                  "lastModifiedDate": "2018-01-02T00:00:00+00:00",
                  "recordType": "record",
                  "shortName": "Arsenic trioxide [1327-53-3]",
                  "recordColor": "red",
                  "userCapabilities": {
                    "canWrite": true,
                    "canModify": false,
                    "canRelease": false,
                    "canGetModifiableVersion": true,
                    "canWithdraw": true,
                    "canDelete": false
                  },
                  "versionNumber": 1,
                  "versionState": "released",
                  "name": "Arsenic trioxide [1327-53-3]",
                  "guid": "e1a72a7e-155e-47f9-b6c9-285fd5d3288a"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Record version state is not unreleased, or table is not version controlled, or parent is not released.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaReleaseRecordVersionControlException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid version state.",
                    "description": "Only unreleased record versions can be released.",
                    "value": {
                      "message": "Cannot release record version with GUID 'e1a72a7e-155e-47f9-b6c9-285fd5d3288a'.",
                      "code": "releaseRecordVersionControl",
                      "errors": [
                        {
                          "message": "Invalid version state 'Released'.",
                          "reason": "invalidVersionState",
                          "versionState": "released"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Table is not version controlled.",
                    "value": {
                      "message": "Cannot release record version with GUID '00000026-000e-4fff-8fff-dd92ffff0000'.",
                      "code": "releaseRecordVersionControl",
                      "errors": [
                        {
                          "message": "Table is not version controlled.",
                          "reason": "notVersioned"
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "Parent is not released.",
                    "value": {
                      "message": "Cannot release record version with GUID 'a38606a2-b210-4d2b-9295-661fa62b9175'.",
                      "code": "releaseRecordVersionControl",
                      "errors": [
                        {
                          "message": "Tree parent is not in a valid state to perform this operation.",
                          "reason": "invalidParentState"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history or record version not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}:get-modifiable-version": {
      "post": {
        "tags": [
          "Records - Record Versions"
        ],
        "summary": "Gets the latest modifiable record version, or creates a new one if none exists. The record version must be the latest version, and must be either released or withdrawn.",
        "operationId": "GetModifiableRecordVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordVersion"
                },
                "example": {
                  "recordHistory": {
                    "guid": "0a0a07f6-20d8-4292-a275-a7385398d8a2"
                  },
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": true,
                    "name": "Restricted Substances",
                    "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                  },
                  "databaseKey": "MI_TRAINING",
                  "createdByUser": "A User",
                  "createdDate": "2018-01-01T00:00:00+00:00",
                  "lastModifiedByUser": "A User",
                  "lastModifiedDate": "2018-01-02T00:00:00+00:00",
                  "recordType": "record",
                  "shortName": "Arsenic trioxide [1327-53-3]",
                  "recordColor": "red",
                  "userCapabilities": {
                    "canWrite": true,
                    "canModify": true,
                    "canRelease": true,
                    "canGetModifiableVersion": false,
                    "canWithdraw": false,
                    "canDelete": true
                  },
                  "versionNumber": 2,
                  "versionState": "unreleased",
                  "name": "Arsenic trioxide [1327-53-3]",
                  "guid": "e1a72a7e-155e-47f9-b6c9-285fd5d3288a"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Record version state is not the latest version, is not released or withdrawn, or table is not version controlled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaGetModifiableRecordVersionControlException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid version state.",
                    "description": "A new version can only be created from the latest released or withdrawn record version.",
                    "value": {
                      "message": "Cannot create a new version from the record version with GUID 'e1a72a7e-155e-47f9-b6c9-285fd5d3288a'.",
                      "code": "getModifiableRecordVersionControl",
                      "errors": [
                        {
                          "message": "Invalid version state 'Superseded'.",
                          "reason": "invalidVersionState",
                          "versionState": "superseded"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Table is not version controlled.",
                    "value": {
                      "message": "Cannot create a new version from the record version with GUID '00000026-000e-4fff-8fff-dd92ffff0000'.",
                      "code": "getModifiableRecordVersionControl",
                      "errors": [
                        {
                          "message": "Table is not version controlled.",
                          "reason": "notVersioned"
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "Record version is not the latest version.",
                    "value": {
                      "message": "Cannot create a new version from the record version with GUID '6402236a-a150-4e65-8eac-2e4c7b0291e9'.",
                      "code": "getModifiableRecordVersionControl",
                      "errors": [
                        {
                          "message": "There is a newer version.",
                          "reason": "notTheLatestVersion",
                          "newerVersion": {
                            "versionNumber": 2,
                            "versionState": "unreleased",
                            "name": "Arsenic trioxide [1327-53-3] - new version",
                            "guid": "b5c07d72-b342-411a-8ddd-1723511b5e00"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, record history or record version not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-histories/{record-history-guid}/record-versions/{record-version-guid}:withdraw": {
      "post": {
        "tags": [
          "Records - Record Versions"
        ],
        "summary": "Withdraws the record version.  Must be a released record version.",
        "operationId": "WithdrawRecordVersion",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-history-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-version-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordVersion"
                },
                "example": {
                  "recordHistory": {
                    "guid": "0a0a07f6-20d8-4292-a275-a7385398d8a2"
                  },
                  "table": {
                    "databaseKey": "MI_TRAINING",
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "isVersioned": true,
                    "name": "Restricted Substances",
                    "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                  },
                  "databaseKey": "MI_TRAINING",
                  "createdByUser": "A User",
                  "createdDate": "2018-01-01T00:00:00+00:00",
                  "lastModifiedByUser": "A User",
                  "lastModifiedDate": "2018-01-02T00:00:00+00:00",
                  "recordType": "record",
                  "shortName": "Arsenic trioxide [1327-53-3]",
                  "recordColor": "red",
                  "userCapabilities": {
                    "canWrite": true,
                    "canModify": false,
                    "canRelease": false,
                    "canGetModifiableVersion": true,
                    "canWithdraw": false,
                    "canDelete": false
                  },
                  "versionNumber": 1,
                  "versionState": "withdrawn",
                  "name": "Arsenic trioxide [1327-53-3]",
                  "guid": "e1a72a7e-155e-47f9-b6c9-285fd5d3288a"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Record version state is not released, or table is not version controlled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaWithdrawRecordVersionControlException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid version state.",
                    "description": "Only released record versions can be withdrawn.",
                    "value": {
                      "message": "Cannot withdraw record version with GUID 'e1a72a7e-155e-47f9-b6c9-285fd5d3288a'.",
                      "code": "withdrawRecordVersionControl",
                      "errors": [
                        {
                          "message": "Invalid version state 'Unreleased'.",
                          "reason": "invalidVersionState",
                          "versionState": "unreleased"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Table is not version controlled.",
                    "value": {
                      "message": "Cannot withdraw record version with GUID '00000026-000e-4fff-8fff-dd92ffff0000'.",
                      "code": "withdrawRecordVersionControl",
                      "errors": [
                        {
                          "message": "Table is not version controlled.",
                          "reason": "notVersioned"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table, record history or record version not found"
          }
        }
      }
    },
    "/v1alpha/schema/mi-version": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "Returns the currently running MI version to the caller.",
        "operationId": "GetVersion",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaMiVersion"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/schema:resolve-link-targets": {
      "post": {
        "tags": [
          "Schema"
        ],
        "summary": "Gets all target tables that match the provided link target, for each target.\r\nThere could be several matches or no matches for each link target.\r\nFor example if two databases are loaded with the same databaseGuid and the databaseVersionGuid isn't specified,\r\nor if the databaseGuid and databaseVersionGuid are not specified and the tableGuid matches in several databases.\r\nThere could be no matches if the target database is not loaded.",
        "operationId": "ResolveLinkTargets",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaResolveLinkTargetsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "All GUIDs specified",
                  "description": "This example demonstrates how to resolve a link target that targets the MaterialUniverse table, when all GUIDs are specified.",
                  "value": {
                    "linkTargets": [
                      {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Optional GUIDs not specified",
                  "description": "This example demonstrates how to resolve a link target that targets the MaterialUniverse table, when some GUIDs are not specified.If the DatabaseVersionGuid is not specified, the link target could resolve to more than one table if there are other database loaded that match the criteria.",
                  "value": {
                    "linkTargets": [
                      {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      {
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaResolveLinkTargetsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "All GUIDs specified",
                  "description": "This example demonstrates how to resolve a link target that targets the MaterialUniverse table, when all GUIDs are specified.",
                  "value": {
                    "linkTargets": [
                      {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Optional GUIDs not specified",
                  "description": "This example demonstrates how to resolve a link target that targets the MaterialUniverse table, when some GUIDs are not specified.If the DatabaseVersionGuid is not specified, the link target could resolve to more than one table if there are other database loaded that match the criteria.",
                  "value": {
                    "linkTargets": [
                      {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      {
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaResolveLinkTargetsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "All GUIDs specified",
                  "description": "This example demonstrates how to resolve a link target that targets the MaterialUniverse table, when all GUIDs are specified.",
                  "value": {
                    "linkTargets": [
                      {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Optional GUIDs not specified",
                  "description": "This example demonstrates how to resolve a link target that targets the MaterialUniverse table, when some GUIDs are not specified.If the DatabaseVersionGuid is not specified, the link target could resolve to more than one table if there are other database loaded that match the criteria.",
                  "value": {
                    "linkTargets": [
                      {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      {
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaResolveLinkTargetsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "All GUIDs specified",
                  "description": "This example demonstrates how to resolve a link target that targets the MaterialUniverse table, when all GUIDs are specified.",
                  "value": {
                    "linkTargets": [
                      {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Optional GUIDs not specified",
                  "description": "This example demonstrates how to resolve a link target that targets the MaterialUniverse table, when some GUIDs are not specified.If the DatabaseVersionGuid is not specified, the link target could resolve to more than one table if there are other database loaded that match the criteria.",
                  "value": {
                    "linkTargets": [
                      {
                        "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      {
                        "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      {
                        "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaResolveLinkTargetsInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Resolved links",
                    "description": "This example shows results from resolving two link targets.",
                    "value": {
                      "resolvedLinkTargets": [
                        {
                          "linkTarget": {
                            "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                            "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "tables": [
                            {
                              "databaseKey": "MI_TRAINING",
                              "isHiddenFromBrowse": false,
                              "isHiddenFromSearch": false,
                              "isVersioned": false,
                              "displayNames": {
                                "en": "MaterialUniverse English Display Name",
                                "fr": "MaterialUniverse French Display Name"
                              },
                              "name": "MaterialUniverse",
                              "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                            }
                          ]
                        },
                        {
                          "linkTarget": {
                            "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                            "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                          },
                          "tables": [
                            {
                              "databaseKey": "MI_TRAINING",
                              "isHiddenFromBrowse": false,
                              "isHiddenFromSearch": false,
                              "isVersioned": false,
                              "displayNames": {
                                "en": "ProcessUniverse English Display Name",
                                "fr": "ProcessUniverse French Display Name"
                              },
                              "name": "ProcessUniverse",
                              "guid": "00003248-0011-4fff-8fff-0000ffff0000"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Resolved links with multiple targets",
                    "description": "In this example, the first link target resolves to two copies of MaterialUniverse, each in different databases. This could happen if both databases have the same databaseGuid and the databaseVersionGuid was not specified in the request;or if the databaseGuid and databaseVersionGuid were not specified and the tableGuid matches.",
                    "value": {
                      "resolvedLinkTargets": [
                        {
                          "linkTarget": {
                            "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "tables": [
                            {
                              "databaseKey": "MI_TRAINING",
                              "isHiddenFromBrowse": false,
                              "isHiddenFromSearch": false,
                              "isVersioned": false,
                              "displayNames": {
                                "en": "MaterialUniverse English Display Name",
                                "fr": "MaterialUniverse French Display Name"
                              },
                              "name": "MaterialUniverse",
                              "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                            },
                            {
                              "databaseKey": "AnotherDatabase",
                              "isHiddenFromBrowse": false,
                              "isHiddenFromSearch": false,
                              "isVersioned": false,
                              "name": "MaterialUniverse in another database",
                              "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                            }
                          ]
                        },
                        {
                          "linkTarget": {
                            "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                          },
                          "tables": [
                            {
                              "databaseKey": "MI_TRAINING",
                              "isHiddenFromBrowse": false,
                              "isHiddenFromSearch": false,
                              "isVersioned": false,
                              "displayNames": {
                                "en": "ProcessUniverse English Display Name",
                                "fr": "ProcessUniverse French Display Name"
                              },
                              "name": "ProcessUniverse",
                              "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "Resolved links with missing targets",
                    "description": "In this example, the first link target does not resolve to any table. This could happen if the target database is not loaded.",
                    "value": {
                      "resolvedLinkTargets": [
                        {
                          "linkTarget": {
                            "databaseGuid": "46c37a31-28af-487b-85a5-fb1c80494de6",
                            "tableGuid": "cbf83ce4-f56b-4939-9123-90aeb8b3066a"
                          },
                          "tables": []
                        },
                        {
                          "linkTarget": {
                            "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                          },
                          "tables": [
                            {
                              "databaseKey": "MI_TRAINING",
                              "isHiddenFromBrowse": false,
                              "isHiddenFromSearch": false,
                              "isVersioned": false,
                              "displayNames": {
                                "en": "ProcessUniverse English Display Name",
                                "fr": "ProcessUniverse French Display Name"
                              },
                              "name": "ProcessUniverse",
                              "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/v1alpha/security-attribute-groupings": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "Gets all security attribute groupings for a given database.",
        "operationId": "GetSecurityAttributeGroupings",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GsaSecurityAttributeGrouping"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get all attributes in table",
        "operationId": "GetAttributes",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttributesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Create a new attribute.",
        "operationId": "CreateAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Date-time attribute",
                  "description": "This example demonstrates how to create a new date-time attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date"
                  }
                },
                "Example 2": {
                  "summary": "Date-time attribute with display names",
                  "description": "This example demonstrates how to create a new date-time attribute with French and German display names for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "displayNames": {
                      "fr": "La date de livraison",
                      "de": "Liefertermin"
                    },
                    "name": "Delivery date (display names)"
                  }
                },
                "Example 3": {
                  "summary": "Date-time attribute with guid",
                  "description": "This example demonstrates how to create a new date-time attribute with a specified guid for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date (guid)",
                    "guid": "be42f05d-a879-49df-9270-994f4fe6ca05"
                  }
                },
                "Example 4": {
                  "summary": "Date-time attribute with IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to create a new date-time attribute that should not be shown in search UIs. It will still be included in text searches. It will be created in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "exists",
                    "isHiddenFromSearchCriteria": true,
                    "name": "Delivery date (hidden from search criteria)"
                  }
                },
                "Example 5": {
                  "summary": "Discrete attribute - simple",
                  "description": "This example demonstrates how to create a new discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "isOneOf",
                    "name": "Used material type"
                  }
                },
                "Example 6": {
                  "summary": "Discrete attribute - multi-valued",
                  "description": "This example demonstrates how to create a multi-valued discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database. You can change the attribute back to a single-valued one as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "isOneOf",
                    "name": "Appropriate material types"
                  }
                },
                "Example 7": {
                  "summary": "File attribute",
                  "description": "This example demonstrates how to create a new file attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "file",
                    "defaultThresholdType": "exists",
                    "name": "Details PDF"
                  }
                },
                "Example 8": {
                  "summary": "Hyperlink attribute",
                  "description": "This example demonstrates how to create a new hyperlink attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "hyperlink",
                    "defaultThresholdType": "exists",
                    "name": "Supplier website"
                  }
                },
                "Example 9": {
                  "summary": "Integer attribute",
                  "description": "This example demonstrates how to create a new integer attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Number of batches"
                  }
                },
                "Example 10": {
                  "summary": "Integer attribute - unique",
                  "description": "This example demonstrates how to create a new integer attribute which is constrained to have unique values for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Batch ID Number"
                  }
                },
                "Example 11": {
                  "summary": "Logical attribute",
                  "description": "This example demonstrates how to create a new logical attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "logical",
                    "defaultThresholdType": "equal",
                    "name": "Inspected"
                  }
                },
                "Example 12": {
                  "summary": "Long text attribute",
                  "description": "This example demonstrates how to create a new long text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "exists",
                    "name": "Long Description"
                  }
                },
                "Example 13": {
                  "summary": "Picture attribute",
                  "description": "This example demonstrates how to create a new picture attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "picture",
                    "defaultThresholdType": "exists",
                    "name": "Photo"
                  }
                },
                "Example 14": {
                  "summary": "Point attribute - simple unitless",
                  "description": "This example demonstrates how to create a new point attribute to represent a unitless single-valued property for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "My Shape factor"
                  }
                },
                "Example 15": {
                  "summary": "Point attribute - simple with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a single-valued property with the unit of 'kg' from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Mass"
                  }
                },
                "Example 16": {
                  "summary": "Point attribute - multi-valued with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a multi-valued property with the unit of 'kg' from the MI_Training database. You can later change the attribute back to single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Observed masses"
                  }
                },
                "Example 17": {
                  "summary": "Point attribute - multi-valued with parameters",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a parameterized multi-valued property. In this case, a unitless property with 'Temperature' parameter from the the MI_Training database",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "defaultThresholdType": "atLeast",
                    "name": "Max ratio"
                  }
                },
                "Example 18": {
                  "summary": "Range attribute - unitless",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = {MiTraining.MaterialUniverseTableGuid}) from the MI_Training database to represent a unitless range value.",
                  "value": {
                    "type": "range",
                    "defaultThresholdType": "atLeast",
                    "name": "Average permeability"
                  }
                },
                "Example 19": {
                  "summary": "Range attribute - with unit",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a range value with the unit 'K' from the MI_Training database.",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Boiling point"
                  }
                },
                "Example 20": {
                  "summary": "Short text attribute",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Label"
                  }
                },
                "Example 21": {
                  "summary": "Short text attribute - unique",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database which is constrained to be unique.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "defaultThresholdType": "exists",
                    "name": "Serial number"
                  }
                },
                "Example 22": {
                  "summary": "Float functional attribute",
                  "description": "This example demonstrates how to create a new float functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "floatFunctional",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "type": "numeric",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet",
                        "parameter": {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      }
                    ],
                    "isRange": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Electrical resistance with temperature"
                  }
                },
                "Example 23": {
                  "summary": "Discrete functional attribute",
                  "description": "This example demonstrates how to create a new discrete functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "discreteFunctional",
                    "discreteType": {
                      "guid": "0000000c-0006-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "type": "discrete",
                        "parameter": {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      }
                    ],
                    "defaultThresholdType": "equal",
                    "name": "Environmental resistance"
                  }
                },
                "Example 24": {
                  "summary": "Maths functional attribute",
                  "description": "This example demonstrates how to create a new maths functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "mathsFunctional",
                    "unit": {
                      "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "expressions": [
                      {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      }
                    ],
                    "allowExtrapolation": false,
                    "isRange": false,
                    "defaultContent": {
                      "curveLabel": "Curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "expression": {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      },
                      "freeParameter": {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 25000000.0,
                          "parameterRange": {
                            "lowValue": 20000000.0,
                            "highValue": 30000000.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "value": -0.25,
                          "parameterRange": {
                            "lowValue": -0.5,
                            "highValue": 0.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterValue": {
                            "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                          },
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    },
                    "allowAllCompatibleExpressions": false,
                    "allowAnonymousExpressions": false,
                    "defaultThresholdType": "equal",
                    "name": "Fatigue strength model"
                  }
                },
                "Example 25": {
                  "summary": "Tabular attribute",
                  "description": "This example demonstrates how to create a new tabular attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "link",
                    "displayFullTable": false,
                    "displaySummaryRowInline": true,
                    "hideUnlinkedRows": true,
                    "tabularColumns": [
                      {
                        "columnType": "localLogical",
                        "defaultThresholdType": "contains",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Comments"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "linkedAttribute": {
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Substance"
                      },
                      {
                        "columnType": "linkedColumn",
                        "linkedColumn": {
                          "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "list",
                        "name": "Rating"
                      }
                    ],
                    "target": {
                      "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                      "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                    },
                    "defaultThresholdType": "exists",
                    "name": "Restricted Substances"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Date-time attribute",
                  "description": "This example demonstrates how to create a new date-time attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date"
                  }
                },
                "Example 2": {
                  "summary": "Date-time attribute with display names",
                  "description": "This example demonstrates how to create a new date-time attribute with French and German display names for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "displayNames": {
                      "fr": "La date de livraison",
                      "de": "Liefertermin"
                    },
                    "name": "Delivery date (display names)"
                  }
                },
                "Example 3": {
                  "summary": "Date-time attribute with guid",
                  "description": "This example demonstrates how to create a new date-time attribute with a specified guid for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date (guid)",
                    "guid": "be42f05d-a879-49df-9270-994f4fe6ca05"
                  }
                },
                "Example 4": {
                  "summary": "Date-time attribute with IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to create a new date-time attribute that should not be shown in search UIs. It will still be included in text searches. It will be created in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "exists",
                    "isHiddenFromSearchCriteria": true,
                    "name": "Delivery date (hidden from search criteria)"
                  }
                },
                "Example 5": {
                  "summary": "Discrete attribute - simple",
                  "description": "This example demonstrates how to create a new discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "isOneOf",
                    "name": "Used material type"
                  }
                },
                "Example 6": {
                  "summary": "Discrete attribute - multi-valued",
                  "description": "This example demonstrates how to create a multi-valued discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database. You can change the attribute back to a single-valued one as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "isOneOf",
                    "name": "Appropriate material types"
                  }
                },
                "Example 7": {
                  "summary": "File attribute",
                  "description": "This example demonstrates how to create a new file attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "file",
                    "defaultThresholdType": "exists",
                    "name": "Details PDF"
                  }
                },
                "Example 8": {
                  "summary": "Hyperlink attribute",
                  "description": "This example demonstrates how to create a new hyperlink attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "hyperlink",
                    "defaultThresholdType": "exists",
                    "name": "Supplier website"
                  }
                },
                "Example 9": {
                  "summary": "Integer attribute",
                  "description": "This example demonstrates how to create a new integer attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Number of batches"
                  }
                },
                "Example 10": {
                  "summary": "Integer attribute - unique",
                  "description": "This example demonstrates how to create a new integer attribute which is constrained to have unique values for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Batch ID Number"
                  }
                },
                "Example 11": {
                  "summary": "Logical attribute",
                  "description": "This example demonstrates how to create a new logical attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "logical",
                    "defaultThresholdType": "equal",
                    "name": "Inspected"
                  }
                },
                "Example 12": {
                  "summary": "Long text attribute",
                  "description": "This example demonstrates how to create a new long text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "exists",
                    "name": "Long Description"
                  }
                },
                "Example 13": {
                  "summary": "Picture attribute",
                  "description": "This example demonstrates how to create a new picture attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "picture",
                    "defaultThresholdType": "exists",
                    "name": "Photo"
                  }
                },
                "Example 14": {
                  "summary": "Point attribute - simple unitless",
                  "description": "This example demonstrates how to create a new point attribute to represent a unitless single-valued property for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "My Shape factor"
                  }
                },
                "Example 15": {
                  "summary": "Point attribute - simple with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a single-valued property with the unit of 'kg' from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Mass"
                  }
                },
                "Example 16": {
                  "summary": "Point attribute - multi-valued with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a multi-valued property with the unit of 'kg' from the MI_Training database. You can later change the attribute back to single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Observed masses"
                  }
                },
                "Example 17": {
                  "summary": "Point attribute - multi-valued with parameters",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a parameterized multi-valued property. In this case, a unitless property with 'Temperature' parameter from the the MI_Training database",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "defaultThresholdType": "atLeast",
                    "name": "Max ratio"
                  }
                },
                "Example 18": {
                  "summary": "Range attribute - unitless",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = {MiTraining.MaterialUniverseTableGuid}) from the MI_Training database to represent a unitless range value.",
                  "value": {
                    "type": "range",
                    "defaultThresholdType": "atLeast",
                    "name": "Average permeability"
                  }
                },
                "Example 19": {
                  "summary": "Range attribute - with unit",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a range value with the unit 'K' from the MI_Training database.",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Boiling point"
                  }
                },
                "Example 20": {
                  "summary": "Short text attribute",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Label"
                  }
                },
                "Example 21": {
                  "summary": "Short text attribute - unique",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database which is constrained to be unique.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "defaultThresholdType": "exists",
                    "name": "Serial number"
                  }
                },
                "Example 22": {
                  "summary": "Float functional attribute",
                  "description": "This example demonstrates how to create a new float functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "floatFunctional",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "type": "numeric",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet",
                        "parameter": {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      }
                    ],
                    "isRange": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Electrical resistance with temperature"
                  }
                },
                "Example 23": {
                  "summary": "Discrete functional attribute",
                  "description": "This example demonstrates how to create a new discrete functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "discreteFunctional",
                    "discreteType": {
                      "guid": "0000000c-0006-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "type": "discrete",
                        "parameter": {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      }
                    ],
                    "defaultThresholdType": "equal",
                    "name": "Environmental resistance"
                  }
                },
                "Example 24": {
                  "summary": "Maths functional attribute",
                  "description": "This example demonstrates how to create a new maths functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "mathsFunctional",
                    "unit": {
                      "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "expressions": [
                      {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      }
                    ],
                    "allowExtrapolation": false,
                    "isRange": false,
                    "defaultContent": {
                      "curveLabel": "Curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "expression": {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      },
                      "freeParameter": {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 25000000.0,
                          "parameterRange": {
                            "lowValue": 20000000.0,
                            "highValue": 30000000.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "value": -0.25,
                          "parameterRange": {
                            "lowValue": -0.5,
                            "highValue": 0.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterValue": {
                            "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                          },
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    },
                    "allowAllCompatibleExpressions": false,
                    "allowAnonymousExpressions": false,
                    "defaultThresholdType": "equal",
                    "name": "Fatigue strength model"
                  }
                },
                "Example 25": {
                  "summary": "Tabular attribute",
                  "description": "This example demonstrates how to create a new tabular attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "link",
                    "displayFullTable": false,
                    "displaySummaryRowInline": true,
                    "hideUnlinkedRows": true,
                    "tabularColumns": [
                      {
                        "columnType": "localLogical",
                        "defaultThresholdType": "contains",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Comments"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "linkedAttribute": {
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Substance"
                      },
                      {
                        "columnType": "linkedColumn",
                        "linkedColumn": {
                          "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "list",
                        "name": "Rating"
                      }
                    ],
                    "target": {
                      "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                      "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                    },
                    "defaultThresholdType": "exists",
                    "name": "Restricted Substances"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Date-time attribute",
                  "description": "This example demonstrates how to create a new date-time attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date"
                  }
                },
                "Example 2": {
                  "summary": "Date-time attribute with display names",
                  "description": "This example demonstrates how to create a new date-time attribute with French and German display names for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "displayNames": {
                      "fr": "La date de livraison",
                      "de": "Liefertermin"
                    },
                    "name": "Delivery date (display names)"
                  }
                },
                "Example 3": {
                  "summary": "Date-time attribute with guid",
                  "description": "This example demonstrates how to create a new date-time attribute with a specified guid for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date (guid)",
                    "guid": "be42f05d-a879-49df-9270-994f4fe6ca05"
                  }
                },
                "Example 4": {
                  "summary": "Date-time attribute with IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to create a new date-time attribute that should not be shown in search UIs. It will still be included in text searches. It will be created in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "exists",
                    "isHiddenFromSearchCriteria": true,
                    "name": "Delivery date (hidden from search criteria)"
                  }
                },
                "Example 5": {
                  "summary": "Discrete attribute - simple",
                  "description": "This example demonstrates how to create a new discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "isOneOf",
                    "name": "Used material type"
                  }
                },
                "Example 6": {
                  "summary": "Discrete attribute - multi-valued",
                  "description": "This example demonstrates how to create a multi-valued discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database. You can change the attribute back to a single-valued one as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "isOneOf",
                    "name": "Appropriate material types"
                  }
                },
                "Example 7": {
                  "summary": "File attribute",
                  "description": "This example demonstrates how to create a new file attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "file",
                    "defaultThresholdType": "exists",
                    "name": "Details PDF"
                  }
                },
                "Example 8": {
                  "summary": "Hyperlink attribute",
                  "description": "This example demonstrates how to create a new hyperlink attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "hyperlink",
                    "defaultThresholdType": "exists",
                    "name": "Supplier website"
                  }
                },
                "Example 9": {
                  "summary": "Integer attribute",
                  "description": "This example demonstrates how to create a new integer attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Number of batches"
                  }
                },
                "Example 10": {
                  "summary": "Integer attribute - unique",
                  "description": "This example demonstrates how to create a new integer attribute which is constrained to have unique values for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Batch ID Number"
                  }
                },
                "Example 11": {
                  "summary": "Logical attribute",
                  "description": "This example demonstrates how to create a new logical attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "logical",
                    "defaultThresholdType": "equal",
                    "name": "Inspected"
                  }
                },
                "Example 12": {
                  "summary": "Long text attribute",
                  "description": "This example demonstrates how to create a new long text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "exists",
                    "name": "Long Description"
                  }
                },
                "Example 13": {
                  "summary": "Picture attribute",
                  "description": "This example demonstrates how to create a new picture attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "picture",
                    "defaultThresholdType": "exists",
                    "name": "Photo"
                  }
                },
                "Example 14": {
                  "summary": "Point attribute - simple unitless",
                  "description": "This example demonstrates how to create a new point attribute to represent a unitless single-valued property for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "My Shape factor"
                  }
                },
                "Example 15": {
                  "summary": "Point attribute - simple with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a single-valued property with the unit of 'kg' from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Mass"
                  }
                },
                "Example 16": {
                  "summary": "Point attribute - multi-valued with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a multi-valued property with the unit of 'kg' from the MI_Training database. You can later change the attribute back to single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Observed masses"
                  }
                },
                "Example 17": {
                  "summary": "Point attribute - multi-valued with parameters",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a parameterized multi-valued property. In this case, a unitless property with 'Temperature' parameter from the the MI_Training database",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "defaultThresholdType": "atLeast",
                    "name": "Max ratio"
                  }
                },
                "Example 18": {
                  "summary": "Range attribute - unitless",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = {MiTraining.MaterialUniverseTableGuid}) from the MI_Training database to represent a unitless range value.",
                  "value": {
                    "type": "range",
                    "defaultThresholdType": "atLeast",
                    "name": "Average permeability"
                  }
                },
                "Example 19": {
                  "summary": "Range attribute - with unit",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a range value with the unit 'K' from the MI_Training database.",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Boiling point"
                  }
                },
                "Example 20": {
                  "summary": "Short text attribute",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Label"
                  }
                },
                "Example 21": {
                  "summary": "Short text attribute - unique",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database which is constrained to be unique.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "defaultThresholdType": "exists",
                    "name": "Serial number"
                  }
                },
                "Example 22": {
                  "summary": "Float functional attribute",
                  "description": "This example demonstrates how to create a new float functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "floatFunctional",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "type": "numeric",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet",
                        "parameter": {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      }
                    ],
                    "isRange": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Electrical resistance with temperature"
                  }
                },
                "Example 23": {
                  "summary": "Discrete functional attribute",
                  "description": "This example demonstrates how to create a new discrete functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "discreteFunctional",
                    "discreteType": {
                      "guid": "0000000c-0006-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "type": "discrete",
                        "parameter": {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      }
                    ],
                    "defaultThresholdType": "equal",
                    "name": "Environmental resistance"
                  }
                },
                "Example 24": {
                  "summary": "Maths functional attribute",
                  "description": "This example demonstrates how to create a new maths functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "mathsFunctional",
                    "unit": {
                      "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "expressions": [
                      {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      }
                    ],
                    "allowExtrapolation": false,
                    "isRange": false,
                    "defaultContent": {
                      "curveLabel": "Curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "expression": {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      },
                      "freeParameter": {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 25000000.0,
                          "parameterRange": {
                            "lowValue": 20000000.0,
                            "highValue": 30000000.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "value": -0.25,
                          "parameterRange": {
                            "lowValue": -0.5,
                            "highValue": 0.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterValue": {
                            "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                          },
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    },
                    "allowAllCompatibleExpressions": false,
                    "allowAnonymousExpressions": false,
                    "defaultThresholdType": "equal",
                    "name": "Fatigue strength model"
                  }
                },
                "Example 25": {
                  "summary": "Tabular attribute",
                  "description": "This example demonstrates how to create a new tabular attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "link",
                    "displayFullTable": false,
                    "displaySummaryRowInline": true,
                    "hideUnlinkedRows": true,
                    "tabularColumns": [
                      {
                        "columnType": "localLogical",
                        "defaultThresholdType": "contains",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Comments"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "linkedAttribute": {
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Substance"
                      },
                      {
                        "columnType": "linkedColumn",
                        "linkedColumn": {
                          "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "list",
                        "name": "Rating"
                      }
                    ],
                    "target": {
                      "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                      "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                    },
                    "defaultThresholdType": "exists",
                    "name": "Restricted Substances"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Date-time attribute",
                  "description": "This example demonstrates how to create a new date-time attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date"
                  }
                },
                "Example 2": {
                  "summary": "Date-time attribute with display names",
                  "description": "This example demonstrates how to create a new date-time attribute with French and German display names for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "displayNames": {
                      "fr": "La date de livraison",
                      "de": "Liefertermin"
                    },
                    "name": "Delivery date (display names)"
                  }
                },
                "Example 3": {
                  "summary": "Date-time attribute with guid",
                  "description": "This example demonstrates how to create a new date-time attribute with a specified guid for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "atMost",
                    "name": "Delivery date (guid)",
                    "guid": "be42f05d-a879-49df-9270-994f4fe6ca05"
                  }
                },
                "Example 4": {
                  "summary": "Date-time attribute with IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to create a new date-time attribute that should not be shown in search UIs. It will still be included in text searches. It will be created in the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The same thing can be done for all attribute types.",
                  "value": {
                    "type": "dateTime",
                    "defaultThresholdType": "exists",
                    "isHiddenFromSearchCriteria": true,
                    "name": "Delivery date (hidden from search criteria)"
                  }
                },
                "Example 5": {
                  "summary": "Discrete attribute - simple",
                  "description": "This example demonstrates how to create a new discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": false,
                    "defaultThresholdType": "isOneOf",
                    "name": "Used material type"
                  }
                },
                "Example 6": {
                  "summary": "Discrete attribute - multi-valued",
                  "description": "This example demonstrates how to create a multi-valued discrete attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000), using the 'Material type' discrete type, from the MI_Training database. You can change the attribute back to a single-valued one as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "discreteType": {
                      "guid": "2ba638a6-b807-4480-a388-f1b5637489b2"
                    },
                    "isMultiValued": true,
                    "defaultThresholdType": "isOneOf",
                    "name": "Appropriate material types"
                  }
                },
                "Example 7": {
                  "summary": "File attribute",
                  "description": "This example demonstrates how to create a new file attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "file",
                    "defaultThresholdType": "exists",
                    "name": "Details PDF"
                  }
                },
                "Example 8": {
                  "summary": "Hyperlink attribute",
                  "description": "This example demonstrates how to create a new hyperlink attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "hyperlink",
                    "defaultThresholdType": "exists",
                    "name": "Supplier website"
                  }
                },
                "Example 9": {
                  "summary": "Integer attribute",
                  "description": "This example demonstrates how to create a new integer attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": false,
                    "defaultThresholdType": "atLeast",
                    "name": "Number of batches"
                  }
                },
                "Example 10": {
                  "summary": "Integer attribute - unique",
                  "description": "This example demonstrates how to create a new integer attribute which is constrained to have unique values for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "integer",
                    "isUnique": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Batch ID Number"
                  }
                },
                "Example 11": {
                  "summary": "Logical attribute",
                  "description": "This example demonstrates how to create a new logical attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "logical",
                    "defaultThresholdType": "equal",
                    "name": "Inspected"
                  }
                },
                "Example 12": {
                  "summary": "Long text attribute",
                  "description": "This example demonstrates how to create a new long text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "exists",
                    "name": "Long Description"
                  }
                },
                "Example 13": {
                  "summary": "Picture attribute",
                  "description": "This example demonstrates how to create a new picture attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "picture",
                    "defaultThresholdType": "exists",
                    "name": "Photo"
                  }
                },
                "Example 14": {
                  "summary": "Point attribute - simple unitless",
                  "description": "This example demonstrates how to create a new point attribute to represent a unitless single-valued property for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "defaultThresholdType": "atLeast",
                    "name": "My Shape factor"
                  }
                },
                "Example 15": {
                  "summary": "Point attribute - simple with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a single-valued property with the unit of 'kg' from the MI_Training database.",
                  "value": {
                    "type": "point",
                    "isMultiValued": false,
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Mass"
                  }
                },
                "Example 16": {
                  "summary": "Point attribute - multi-valued with unit",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a multi-valued property with the unit of 'kg' from the MI_Training database. You can later change the attribute back to single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Observed masses"
                  }
                },
                "Example 17": {
                  "summary": "Point attribute - multi-valued with parameters",
                  "description": "This example demonstrates how to create a new point attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a parameterized multi-valued property. In this case, a unitless property with 'Temperature' parameter from the the MI_Training database",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "defaultThresholdType": "atLeast",
                    "name": "Max ratio"
                  }
                },
                "Example 18": {
                  "summary": "Range attribute - unitless",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = {MiTraining.MaterialUniverseTableGuid}) from the MI_Training database to represent a unitless range value.",
                  "value": {
                    "type": "range",
                    "defaultThresholdType": "atLeast",
                    "name": "Average permeability"
                  }
                },
                "Example 19": {
                  "summary": "Range attribute - with unit",
                  "description": "This example demonstrates how to create a new range attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) to represent a range value with the unit 'K' from the MI_Training database.",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "defaultThresholdType": "atLeast",
                    "name": "Boiling point"
                  }
                },
                "Example 20": {
                  "summary": "Short text attribute",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Label"
                  }
                },
                "Example 21": {
                  "summary": "Short text attribute - unique",
                  "description": "This example demonstrates how to create a new short text attribute for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database which is constrained to be unique.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "defaultThresholdType": "exists",
                    "name": "Serial number"
                  }
                },
                "Example 22": {
                  "summary": "Float functional attribute",
                  "description": "This example demonstrates how to create a new float functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "floatFunctional",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "type": "numeric",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet",
                        "parameter": {
                          "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                        }
                      }
                    ],
                    "isRange": true,
                    "defaultThresholdType": "atLeast",
                    "name": "Electrical resistance with temperature"
                  }
                },
                "Example 23": {
                  "summary": "Discrete functional attribute",
                  "description": "This example demonstrates how to create a new discrete functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "discreteFunctional",
                    "discreteType": {
                      "guid": "0000000c-0006-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "type": "discrete",
                        "parameter": {
                          "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                        }
                      }
                    ],
                    "defaultThresholdType": "equal",
                    "name": "Environmental resistance"
                  }
                },
                "Example 24": {
                  "summary": "Maths functional attribute",
                  "description": "This example demonstrates how to create a new maths functional attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "mathsFunctional",
                    "unit": {
                      "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                    },
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "expressions": [
                      {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      }
                    ],
                    "allowExtrapolation": false,
                    "isRange": false,
                    "defaultContent": {
                      "curveLabel": "Curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "expression": {
                        "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                      },
                      "freeParameter": {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 25000000.0,
                          "parameterRange": {
                            "lowValue": 20000000.0,
                            "highValue": 30000000.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "value": -0.25,
                          "parameterRange": {
                            "lowValue": -0.5,
                            "highValue": 0.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterValue": {
                            "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                          },
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    },
                    "allowAllCompatibleExpressions": false,
                    "allowAnonymousExpressions": false,
                    "defaultThresholdType": "equal",
                    "name": "Fatigue strength model"
                  }
                },
                "Example 25": {
                  "summary": "Tabular attribute",
                  "description": "This example demonstrates how to create a new tabular attribute for the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "type": "link",
                    "displayFullTable": false,
                    "displaySummaryRowInline": true,
                    "hideUnlinkedRows": true,
                    "tabularColumns": [
                      {
                        "columnType": "localLogical",
                        "defaultThresholdType": "contains",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Comments"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "linkedAttribute": {
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "name": "Substance"
                      },
                      {
                        "columnType": "linkedColumn",
                        "linkedColumn": {
                          "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                        },
                        "showAsLink": true,
                        "summaryRowEnabled": true,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "list",
                        "name": "Rating"
                      }
                    ],
                    "target": {
                      "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                      "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                    },
                    "defaultThresholdType": "exists",
                    "name": "Restricted Substances"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttribute"
                },
                "examples": {
                  "Example 5": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "dateTime",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "ad27baf0-42e9-4136-bc96-9dbbf116e265"
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 6": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "discrete",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 7": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "type": "longText",
                            "name": "Notes",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "ba03d0e3-8500-4186-88e7-14b6ae132285"
                          }
                        ],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "range",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 8": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Chemical name",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "94c07750-4710-402b-aefd-4b7f8831a0a0"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Legislations restricting its use",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          },
                          "linkedColumn": {
                            "columnType": "linkedAttribute",
                            "linkedAttribute": {
                              "type": "discrete",
                              "isHiddenFromSearchCriteria": false,
                              "isProtected": false,
                              "table": {
                                "guid": "08a1f735-9b37-49bc-96b3-e46e070f6c17"
                              },
                              "name": "Rating",
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                            },
                            "showAsLink": false,
                            "summaryRowEnabled": true,
                            "summaryRowText": "Substance ES&H rating",
                            "rollUpType": "list",
                            "summaryRowRollUpType": "min",
                            "displayNames": {},
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "linkedTarget": {
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "link",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttributeCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "No such discrete type",
                    "description": "The GUID provided for the discrete type does not match a discrete type in the database.",
                    "value": {
                      "message": "Cannot create attribute 'Used material type'.",
                      "code": "attributeCreation",
                      "errors": [
                        {
                          "message": "Could not find discrete type with GUID 'a08ccca0-dfcf-43bb-b982-03a36f11f111' in database 'MI_Training'.",
                          "guid": "a08ccca0-dfcf-43bb-b982-03a36f11f111",
                          "databaseKey": "MI_Training",
                          "entityType": "discreteType",
                          "reason": "noSuchEntity"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Multiple validation errors for creating a MathsFunctional Attribute",
                    "description": "Unit not found; no expressions specified (and 'allow anonymous expressions' not set to true); parameterContents contains a parameter that is not in attributeParameters",
                    "value": {
                      "message": "Cannot create attribute 'Fatigue strength model'.",
                      "code": "attributeCreation",
                      "errors": [
                        {
                          "message": "Could not find unit with GUID '5653fda6-958b-41e5-98d4-6e4be4352f10' in database 'MI_Training'.",
                          "guid": "5653fda6-958b-41e5-98d4-6e4be4352f10",
                          "databaseKey": "MI_Training",
                          "entityType": "unit",
                          "reason": "noSuchEntity"
                        },
                        {
                          "message": "The Maths Functional attribute is not valid.",
                          "errors": [
                            {
                              "message": "Maths functional attribute must have at least one expression or have 'allow anonymous expressions' set to true.",
                              "reason": "noExpressions"
                            },
                            {
                              "message": "Parameters in parameter contents must be from this attribute's parameters. GUIDs not found in attribute's parameters: '8b6730df-cd63-4ae2-8f60-f7663efa8943'.",
                              "parameterGuids": [
                                "8b6730df-cd63-4ae2-8f60-f7663efa8943"
                              ],
                              "reason": "parameterContentUnknownParameters"
                            }
                          ],
                          "reason": "mathsFunctional"
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateDateTimeAttribute: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes/{attribute-guid}": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get attribute in table",
        "operationId": "GetAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttribute"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "dateTime",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "ad27baf0-42e9-4136-bc96-9dbbf116e265"
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 2": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "discrete",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 3": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "type": "longText",
                            "name": "Notes",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "721f706c-9238-4f08-b7b3-38131a616595"
                          }
                        ],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "range",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 4": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Chemical name",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "94c07750-4710-402b-aefd-4b7f8831a0a0"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Legislations restricting its use",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          },
                          "linkedColumn": {
                            "columnType": "linkedAttribute",
                            "linkedAttribute": {
                              "type": "discrete",
                              "isHiddenFromSearchCriteria": false,
                              "isProtected": false,
                              "table": {
                                "guid": "08a1f735-9b37-49bc-96b3-e46e070f6c17"
                              },
                              "name": "Rating",
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                            },
                            "showAsLink": false,
                            "summaryRowEnabled": true,
                            "summaryRowText": "Substance ES&H rating",
                            "rollUpType": "list",
                            "summaryRowRollUpType": "min",
                            "displayNames": {},
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "linkedTarget": {
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "link",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Update attribute.",
        "operationId": "UpdateAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "name": "Metals (updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update display names",
                  "description": "This example demonstrates how to update the French and German display names of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": {
                      "fr": "Métaux",
                      "de": "Metalle"
                    }
                  }
                },
                "Example 3": {
                  "summary": "Remove fr display name",
                  "description": "This example demonstrates how to remove the French display name of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": {
                      "fr": null
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove all display names",
                  "description": "This example demonstrates how to remove all display names of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": null
                  }
                },
                "Example 5": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Melting point' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000d-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "guid": "12345678-0013-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 6": {
                  "summary": "Update help path",
                  "description": "This example demonstrates how to update the 'HelpPath' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "helpPath": "html/attributenotes/metals.html"
                  }
                },
                "Example 7": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 8": {
                  "summary": "Update IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to update an attribute so that it should not be shown in search UIs. It will still be included in text searches. The example is for the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "isHiddenFromSearchCriteria": true
                  }
                },
                "Example 9": {
                  "summary": "Make discrete multi-valued",
                  "description": "This example demonstrates how to update the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. You can similarly turn a multi-valued discrete attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "isMultiValued": true
                  }
                },
                "Example 10": {
                  "summary": "Make short text unique",
                  "description": "This example demonstrates how to update the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and make it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true
                  }
                },
                "Example 11": {
                  "summary": "Make point multi-valued",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. Note that this won't work if the attribute is used in a smart link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true
                  }
                },
                "Example 12": {
                  "summary": "Make point multi-valued with parameter",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued with 'Temperature' as a parameter. Note that this won't work if the attribute is used in a smart link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Update unit",
                  "description": "This example demonstrates how to update the unit of the 'Reserves' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000088-0001-4fff-8fff-dd92ffff0000). We will change the unit from 'tonnes' to 'kg'",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    }
                  }
                },
                "Example 14": {
                  "summary": "Update multiple properties",
                  "description": "This example demonstrates that it is possible to change multiple attribute properties at once by updating the name of the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and also making it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "name": "Grain size (updated)"
                  }
                },
                "Example 15": {
                  "summary": "Turn an attribute into a meta-attribute",
                  "description": "This example demonstrates how to turn an existing attribute into a meta-attribute of another attribute. We make the short text 'Color' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000169-0001-4fff-8fff-dd92ffff0000) become a meta-attribute of 'ISO name' short text attribute (guid = 000002cf-0001-4fff-8fff-dd92ffff0000).Note that if an attribute already had meta-attribute, it cannot be made a meta-attribute. Also, you cannot add a meta-attribute to another meta-attribute.",
                  "value": {
                    "type": "shortText",
                    "aboutAttribute": {
                      "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 16": {
                  "summary": "Add multiple parameters",
                  "description": "This example demonstrates how to update the 'Tensile strength with temperature' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '00000002-0001-4fff-8fff-dd92ffff0000') and add multiple parameters to it.",
                  "value": {
                    "type": "floatFunctional",
                    "attributeParameters": [
                      {
                        "type": "numeric",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet",
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "type": "numeric",
                        "interpolationMethod": "linear",
                        "scaleType": "logarithmic",
                        "parameterGuid": "00000005-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "type": "discrete",
                        "defaultValue": {
                          "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                        },
                        "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ]
                  }
                },
                "Example 17": {
                  "summary": "Add additional parameter and set default content for Maths Functional Attribute",
                  "description": "This example demonstrates how to update the 'Fatigue strength model (stress range)' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '745db76c-a991-41b6-9fd6-2e5f544f8ecb') by adding additional parameter to it and setting its default content.",
                  "value": {
                    "type": "mathsFunctional",
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "defaultContent": {
                      "curveLabel": "Updated curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "freeParameter": {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 15.0,
                          "parameterRange": {
                            "lowValue": 5.0,
                            "highValue": 100.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "parameterRange": {
                            "lowValue": -2.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    }
                  }
                },
                "Example 18": {
                  "summary": "Update tabular columns",
                  "description": "This example demonstrates how to modify the tabular columns of the 'Legislations restricting its use' attribute from the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "tabularColumns": [
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": true,
                        "summaryRowText": "All Legislation Names",
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "18eab50a-6c30-4a1d-9205-29878a6044bd"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": true,
                        "summaryRowEnabled": false,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "listDistinct",
                        "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "0a553cb4-13f2-447b-bc55-3e68e1008b51"
                      },
                      {
                        "columnType": "localPoint",
                        "defaultThresholdType": "exists",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "be3a1aa5-0b35-4d62-b512-a2923ed03e8d"
                      }
                    ],
                    "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                  }
                },
                "Example 19": {
                  "summary": "Update tabular target",
                  "description": "This example demonstrates how to modify the tabular target attribute of the 'Legislations restricting its use' attribute from 'Legislation ID' to 'Parent legislation ID'. The 'Legislations restricting its use' tabular attribute is in the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "target": {
                      "targetAttributeGuid": "a581f019-a3ba-41ca-b335-9fb63c417534"
                    }
                  }
                },
                "Example 20": {
                  "summary": "Remove tabular target",
                  "description": "This example demonstrates how to remove the tabular target of the 'Legislations restricting its use' attribute. Linked attribute columns will become 'unavailable'. The target can be reset, then the linked attribute columns will become available. The original target attribute is 'Legislation ID' ('targetAttributeGuid': '77e38bc0-d8ab-484d-a84c-a9ffec81afab') in table 'Legislations and Lists' ('targetTableGuid': '08a1f735-9b37-49bc-96b3-e46e070f6c17'), with 'targetDatabaseGuid' and 'targetDatabaseVersionGuid' for the MI_Training database.The 'Legislations restricting its use' tabular attribute is in the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "target": null
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "name": "Metals (updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update display names",
                  "description": "This example demonstrates how to update the French and German display names of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": {
                      "fr": "Métaux",
                      "de": "Metalle"
                    }
                  }
                },
                "Example 3": {
                  "summary": "Remove fr display name",
                  "description": "This example demonstrates how to remove the French display name of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": {
                      "fr": null
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove all display names",
                  "description": "This example demonstrates how to remove all display names of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": null
                  }
                },
                "Example 5": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Melting point' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000d-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "guid": "12345678-0013-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 6": {
                  "summary": "Update help path",
                  "description": "This example demonstrates how to update the 'HelpPath' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "helpPath": "html/attributenotes/metals.html"
                  }
                },
                "Example 7": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 8": {
                  "summary": "Update IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to update an attribute so that it should not be shown in search UIs. It will still be included in text searches. The example is for the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "isHiddenFromSearchCriteria": true
                  }
                },
                "Example 9": {
                  "summary": "Make discrete multi-valued",
                  "description": "This example demonstrates how to update the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. You can similarly turn a multi-valued discrete attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "isMultiValued": true
                  }
                },
                "Example 10": {
                  "summary": "Make short text unique",
                  "description": "This example demonstrates how to update the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and make it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true
                  }
                },
                "Example 11": {
                  "summary": "Make point multi-valued",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. Note that this won't work if the attribute is used in a smart link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true
                  }
                },
                "Example 12": {
                  "summary": "Make point multi-valued with parameter",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued with 'Temperature' as a parameter. Note that this won't work if the attribute is used in a smart link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Update unit",
                  "description": "This example demonstrates how to update the unit of the 'Reserves' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000088-0001-4fff-8fff-dd92ffff0000). We will change the unit from 'tonnes' to 'kg'",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    }
                  }
                },
                "Example 14": {
                  "summary": "Update multiple properties",
                  "description": "This example demonstrates that it is possible to change multiple attribute properties at once by updating the name of the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and also making it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "name": "Grain size (updated)"
                  }
                },
                "Example 15": {
                  "summary": "Turn an attribute into a meta-attribute",
                  "description": "This example demonstrates how to turn an existing attribute into a meta-attribute of another attribute. We make the short text 'Color' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000169-0001-4fff-8fff-dd92ffff0000) become a meta-attribute of 'ISO name' short text attribute (guid = 000002cf-0001-4fff-8fff-dd92ffff0000).Note that if an attribute already had meta-attribute, it cannot be made a meta-attribute. Also, you cannot add a meta-attribute to another meta-attribute.",
                  "value": {
                    "type": "shortText",
                    "aboutAttribute": {
                      "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 16": {
                  "summary": "Add multiple parameters",
                  "description": "This example demonstrates how to update the 'Tensile strength with temperature' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '00000002-0001-4fff-8fff-dd92ffff0000') and add multiple parameters to it.",
                  "value": {
                    "type": "floatFunctional",
                    "attributeParameters": [
                      {
                        "type": "numeric",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet",
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "type": "numeric",
                        "interpolationMethod": "linear",
                        "scaleType": "logarithmic",
                        "parameterGuid": "00000005-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "type": "discrete",
                        "defaultValue": {
                          "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                        },
                        "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ]
                  }
                },
                "Example 17": {
                  "summary": "Add additional parameter and set default content for Maths Functional Attribute",
                  "description": "This example demonstrates how to update the 'Fatigue strength model (stress range)' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '745db76c-a991-41b6-9fd6-2e5f544f8ecb') by adding additional parameter to it and setting its default content.",
                  "value": {
                    "type": "mathsFunctional",
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "defaultContent": {
                      "curveLabel": "Updated curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "freeParameter": {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 15.0,
                          "parameterRange": {
                            "lowValue": 5.0,
                            "highValue": 100.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "parameterRange": {
                            "lowValue": -2.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    }
                  }
                },
                "Example 18": {
                  "summary": "Update tabular columns",
                  "description": "This example demonstrates how to modify the tabular columns of the 'Legislations restricting its use' attribute from the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "tabularColumns": [
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": true,
                        "summaryRowText": "All Legislation Names",
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "18eab50a-6c30-4a1d-9205-29878a6044bd"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": true,
                        "summaryRowEnabled": false,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "listDistinct",
                        "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "0a553cb4-13f2-447b-bc55-3e68e1008b51"
                      },
                      {
                        "columnType": "localPoint",
                        "defaultThresholdType": "exists",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "be3a1aa5-0b35-4d62-b512-a2923ed03e8d"
                      }
                    ],
                    "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                  }
                },
                "Example 19": {
                  "summary": "Update tabular target",
                  "description": "This example demonstrates how to modify the tabular target attribute of the 'Legislations restricting its use' attribute from 'Legislation ID' to 'Parent legislation ID'. The 'Legislations restricting its use' tabular attribute is in the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "target": {
                      "targetAttributeGuid": "a581f019-a3ba-41ca-b335-9fb63c417534"
                    }
                  }
                },
                "Example 20": {
                  "summary": "Remove tabular target",
                  "description": "This example demonstrates how to remove the tabular target of the 'Legislations restricting its use' attribute. Linked attribute columns will become 'unavailable'. The target can be reset, then the linked attribute columns will become available. The original target attribute is 'Legislation ID' ('targetAttributeGuid': '77e38bc0-d8ab-484d-a84c-a9ffec81afab') in table 'Legislations and Lists' ('targetTableGuid': '08a1f735-9b37-49bc-96b3-e46e070f6c17'), with 'targetDatabaseGuid' and 'targetDatabaseVersionGuid' for the MI_Training database.The 'Legislations restricting its use' tabular attribute is in the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "target": null
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "name": "Metals (updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update display names",
                  "description": "This example demonstrates how to update the French and German display names of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": {
                      "fr": "Métaux",
                      "de": "Metalle"
                    }
                  }
                },
                "Example 3": {
                  "summary": "Remove fr display name",
                  "description": "This example demonstrates how to remove the French display name of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": {
                      "fr": null
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove all display names",
                  "description": "This example demonstrates how to remove all display names of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": null
                  }
                },
                "Example 5": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Melting point' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000d-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "guid": "12345678-0013-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 6": {
                  "summary": "Update help path",
                  "description": "This example demonstrates how to update the 'HelpPath' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "helpPath": "html/attributenotes/metals.html"
                  }
                },
                "Example 7": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 8": {
                  "summary": "Update IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to update an attribute so that it should not be shown in search UIs. It will still be included in text searches. The example is for the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "isHiddenFromSearchCriteria": true
                  }
                },
                "Example 9": {
                  "summary": "Make discrete multi-valued",
                  "description": "This example demonstrates how to update the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. You can similarly turn a multi-valued discrete attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "isMultiValued": true
                  }
                },
                "Example 10": {
                  "summary": "Make short text unique",
                  "description": "This example demonstrates how to update the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and make it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true
                  }
                },
                "Example 11": {
                  "summary": "Make point multi-valued",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. Note that this won't work if the attribute is used in a smart link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true
                  }
                },
                "Example 12": {
                  "summary": "Make point multi-valued with parameter",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued with 'Temperature' as a parameter. Note that this won't work if the attribute is used in a smart link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Update unit",
                  "description": "This example demonstrates how to update the unit of the 'Reserves' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000088-0001-4fff-8fff-dd92ffff0000). We will change the unit from 'tonnes' to 'kg'",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    }
                  }
                },
                "Example 14": {
                  "summary": "Update multiple properties",
                  "description": "This example demonstrates that it is possible to change multiple attribute properties at once by updating the name of the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and also making it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "name": "Grain size (updated)"
                  }
                },
                "Example 15": {
                  "summary": "Turn an attribute into a meta-attribute",
                  "description": "This example demonstrates how to turn an existing attribute into a meta-attribute of another attribute. We make the short text 'Color' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000169-0001-4fff-8fff-dd92ffff0000) become a meta-attribute of 'ISO name' short text attribute (guid = 000002cf-0001-4fff-8fff-dd92ffff0000).Note that if an attribute already had meta-attribute, it cannot be made a meta-attribute. Also, you cannot add a meta-attribute to another meta-attribute.",
                  "value": {
                    "type": "shortText",
                    "aboutAttribute": {
                      "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 16": {
                  "summary": "Add multiple parameters",
                  "description": "This example demonstrates how to update the 'Tensile strength with temperature' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '00000002-0001-4fff-8fff-dd92ffff0000') and add multiple parameters to it.",
                  "value": {
                    "type": "floatFunctional",
                    "attributeParameters": [
                      {
                        "type": "numeric",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet",
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "type": "numeric",
                        "interpolationMethod": "linear",
                        "scaleType": "logarithmic",
                        "parameterGuid": "00000005-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "type": "discrete",
                        "defaultValue": {
                          "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                        },
                        "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ]
                  }
                },
                "Example 17": {
                  "summary": "Add additional parameter and set default content for Maths Functional Attribute",
                  "description": "This example demonstrates how to update the 'Fatigue strength model (stress range)' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '745db76c-a991-41b6-9fd6-2e5f544f8ecb') by adding additional parameter to it and setting its default content.",
                  "value": {
                    "type": "mathsFunctional",
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "defaultContent": {
                      "curveLabel": "Updated curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "freeParameter": {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 15.0,
                          "parameterRange": {
                            "lowValue": 5.0,
                            "highValue": 100.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "parameterRange": {
                            "lowValue": -2.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    }
                  }
                },
                "Example 18": {
                  "summary": "Update tabular columns",
                  "description": "This example demonstrates how to modify the tabular columns of the 'Legislations restricting its use' attribute from the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "tabularColumns": [
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": true,
                        "summaryRowText": "All Legislation Names",
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "18eab50a-6c30-4a1d-9205-29878a6044bd"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": true,
                        "summaryRowEnabled": false,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "listDistinct",
                        "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "0a553cb4-13f2-447b-bc55-3e68e1008b51"
                      },
                      {
                        "columnType": "localPoint",
                        "defaultThresholdType": "exists",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "be3a1aa5-0b35-4d62-b512-a2923ed03e8d"
                      }
                    ],
                    "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                  }
                },
                "Example 19": {
                  "summary": "Update tabular target",
                  "description": "This example demonstrates how to modify the tabular target attribute of the 'Legislations restricting its use' attribute from 'Legislation ID' to 'Parent legislation ID'. The 'Legislations restricting its use' tabular attribute is in the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "target": {
                      "targetAttributeGuid": "a581f019-a3ba-41ca-b335-9fb63c417534"
                    }
                  }
                },
                "Example 20": {
                  "summary": "Remove tabular target",
                  "description": "This example demonstrates how to remove the tabular target of the 'Legislations restricting its use' attribute. Linked attribute columns will become 'unavailable'. The target can be reset, then the linked attribute columns will become available. The original target attribute is 'Legislation ID' ('targetAttributeGuid': '77e38bc0-d8ab-484d-a84c-a9ffec81afab') in table 'Legislations and Lists' ('targetTableGuid': '08a1f735-9b37-49bc-96b3-e46e070f6c17'), with 'targetDatabaseGuid' and 'targetDatabaseVersionGuid' for the MI_Training database.The 'Legislations restricting its use' tabular attribute is in the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "target": null
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "name": "Metals (updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update display names",
                  "description": "This example demonstrates how to update the French and German display names of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": {
                      "fr": "Métaux",
                      "de": "Metalle"
                    }
                  }
                },
                "Example 3": {
                  "summary": "Remove fr display name",
                  "description": "This example demonstrates how to remove the French display name of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": {
                      "fr": null
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove all display names",
                  "description": "This example demonstrates how to remove all display names of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "displayNames": null
                  }
                },
                "Example 5": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Melting point' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000d-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "guid": "12345678-0013-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 6": {
                  "summary": "Update help path",
                  "description": "This example demonstrates how to update the 'HelpPath' property of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "helpPath": "html/attributenotes/metals.html"
                  }
                },
                "Example 7": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 8": {
                  "summary": "Update IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to update an attribute so that it should not be shown in search UIs. It will still be included in text searches. The example is for the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000).",
                  "value": {
                    "type": "discrete",
                    "isHiddenFromSearchCriteria": true
                  }
                },
                "Example 9": {
                  "summary": "Make discrete multi-valued",
                  "description": "This example demonstrates how to update the 'Metals' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 0000000b-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. You can similarly turn a multi-valued discrete attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "discrete",
                    "isMultiValued": true
                  }
                },
                "Example 10": {
                  "summary": "Make short text unique",
                  "description": "This example demonstrates how to update the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and make it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true
                  }
                },
                "Example 11": {
                  "summary": "Make point multi-valued",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued. Note that this won't work if the attribute is used in a smart link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true
                  }
                },
                "Example 12": {
                  "summary": "Make point multi-valued with parameter",
                  "description": "This example demonstrates how to update the 'Shape factor' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000144-0001-4fff-8fff-dd92ffff0000) and make it multi-valued with 'Temperature' as a parameter. Note that this won't work if the attribute is used in a smart link group index, expressions, X-Y charts or as linked attribute tabular column.You can similarly turn a multi-valued point attribute into a single-valued as long as there is no multi-valued data already existing.",
                  "value": {
                    "type": "point",
                    "isMultiValued": true,
                    "attributeParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ]
                  }
                },
                "Example 13": {
                  "summary": "Update unit",
                  "description": "This example demonstrates how to update the unit of the 'Reserves' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000088-0001-4fff-8fff-dd92ffff0000). We will change the unit from 'tonnes' to 'kg'",
                  "value": {
                    "type": "range",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    }
                  }
                },
                "Example 14": {
                  "summary": "Update multiple properties",
                  "description": "This example demonstrates that it is possible to change multiple attribute properties at once by updating the name of the 'Grain size' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 000000aa-0001-4fff-8fff-dd92ffff0000) and also making it unique. This will work as long as there is no pre-existing data which violates the constraint.",
                  "value": {
                    "type": "shortText",
                    "isUnique": true,
                    "name": "Grain size (updated)"
                  }
                },
                "Example 15": {
                  "summary": "Turn an attribute into a meta-attribute",
                  "description": "This example demonstrates how to turn an existing attribute into a meta-attribute of another attribute. We make the short text 'Color' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; attributeGuid = 00000169-0001-4fff-8fff-dd92ffff0000) become a meta-attribute of 'ISO name' short text attribute (guid = 000002cf-0001-4fff-8fff-dd92ffff0000).Note that if an attribute already had meta-attribute, it cannot be made a meta-attribute. Also, you cannot add a meta-attribute to another meta-attribute.",
                  "value": {
                    "type": "shortText",
                    "aboutAttribute": {
                      "guid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 16": {
                  "summary": "Add multiple parameters",
                  "description": "This example demonstrates how to update the 'Tensile strength with temperature' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '00000002-0001-4fff-8fff-dd92ffff0000') and add multiple parameters to it.",
                  "value": {
                    "type": "floatFunctional",
                    "attributeParameters": [
                      {
                        "type": "numeric",
                        "defaultValue": 5.0,
                        "interpolationMethod": "auto",
                        "scaleType": "notSet",
                        "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "type": "numeric",
                        "interpolationMethod": "linear",
                        "scaleType": "logarithmic",
                        "parameterGuid": "00000005-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "type": "discrete",
                        "defaultValue": {
                          "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                        },
                        "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ]
                  }
                },
                "Example 17": {
                  "summary": "Add additional parameter and set default content for Maths Functional Attribute",
                  "description": "This example demonstrates how to update the 'Fatigue strength model (stress range)' attribute from the 'MaterialUniverse' table from the MI_Training database (tableGuid = '0000dd92-0011-4fff-8fff-0000ffff0000'; attributeGuid = '745db76c-a991-41b6-9fd6-2e5f544f8ecb') by adding additional parameter to it and setting its default content.",
                  "value": {
                    "type": "mathsFunctional",
                    "attributeParameters": [
                      {
                        "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      }
                    ],
                    "defaultContent": {
                      "curveLabel": "Updated curve label",
                      "transposeAxes": true,
                      "useLogarithmicScale": true,
                      "freeParameter": {
                        "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                      },
                      "parameterContents": [
                        {
                          "type": "numeric",
                          "value": 15.0,
                          "parameterRange": {
                            "lowValue": 5.0,
                            "highValue": 100.0
                          },
                          "parameter": {
                            "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "numeric",
                          "parameterRange": {
                            "lowValue": -2.0
                          },
                          "parameter": {
                            "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                          }
                        },
                        {
                          "type": "discrete",
                          "parameterRange": {
                            "parameterValues": [
                              {
                                "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                              },
                              {
                                "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                              }
                            ]
                          },
                          "parameter": {
                            "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                          }
                        }
                      ]
                    }
                  }
                },
                "Example 18": {
                  "summary": "Update tabular columns",
                  "description": "This example demonstrates how to modify the tabular columns of the 'Legislations restricting its use' attribute from the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "tabularColumns": [
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": true,
                        "summaryRowText": "All Legislation Names",
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "18eab50a-6c30-4a1d-9205-29878a6044bd"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": true,
                        "summaryRowEnabled": false,
                        "rollUpType": "min",
                        "summaryRowRollUpType": "listDistinct",
                        "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                      },
                      {
                        "columnType": "linkedAttribute",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "0a553cb4-13f2-447b-bc55-3e68e1008b51"
                      },
                      {
                        "columnType": "localPoint",
                        "defaultThresholdType": "exists",
                        "showAsLink": false,
                        "summaryRowEnabled": false,
                        "rollUpType": "list",
                        "summaryRowRollUpType": "list",
                        "guid": "be3a1aa5-0b35-4d62-b512-a2923ed03e8d"
                      }
                    ],
                    "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                  }
                },
                "Example 19": {
                  "summary": "Update tabular target",
                  "description": "This example demonstrates how to modify the tabular target attribute of the 'Legislations restricting its use' attribute from 'Legislation ID' to 'Parent legislation ID'. The 'Legislations restricting its use' tabular attribute is in the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "target": {
                      "targetAttributeGuid": "a581f019-a3ba-41ca-b335-9fb63c417534"
                    }
                  }
                },
                "Example 20": {
                  "summary": "Remove tabular target",
                  "description": "This example demonstrates how to remove the tabular target of the 'Legislations restricting its use' attribute. Linked attribute columns will become 'unavailable'. The target can be reset, then the linked attribute columns will become available. The original target attribute is 'Legislation ID' ('targetAttributeGuid': '77e38bc0-d8ab-484d-a84c-a9ffec81afab') in table 'Legislations and Lists' ('targetTableGuid': '08a1f735-9b37-49bc-96b3-e46e070f6c17'), with 'targetDatabaseGuid' and 'targetDatabaseVersionGuid' for the MI_Training database.The 'Legislations restricting its use' tabular attribute is in the 'Restricted Substances' table from the MI_Training database (tableGuid = 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'; attributeGuid = 'c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc').",
                  "value": {
                    "type": "link",
                    "target": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttribute"
                },
                "examples": {
                  "Example 9": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "dateTime",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "ad27baf0-42e9-4136-bc96-9dbbf116e265"
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 10": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "discrete",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 11": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "type": "longText",
                            "name": "Notes",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "d822f3ef-8cfb-4ac8-bc7a-d5469dbaa42d"
                          }
                        ],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "range",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 12": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Chemical name",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "94c07750-4710-402b-aefd-4b7f8831a0a0"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Legislations restricting its use",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          },
                          "linkedColumn": {
                            "columnType": "linkedAttribute",
                            "linkedAttribute": {
                              "type": "discrete",
                              "isHiddenFromSearchCriteria": false,
                              "isProtected": false,
                              "table": {
                                "guid": "08a1f735-9b37-49bc-96b3-e46e070f6c17"
                              },
                              "name": "Rating",
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                            },
                            "showAsLink": false,
                            "summaryRowEnabled": true,
                            "summaryRowText": "Substance ES&H rating",
                            "rollUpType": "list",
                            "summaryRowRollUpType": "min",
                            "displayNames": {},
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "linkedTarget": {
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "link",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Delete an attribute.",
        "operationId": "DeleteAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Attribute in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttributeDeletionException"
                },
                "example": {
                  "message": "Cannot delete attribute with GUID '000000e3-0001-4fff-8fff-dd92ffff0000'.",
                  "code": "deletion",
                  "errors": [
                    {
                      "message": "It is being used in version controlled data.",
                      "reason": "usage",
                      "referencedByType": "versionControlledData"
                    },
                    {
                      "message": "It is being used in one or more expressions.",
                      "reason": "usage",
                      "referencedByType": "expression",
                      "referencedBy": [
                        {
                          "name": "Fatigue Model",
                          "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/meta-attributes": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get all meta-attributes in table",
        "operationId": "GetMetaAttributes",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttributesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/meta-attributes/{meta-attribute-guid}": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get meta-attribute in table",
        "operationId": "GetMetaAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "meta-attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttribute"
                },
                "examples": {
                  "Example 13": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "dateTime",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "ad27baf0-42e9-4136-bc96-9dbbf116e265"
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 14": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "discrete",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 15": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "type": "longText",
                            "name": "Notes",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "eddee488-4978-4fb5-9a77-56476047600d"
                          }
                        ],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "range",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 16": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Chemical name",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "94c07750-4710-402b-aefd-4b7f8831a0a0"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Legislations restricting its use",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          },
                          "linkedColumn": {
                            "columnType": "linkedAttribute",
                            "linkedAttribute": {
                              "type": "discrete",
                              "isHiddenFromSearchCriteria": false,
                              "isProtected": false,
                              "table": {
                                "guid": "08a1f735-9b37-49bc-96b3-e46e070f6c17"
                              },
                              "name": "Rating",
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                            },
                            "showAsLink": false,
                            "summaryRowEnabled": true,
                            "summaryRowText": "Substance ES&H rating",
                            "rollUpType": "list",
                            "summaryRowRollUpType": "min",
                            "displayNames": {},
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "linkedTarget": {
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "link",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or meta-attribute not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Update meta-attribute.",
        "operationId": "UpdateMetaAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "meta-attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "name": "Notes (flammability)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "guid": "12345678-1234-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 4": {
                  "summary": "Update IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to update an attribute so that it should not be shown in search UIs. It will still be included in text searches. The example is for the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "isHiddenFromSearchCriteria": true
                  }
                },
                "Example 5": {
                  "summary": "Turn a meta-attribute into an attribute",
                  "description": "This example demonstrates how to turn an existing meta-attribute into an attribute by removing its 'aboutAttribute'. We make the short text 'Notes' meta-attribute of the 'Flammability' attribute from the 'MaterialUniverse' table (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid = 00000298-0001-4fff-8fff-dd92ffff0000) become a standalone attribute.",
                  "value": {
                    "type": "longText",
                    "aboutAttribute": null
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "name": "Notes (flammability)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "guid": "12345678-1234-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 4": {
                  "summary": "Update IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to update an attribute so that it should not be shown in search UIs. It will still be included in text searches. The example is for the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "isHiddenFromSearchCriteria": true
                  }
                },
                "Example 5": {
                  "summary": "Turn a meta-attribute into an attribute",
                  "description": "This example demonstrates how to turn an existing meta-attribute into an attribute by removing its 'aboutAttribute'. We make the short text 'Notes' meta-attribute of the 'Flammability' attribute from the 'MaterialUniverse' table (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid = 00000298-0001-4fff-8fff-dd92ffff0000) become a standalone attribute.",
                  "value": {
                    "type": "longText",
                    "aboutAttribute": null
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "name": "Notes (flammability)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "guid": "12345678-1234-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 4": {
                  "summary": "Update IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to update an attribute so that it should not be shown in search UIs. It will still be included in text searches. The example is for the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "isHiddenFromSearchCriteria": true
                  }
                },
                "Example 5": {
                  "summary": "Turn a meta-attribute into an attribute",
                  "description": "This example demonstrates how to turn an existing meta-attribute into an attribute by removing its 'aboutAttribute'. We make the short text 'Notes' meta-attribute of the 'Flammability' attribute from the 'MaterialUniverse' table (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid = 00000298-0001-4fff-8fff-dd92ffff0000) become a standalone attribute.",
                  "value": {
                    "type": "longText",
                    "aboutAttribute": null
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "name": "Notes (flammability)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "guid": "12345678-1234-4fff-8fff-0000ffff0000"
                  }
                },
                "Example 3": {
                  "summary": "Update default threshold type",
                  "description": "This example demonstrates how to update the default threshold type of the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "defaultThresholdType": "equal"
                  }
                },
                "Example 4": {
                  "summary": "Update IsHiddenFromSearchCriteria",
                  "description": "This example demonstrates how to update an attribute so that it should not be shown in search UIs. It will still be included in text searches. The example is for the 'Notes' meta-attribute of the 'Flammability' attribute in the 'MaterialUniverse' table in the MI_Training database(tableGuid: 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid: 00000298-0001-4fff-8fff-dd92ffff0000)",
                  "value": {
                    "type": "longText",
                    "isHiddenFromSearchCriteria": true
                  }
                },
                "Example 5": {
                  "summary": "Turn a meta-attribute into an attribute",
                  "description": "This example demonstrates how to turn an existing meta-attribute into an attribute by removing its 'aboutAttribute'. We make the short text 'Notes' meta-attribute of the 'Flammability' attribute from the 'MaterialUniverse' table (tableGuid = 0000dd92-0011-4fff-8fff-0000ffff0000; metaAttributeGuid = 00000298-0001-4fff-8fff-dd92ffff0000) become a standalone attribute.",
                  "value": {
                    "type": "longText",
                    "aboutAttribute": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttribute"
                },
                "examples": {
                  "Example 17": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "dateTime",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "ad27baf0-42e9-4136-bc96-9dbbf116e265"
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 18": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "discrete",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 19": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "type": "longText",
                            "name": "Notes",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "e4c2be87-32df-4870-8b6d-bb71abbdf9f7"
                          }
                        ],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "range",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 20": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Chemical name",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "94c07750-4710-402b-aefd-4b7f8831a0a0"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Legislations restricting its use",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          },
                          "linkedColumn": {
                            "columnType": "linkedAttribute",
                            "linkedAttribute": {
                              "type": "discrete",
                              "isHiddenFromSearchCriteria": false,
                              "isProtected": false,
                              "table": {
                                "guid": "08a1f735-9b37-49bc-96b3-e46e070f6c17"
                              },
                              "name": "Rating",
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                            },
                            "showAsLink": false,
                            "summaryRowEnabled": true,
                            "summaryRowText": "Substance ES&H rating",
                            "rollUpType": "list",
                            "summaryRowRollUpType": "min",
                            "displayNames": {},
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "linkedTarget": {
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "link",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or meta-attribute not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Delete a meta-attribute.",
        "operationId": "DeleteMetaAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "meta-attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttributeDeletionException"
                },
                "example": {
                  "message": "Cannot delete attribute with GUID '04db2b62-9cac-457b-ac5a-94354002d6c8'.",
                  "code": "deletion",
                  "errors": [
                    {
                      "message": "It is being used in version controlled data.",
                      "reason": "usage",
                      "referencedByType": "versionControlledData"
                    },
                    {
                      "message": "It is being used in one or more search masks.",
                      "reason": "usage",
                      "referencedByType": "searchMask",
                      "referencedBy": [
                        {
                          "name": "Search mask that searches in Notes",
                          "guid": "ed43e0c3-847a-4355-bc03-82fbd7f1e42a"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or meta-attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes/{attribute-guid}/meta-attributes": {
      "get": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get meta-attributes for attribute",
        "operationId": "GetMetaAttributesForAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttributesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Create a new meta-attribute for attribute.",
        "operationId": "CreateMetaAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Short text meta-attribute",
                  "description": "This example demonstrates how to create a short text meta-attribute for the existing 'EPS Value' attribute (GUID = 000000b9-0001-4fff-8fff-dd92ffff0000 ) in the MaterialUniverse (GUID = 0000dd92-0011-4fff-8fff-0000ffff0000) table of the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Short Label"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Short text meta-attribute",
                  "description": "This example demonstrates how to create a short text meta-attribute for the existing 'EPS Value' attribute (GUID = 000000b9-0001-4fff-8fff-dd92ffff0000 ) in the MaterialUniverse (GUID = 0000dd92-0011-4fff-8fff-0000ffff0000) table of the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Short Label"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Short text meta-attribute",
                  "description": "This example demonstrates how to create a short text meta-attribute for the existing 'EPS Value' attribute (GUID = 000000b9-0001-4fff-8fff-dd92ffff0000 ) in the MaterialUniverse (GUID = 0000dd92-0011-4fff-8fff-0000ffff0000) table of the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Short Label"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateAttribute"
              },
              "examples": {
                "Example 1": {
                  "summary": "Short text meta-attribute",
                  "description": "This example demonstrates how to create a short text meta-attribute for the existing 'EPS Value' attribute (GUID = 000000b9-0001-4fff-8fff-dd92ffff0000 ) in the MaterialUniverse (GUID = 0000dd92-0011-4fff-8fff-0000ffff0000) table of the MI_Training database.",
                  "value": {
                    "type": "shortText",
                    "isUnique": false,
                    "defaultThresholdType": "exists",
                    "name": "Short Label"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttribute"
                },
                "examples": {
                  "Example 25": {
                    "summary": "Date-time attribute",
                    "description": "Example response for the date-time attribute 'Casting Date' in the 'Metals Pedigree' table of the 'MI Training database'.",
                    "value": {
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "DAT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Casting Date",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "dateTime",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "ad27baf0-42e9-4136-bc96-9dbbf116e265"
                      },
                      "displayNames": {
                        "fr": "Casting Date French Display Name"
                      },
                      "name": "Casting Date",
                      "guid": "fe9cbde6-756a-4b1d-a347-7d49e56ee90f"
                    }
                  },
                  "Example 26": {
                    "summary": "Discrete attribute",
                    "description": "Example response for the discrete attribute 'Metals' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "discreteType": {
                        "name": "MU Durability",
                        "guid": "00000083-0006-4fff-8fff-0000ffff0000"
                      },
                      "isMultiValued": false,
                      "defaultThresholdType": "atLeast",
                      "helpPath": "html/attributenotes/metals.html",
                      "info": {
                        "typeCode": "DCT",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": true,
                        "extendedName": "Metals",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "discrete",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 27": {
                    "summary": "Range attribute",
                    "description": "Example response for the range attribute 'Tensile strength' in the 'Materials Universe' table of the 'MI Training database'.",
                    "value": {
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "defaultThresholdType": "atLeast",
                      "info": {
                        "typeCode": "RNG",
                        "chartable": true,
                        "expressionable": true,
                        "linkable": true,
                        "extendedName": "Tensile strength",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [
                          {
                            "type": "longText",
                            "name": "Notes",
                            "guid": "8d7c8bb0-450f-4f9d-a717-ea4f5b56df74"
                          }
                        ],
                        "standardNames": [
                          {
                            "name": "Tensile strength",
                            "guid": "a5a22baa-2245-4fb5-b0c9-2ddb48b5ffc8"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [
                          {
                            "name": "Source of data (MaterialUniverse)",
                            "guid": "26bf7632-0efe-4c44-a97c-139cbe550989"
                          }
                        ],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "range",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Tensile strength",
                      "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 28": {
                    "summary": "Tabular attribute",
                    "description": "Example response for the tabular attribute 'Restricted substances associated with this material' in the 'Materials Universe' table of the 'MI Training database'..",
                    "value": {
                      "displayFullTable": false,
                      "displaySummaryRowInline": false,
                      "hideUnlinkedRows": true,
                      "target": {
                        "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                        "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0"
                      },
                      "tabularColumns": [
                        {
                          "columnType": "linkedAttribute",
                          "linkedAttribute": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Chemical name",
                            "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07"
                          },
                          "showAsLink": true,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Substance name",
                          "guid": "94c07750-4710-402b-aefd-4b7f8831a0a0"
                        },
                        {
                          "columnType": "localRange",
                          "defaultThresholdType": "atLeast",
                          "unit": {
                            "symbol": "%",
                            "guid": "00000005-0013-4fff-8fff-0000ffff0000"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": false,
                          "summaryRowText": "",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "list",
                          "displayNames": {},
                          "name": "Amount",
                          "guid": "5fc69b42-8bf0-4867-befa-4101cf12842b"
                        },
                        {
                          "columnType": "linkedColumn",
                          "linkedAttribute": {
                            "type": "link",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                            },
                            "name": "Legislations restricting its use",
                            "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc"
                          },
                          "linkedColumn": {
                            "columnType": "linkedAttribute",
                            "linkedAttribute": {
                              "type": "discrete",
                              "isHiddenFromSearchCriteria": false,
                              "isProtected": false,
                              "table": {
                                "guid": "08a1f735-9b37-49bc-96b3-e46e070f6c17"
                              },
                              "name": "Rating",
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45"
                            },
                            "showAsLink": false,
                            "summaryRowEnabled": true,
                            "summaryRowText": "Substance ES&H rating",
                            "rollUpType": "list",
                            "summaryRowRollUpType": "min",
                            "displayNames": {},
                            "name": "Legislation rating",
                            "guid": "49a720bd-55c4-44a3-a10a-5ae3b69f3100"
                          },
                          "linkedTarget": {
                            "targetDatabaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                            "targetDatabaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab"
                          },
                          "showAsLink": false,
                          "summaryRowEnabled": true,
                          "summaryRowText": "EH&S rating",
                          "rollUpType": "list",
                          "summaryRowRollUpType": "min",
                          "displayNames": {},
                          "name": "Legislation rating",
                          "guid": "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                        }
                      ],
                      "defaultThresholdType": "exists",
                      "info": {
                        "typeCode": "TABL",
                        "chartable": false,
                        "expressionable": false,
                        "linkable": false,
                        "extendedName": "Restricted substances associated with this material",
                        "isMetaAttribute": false,
                        "orderedMetaAttributes": [],
                        "standardNames": [
                          {
                            "name": "Restricted substances in this item",
                            "guid": "315d8839-ab9d-4b31-a27d-c128ebf34150"
                          }
                        ],
                        "primaryDataLinkGroups": [],
                        "foreignDataLinkGroups": [],
                        "primarySmartLinkGroups": [],
                        "foreignSmartLinkGroups": []
                      },
                      "type": "link",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                      },
                      "displayNames": {},
                      "name": "Restricted substances associated with this material",
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttributeCreationException"
                },
                "example": {
                  "message": "Cannot create meta-attribute 'Notes'.",
                  "code": "attributeCreation",
                  "errors": [
                    {
                      "message": "The name or GUID is not valid.",
                      "errors": [
                        {
                          "message": "MetaAttribute with GUID '949d3306-96b7-4f6c-93f2-cc53f241d91b' already exists.",
                          "guid": "949d3306-96b7-4f6c-93f2-cc53f241d91b",
                          "reason": "entityAlreadyExists",
                          "entityType": "metaAttribute"
                        }
                      ],
                      "reason": "namedEntity"
                    },
                    {
                      "message": "Cannot have a meta-attribute as an 'About attribute'.",
                      "reason": "aboutAttributeCannotBeMeta"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes/{attribute-guid}:validate": {
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Validates the provided value against the attributes data rules.",
        "operationId": "ValidateAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaValidateAttributeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaValidateAttributeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaValidateAttributeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaValidateAttributeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttributeValidateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/meta-attributes/{meta-attribute-guid}:validate": {
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Validates the provided value against the meta attributes data rules.",
        "operationId": "ValidateMetaAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "meta-attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaValidateAttributeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaValidateAttributeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaValidateAttributeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaValidateAttributeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAttributeValidateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or meta-attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes:query": {
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get attributes in table, populate the requested properties. Optionally filter the returned attributes.",
        "operationId": "QueryAttributes",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all attributes with unit and meta attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "info": {
                        "orderedMetaAttributes": {
                          "type": true,
                          "name": true
                        }
                      },
                      "unit": {
                        "symbol": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "helpPath": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true,
                        "orderedMetaAttributes": {
                          "type": true,
                          "name": true,
                          "guid": true
                        }
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch all tabular attributes, with tabular columns and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "link"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch all short text or long text attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 5": {
                  "summary": "Fetch attribute with name \"Young's modulus\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Young's modulus"
                      ]
                    }
                  }
                },
                "Example 6": {
                  "summary": "Fetch attributes with matching GUID",
                  "description": "This example demonstrates how to find attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "0000003f-0001-4fff-8fff-dd92ffff0000",
                        "000000e3-0001-4fff-8fff-dd92ffff0000"
                      ]
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all attributes with unit and meta attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "info": {
                        "orderedMetaAttributes": {
                          "type": true,
                          "name": true
                        }
                      },
                      "unit": {
                        "symbol": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "helpPath": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true,
                        "orderedMetaAttributes": {
                          "type": true,
                          "name": true,
                          "guid": true
                        }
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch all tabular attributes, with tabular columns and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "link"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch all short text or long text attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 5": {
                  "summary": "Fetch attribute with name \"Young's modulus\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Young's modulus"
                      ]
                    }
                  }
                },
                "Example 6": {
                  "summary": "Fetch attributes with matching GUID",
                  "description": "This example demonstrates how to find attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "0000003f-0001-4fff-8fff-dd92ffff0000",
                        "000000e3-0001-4fff-8fff-dd92ffff0000"
                      ]
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all attributes with unit and meta attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "info": {
                        "orderedMetaAttributes": {
                          "type": true,
                          "name": true
                        }
                      },
                      "unit": {
                        "symbol": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "helpPath": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true,
                        "orderedMetaAttributes": {
                          "type": true,
                          "name": true,
                          "guid": true
                        }
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch all tabular attributes, with tabular columns and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "link"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch all short text or long text attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 5": {
                  "summary": "Fetch attribute with name \"Young's modulus\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Young's modulus"
                      ]
                    }
                  }
                },
                "Example 6": {
                  "summary": "Fetch attributes with matching GUID",
                  "description": "This example demonstrates how to find attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "0000003f-0001-4fff-8fff-dd92ffff0000",
                        "000000e3-0001-4fff-8fff-dd92ffff0000"
                      ]
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all attributes with unit and meta attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "info": {
                        "orderedMetaAttributes": {
                          "type": true,
                          "name": true
                        }
                      },
                      "unit": {
                        "symbol": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "helpPath": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true,
                        "orderedMetaAttributes": {
                          "type": true,
                          "name": true,
                          "guid": true
                        }
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch all tabular attributes, with tabular columns and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "link"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch all short text or long text attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 5": {
                  "summary": "Fetch attribute with name \"Young's modulus\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Young's modulus"
                      ]
                    }
                  }
                },
                "Example 6": {
                  "summary": "Fetch attributes with matching GUID",
                  "description": "This example demonstrates how to find attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "0000003f-0001-4fff-8fff-dd92ffff0000",
                        "000000e3-0001-4fff-8fff-dd92ffff0000"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaQueryAttributesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/meta-attributes:query": {
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get meta-attributes in table, populate the requested properties. Optionally filter the returned meta-attributes.",
        "operationId": "QueryMetaAttributes",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all meta-attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all meta-attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch all short text or long text meta-attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch meta-attributes with name \"Notes\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Notes"
                      ]
                    }
                  }
                },
                "Example 5": {
                  "summary": "Fetch meta-attributes with matching GUID",
                  "description": "This example demonstrates how to find meta-attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "05dc05c6-7e15-4790-81e2-34d4ea8750a8"
                      ]
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all meta-attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all meta-attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch all short text or long text meta-attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch meta-attributes with name \"Notes\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Notes"
                      ]
                    }
                  }
                },
                "Example 5": {
                  "summary": "Fetch meta-attributes with matching GUID",
                  "description": "This example demonstrates how to find meta-attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "05dc05c6-7e15-4790-81e2-34d4ea8750a8"
                      ]
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all meta-attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all meta-attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch all short text or long text meta-attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch meta-attributes with name \"Notes\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Notes"
                      ]
                    }
                  }
                },
                "Example 5": {
                  "summary": "Fetch meta-attributes with matching GUID",
                  "description": "This example demonstrates how to find meta-attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "05dc05c6-7e15-4790-81e2-34d4ea8750a8"
                      ]
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all meta-attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all meta-attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch all short text or long text meta-attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch meta-attributes with name \"Notes\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Notes"
                      ]
                    }
                  }
                },
                "Example 5": {
                  "summary": "Fetch meta-attributes with matching GUID",
                  "description": "This example demonstrates how to find meta-attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "05dc05c6-7e15-4790-81e2-34d4ea8750a8"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaQueryAttributesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/attributes/{attribute-guid}/meta-attributes:query": {
      "post": {
        "tags": [
          "Schema - Attributes"
        ],
        "summary": "Get meta-attributes for attribute, populate the requested properties. Optionally filter the returned meta-attributes.",
        "operationId": "QueryMetaAttributesForAttribute",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "attribute-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 6": {
                  "summary": "Fetch all meta-attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 7": {
                  "summary": "Fetch all meta-attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 8": {
                  "summary": "Fetch all short text or long text meta-attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 9": {
                  "summary": "Fetch meta-attributes with name \"Notes\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Notes"
                      ]
                    }
                  }
                },
                "Example 10": {
                  "summary": "Fetch meta-attributes with matching GUID",
                  "description": "This example demonstrates how to find meta-attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "05dc05c6-7e15-4790-81e2-34d4ea8750a8"
                      ]
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 6": {
                  "summary": "Fetch all meta-attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 7": {
                  "summary": "Fetch all meta-attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 8": {
                  "summary": "Fetch all short text or long text meta-attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 9": {
                  "summary": "Fetch meta-attributes with name \"Notes\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Notes"
                      ]
                    }
                  }
                },
                "Example 10": {
                  "summary": "Fetch meta-attributes with matching GUID",
                  "description": "This example demonstrates how to find meta-attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "05dc05c6-7e15-4790-81e2-34d4ea8750a8"
                      ]
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 6": {
                  "summary": "Fetch all meta-attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 7": {
                  "summary": "Fetch all meta-attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 8": {
                  "summary": "Fetch all short text or long text meta-attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 9": {
                  "summary": "Fetch meta-attributes with name \"Notes\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Notes"
                      ]
                    }
                  }
                },
                "Example 10": {
                  "summary": "Fetch meta-attributes with matching GUID",
                  "description": "This example demonstrates how to find meta-attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "05dc05c6-7e15-4790-81e2-34d4ea8750a8"
                      ]
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryAttributesRequest"
              },
              "examples": {
                "Example 6": {
                  "summary": "Fetch all meta-attributes",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 7": {
                  "summary": "Fetch all meta-attributes with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "type": true,
                      "defaultThresholdType": true,
                      "isHiddenFromSearchCriteria": true,
                      "isMultiValued": true,
                      "isFunctionalRange": true,
                      "axisName": {
                        "name": true,
                        "displayNames": true
                      },
                      "info": {
                        "chartable": true
                      },
                      "unit": {
                        "name": true,
                        "symbol": true,
                        "relativeSymbol": true,
                        "equation": true,
                        "guid": true
                      },
                      "discreteType": {
                        "isOrdered": true,
                        "name": true,
                        "guid": true
                      },
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true,
                        "guid": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "target": {
                        "targetDatabaseGuid": true,
                        "targetDatabaseVersionGuid": true,
                        "targetTableGuid": true,
                        "targetAttributeGuid": true
                      },
                      "tabularColumns": {
                        "name": true,
                        "guid": true
                      },
                      "attributeParameters": {
                        "name": true,
                        "guid": true
                      },
                      "expressions": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 8": {
                  "summary": "Fetch all short text or long text meta-attributes, with data rule and other custom properties",
                  "value": {
                    "properties": {
                      "type": true,
                      "isHiddenFromSearchCriteria": true,
                      "dataRule": {
                        "description": true,
                        "regularExpression": true,
                        "name": true
                      },
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "type": [
                        "shortText",
                        "longText"
                      ]
                    }
                  }
                },
                "Example 9": {
                  "summary": "Fetch meta-attributes with name \"Notes\"",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Notes"
                      ]
                    }
                  }
                },
                "Example 10": {
                  "summary": "Fetch meta-attributes with matching GUID",
                  "description": "This example demonstrates how to find meta-attributes by GUID in table 'MaterialUniverse' (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from database 'MI Training'.",
                  "value": {
                    "properties": {
                      "type": true,
                      "aboutAttribute": {
                        "type": true,
                        "name": true,
                        "guid": true
                      },
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "05dc05c6-7e15-4790-81e2-34d4ea8750a8"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaQueryAttributesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Attribute not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/configurations/{configuration-type}": {
      "get": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Get all configurations of given type",
        "operationId": "GetConfigurations",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer",
                "materialModelPicker"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaConfigurationsInfo"
                },
                "example": {
                  "configurations": [
                    {
                      "name": "examples",
                      "guid": "997e8f58-bd2a-494f-9a99-18b3d395ad0a"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Create a new configuration.",
        "operationId": "CreateConfiguration",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer",
                "materialModelPicker"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Configuration",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database.",
                  "value": {
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "basic configuration"
                  }
                },
                "Example 2": {
                  "summary": "Configuration with specified guid and description",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database with a specified guid and description. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "description": "Basic configuration that can be used in explore.",
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "basic configuration",
                    "guid": "41cfa2c1-769c-4e13-911c-6c92307adbfe"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Configuration",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database.",
                  "value": {
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "basic configuration"
                  }
                },
                "Example 2": {
                  "summary": "Configuration with specified guid and description",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database with a specified guid and description. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "description": "Basic configuration that can be used in explore.",
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "basic configuration",
                    "guid": "41cfa2c1-769c-4e13-911c-6c92307adbfe"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Configuration",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database.",
                  "value": {
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "basic configuration"
                  }
                },
                "Example 2": {
                  "summary": "Configuration with specified guid and description",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database with a specified guid and description. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "description": "Basic configuration that can be used in explore.",
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "basic configuration",
                    "guid": "41cfa2c1-769c-4e13-911c-6c92307adbfe"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Configuration",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database.",
                  "value": {
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "basic configuration"
                  }
                },
                "Example 2": {
                  "summary": "Configuration with specified guid and description",
                  "description": "This example demonstrates how to create a new Explore configuration for the MI_Training database with a specified guid and description. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "description": "Basic configuration that can be used in explore.",
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "basic configuration",
                    "guid": "41cfa2c1-769c-4e13-911c-6c92307adbfe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaConfiguration"
                },
                "example": {
                  "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                  "name": "examples",
                  "guid": "997e8f58-bd2a-494f-9a99-18b3d395ad0a"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "File with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create an Explore Configuration file with the name 'examples', but there is already a file with that name.",
                    "value": {
                      "message": "Cannot create Configuration file 'examples'.",
                      "code": "fileCreation",
                      "name": "examples",
                      "folderType": "configuration",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "File with name 'examples' already exists in this Folder.",
                              "name": "examples",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "file"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/configurations/{configuration-type}/{configuration-guid}": {
      "get": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Get individual configuration",
        "operationId": "GetConfiguration",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer",
                "materialModelPicker"
              ],
              "type": "string"
            }
          },
          {
            "name": "configuration-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaConfiguration"
                },
                "example": {
                  "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                  "name": "examples",
                  "guid": "997e8f58-bd2a-494f-9a99-18b3d395ad0a"
                }
              }
            }
          },
          "404": {
            "description": "Database or configuration not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Update a configuration.",
        "operationId": "UpdateConfiguration",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer",
                "materialModelPicker"
              ],
              "type": "string"
            }
          },
          {
            "name": "configuration-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a configuration",
                  "description": "This example shows how to update all properties of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "description": "Updated description for MI_Training Explore 'examples' configuration.",
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "examples (updated)",
                    "guid": "1b556cb3-f704-43a9-9d87-80bc199d5dd4"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example shows how to update the 'Name' property of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database.",
                  "value": {
                    "name": "examples (updated)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a configuration",
                  "description": "This example shows how to update all properties of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "description": "Updated description for MI_Training Explore 'examples' configuration.",
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "examples (updated)",
                    "guid": "1b556cb3-f704-43a9-9d87-80bc199d5dd4"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example shows how to update the 'Name' property of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database.",
                  "value": {
                    "name": "examples (updated)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a configuration",
                  "description": "This example shows how to update all properties of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "description": "Updated description for MI_Training Explore 'examples' configuration.",
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "examples (updated)",
                    "guid": "1b556cb3-f704-43a9-9d87-80bc199d5dd4"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example shows how to update the 'Name' property of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database.",
                  "value": {
                    "name": "examples (updated)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateConfiguration"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a configuration",
                  "description": "This example shows how to update all properties of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "description": "Updated description for MI_Training Explore 'examples' configuration.",
                    "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                    "name": "examples (updated)",
                    "guid": "1b556cb3-f704-43a9-9d87-80bc199d5dd4"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example shows how to update the 'Name' property of the Explore 'examples' configuration (guid = 997e8f58-bd2a-494f-9a99-18b3d395ad0a) from the MI_Training database.",
                  "value": {
                    "name": "examples (updated)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaConfiguration"
                },
                "example": {
                  "value": "{\"configurations\": [{\"key\": \"training-materials\",\"displayName\": \"MI Training Materials\",\"default\": true,\"groups\": [\"MI Training examples\"],\"table\": \"MaterialUniverse\",\"loadDataOnDemand\": false,\"description\": \"Explore MaterialUniverse data in the MI Training database\",\"searchLayout\": \"All bulk materials\",\"dataSheetLayout\": \"All bulk materials\",\"editableDatasheetLayout\": \"All bulk materials\",\"searchListLayout\": \"Explore list layout Materials\",\"newRecordLocation\": \"NEW RECORDS/{Base}\",\"subset\": \"All bulk materials\",\"logsliders\": true,\"xyChart\": {\"colorAttribute\": \"UV radiation (sunlight)\",\"colorAttribute2\": \"Flammability\",\"colorAttribute3\": \"Food contact\",\"colorAttribute4\": \"Material form\",\"colorAttribute5\": \"Organic solvents\",\"colorAttribute6\": \"Oxidation at 500C\",\"colorAttribute7\": \"Strong acids\",\"colorAttribute8\": \"Strong alkalis\",\"colorAttribute9\": \"Weak acids\",\"colorAttribute10\": \"Weak alkalis\",\"colorAttribute11\": \"Water (fresh)\",\"colorAttribute12\": \"Water (salt)\",\"colorAttribute13\": \"Transparency\",\"colorAttribute14\": \"Wear resistance\",\"xAttribute\": \"Density\",\"yAttribute\": \"Yield strength (elastic limit)\",\"preventAxisChange\": false,\"xAxisLogarithmic\": true,\"yAxisLogarithmic\": true},\"showBlanks\": false,\"reportsDisabled\": false,\"exportersDisabled\": false,\"tabularEditingEnabled\": true,\"configSwitching\": \"keyOnly\",\"workflowEnabled\": true,\"useCustomFormatters\": {\"Recycle fraction in current supply\": \"recyclingPercent\",\"Recycle\": \"recyclingBool\",\"Biodegrade\": \"biodegradeBool\",\"UV radiation (sunlight)\": \"uvradiationsunlightDiscrete\",\"Flammability\": \"flammabilityDiscrete\",\"Food contact\": \"foodcontactDiscrete\",\"Material form\": \"materialformDiscrete\",\"Organic solvents\": \"organicsolventsDiscrete\",\"Oxidation at 500C\": \"oxidationat500cDiscrete\",\"Strong acids\": \"strongacidsDiscrete\",\"Strong alkalis\": \"strongalkalisDiscrete\",\"Weak acids\": \"weakacidsDiscrete\",\"Weak alkalis\": \"weakalkalisDiscrete\",\"Water (fresh)\": \"waterfreshDiscrete\",\"Water (salt)\": \"watersaltDiscrete\",\"Transparency\": \"transparencyDiscrete\",\"Wear resistance\": \"wearresistanceDiscrete\",\"A renewable resource?\": \"arenewableresourceBool\",\"Combust for energy recovery\": \"combustforenergyrecoveryBool\",\"Downcycle\": \"downcycleBool\",\"Flame retardant additive\": \"flameretardantadditiveBool\",\"Landfill\": \"landfillBool\",\"RoHS (EU) compliant grades?\": \"rohseucompliantgradesBool\",\"Substance declaration available?\": \"substancedeclarationavailableBool\"}}],\"customFormatterDefinitions\": {\"recyclingBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleYes.png\",\"tooltipValue\": \"Can be recycled\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/RecycleNo.png\",\"tooltipValue\": \"Can not be recycled\"},\"chart\": {\"renderColor\": \"red\"}}]},\"biodegradeBool\": {\"attributeFormatter\": {\"list\": {\"columnHeader\": false,\"columnWidth\": 40}},\"valueFormatters\": [{\"match\": true,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafGreen.png\",\"tooltipValue\": \"Can be biodegraded\"},\"chart\": {\"renderColor\": \"green\"}},{\"match\": false,\"list\": {\"iconUrl\": \"/mi_servicelayer/Assets/v1.svc/HelpPageFiles/MI_Training/ExploreImages/LeafRed.png\",\"tooltipValue\": \"Can not be biodegraded\"},\"chart\": {\"renderColor\": \"red\"}}]}}}",
                  "name": "examples",
                  "guid": "997e8f58-bd2a-494f-9a99-18b3d395ad0a"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename a Configuration file to '<new-file>'.",
                    "value": {
                      "message": "Cannot update Configuration file with GUID 'a39f3322-d46f-4d5b-a7ef-cf934f308e48'.",
                      "code": "fileUpdate",
                      "fileGuid": "a39f3322-d46f-4d5b-a7ef-cf934f308e48",
                      "folderType": "configuration",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or configuration not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Delete a configuration",
        "operationId": "DeleteConfiguration",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer",
                "materialModelPicker"
              ],
              "type": "string"
            }
          },
          {
            "name": "configuration-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or configuration not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/configurations/{configuration-type}/{configuration-guid}:export": {
      "get": {
        "tags": [
          "Schema - Configurations"
        ],
        "summary": "Get individual configuration as a file",
        "operationId": "ExportConfiguration",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "configuration-type",
            "in": "path",
            "description": "The configuration type.",
            "required": true,
            "schema": {
              "enum": [
                "explore",
                "proExplore",
                "bomAnalyzer",
                "materialModelPicker"
              ],
              "type": "string"
            }
          },
          {
            "name": "configuration-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "404": {
            "description": "Database or configuration not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/constants": {
      "get": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Get all constants",
        "operationId": "GetConstants",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaConstantsInfo"
                },
                "example": {
                  "constants": [
                    {
                      "name": "PI",
                      "guid": "00000001-0004-4fff-8fff-0000ffff0000"
                    },
                    {
                      "name": "Speed of Light in Vacuum",
                      "guid": "0000000f-0004-4fff-8fff-0000ffff0000"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Create a new constant.",
        "operationId": "CreateConstant",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which constant will be created",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "description": "Constant to add to database",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Constant",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant"
                  }
                },
                "Example 2": {
                  "summary": "Constant with specified guid",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant (guid)",
                    "guid": "bbbe805e-09f4-4f9c-920d-c6219c68c092"
                  }
                },
                "Example 3": {
                  "summary": "Constant with specified unit",
                  "description": "This example demonstrates how to create a new constant with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum (guid and unit)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Constant",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant"
                  }
                },
                "Example 2": {
                  "summary": "Constant with specified guid",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant (guid)",
                    "guid": "bbbe805e-09f4-4f9c-920d-c6219c68c092"
                  }
                },
                "Example 3": {
                  "summary": "Constant with specified unit",
                  "description": "This example demonstrates how to create a new constant with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum (guid and unit)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Constant",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant"
                  }
                },
                "Example 2": {
                  "summary": "Constant with specified guid",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant (guid)",
                    "guid": "bbbe805e-09f4-4f9c-920d-c6219c68c092"
                  }
                },
                "Example 3": {
                  "summary": "Constant with specified unit",
                  "description": "This example demonstrates how to create a new constant with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum (guid and unit)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Constant",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant"
                  }
                },
                "Example 2": {
                  "summary": "Constant with specified guid",
                  "description": "This example demonstrates how to create a new constant for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": 0.0072973525693,
                    "name": "fine-structure constant (guid)",
                    "guid": "bbbe805e-09f4-4f9c-920d-c6219c68c092"
                  }
                },
                "Example 3": {
                  "summary": "Constant with specified unit",
                  "description": "This example demonstrates how to create a new constant with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum (guid and unit)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaConstant"
                },
                "example": {
                  "unit": {
                    "symbol": "m/s",
                    "guid": "00000097-0013-4fff-8fff-0000ffff0000"
                  },
                  "value": 300000000.0,
                  "name": "Speed of Light in Vacuum",
                  "guid": "0000000f-0004-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/constants/{constant-guid}": {
      "get": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Get individual constant",
        "operationId": "GetConstant",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which constant will be search for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "constant-guid",
            "in": "path",
            "description": "Guid of requested constant",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaConstant"
                },
                "example": {
                  "unit": {
                    "symbol": "m/s",
                    "guid": "00000097-0013-4fff-8fff-0000ffff0000"
                  },
                  "value": 300000000.0,
                  "name": "Speed of Light in Vacuum",
                  "guid": "0000000f-0004-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database or constant not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Update constant.",
        "operationId": "UpdateConstant",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which constant will be search for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "constant-guid",
            "in": "path",
            "description": "Guid of constant to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Constant data to be updated",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a constant",
                  "description": "This example shows how to update all properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum",
                    "guid": "6dcff352-e6f3-4b26-9dbd-b79495181273"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "characteristic impedance of vacuum"
                  }
                },
                "Example 3": {
                  "summary": "Update guid and unit",
                  "description": "This example shows how to update the 'Guid' and 'Unit' properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "guid": "02f2a6de-4686-483c-a88a-a66f6a46b602"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a constant",
                  "description": "This example shows how to update all properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum",
                    "guid": "6dcff352-e6f3-4b26-9dbd-b79495181273"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "characteristic impedance of vacuum"
                  }
                },
                "Example 3": {
                  "summary": "Update guid and unit",
                  "description": "This example shows how to update the 'Guid' and 'Unit' properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "guid": "02f2a6de-4686-483c-a88a-a66f6a46b602"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a constant",
                  "description": "This example shows how to update all properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum",
                    "guid": "6dcff352-e6f3-4b26-9dbd-b79495181273"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "characteristic impedance of vacuum"
                  }
                },
                "Example 3": {
                  "summary": "Update guid and unit",
                  "description": "This example shows how to update the 'Guid' and 'Unit' properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "guid": "02f2a6de-4686-483c-a88a-a66f6a46b602"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateConstant"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a constant",
                  "description": "This example shows how to update all properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "value": 376.730313668,
                    "name": "characteristic impedance of vacuum",
                    "guid": "6dcff352-e6f3-4b26-9dbd-b79495181273"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "characteristic impedance of vacuum"
                  }
                },
                "Example 3": {
                  "summary": "Update guid and unit",
                  "description": "This example shows how to update the 'Guid' and 'Unit' properties of the 'Speed of light in Vacuum' constant (guid = 0000000f-0004-4fff-8fff-0000ffff0000) from the MI_Training database. Its unit is changed to 'Ohm'",
                  "value": {
                    "unitGuid": "00000059-0013-4fff-8fff-0000ffff0000",
                    "guid": "02f2a6de-4686-483c-a88a-a66f6a46b602"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaConstant"
                },
                "example": {
                  "unit": {
                    "symbol": "m/s",
                    "guid": "00000097-0013-4fff-8fff-0000ffff0000"
                  },
                  "value": 300000000.0,
                  "name": "Speed of Light in Vacuum",
                  "guid": "0000000f-0004-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or constant not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Constants"
        ],
        "summary": "Delete a constant",
        "operationId": "DeleteConstant",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which constant will be search for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "constant-guid",
            "in": "path",
            "description": "Guid of constant to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Constant in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaConstantDeletionException"
                },
                "example": {
                  "message": "Cannot delete constant with GUID '00000001-0004-4fff-8fff-0000ffff0000'.",
                  "code": "deletion",
                  "errors": [
                    {
                      "message": "It is being used in one or more expressions.",
                      "reason": "usage",
                      "referencedByType": "expression",
                      "referencedBy": [
                        {
                          "name": "Fatigue Model",
                          "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or constant not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/data-rules": {
      "get": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Gets all data rules for a given database.",
        "operationId": "GetDataRules",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataRulesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Create a new data rule",
        "operationId": "CreateDataRule",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateDataRule"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data rule for attributes",
                  "description": "This example demonstrates how to create a new data rule.",
                  "value": {
                    "description": "Only numeric digits are allowed.",
                    "regularExpression": "^[0-9]*$",
                    "name": "digits only"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateDataRule"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data rule for attributes",
                  "description": "This example demonstrates how to create a new data rule.",
                  "value": {
                    "description": "Only numeric digits are allowed.",
                    "regularExpression": "^[0-9]*$",
                    "name": "digits only"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateDataRule"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data rule for attributes",
                  "description": "This example demonstrates how to create a new data rule.",
                  "value": {
                    "description": "Only numeric digits are allowed.",
                    "regularExpression": "^[0-9]*$",
                    "name": "digits only"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateDataRule"
              },
              "examples": {
                "Example 1": {
                  "summary": "Data rule for attributes",
                  "description": "This example demonstrates how to create a new data rule.",
                  "value": {
                    "description": "Only numeric digits are allowed.",
                    "regularExpression": "^[0-9]*$",
                    "name": "digits only"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataRule"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/data-rules/{data-rule-guid}": {
      "get": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Gets a data rule for a given database and guid.",
        "operationId": "GetDataRule",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "data-rule-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataRule"
                }
              }
            }
          },
          "404": {
            "description": "Database or data rule not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Edit a data rule",
        "operationId": "UpdateDataRule",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "data-rule-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDataRule"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDataRule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDataRule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDataRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDataRule"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or data rule name not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Data Rules"
        ],
        "summary": "Delete a data rule.",
        "operationId": "DeleteDataRule",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "data-rule-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or data rule not found."
          }
        }
      }
    },
    "/v1alpha/databases": {
      "get": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Lists all databases that the user can see.",
        "operationId": "GetAllDatabases",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "schema": {
              "enum": [
                "read",
                "write",
                "powerUser",
                "grant",
                "admin"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabasesInfo"
                },
                "example": {
                  "databases": [
                    {
                      "key": "MI_Training",
                      "status": "Ok",
                      "isReadOnly": false,
                      "isLocked": false,
                      "name": "MI Training",
                      "guid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "versionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "indexInSync": true,
                      "schemaVersion": "2022.08.18.01"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Adds a database to the MI server. Only available to users in the System Administrator role.",
        "operationId": "AddDatabase",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddDatabase"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddDatabase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddDatabase"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddDatabase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSlimDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}": {
      "get": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Returns details for a given database.",
        "operationId": "GetDatabase",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabase"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Removes the database from the MI server. Only available to users in the System Administrator role.",
        "operationId": "RemoveDatabase",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "Bad request. Returned if database is in the \"Unloading\" state"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Update database details.",
        "operationId": "UpdateDatabase",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "allow-reload",
            "in": "query",
            "description": "This must be set to true if any of the following properties are patched:\r\n            DatabaseKey, DataSource, UseIntegratedSecurity, SqlUserName, SqlPassword, InitialCatalog, Language, Guid.\r\n            The database will reload after the changes have been applied.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDatabase"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update everything in a database",
                  "description": "This example shows how to update all properties of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)",
                    "company": "ANSYS, Inc. (updated)",
                    "notes": "MI Training Database for Granta MI v2022R2 and above. This database has been developed to support training classes. Any other use of this database will not be supported by Ansys Granta. (Updated)",
                    "currencyCode": "PLN",
                    "versionGuid": "c6a1fa6b-e232-4120-8fc6-803594e878a1",
                    "guid": "4a866964-606d-4a0b-8111-eb9206ae1c09",
                    "name": "MI Training (Updated)"
                  }
                },
                "Update the author": {
                  "summary": "This example shows how to update the 'Author' property of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDatabase"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update everything in a database",
                  "description": "This example shows how to update all properties of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)",
                    "company": "ANSYS, Inc. (updated)",
                    "notes": "MI Training Database for Granta MI v2022R2 and above. This database has been developed to support training classes. Any other use of this database will not be supported by Ansys Granta. (Updated)",
                    "currencyCode": "PLN",
                    "versionGuid": "c6a1fa6b-e232-4120-8fc6-803594e878a1",
                    "guid": "4a866964-606d-4a0b-8111-eb9206ae1c09",
                    "name": "MI Training (Updated)"
                  }
                },
                "Update the author": {
                  "summary": "This example shows how to update the 'Author' property of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDatabase"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update everything in a database",
                  "description": "This example shows how to update all properties of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)",
                    "company": "ANSYS, Inc. (updated)",
                    "notes": "MI Training Database for Granta MI v2022R2 and above. This database has been developed to support training classes. Any other use of this database will not be supported by Ansys Granta. (Updated)",
                    "currencyCode": "PLN",
                    "versionGuid": "c6a1fa6b-e232-4120-8fc6-803594e878a1",
                    "guid": "4a866964-606d-4a0b-8111-eb9206ae1c09",
                    "name": "MI Training (Updated)"
                  }
                },
                "Update the author": {
                  "summary": "This example shows how to update the 'Author' property of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDatabase"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update everything in a database",
                  "description": "This example shows how to update all properties of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)",
                    "company": "ANSYS, Inc. (updated)",
                    "notes": "MI Training Database for Granta MI v2022R2 and above. This database has been developed to support training classes. Any other use of this database will not be supported by Ansys Granta. (Updated)",
                    "currencyCode": "PLN",
                    "versionGuid": "c6a1fa6b-e232-4120-8fc6-803594e878a1",
                    "guid": "4a866964-606d-4a0b-8111-eb9206ae1c09",
                    "name": "MI Training (Updated)"
                  }
                },
                "Update the author": {
                  "summary": "This example shows how to update the 'Author' property of the MI_Training database.",
                  "value": {
                    "author": "Ansys Granta Technical Training (Updated)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases/default": {
      "get": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Returns details for a default database or null if the default database is not set or user cannot see it.",
        "operationId": "GetDefaultDatabase",
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabase"
                }
              }
            }
          },
          "204": {
            "description": "No default database set."
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Sets the default database.",
        "operationId": "UpdateDefaultDatabase",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDefaultDatabase"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDefaultDatabase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDefaultDatabase"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDefaultDatabase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases:validate": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Validates whether a database can be added to MI server. Only available to users in the System Administrator role.",
        "operationId": "ValidateDatabaseToAdd",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddDatabase"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddDatabase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddDatabase"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddDatabase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAddDatabaseValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:upgrade": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Upgrade a database to the latest schema version. Only available to users in the System Administrator role.",
        "operationId": "UpgradeDatabase",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSlimDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Returned if database is in the \"Loading\", \"Unloading\" or \"Unknown\" state"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases:upgrade-external": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Upgrades an external database to the latest schema version. Only available to users in the System Administrator role.",
        "operationId": "UpgradeDatabaseNotAddedToMi",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaConnectionDetails"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaConnectionDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaConnectionDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaConnectionDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "Bad request. Returned if connecting user is not a db_owner on the database."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:reload": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Reloads a database. Only available to users in the System Administrator role.",
        "operationId": "ReloadDatabase",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSlimDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Returned if database is in the \"Loading\", \"Unloading\", \"SchemaUpgradeRequired\" or \"SchemaDowngradeRequired\" state"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:lock": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Lock database",
        "operationId": "LockDatabase",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database to lock",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:unlock": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Unlock database",
        "operationId": "UnlockDatabase",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database to unlock",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabase"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:outbound-links": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Get all link groups and tabular attributes pointing from the database, i.e. the source of the link is in the given database.\r\nMay include links where the target is in the same database, or where the target cannot be resolved (e.g. the target database is not loaded).",
        "operationId": "GetOutboundLinks",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The link types to include in the response. If not provided, all link types are included.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GsaLinkAttributeType"
              }
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaLinksInfo"
                },
                "example": {
                  "links": [
                    {
                      "type": "recordLink",
                      "reverseName": "Training Exercise",
                      "reverseDisplayNames": {},
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0404f83b-64fb-47b1-8f3c-3388c513c9b0"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        }
                      },
                      "displayNames": {},
                      "name": "MaterialUniverse",
                      "guid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                    },
                    {
                      "type": "smartLink",
                      "reverseName": "Smart Link to Training Record",
                      "reverseDisplayNames": {
                        "en": "en-Smart Link to Training Record",
                        "fr": "fr-Smart Link to Training Record"
                      },
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0404f83b-64fb-47b1-8f3c-3388c513c9b0"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        }
                      },
                      "displayNames": {
                        "en": "en-Smart Link to MaterialUniverse",
                        "fr": "fr-Smart Link to MaterialUniverse"
                      },
                      "name": "Smart Link to MaterialUniverse",
                      "guid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                    },
                    {
                      "type": "crossDatabaseLink",
                      "reverseName": "Cross database link group : MI Training MaterialUniverse - Second Training Database And Table",
                      "reverseDisplayNames": {},
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        },
                        "linkTarget": {
                          "databaseGuid": "c9821f0f-34b8-49fb-8d8b-24cf7a6181ef",
                          "tableGuid": "b9fb3c1f-5e2e-40f6-9b6b-33197fdabab0"
                        }
                      },
                      "displayNames": {},
                      "name": "Cross database link group : MI Training MaterialUniverse - Second Training Database And Table",
                      "guid": "092435ae-ac67-4770-8514-59414a50bef9"
                    },
                    {
                      "type": "tabularAttribute",
                      "reverseName": "Environmental performances overview",
                      "reverseDisplayNames": {},
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0404f83b-64fb-47b1-8f3c-3388c513c9b0"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        }
                      },
                      "displayNames": {},
                      "name": "Environmental performances overview",
                      "guid": "2523a67a-6246-4c9e-8583-15b64d6290e5"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases:check-retarget-potential": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Check databases for retarget potential - whether there are any cross-database tabular attributes targeting them.",
        "operationId": "CheckDatabasesForRetargetPotential",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRetargetPotentialRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRetargetPotentialRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRetargetPotentialRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRetargetPotentialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabasesInfo"
                },
                "example": {
                  "databases": [
                    {
                      "key": "MI_Training",
                      "status": "Ok",
                      "isReadOnly": false,
                      "isLocked": false,
                      "name": "MI Training",
                      "guid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "versionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                      "indexInSync": true,
                      "schemaVersion": "2022.08.18.01"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/v1alpha/databases:retarget": {
      "post": {
        "tags": [
          "Schema - Databases"
        ],
        "summary": "Retargets tabulars from the current database to a new one.",
        "operationId": "RetargetTabulars",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRetargetRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRetargetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRetargetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRetargetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRetargetResultsInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Database not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types": {
      "get": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Gets all discrete types for a given database.",
        "operationId": "GetDiscreteTypes",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteTypesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Create a new discrete type.",
        "operationId": "CreateDiscreteType",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateDiscreteType"
              },
              "examples": {
                "Example 1": {
                  "summary": "Ordered Discrete Type",
                  "description": "This example demonstrates how to create a new ordered discrete type for the MI_Training database.",
                  "value": {
                    "isOrdered": true,
                    "name": "Ordered Discrete Type"
                  }
                },
                "Example 2": {
                  "summary": "Unordered Discrete Type",
                  "description": "This example demonstrates how to create a new unordered discrete type for the MI_Training database.",
                  "value": {
                    "isOrdered": false,
                    "name": "Unordered Discrete Type"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateDiscreteType"
              },
              "examples": {
                "Example 1": {
                  "summary": "Ordered Discrete Type",
                  "description": "This example demonstrates how to create a new ordered discrete type for the MI_Training database.",
                  "value": {
                    "isOrdered": true,
                    "name": "Ordered Discrete Type"
                  }
                },
                "Example 2": {
                  "summary": "Unordered Discrete Type",
                  "description": "This example demonstrates how to create a new unordered discrete type for the MI_Training database.",
                  "value": {
                    "isOrdered": false,
                    "name": "Unordered Discrete Type"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateDiscreteType"
              },
              "examples": {
                "Example 1": {
                  "summary": "Ordered Discrete Type",
                  "description": "This example demonstrates how to create a new ordered discrete type for the MI_Training database.",
                  "value": {
                    "isOrdered": true,
                    "name": "Ordered Discrete Type"
                  }
                },
                "Example 2": {
                  "summary": "Unordered Discrete Type",
                  "description": "This example demonstrates how to create a new unordered discrete type for the MI_Training database.",
                  "value": {
                    "isOrdered": false,
                    "name": "Unordered Discrete Type"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateDiscreteType"
              },
              "examples": {
                "Example 1": {
                  "summary": "Ordered Discrete Type",
                  "description": "This example demonstrates how to create a new ordered discrete type for the MI_Training database.",
                  "value": {
                    "isOrdered": true,
                    "name": "Ordered Discrete Type"
                  }
                },
                "Example 2": {
                  "summary": "Unordered Discrete Type",
                  "description": "This example demonstrates how to create a new unordered discrete type for the MI_Training database.",
                  "value": {
                    "isOrdered": false,
                    "name": "Unordered Discrete Type"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSlimDiscreteType"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}": {
      "get": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Gets a single discrete type.",
        "operationId": "GetDiscreteType",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteType"
                }
              }
            }
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Update discrete type.",
        "operationId": "UpdateDiscreteType",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDiscreteType"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDiscreteType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDiscreteType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDiscreteType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSlimDiscreteType"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or discrete type not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Delete discrete type, including all of its discrete values.",
        "operationId": "DeleteDiscreteType",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Discrete type in use by Attributes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteTypeDeletionException"
                },
                "example": {
                  "message": "Cannot delete discrete type with GUID '00000083-0006-4fff-8fff-0000ffff0000'.",
                  "code": "deletion",
                  "errors": [
                    {
                      "message": "It is being used in one or more attributes.",
                      "reason": "usage",
                      "referencedByType": "attribute",
                      "referencedBy": [
                        {
                          "type": "discrete",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Metals",
                          "guid": "0000000b-0001-4fff-8fff-dd92ffff0000"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "OK."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or discrete type not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}:usages": {
      "get": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Gets objects that are using this discrete type.",
        "operationId": "GetAttributesForType",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteTypeUsage"
                },
                "example": {
                  "attributes": [
                    {
                      "type": "discrete",
                      "isHiddenFromSearchCriteria": false,
                      "isProtected": false,
                      "table": {
                        "guid": "2a77f51b-ac53-4179-bc72-1eb6c378d9ef"
                      },
                      "name": "Reinforcement architecture",
                      "guid": "b172b9b3-228c-4784-9eaa-66349442f930"
                    }
                  ],
                  "tabularColumns": [
                    {
                      "tabularAttribute": {
                        "type": "link",
                        "isHiddenFromSearchCriteria": false,
                        "isProtected": false,
                        "table": {
                          "guid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                        },
                        "name": "Lay-up sequence details",
                        "guid": "af6fc0e6-dfbb-4f51-aad3-79419cd5ee92"
                      },
                      "columns": [
                        {
                          "name": "Ply/layer architecture",
                          "guid": "d0f981f1-9934-4518-af7e-f2a67573f0b0"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types:query": {
      "post": {
        "tags": [
          "Schema - Discrete Types"
        ],
        "summary": "Gets discrete types for a given database, populates the requested properties.",
        "operationId": "QueryDiscreteTypes",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryDiscreteTypesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all discrete types with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "discreteValues": {
                        "name": true,
                        "guid": true
                      },
                      "isOrdered": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all discrete types with name and discrete value names",
                  "value": {
                    "properties": {
                      "discreteValues": {
                        "name": true
                      },
                      "name": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch discrete type with name \"Surface Finish\"",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Surface Finish"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch discrete types with matching GUID",
                  "description": "This example demonstrates how to find discrete types by GUID in database 'MI Training'.",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "2ba638a6-b807-4480-a388-f1b5637489b2",
                        "00000083-0006-4fff-8fff-0000ffff0000"
                      ]
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryDiscreteTypesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all discrete types with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "discreteValues": {
                        "name": true,
                        "guid": true
                      },
                      "isOrdered": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all discrete types with name and discrete value names",
                  "value": {
                    "properties": {
                      "discreteValues": {
                        "name": true
                      },
                      "name": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch discrete type with name \"Surface Finish\"",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Surface Finish"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch discrete types with matching GUID",
                  "description": "This example demonstrates how to find discrete types by GUID in database 'MI Training'.",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "2ba638a6-b807-4480-a388-f1b5637489b2",
                        "00000083-0006-4fff-8fff-0000ffff0000"
                      ]
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryDiscreteTypesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all discrete types with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "discreteValues": {
                        "name": true,
                        "guid": true
                      },
                      "isOrdered": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all discrete types with name and discrete value names",
                  "value": {
                    "properties": {
                      "discreteValues": {
                        "name": true
                      },
                      "name": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch discrete type with name \"Surface Finish\"",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Surface Finish"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch discrete types with matching GUID",
                  "description": "This example demonstrates how to find discrete types by GUID in database 'MI Training'.",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "2ba638a6-b807-4480-a388-f1b5637489b2",
                        "00000083-0006-4fff-8fff-0000ffff0000"
                      ]
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryDiscreteTypesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all discrete types with custom properties",
                  "value": {
                    "properties": {
                      "isProtected": true,
                      "discreteValues": {
                        "name": true,
                        "guid": true
                      },
                      "isOrdered": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch all discrete types with name and discrete value names",
                  "value": {
                    "properties": {
                      "discreteValues": {
                        "name": true
                      },
                      "name": true
                    }
                  }
                },
                "Example 3": {
                  "summary": "Fetch discrete type with name \"Surface Finish\"",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "Surface Finish"
                      ]
                    }
                  }
                },
                "Example 4": {
                  "summary": "Fetch discrete types with matching GUID",
                  "description": "This example demonstrates how to find discrete types by GUID in database 'MI Training'.",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "guid": [
                        "2ba638a6-b807-4480-a388-f1b5637489b2",
                        "00000083-0006-4fff-8fff-0000ffff0000"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaQueryDiscreteTypesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}/discrete-values": {
      "get": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Gets all discrete values for a given discreteType, returned in order.",
        "operationId": "GetDiscreteValues",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValuesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Create new discrete value. It will be added at the end.",
        "operationId": "CreateDiscreteValue",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesCreateDiscreteValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Value",
                  "description": "This example demonstrates how to create a new discrete value.",
                  "value": {
                    "name": "New Discrete Value 1"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Value with Guid",
                  "description": "This example demonstrates how to create a new discrete value with a specified guid value.",
                  "value": {
                    "name": "New Discrete Value 2",
                    "guid": "dfa0c077-d5d2-4a04-85d8-fda4e3b7661a"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesCreateDiscreteValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Value",
                  "description": "This example demonstrates how to create a new discrete value.",
                  "value": {
                    "name": "New Discrete Value 1"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Value with Guid",
                  "description": "This example demonstrates how to create a new discrete value with a specified guid value.",
                  "value": {
                    "name": "New Discrete Value 2",
                    "guid": "dfa0c077-d5d2-4a04-85d8-fda4e3b7661a"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesCreateDiscreteValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Value",
                  "description": "This example demonstrates how to create a new discrete value.",
                  "value": {
                    "name": "New Discrete Value 1"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Value with Guid",
                  "description": "This example demonstrates how to create a new discrete value with a specified guid value.",
                  "value": {
                    "name": "New Discrete Value 2",
                    "guid": "dfa0c077-d5d2-4a04-85d8-fda4e3b7661a"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesCreateDiscreteValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Value",
                  "description": "This example demonstrates how to create a new discrete value.",
                  "value": {
                    "name": "New Discrete Value 1"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Value with Guid",
                  "description": "This example demonstrates how to create a new discrete value with a specified guid value.",
                  "value": {
                    "name": "New Discrete Value 2",
                    "guid": "dfa0c077-d5d2-4a04-85d8-fda4e3b7661a"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      },
      "put": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Replace the whole discrete value collection for a given discrete type.\r\nThis will result in adding, modifying, deleting and reordering discrete values. If any of those operations fail, the whole operation fails.",
        "operationId": "ReplaceDiscreteValues",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesReplaceDiscreteValuesInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesReplaceDiscreteValuesInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesReplaceDiscreteValuesInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesReplaceDiscreteValuesInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValuesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. e.g. would delete a discrete value that is in use."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}/discrete-values/{discrete-value-guid}": {
      "get": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Gets specific discrete value for a given discreteType within a given database.",
        "operationId": "GetDiscreteValue",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "discrete-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
                }
              }
            }
          },
          "404": {
            "description": "Database, discrete type or discrete value not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Update discrete value.",
        "operationId": "UpdateDiscreteValue",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "discrete-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesUpdateDiscreteValue"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesUpdateDiscreteValue"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesUpdateDiscreteValue"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaDiscreteValuesUpdateDiscreteValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database, discrete type or discrete value not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Delete a single discrete value. It must not be used by any data, or the operation will fail.",
        "operationId": "DeleteDiscreteValue",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "discrete-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Discrete value in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteValueAggregateException"
                }
              }
            }
          },
          "200": {
            "description": "OK."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database, discrete type or discrete value not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/discrete-types/{discrete-type-guid}/discrete-values:find-unused": {
      "get": {
        "tags": [
          "Schema - DiscreteTypes - DiscreteValues"
        ],
        "summary": "Find discrete values that are not in use by any data",
        "operationId": "FindUnusedDiscreteValues",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "discrete-type-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValuesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Database or discrete type not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/display-names/{language}": {
      "get": {
        "tags": [
          "Schema - Display Names"
        ],
        "summary": "Gets display names for all localized entities in the database, in the given language.",
        "operationId": "GetAllDisplayNames",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDisplayNamesInfo"
                },
                "example": {
                  "displayNames": {
                    "headers": [
                      "Schema Object Name",
                      "Display Name",
                      "Display Name Language",
                      "Do Not Edit -->",
                      "Type",
                      "Extra 1",
                      "Extra 2",
                      "Extra 3"
                    ],
                    "rows": [
                      [
                        "CGS (Consistent)",
                        null,
                        "fr",
                        null,
                        "UnitSystem",
                        null,
                        null,
                        null
                      ],
                      [
                        "FPS (Consistent)",
                        null,
                        "fr",
                        null,
                        "UnitSystem",
                        null,
                        null,
                        null
                      ],
                      [
                        "Young's modulus",
                        "French display name for Young's modulus",
                        "fr",
                        "Attribute",
                        "MaterialUniverse",
                        null,
                        null
                      ],
                      [
                        "Value",
                        "French display name for Value",
                        "fr",
                        "AttributeAxisName",
                        "Design Data",
                        "Incompressibility Parameter D1",
                        "Mooney-Rivlin"
                      ]
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/display-names": {
      "patch": {
        "tags": [
          "Schema - Display Names"
        ],
        "summary": "Updates display names for localized entities in the database.\r\nReturns the number of entities updated.",
        "operationId": "ImportDisplayNames",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDisplayNames"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update display names",
                  "description": "This example demonstrates how to update the display names for Unit System 'CGS (Consistent)', Attribute 'Young's modulus' in table 'MaterialUniverse' and Attribute Axis Name 'Value' on Meta-Attribute 'Incompressibility Parameter D1' on Attribute 'Mooney-Rivlin' in Table 'Design Data' in the MI_Training database.",
                  "value": {
                    "displayNames": {
                      "headers": [
                        "Schema Object Name",
                        "Display Name",
                        "Display Name Language",
                        "Do Not Edit -->",
                        "Type",
                        "Extra 1",
                        "Extra 2",
                        "Extra 3"
                      ],
                      "rows": [
                        [
                          "CGS (Consistent)",
                          "New French display name for CGS (Consistent)",
                          "fr",
                          null,
                          "UnitSystem",
                          null,
                          null,
                          null
                        ],
                        [
                          "Young's modulus",
                          "French display name for Young's modulus",
                          "fr",
                          null,
                          "Attribute",
                          "MaterialUniverse",
                          null,
                          null
                        ],
                        [
                          "Value",
                          "New French display name for Value",
                          "fr",
                          null,
                          "AttributeAxisName",
                          "Design Data",
                          "Incompressibility Parameter D1",
                          "Mooney-Rivlin"
                        ]
                      ]
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDisplayNames"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update display names",
                  "description": "This example demonstrates how to update the display names for Unit System 'CGS (Consistent)', Attribute 'Young's modulus' in table 'MaterialUniverse' and Attribute Axis Name 'Value' on Meta-Attribute 'Incompressibility Parameter D1' on Attribute 'Mooney-Rivlin' in Table 'Design Data' in the MI_Training database.",
                  "value": {
                    "displayNames": {
                      "headers": [
                        "Schema Object Name",
                        "Display Name",
                        "Display Name Language",
                        "Do Not Edit -->",
                        "Type",
                        "Extra 1",
                        "Extra 2",
                        "Extra 3"
                      ],
                      "rows": [
                        [
                          "CGS (Consistent)",
                          "New French display name for CGS (Consistent)",
                          "fr",
                          null,
                          "UnitSystem",
                          null,
                          null,
                          null
                        ],
                        [
                          "Young's modulus",
                          "French display name for Young's modulus",
                          "fr",
                          null,
                          "Attribute",
                          "MaterialUniverse",
                          null,
                          null
                        ],
                        [
                          "Value",
                          "New French display name for Value",
                          "fr",
                          null,
                          "AttributeAxisName",
                          "Design Data",
                          "Incompressibility Parameter D1",
                          "Mooney-Rivlin"
                        ]
                      ]
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDisplayNames"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update display names",
                  "description": "This example demonstrates how to update the display names for Unit System 'CGS (Consistent)', Attribute 'Young's modulus' in table 'MaterialUniverse' and Attribute Axis Name 'Value' on Meta-Attribute 'Incompressibility Parameter D1' on Attribute 'Mooney-Rivlin' in Table 'Design Data' in the MI_Training database.",
                  "value": {
                    "displayNames": {
                      "headers": [
                        "Schema Object Name",
                        "Display Name",
                        "Display Name Language",
                        "Do Not Edit -->",
                        "Type",
                        "Extra 1",
                        "Extra 2",
                        "Extra 3"
                      ],
                      "rows": [
                        [
                          "CGS (Consistent)",
                          "New French display name for CGS (Consistent)",
                          "fr",
                          null,
                          "UnitSystem",
                          null,
                          null,
                          null
                        ],
                        [
                          "Young's modulus",
                          "French display name for Young's modulus",
                          "fr",
                          null,
                          "Attribute",
                          "MaterialUniverse",
                          null,
                          null
                        ],
                        [
                          "Value",
                          "New French display name for Value",
                          "fr",
                          null,
                          "AttributeAxisName",
                          "Design Data",
                          "Incompressibility Parameter D1",
                          "Mooney-Rivlin"
                        ]
                      ]
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateDisplayNames"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update display names",
                  "description": "This example demonstrates how to update the display names for Unit System 'CGS (Consistent)', Attribute 'Young's modulus' in table 'MaterialUniverse' and Attribute Axis Name 'Value' on Meta-Attribute 'Incompressibility Parameter D1' on Attribute 'Mooney-Rivlin' in Table 'Design Data' in the MI_Training database.",
                  "value": {
                    "displayNames": {
                      "headers": [
                        "Schema Object Name",
                        "Display Name",
                        "Display Name Language",
                        "Do Not Edit -->",
                        "Type",
                        "Extra 1",
                        "Extra 2",
                        "Extra 3"
                      ],
                      "rows": [
                        [
                          "CGS (Consistent)",
                          "New French display name for CGS (Consistent)",
                          "fr",
                          null,
                          "UnitSystem",
                          null,
                          null,
                          null
                        ],
                        [
                          "Young's modulus",
                          "French display name for Young's modulus",
                          "fr",
                          null,
                          "Attribute",
                          "MaterialUniverse",
                          null,
                          null
                        ],
                        [
                          "Value",
                          "New French display name for Value",
                          "fr",
                          null,
                          "AttributeAxisName",
                          "Design Data",
                          "Incompressibility Parameter D1",
                          "Mooney-Rivlin"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUpdateDisplayNamesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDisplayNamesImportException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Schema item not found",
                    "description": "A unit system could not be found with the provided name.",
                    "value": {
                      "message": "Cannot import display names.",
                      "code": "displayNamesImport",
                      "errors": [
                        {
                          "message": "'UnitSystemName' in column 'Schema Object Name' was not found in the database.",
                          "reason": "schemaItemNotFound",
                          "rowIndex": 2,
                          "fieldValue": "CGSx",
                          "columnHeader": "Schema Object Name",
                          "itemType": "UnitSystemName"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'headers' was not provided.",
                    "value": {
                      "message": "Grid: Required property 'headers' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters": {
      "get": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Get All Exporter Folders",
        "operationId": "GetExportersFolders",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Exporters",
                      "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                    },
                    {
                      "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "MI_Training",
                      "guid": "19cc65a2-f8bf-4989-9859-e883756290de"
                    },
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Abaqus",
                      "guid": "41aba877-8fe0-4295-bddb-6f8b270a40ff"
                    },
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Ansys Workbench",
                      "guid": "92be9c31-7aff-4d96-8069-983390284391"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Exporters",
                      "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                    },
                    {
                      "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "MI_Training",
                      "guid": "19cc65a2-f8bf-4989-9859-e883756290de"
                    },
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Abaqus",
                      "guid": "41aba877-8fe0-4295-bddb-6f8b270a40ff"
                    },
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Ansys Workbench",
                      "guid": "92be9c31-7aff-4d96-8069-983390284391"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Exporters",
                      "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                    },
                    {
                      "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "MI_Training",
                      "guid": "19cc65a2-f8bf-4989-9859-e883756290de"
                    },
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Abaqus",
                      "guid": "41aba877-8fe0-4295-bddb-6f8b270a40ff"
                    },
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Ansys Workbench",
                      "guid": "92be9c31-7aff-4d96-8069-983390284391"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Create a new Exporters Folder.",
        "operationId": "CreateExportersFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Exporter Folder",
                  "description": "This example demonstrates how to create a new exporter folder under the root 'Exporters' folder.",
                  "value": {
                    "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                    "name": "New Folder"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Exporter Folder",
                  "description": "This example demonstrates how to create a new exporter folder under the root 'Exporters' folder.",
                  "value": {
                    "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                    "name": "New Folder"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Exporter Folder",
                  "description": "This example demonstrates how to create a new exporter folder under the root 'Exporters' folder.",
                  "value": {
                    "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                    "name": "New Folder"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Exporter Folder",
                  "description": "This example demonstrates how to create a new exporter folder under the root 'Exporters' folder.",
                  "value": {
                    "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                    "name": "New Folder"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Folder with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create an Exporter folder with name 'Abaqus' in the 'MI_Training' folder (GUID '19cc65a2-f8bf-4989-9859-e883756290de'), but there is already a folder with that name and parent.",
                    "value": {
                      "message": "Cannot create Exporter folder 'Abaqus'.",
                      "code": "folderCreation",
                      "name": "Abaqus",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "Folder with name 'Abaqus' already exists in this Folder.",
                              "name": "Abaqus",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "folder"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateFolder: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Folder with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create an Exporter folder with name 'Abaqus' in the 'MI_Training' folder (GUID '19cc65a2-f8bf-4989-9859-e883756290de'), but there is already a folder with that name and parent.",
                    "value": {
                      "message": "Cannot create Exporter folder 'Abaqus'.",
                      "code": "folderCreation",
                      "name": "Abaqus",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "Folder with name 'Abaqus' already exists in this Folder.",
                              "name": "Abaqus",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "folder"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateFolder: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Folder with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create an Exporter folder with name 'Abaqus' in the 'MI_Training' folder (GUID '19cc65a2-f8bf-4989-9859-e883756290de'), but there is already a folder with that name and parent.",
                    "value": {
                      "message": "Cannot create Exporter folder 'Abaqus'.",
                      "code": "folderCreation",
                      "name": "Abaqus",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "Folder with name 'Abaqus' already exists in this Folder.",
                              "name": "Abaqus",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "folder"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateFolder: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters:root-folder": {
      "get": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Get Root Exporters Folder",
        "operationId": "GetExportersRootFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters/{folder-guid}": {
      "get": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Get Exporters Folder",
        "operationId": "GetExportersFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Abaqus",
                  "guid": "41aba877-8fe0-4295-bddb-6f8b270a40ff"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Abaqus",
                  "guid": "41aba877-8fe0-4295-bddb-6f8b270a40ff"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Abaqus",
                  "guid": "41aba877-8fe0-4295-bddb-6f8b270a40ff"
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Update an existing Exporters Folder.",
        "operationId": "UpdateExportersFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Exporter Folder",
                  "description": "This example demonstrates how to rename an existing Exporter folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Exporter Folder",
                  "description": "This example demonstrates how to modify the guid of an existing Exporter folder.",
                  "value": {
                    "guid": "d411fcef-ba25-460c-8d90-bbfd7e67f6ca"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Exporter Folder",
                  "description": "This example demonstrates how to rename an existing Exporter folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Exporter Folder",
                  "description": "This example demonstrates how to modify the guid of an existing Exporter folder.",
                  "value": {
                    "guid": "d411fcef-ba25-460c-8d90-bbfd7e67f6ca"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Exporter Folder",
                  "description": "This example demonstrates how to rename an existing Exporter folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Exporter Folder",
                  "description": "This example demonstrates how to modify the guid of an existing Exporter folder.",
                  "value": {
                    "guid": "d411fcef-ba25-460c-8d90-bbfd7e67f6ca"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Exporter Folder",
                  "description": "This example demonstrates how to rename an existing Exporter folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Exporter Folder",
                  "description": "This example demonstrates how to modify the guid of an existing Exporter folder.",
                  "value": {
                    "guid": "d411fcef-ba25-460c-8d90-bbfd7e67f6ca"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot update the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the root Exporter folder.",
                    "value": {
                      "message": "Cannot update Exporter folder with GUID 'c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44'.",
                      "code": "folderUpdate",
                      "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "You cannot update the root folder.",
                          "reason": "updateRoot"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot update the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the root Exporter folder.",
                    "value": {
                      "message": "Cannot update Exporter folder with GUID 'c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44'.",
                      "code": "folderUpdate",
                      "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "You cannot update the root folder.",
                          "reason": "updateRoot"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot update the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the root Exporter folder.",
                    "value": {
                      "message": "Cannot update Exporter folder with GUID 'c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44'.",
                      "code": "folderUpdate",
                      "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "You cannot update the root folder.",
                          "reason": "updateRoot"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Delete an Exporter Folder.",
        "operationId": "DeleteExportersFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderDeletionException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot delete the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to delete the root Exporter folder.",
                    "value": {
                      "message": "Cannot delete Exporter folder with GUID 'c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44'.",
                      "code": "folderDeletion",
                      "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "You cannot delete the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderDeletionException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot delete the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to delete the root Exporter folder.",
                    "value": {
                      "message": "Cannot delete Exporter folder with GUID 'c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44'.",
                      "code": "folderDeletion",
                      "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "You cannot delete the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderDeletionException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot delete the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to delete the root Exporter folder.",
                    "value": {
                      "message": "Cannot delete Exporter folder with GUID 'c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44'.",
                      "code": "folderDeletion",
                      "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "You cannot delete the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters/{folder-guid}:child-folders": {
      "get": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Get Child Exporters Folders",
        "operationId": "GetExportersChildFolders",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Abaqus",
                      "guid": "41aba877-8fe0-4295-bddb-6f8b270a40ff"
                    },
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Ansys Workbench",
                      "guid": "92be9c31-7aff-4d96-8069-983390284391"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Abaqus",
                      "guid": "41aba877-8fe0-4295-bddb-6f8b270a40ff"
                    },
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Ansys Workbench",
                      "guid": "92be9c31-7aff-4d96-8069-983390284391"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Abaqus",
                      "guid": "41aba877-8fe0-4295-bddb-6f8b270a40ff"
                    },
                    {
                      "parentGuid": "19cc65a2-f8bf-4989-9859-e883756290de",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Ansys Workbench",
                      "guid": "92be9c31-7aff-4d96-8069-983390284391"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters:re-fetch": {
      "post": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Re-fetch the Exporter Files.",
        "operationId": "RefetchExporters",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaExporterRefetchInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaExporterRefetchInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaExporterRefetchInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters/{folder-guid}:move": {
      "post": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Move an existing Exporter Folder.",
        "operationId": "MoveExportersFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Exporter Folder",
                  "description": "This example demonstrates how to move an existing exporter folder to be under the root 'Exporters' folder.",
                  "value": {
                    "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Exporter Folder",
                  "description": "This example demonstrates how to move an existing exporter folder to be under the root 'Exporters' folder.",
                  "value": {
                    "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Exporter Folder",
                  "description": "This example demonstrates how to move an existing exporter folder to be under the root 'Exporters' folder.",
                  "value": {
                    "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Exporter Folder",
                  "description": "This example demonstrates how to move an existing exporter folder to be under the root 'Exporters' folder.",
                  "value": {
                    "parentGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot move the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move the root Exporter folder.",
                    "value": {
                      "message": "Cannot move Exporter folder with GUID 'c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44'.",
                      "code": "folderMove",
                      "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "You cannot move the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot move the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move the root Exporter folder.",
                    "value": {
                      "message": "Cannot move Exporter folder with GUID 'c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44'.",
                      "code": "folderMove",
                      "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "You cannot move the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot move the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move the root Exporter folder.",
                    "value": {
                      "message": "Cannot move Exporter folder with GUID 'c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44'.",
                      "code": "folderMove",
                      "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "You cannot move the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters/{folder-guid}/files": {
      "get": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Get the Exporter Files in a Folder",
        "operationId": "GetExportersFiles",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "exporter-1.exp",
                      "guid": "31d7b1bf-c521-4d96-98b4-55401cfece35"
                    },
                    {
                      "name": "no-transform.xslt",
                      "guid": "7d0e5328-d9b6-4dac-a87a-1a39eef3f215"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "exporter-1.exp",
                      "guid": "31d7b1bf-c521-4d96-98b4-55401cfece35"
                    },
                    {
                      "name": "no-transform.xslt",
                      "guid": "7d0e5328-d9b6-4dac-a87a-1a39eef3f215"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "exporter-1.exp",
                      "guid": "31d7b1bf-c521-4d96-98b4-55401cfece35"
                    },
                    {
                      "name": "no-transform.xslt",
                      "guid": "7d0e5328-d9b6-4dac-a87a-1a39eef3f215"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Create a new Exporter File.",
        "operationId": "CreateExportersFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "4c3c17f6-7152-40fa-ba04-aa5149e88bf3"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "4c3c17f6-7152-40fa-ba04-aa5149e88bf3"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "4c3c17f6-7152-40fa-ba04-aa5149e88bf3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "File with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create an Exporter file with name 'AbaqusFunctions.xsl' in the 'Abaqus' folder (GUID '41aba877-8fe0-4295-bddb-6f8b270a40ff'), but there is already a file with that name and parent.",
                    "value": {
                      "message": "Cannot create Exporter file 'AbaqusFunctions.xsl'.",
                      "code": "fileCreation",
                      "name": "AbaqusFunctions.xsl",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "File with name 'AbaqusFunctions.xsl' already exists in this Folder.",
                              "name": "AbaqusFunctions.xsl",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "file"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "File with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create an Exporter file with name 'AbaqusFunctions.xsl' in the 'Abaqus' folder (GUID '41aba877-8fe0-4295-bddb-6f8b270a40ff'), but there is already a file with that name and parent.",
                    "value": {
                      "message": "Cannot create Exporter file 'AbaqusFunctions.xsl'.",
                      "code": "fileCreation",
                      "name": "AbaqusFunctions.xsl",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "File with name 'AbaqusFunctions.xsl' already exists in this Folder.",
                              "name": "AbaqusFunctions.xsl",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "file"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "File with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create an Exporter file with name 'AbaqusFunctions.xsl' in the 'Abaqus' folder (GUID '41aba877-8fe0-4295-bddb-6f8b270a40ff'), but there is already a file with that name and parent.",
                    "value": {
                      "message": "Cannot create Exporter file 'AbaqusFunctions.xsl'.",
                      "code": "fileCreation",
                      "name": "AbaqusFunctions.xsl",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "File with name 'AbaqusFunctions.xsl' already exists in this Folder.",
                              "name": "AbaqusFunctions.xsl",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "file"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters/{folder-guid}/files/{file-guid}": {
      "get": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Get the header information for an Exporter File",
        "operationId": "GetExporterFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "2623f568-123a-45d8-a1e5-bb3ecd9dc55c"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "2623f568-123a-45d8-a1e5-bb3ecd9dc55c"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "2623f568-123a-45d8-a1e5-bb3ecd9dc55c"
                }
              }
            }
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Update an existing Exporter File.",
        "operationId": "UpdateExportersFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Exporter File",
                  "description": "This example demonstrates how to rename an existing Exporter file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for an Exporter File",
                  "description": "This example demonstrates how to change the description for an existing Exporter file.",
                  "value": {
                    "description": "New description for Exporter file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Exporter File",
                  "description": "This example demonstrates how to modify the guid of an existing Exporter file.",
                  "value": {
                    "guid": "987d6879-144f-400f-9698-6314566285a4"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Exporter File",
                  "description": "This example demonstrates how to rename an existing Exporter file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for an Exporter File",
                  "description": "This example demonstrates how to change the description for an existing Exporter file.",
                  "value": {
                    "description": "New description for Exporter file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Exporter File",
                  "description": "This example demonstrates how to modify the guid of an existing Exporter file.",
                  "value": {
                    "guid": "987d6879-144f-400f-9698-6314566285a4"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Exporter File",
                  "description": "This example demonstrates how to rename an existing Exporter file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for an Exporter File",
                  "description": "This example demonstrates how to change the description for an existing Exporter file.",
                  "value": {
                    "description": "New description for Exporter file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Exporter File",
                  "description": "This example demonstrates how to modify the guid of an existing Exporter file.",
                  "value": {
                    "guid": "987d6879-144f-400f-9698-6314566285a4"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Exporter File",
                  "description": "This example demonstrates how to rename an existing Exporter file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for an Exporter File",
                  "description": "This example demonstrates how to change the description for an existing Exporter file.",
                  "value": {
                    "description": "New description for Exporter file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Exporter File",
                  "description": "This example demonstrates how to modify the guid of an existing Exporter file.",
                  "value": {
                    "guid": "987d6879-144f-400f-9698-6314566285a4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "c06cdd1d-3a7b-4857-ab7d-f994190d9f7a"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "c06cdd1d-3a7b-4857-ab7d-f994190d9f7a"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "c06cdd1d-3a7b-4857-ab7d-f994190d9f7a"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "File with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename an Exporter file in the 'Abaqus' folder (GUID '41aba877-8fe0-4295-bddb-6f8b270a40ff')  to have name 'AbaqusFunctions.xsl', but there is already a file with that name and parent.",
                    "value": {
                      "message": "Cannot update Exporter file with GUID '7e16c51c-7129-4394-a241-1500bcef6103'.",
                      "code": "fileUpdate",
                      "fileGuid": "7e16c51c-7129-4394-a241-1500bcef6103",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "File with name 'AbaqusFunctions.xsl' already exists in this Folder.",
                              "name": "AbaqusFunctions.xsl",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "file"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "File with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename an Exporter file in the 'Abaqus' folder (GUID '41aba877-8fe0-4295-bddb-6f8b270a40ff')  to have name 'AbaqusFunctions.xsl', but there is already a file with that name and parent.",
                    "value": {
                      "message": "Cannot update Exporter file with GUID '7e16c51c-7129-4394-a241-1500bcef6103'.",
                      "code": "fileUpdate",
                      "fileGuid": "7e16c51c-7129-4394-a241-1500bcef6103",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "File with name 'AbaqusFunctions.xsl' already exists in this Folder.",
                              "name": "AbaqusFunctions.xsl",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "file"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "File with same name already exists",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename an Exporter file in the 'Abaqus' folder (GUID '41aba877-8fe0-4295-bddb-6f8b270a40ff')  to have name 'AbaqusFunctions.xsl', but there is already a file with that name and parent.",
                    "value": {
                      "message": "Cannot update Exporter file with GUID '7e16c51c-7129-4394-a241-1500bcef6103'.",
                      "code": "fileUpdate",
                      "fileGuid": "7e16c51c-7129-4394-a241-1500bcef6103",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "The name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "File with name 'AbaqusFunctions.xsl' already exists in this Folder.",
                              "name": "AbaqusFunctions.xsl",
                              "parentEntityType": "folder",
                              "reason": "nameAlreadyExists",
                              "entityType": "file"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Delete an Exporter File.",
        "operationId": "DeleteExportersFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters/{folder-guid}:export": {
      "get": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Get Exporter folder and contents as a zip file",
        "operationId": "ExportExportersFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters/{folder-guid}/files/{file-guid}:export": {
      "get": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Get Exporter File as a file",
        "operationId": "ExportExportersFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/exporters/{folder-guid}/files/{file-guid}:move": {
      "post": {
        "tags": [
          "Schema - Exporters"
        ],
        "summary": "Move an existing Exporter File.",
        "operationId": "MoveExportersFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Exporter File",
                  "description": "This example demonstrates how to move an existing Exporter file to be under the root 'Exporters' folder.",
                  "value": {
                    "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Exporter File",
                  "description": "This example demonstrates how to move an existing Exporter file to be under the root 'Exporters' folder.",
                  "value": {
                    "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Exporter File",
                  "description": "This example demonstrates how to move an existing Exporter file to be under the root 'Exporters' folder.",
                  "value": {
                    "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Exporter File",
                  "description": "This example demonstrates how to move an existing Exporter file to be under the root 'Exporters' folder.",
                  "value": {
                    "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "14ff1ae9-7885-4e95-8919-baa7197382cf"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "14ff1ae9-7885-4e95-8919-baa7197382cf"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "14ff1ae9-7885-4e95-8919-baa7197382cf"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent folder not found.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move an existing file to a folder with GUID '49678965-6e1d-48df-a974-94d71fcf1aa7', but there is no Exporter folder with that GUID.",
                    "value": {
                      "message": "Cannot move Exporter file with GUID 'fd9695f7-e430-47dc-aba4-54b33ee8e0f4'.",
                      "code": "fileMove",
                      "fileGuid": "fd9695f7-e430-47dc-aba4-54b33ee8e0f4",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "A Exporter folder with GUID '49678965-6e1d-48df-a974-94d71fcf1aa7' does not exist in database MI_Training.",
                          "folderGuid": "49678965-6e1d-48df-a974-94d71fcf1aa7",
                          "folderType": "exporter",
                          "databaseKey": "MI_Training",
                          "reason": "noSuchNewParent"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent folder not found.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move an existing file to a folder with GUID '49678965-6e1d-48df-a974-94d71fcf1aa7', but there is no Exporter folder with that GUID.",
                    "value": {
                      "message": "Cannot move Exporter file with GUID 'fd9695f7-e430-47dc-aba4-54b33ee8e0f4'.",
                      "code": "fileMove",
                      "fileGuid": "fd9695f7-e430-47dc-aba4-54b33ee8e0f4",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "A Exporter folder with GUID '49678965-6e1d-48df-a974-94d71fcf1aa7' does not exist in database MI_Training.",
                          "folderGuid": "49678965-6e1d-48df-a974-94d71fcf1aa7",
                          "folderType": "exporter",
                          "databaseKey": "MI_Training",
                          "reason": "noSuchNewParent"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent folder not found.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move an existing file to a folder with GUID '49678965-6e1d-48df-a974-94d71fcf1aa7', but there is no Exporter folder with that GUID.",
                    "value": {
                      "message": "Cannot move Exporter file with GUID 'fd9695f7-e430-47dc-aba4-54b33ee8e0f4'.",
                      "code": "fileMove",
                      "fileGuid": "fd9695f7-e430-47dc-aba4-54b33ee8e0f4",
                      "folderType": "exporter",
                      "errors": [
                        {
                          "message": "A Exporter folder with GUID '49678965-6e1d-48df-a974-94d71fcf1aa7' does not exist in database MI_Training.",
                          "folderGuid": "49678965-6e1d-48df-a974-94d71fcf1aa7",
                          "folderType": "exporter",
                          "databaseKey": "MI_Training",
                          "reason": "noSuchNewParent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/expressions": {
      "get": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Get all expressions for table",
        "operationId": "GetExpressions",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaExpressionsInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Get all expressions",
                    "description": "This example demonstrates the response to getting all expressions from 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from MI_Training database.",
                    "value": {
                      "expressions": [
                        {
                          "name": "Fatigue Model",
                          "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Create a new expression.",
        "operationId": "CreateExpression",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Expression",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression"
                  }
                },
                "Example 2": {
                  "summary": "Expression with specified guid",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression with specified guid",
                    "guid": "a9b8d687-c5ec-4515-987d-8d0647393fa1"
                  }
                },
                "Example 3": {
                  "summary": "Expression with specified unit",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Simple expression with specified unit"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Expression",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression"
                  }
                },
                "Example 2": {
                  "summary": "Expression with specified guid",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression with specified guid",
                    "guid": "a9b8d687-c5ec-4515-987d-8d0647393fa1"
                  }
                },
                "Example 3": {
                  "summary": "Expression with specified unit",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Simple expression with specified unit"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Expression",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression"
                  }
                },
                "Example 2": {
                  "summary": "Expression with specified guid",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression with specified guid",
                    "guid": "a9b8d687-c5ec-4515-987d-8d0647393fa1"
                  }
                },
                "Example 3": {
                  "summary": "Expression with specified unit",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Simple expression with specified unit"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Expression",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression"
                  }
                },
                "Example 2": {
                  "summary": "Expression with specified guid",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') in the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "name": "Simple expression with specified guid",
                    "guid": "a9b8d687-c5ec-4515-987d-8d0647393fa1"
                  }
                },
                "Example 3": {
                  "summary": "Expression with specified unit",
                  "description": "This example demonstrates how to create a new expression for 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified unit 'ohm' from the MI_Training database.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "00000059-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Simple expression with specified unit"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaExpression"
                },
                "examples": {
                  "Example 2": {
                    "summary": "Get expression",
                    "description": "This example demonstrates the response to getting 'Fatigue Model' expression (GUID = '535074aa-216f-4f60-b13e-f5e8be72d05f') from 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from MI_Training database.",
                    "value": {
                      "value": "[A:Tensile strength] / ((1 + [P:Stress Ratio]) / (1 - [P:Stress Ratio]) + [A:Tensile strength] / (([A:Tensile strength] * (1 + [A:Elongation] / 100) - [A:Yield strength (elastic limit)]) / (log(1 + mean([A:Elongation] / 100)) - [A:Yield strength (elastic limit)] / (1000 * [A:Young's modulus])) * log(1 + mean([A:Elongation] / 100)) * (2 * [P:Number of Cycles]) ^ -0.6 + [A:Tensile strength] * (1 + [A:Elongation] / 100) * (2 * [P:Number of Cycles]) ^ (log10(mean([A:Fatigue strength at 10^7 cycles] / ([A:Tensile strength] * (1 + [A:Elongation] / 100)))) / log10(20000000))))",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "attributeDependencies": [
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Young's modulus",
                          "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Tensile strength",
                          "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Fatigue strength at 10^7 cycles",
                          "guid": "0000010c-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Elongation",
                          "guid": "0000011a-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Yield strength (elastic limit)",
                          "guid": "0000011b-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "constantDependencies": [],
                      "parameterDependencies": [
                        {
                          "name": "Number of Cycles",
                          "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "name": "Stress Ratio",
                          "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "name": "Fatigue Model",
                      "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/expressions/{expression-guid}": {
      "get": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Get an expression with a specified guid for a given database and table.",
        "operationId": "GetExpression",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "expression-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaExpression"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Get expression",
                    "description": "This example demonstrates the response to getting 'Fatigue Model' expression (GUID = '535074aa-216f-4f60-b13e-f5e8be72d05f') from 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from MI_Training database.",
                    "value": {
                      "value": "[A:Tensile strength] / ((1 + [P:Stress Ratio]) / (1 - [P:Stress Ratio]) + [A:Tensile strength] / (([A:Tensile strength] * (1 + [A:Elongation] / 100) - [A:Yield strength (elastic limit)]) / (log(1 + mean([A:Elongation] / 100)) - [A:Yield strength (elastic limit)] / (1000 * [A:Young's modulus])) * log(1 + mean([A:Elongation] / 100)) * (2 * [P:Number of Cycles]) ^ -0.6 + [A:Tensile strength] * (1 + [A:Elongation] / 100) * (2 * [P:Number of Cycles]) ^ (log10(mean([A:Fatigue strength at 10^7 cycles] / ([A:Tensile strength] * (1 + [A:Elongation] / 100)))) / log10(20000000))))",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "attributeDependencies": [
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Young's modulus",
                          "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Tensile strength",
                          "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Fatigue strength at 10^7 cycles",
                          "guid": "0000010c-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Elongation",
                          "guid": "0000011a-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Yield strength (elastic limit)",
                          "guid": "0000011b-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "constantDependencies": [],
                      "parameterDependencies": [
                        {
                          "name": "Number of Cycles",
                          "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "name": "Stress Ratio",
                          "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "name": "Fatigue Model",
                      "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or expression not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Update an expression.",
        "operationId": "UpdateExpression",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "expression-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for an expression",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Unit will be set to kg.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Fatigue Model (Updated)",
                    "guid": "a699070d-ac71-48ff-bacf-5e31c02f9fde"
                  }
                },
                "Example 2": {
                  "summary": "Rename expression",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Fatigue Model (Updated)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for an expression",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Unit will be set to kg.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Fatigue Model (Updated)",
                    "guid": "a699070d-ac71-48ff-bacf-5e31c02f9fde"
                  }
                },
                "Example 2": {
                  "summary": "Rename expression",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Fatigue Model (Updated)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for an expression",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Unit will be set to kg.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Fatigue Model (Updated)",
                    "guid": "a699070d-ac71-48ff-bacf-5e31c02f9fde"
                  }
                },
                "Example 2": {
                  "summary": "Rename expression",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Fatigue Model (Updated)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateExpression"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for an expression",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Unit will be set to kg.",
                  "value": {
                    "value": "[A:Tensile strength] + [P:Stress Ratio] * [A:Yield strength (elastic limit)] / log10(20000000) + 5",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "name": "Fatigue Model (Updated)",
                    "guid": "a699070d-ac71-48ff-bacf-5e31c02f9fde"
                  }
                },
                "Example 2": {
                  "summary": "Rename expression",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Fatigue Model' expression (guid = 535074aa-216f-4f60-b13e-f5e8be72d05f) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Fatigue Model (Updated)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaExpression"
                },
                "examples": {
                  "Example 3": {
                    "summary": "Get expression",
                    "description": "This example demonstrates the response to getting 'Fatigue Model' expression (GUID = '535074aa-216f-4f60-b13e-f5e8be72d05f') from 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from MI_Training database.",
                    "value": {
                      "value": "[A:Tensile strength] / ((1 + [P:Stress Ratio]) / (1 - [P:Stress Ratio]) + [A:Tensile strength] / (([A:Tensile strength] * (1 + [A:Elongation] / 100) - [A:Yield strength (elastic limit)]) / (log(1 + mean([A:Elongation] / 100)) - [A:Yield strength (elastic limit)] / (1000 * [A:Young's modulus])) * log(1 + mean([A:Elongation] / 100)) * (2 * [P:Number of Cycles]) ^ -0.6 + [A:Tensile strength] * (1 + [A:Elongation] / 100) * (2 * [P:Number of Cycles]) ^ (log10(mean([A:Fatigue strength at 10^7 cycles] / ([A:Tensile strength] * (1 + [A:Elongation] / 100)))) / log10(20000000))))",
                      "unit": {
                        "symbol": "MPa",
                        "guid": "0000002b-0013-4fff-8fff-0000ffff0000"
                      },
                      "attributeDependencies": [
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Young's modulus",
                          "guid": "0000003f-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Tensile strength",
                          "guid": "000000e3-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Fatigue strength at 10^7 cycles",
                          "guid": "0000010c-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Elongation",
                          "guid": "0000011a-0001-4fff-8fff-dd92ffff0000"
                        },
                        {
                          "type": "range",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Yield strength (elastic limit)",
                          "guid": "0000011b-0001-4fff-8fff-dd92ffff0000"
                        }
                      ],
                      "constantDependencies": [],
                      "parameterDependencies": [
                        {
                          "name": "Number of Cycles",
                          "guid": "00000007-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "name": "Stress Ratio",
                          "guid": "00000004-000a-4fff-8fff-0000ffff0000"
                        }
                      ],
                      "name": "Fatigue Model",
                      "guid": "535074aa-216f-4f60-b13e-f5e8be72d05f"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or expression not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Expressions"
        ],
        "summary": "Delete an expression.",
        "operationId": "DeleteExpression",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "expression-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or expression not found"
          }
        }
      }
    },
    "/v1alpha/standard-names": {
      "get": {
        "tags": [
          "Schema - Global Standard Names"
        ],
        "summary": "Gets all standard names from all databases, optionally filtered by the provided 'name' query parameter.",
        "operationId": "GetGlobalStandardNames",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Standard name to match. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaStandardNamesInfo"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/standard-names:search": {
      "post": {
        "tags": [
          "Schema - Global Standard Names"
        ],
        "summary": "Find all standard names from all databases that match one of the names provided in the request.",
        "operationId": "FindGlobalStandardNames",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaFindStandardNames"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaFindStandardNames"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaFindStandardNames"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaFindStandardNames"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaStandardNamesInfo"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get All Help File Folders",
        "operationId": "GetHelpFolders",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Help Pages",
                      "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                    },
                    {
                      "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "html",
                      "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Help Pages",
                      "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                    },
                    {
                      "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "html",
                      "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Help Pages",
                      "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                    },
                    {
                      "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "html",
                      "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Create a new Help File Folder.",
        "operationId": "CreateHelpFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Help File Folder",
                  "description": "This example demonstrates how to create a new help file folder under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                    "name": "New Folder"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Help File Folder",
                  "description": "This example demonstrates how to create a new help file folder under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                    "name": "New Folder"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Help File Folder",
                  "description": "This example demonstrates how to create a new help file folder under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                    "name": "New Folder"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Help File Folder",
                  "description": "This example demonstrates how to create a new help file folder under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                    "name": "New Folder"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid Folder name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HelpPage folder with name '<new-folder>'.",
                    "value": {
                      "message": "Cannot create HelpPage folder '<new-folder>'.",
                      "code": "folderCreation",
                      "name": "<new-folder>",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "'<new-folder>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-folder>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateFolder: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid Folder name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HelpPage folder with name '<new-folder>'.",
                    "value": {
                      "message": "Cannot create HelpPage folder '<new-folder>'.",
                      "code": "folderCreation",
                      "name": "<new-folder>",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "'<new-folder>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-folder>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateFolder: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid Folder name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HelpPage folder with name '<new-folder>'.",
                    "value": {
                      "message": "Cannot create HelpPage folder '<new-folder>'.",
                      "code": "folderCreation",
                      "name": "<new-folder>",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "'<new-folder>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-folder>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateFolder: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/:root-folder": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get Root Help File Folder",
        "operationId": "GetHelpRootFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Help Pages",
                  "guid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get Help File Folder",
        "operationId": "GetHelpFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "html",
                  "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "html",
                  "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "html",
                  "guid": "99ff4816-15e9-42b9-9ac3-b60fce881e85"
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Update an existing Help File Folder.",
        "operationId": "UpdateHelpFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File Folder",
                  "description": "This example demonstrates how to rename an existing help file folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Help File Folder",
                  "description": "This example demonstrates how to modify the guid of an existing help file folder.",
                  "value": {
                    "guid": "9e2fa278-435f-4938-9de7-1d42fd2fd416"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File Folder",
                  "description": "This example demonstrates how to rename an existing help file folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Help File Folder",
                  "description": "This example demonstrates how to modify the guid of an existing help file folder.",
                  "value": {
                    "guid": "9e2fa278-435f-4938-9de7-1d42fd2fd416"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File Folder",
                  "description": "This example demonstrates how to rename an existing help file folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Help File Folder",
                  "description": "This example demonstrates how to modify the guid of an existing help file folder.",
                  "value": {
                    "guid": "9e2fa278-435f-4938-9de7-1d42fd2fd416"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File Folder",
                  "description": "This example demonstrates how to rename an existing help file folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Help File Folder",
                  "description": "This example demonstrates how to modify the guid of an existing help file folder.",
                  "value": {
                    "guid": "9e2fa278-435f-4938-9de7-1d42fd2fd416"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot update the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the root HelpPage folder.",
                    "value": {
                      "message": "Cannot update HelpPage folder with GUID 'e7dbba58-b963-4d1f-bbf4-c8436d00bf22'.",
                      "code": "folderUpdate",
                      "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "You cannot update the root folder.",
                          "reason": "updateRoot"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot update the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the root HelpPage folder.",
                    "value": {
                      "message": "Cannot update HelpPage folder with GUID 'e7dbba58-b963-4d1f-bbf4-c8436d00bf22'.",
                      "code": "folderUpdate",
                      "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "You cannot update the root folder.",
                          "reason": "updateRoot"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot update the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the root HelpPage folder.",
                    "value": {
                      "message": "Cannot update HelpPage folder with GUID 'e7dbba58-b963-4d1f-bbf4-c8436d00bf22'.",
                      "code": "folderUpdate",
                      "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "You cannot update the root folder.",
                          "reason": "updateRoot"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Delete a Help File Folder.",
        "operationId": "DeleteHelpFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderDeletionException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot delete the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to delete the root HelpPage folder.",
                    "value": {
                      "message": "Cannot delete HelpPage folder with GUID 'e7dbba58-b963-4d1f-bbf4-c8436d00bf22'.",
                      "code": "folderDeletion",
                      "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "You cannot delete the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderDeletionException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot delete the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to delete the root HelpPage folder.",
                    "value": {
                      "message": "Cannot delete HelpPage folder with GUID 'e7dbba58-b963-4d1f-bbf4-c8436d00bf22'.",
                      "code": "folderDeletion",
                      "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "You cannot delete the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderDeletionException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot delete the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to delete the root HelpPage folder.",
                    "value": {
                      "message": "Cannot delete HelpPage folder with GUID 'e7dbba58-b963-4d1f-bbf4-c8436d00bf22'.",
                      "code": "folderDeletion",
                      "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "You cannot delete the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}:child-folders": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get Child Help File Folders",
        "operationId": "GetHelpChildFolders",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "attributenotes",
                      "guid": "c7db2cff-69ef-479d-b7a6-d12cfe888a56"
                    },
                    {
                      "parentGuid": "99ff4816-15e9-42b9-9ac3-b60fce881e85",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "sciencenotes",
                      "guid": "38a6a798-4488-4c38-824e-0e41ce34932f"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}:move": {
      "post": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Move an existing Help File Folder.",
        "operationId": "MoveHelpFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File Folder",
                  "description": "This example demonstrates how to move an existing help file folder to be under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File Folder",
                  "description": "This example demonstrates how to move an existing help file folder to be under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File Folder",
                  "description": "This example demonstrates how to move an existing help file folder to be under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File Folder",
                  "description": "This example demonstrates how to move an existing help file folder to be under the root 'Help Pages' folder.",
                  "value": {
                    "parentGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot move the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move the root HelpPage folder.",
                    "value": {
                      "message": "Cannot move HelpPage folder with GUID 'e7dbba58-b963-4d1f-bbf4-c8436d00bf22'.",
                      "code": "folderMove",
                      "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "You cannot move the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot move the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move the root HelpPage folder.",
                    "value": {
                      "message": "Cannot move HelpPage folder with GUID 'e7dbba58-b963-4d1f-bbf4-c8436d00bf22'.",
                      "code": "folderMove",
                      "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "You cannot move the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot move the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move the root HelpPage folder.",
                    "value": {
                      "message": "Cannot move HelpPage folder with GUID 'e7dbba58-b963-4d1f-bbf4-c8436d00bf22'.",
                      "code": "folderMove",
                      "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "You cannot move the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}/files": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get Files in a Folder",
        "operationId": "GetHelpFiles",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "Abrasion_rate.html",
                      "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                    },
                    {
                      "name": "Atomic_volume.html",
                      "guid": "94574853-3cfe-41d9-be48-391883fa0ea9"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "Abrasion_rate.html",
                      "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                    },
                    {
                      "name": "Atomic_volume.html",
                      "guid": "94574853-3cfe-41d9-be48-391883fa0ea9"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "Abrasion_rate.html",
                      "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                    },
                    {
                      "name": "Atomic_volume.html",
                      "guid": "94574853-3cfe-41d9-be48-391883fa0ea9"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Create a new Help File.",
        "operationId": "CreateHelpFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "bd537e8c-3f01-4212-b594-896e5182147a"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "bd537e8c-3f01-4212-b594-896e5182147a"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "bd537e8c-3f01-4212-b594-896e5182147a"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HelpPage file with name '<new-file>'.",
                    "value": {
                      "message": "Cannot create HelpPage file '<new-file>'.",
                      "code": "fileCreation",
                      "name": "<new-file>",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HelpPage file with name '<new-file>'.",
                    "value": {
                      "message": "Cannot create HelpPage file '<new-file>'.",
                      "code": "fileCreation",
                      "name": "<new-file>",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HelpPage file with name '<new-file>'.",
                    "value": {
                      "message": "Cannot create HelpPage file '<new-file>'.",
                      "code": "fileCreation",
                      "name": "<new-file>",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}/files/{file-guid}": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get header information for a help file",
        "operationId": "GetHelpFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "cd34921a-67e6-43ff-adfe-3d36b6b3b5c7",
                  "description": "Description of Abrasion-rate file.",
                  "extension": "html",
                  "dataLength": 5090,
                  "path": "Help Pages\\html\\attributenotes\\en\\material",
                  "name": "Abrasion_rate.html",
                  "guid": "fdfcb207-63f7-4a10-87a3-054587444056"
                }
              }
            }
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Update an existing Help File.",
        "operationId": "UpdateHelpFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File",
                  "description": "This example demonstrates how to rename an existing help file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Help File",
                  "description": "This example demonstrates how to change the description for an existing help file.",
                  "value": {
                    "description": "New description for help file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Help File",
                  "description": "This example demonstrates how to modify the guid of an existing help file.",
                  "value": {
                    "guid": "146f58e3-3c49-44dd-8e01-b67c8dd58fb2"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File",
                  "description": "This example demonstrates how to rename an existing help file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Help File",
                  "description": "This example demonstrates how to change the description for an existing help file.",
                  "value": {
                    "description": "New description for help file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Help File",
                  "description": "This example demonstrates how to modify the guid of an existing help file.",
                  "value": {
                    "guid": "146f58e3-3c49-44dd-8e01-b67c8dd58fb2"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File",
                  "description": "This example demonstrates how to rename an existing help file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Help File",
                  "description": "This example demonstrates how to change the description for an existing help file.",
                  "value": {
                    "description": "New description for help file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Help File",
                  "description": "This example demonstrates how to modify the guid of an existing help file.",
                  "value": {
                    "guid": "146f58e3-3c49-44dd-8e01-b67c8dd58fb2"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Help File",
                  "description": "This example demonstrates how to rename an existing help file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Help File",
                  "description": "This example demonstrates how to change the description for an existing help file.",
                  "value": {
                    "description": "New description for help file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Help File",
                  "description": "This example demonstrates how to modify the guid of an existing help file.",
                  "value": {
                    "guid": "146f58e3-3c49-44dd-8e01-b67c8dd58fb2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "816c54d5-e7cc-4fa8-b677-6f42564b7dd3"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "816c54d5-e7cc-4fa8-b677-6f42564b7dd3"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "816c54d5-e7cc-4fa8-b677-6f42564b7dd3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid FIle name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename a HelpPage file to '<new-file>'.",
                    "value": {
                      "message": "Cannot update HelpPage file with GUID '4e77a180-203e-4c1a-8dfb-a912f3c14b2a'.",
                      "code": "fileUpdate",
                      "fileGuid": "4e77a180-203e-4c1a-8dfb-a912f3c14b2a",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid FIle name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename a HelpPage file to '<new-file>'.",
                    "value": {
                      "message": "Cannot update HelpPage file with GUID '4e77a180-203e-4c1a-8dfb-a912f3c14b2a'.",
                      "code": "fileUpdate",
                      "fileGuid": "4e77a180-203e-4c1a-8dfb-a912f3c14b2a",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid FIle name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename a HelpPage file to '<new-file>'.",
                    "value": {
                      "message": "Cannot update HelpPage file with GUID '4e77a180-203e-4c1a-8dfb-a912f3c14b2a'.",
                      "code": "fileUpdate",
                      "fileGuid": "4e77a180-203e-4c1a-8dfb-a912f3c14b2a",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Delete a Help File.",
        "operationId": "DeleteHelpFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}:export": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get help folder and contents as a zip file",
        "operationId": "ExportHelpFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}/files/{file-guid}:export": {
      "get": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Get help file as a file",
        "operationId": "ExportHelpFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders/{folder-guid}/files/{file-guid}:move": {
      "post": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Move an existing Help File.",
        "operationId": "MoveHelpFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File",
                  "description": "This example demonstrates how to move an existing help file to be under the root 'Help Pages' folder.",
                  "value": {
                    "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File",
                  "description": "This example demonstrates how to move an existing help file to be under the root 'Help Pages' folder.",
                  "value": {
                    "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File",
                  "description": "This example demonstrates how to move an existing help file to be under the root 'Help Pages' folder.",
                  "value": {
                    "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Help File",
                  "description": "This example demonstrates how to move an existing help file to be under the root 'Help Pages' folder.",
                  "value": {
                    "folderGuid": "e7dbba58-b963-4d1f-bbf4-c8436d00bf22"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "535e37bb-136b-461f-b4ec-c72e2dad3767"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "535e37bb-136b-461f-b4ec-c72e2dad3767"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "535e37bb-136b-461f-b4ec-c72e2dad3767"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent folder not found.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move an existing file to a folder with GUID 'bf097bca-ccd6-4256-bf2e-583d249d90da', but there is no HelpPage folder with that GUID.",
                    "value": {
                      "message": "Cannot move HelpPage file with GUID '25f09558-5f8f-4197-9a52-fc1b8da35400'.",
                      "code": "fileMove",
                      "fileGuid": "25f09558-5f8f-4197-9a52-fc1b8da35400",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "A HelpPage folder with GUID 'bf097bca-ccd6-4256-bf2e-583d249d90da' does not exist in database MI_Training.",
                          "folderGuid": "bf097bca-ccd6-4256-bf2e-583d249d90da",
                          "folderType": "helpPage",
                          "databaseKey": "MI_Training",
                          "reason": "noSuchNewParent"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent folder not found.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move an existing file to a folder with GUID 'bf097bca-ccd6-4256-bf2e-583d249d90da', but there is no HelpPage folder with that GUID.",
                    "value": {
                      "message": "Cannot move HelpPage file with GUID '25f09558-5f8f-4197-9a52-fc1b8da35400'.",
                      "code": "fileMove",
                      "fileGuid": "25f09558-5f8f-4197-9a52-fc1b8da35400",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "A HelpPage folder with GUID 'bf097bca-ccd6-4256-bf2e-583d249d90da' does not exist in database MI_Training.",
                          "folderGuid": "bf097bca-ccd6-4256-bf2e-583d249d90da",
                          "folderType": "helpPage",
                          "databaseKey": "MI_Training",
                          "reason": "noSuchNewParent"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent folder not found.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move an existing file to a folder with GUID 'bf097bca-ccd6-4256-bf2e-583d249d90da', but there is no HelpPage folder with that GUID.",
                    "value": {
                      "message": "Cannot move HelpPage file with GUID '25f09558-5f8f-4197-9a52-fc1b8da35400'.",
                      "code": "fileMove",
                      "fileGuid": "25f09558-5f8f-4197-9a52-fc1b8da35400",
                      "folderType": "helpPage",
                      "errors": [
                        {
                          "message": "A HelpPage folder with GUID 'bf097bca-ccd6-4256-bf2e-583d249d90da' does not exist in database MI_Training.",
                          "folderGuid": "bf097bca-ccd6-4256-bf2e-583d249d90da",
                          "folderType": "helpPage",
                          "databaseKey": "MI_Training",
                          "reason": "noSuchNewParent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/help-folders:validate": {
      "post": {
        "tags": [
          "Schema - Help Files"
        ],
        "summary": "Verify that help pages exist for all attributes and parameters that have help paths defined.\r\nReturns schema entity and help path if the help path does not match an existing help page.",
        "operationId": "ValidateHelpPaths",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaHelpPathsValidationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaHelpPathsValidationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaHelpPathsValidationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders": {
      "get": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Get All Home Page Folders",
        "operationId": "GetHomePageFolders",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Home Pages",
                      "guid": "c13eb185-2558-4b4a-8395-33c031663925"
                    },
                    {
                      "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "images",
                      "guid": "9242c7ec-fbf9-4afa-99ff-d434b924d26d"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Home Pages",
                      "guid": "c13eb185-2558-4b4a-8395-33c031663925"
                    },
                    {
                      "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "images",
                      "guid": "9242c7ec-fbf9-4afa-99ff-d434b924d26d"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "Home Pages",
                      "guid": "c13eb185-2558-4b4a-8395-33c031663925"
                    },
                    {
                      "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "images",
                      "guid": "9242c7ec-fbf9-4afa-99ff-d434b924d26d"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Create a new Home Page Folder.",
        "operationId": "CreateHomePageFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Home Page Folder",
                  "description": "This example demonstrates how to create a new home page folder under the root 'Home Pages' folder.",
                  "value": {
                    "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                    "name": "New Folder"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Home Page Folder",
                  "description": "This example demonstrates how to create a new home page folder under the root 'Home Pages' folder.",
                  "value": {
                    "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                    "name": "New Folder"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Home Page Folder",
                  "description": "This example demonstrates how to create a new home page folder under the root 'Home Pages' folder.",
                  "value": {
                    "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                    "name": "New Folder"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Home Page Folder",
                  "description": "This example demonstrates how to create a new home page folder under the root 'Home Pages' folder.",
                  "value": {
                    "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                    "name": "New Folder"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid Folder name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HomePage folder with name '<new-folder>'.",
                    "value": {
                      "message": "Cannot create HomePage folder '<new-folder>'.",
                      "code": "folderCreation",
                      "name": "<new-folder>",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "'<new-folder>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-folder>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateFolder: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid Folder name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HomePage folder with name '<new-folder>'.",
                    "value": {
                      "message": "Cannot create HomePage folder '<new-folder>'.",
                      "code": "folderCreation",
                      "name": "<new-folder>",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "'<new-folder>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-folder>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateFolder: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid Folder name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HomePage folder with name '<new-folder>'.",
                    "value": {
                      "message": "Cannot create HomePage folder '<new-folder>'.",
                      "code": "folderCreation",
                      "name": "<new-folder>",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "'<new-folder>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-folder>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateFolder: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders:root-folder": {
      "get": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Get Root Home Page Folder",
        "operationId": "GetHomePageRootFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Home Pages",
                  "guid": "c13eb185-2558-4b4a-8395-33c031663925"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Home Pages",
                  "guid": "c13eb185-2558-4b4a-8395-33c031663925"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Home Pages",
                  "guid": "c13eb185-2558-4b4a-8395-33c031663925"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders/{folder-guid}": {
      "get": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Get Home Page Folder",
        "operationId": "GetHomePageFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "images",
                  "guid": "82d6b7f6-8b4a-423c-a598-7a73984fe8d3"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "images",
                  "guid": "82d6b7f6-8b4a-423c-a598-7a73984fe8d3"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "images",
                  "guid": "82d6b7f6-8b4a-423c-a598-7a73984fe8d3"
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Update an existing Home Page Folder.",
        "operationId": "UpdateHomePageFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Home Page Folder",
                  "description": "This example demonstrates how to rename an existing home page folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Home Page Folder",
                  "description": "This example demonstrates how to modify the guid of an existing home page folder.",
                  "value": {
                    "guid": "78237d92-689e-4dfc-afbb-e3443ef232be"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Home Page Folder",
                  "description": "This example demonstrates how to rename an existing home page folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Home Page Folder",
                  "description": "This example demonstrates how to modify the guid of an existing home page folder.",
                  "value": {
                    "guid": "78237d92-689e-4dfc-afbb-e3443ef232be"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Home Page Folder",
                  "description": "This example demonstrates how to rename an existing home page folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Home Page Folder",
                  "description": "This example demonstrates how to modify the guid of an existing home page folder.",
                  "value": {
                    "guid": "78237d92-689e-4dfc-afbb-e3443ef232be"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Home Page Folder",
                  "description": "This example demonstrates how to rename an existing home page folder.",
                  "value": {
                    "name": "New Folder Name"
                  }
                },
                "Example 2": {
                  "summary": "Change guid for Home Page Folder",
                  "description": "This example demonstrates how to modify the guid of an existing home page folder.",
                  "value": {
                    "guid": "78237d92-689e-4dfc-afbb-e3443ef232be"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot update the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the root HomePage folder.",
                    "value": {
                      "message": "Cannot update HomePage folder with GUID 'c13eb185-2558-4b4a-8395-33c031663925'.",
                      "code": "folderUpdate",
                      "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "You cannot update the root folder.",
                          "reason": "updateRoot"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot update the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the root HomePage folder.",
                    "value": {
                      "message": "Cannot update HomePage folder with GUID 'c13eb185-2558-4b4a-8395-33c031663925'.",
                      "code": "folderUpdate",
                      "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "You cannot update the root folder.",
                          "reason": "updateRoot"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot update the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the root HomePage folder.",
                    "value": {
                      "message": "Cannot update HomePage folder with GUID 'c13eb185-2558-4b4a-8395-33c031663925'.",
                      "code": "folderUpdate",
                      "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "You cannot update the root folder.",
                          "reason": "updateRoot"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Delete a Home Page Folder.",
        "operationId": "DeleteHomePageFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderDeletionException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot delete the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to delete the root HomePage folder.",
                    "value": {
                      "message": "Cannot delete HomePage folder with GUID 'c13eb185-2558-4b4a-8395-33c031663925'.",
                      "code": "folderDeletion",
                      "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "You cannot delete the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderDeletionException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot delete the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to delete the root HomePage folder.",
                    "value": {
                      "message": "Cannot delete HomePage folder with GUID 'c13eb185-2558-4b4a-8395-33c031663925'.",
                      "code": "folderDeletion",
                      "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "You cannot delete the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderDeletionException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot delete the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to delete the root HomePage folder.",
                    "value": {
                      "message": "Cannot delete HomePage folder with GUID 'c13eb185-2558-4b4a-8395-33c031663925'.",
                      "code": "folderDeletion",
                      "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "You cannot delete the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders/{folder-guid}:child-folders": {
      "get": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Get Child Home Page Folders",
        "operationId": "GetHomePageChildFolders",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "images",
                      "guid": "abd10e19-62a7-4b1b-bbf1-d27df2be42a6"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "images",
                      "guid": "abd10e19-62a7-4b1b-bbf1-d27df2be42a6"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFoldersInfo"
                },
                "example": {
                  "folders": [
                    {
                      "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "hasFiles": false,
                      "hasChildFolders": false,
                      "name": "images",
                      "guid": "abd10e19-62a7-4b1b-bbf1-d27df2be42a6"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders/{folder-guid}:move": {
      "post": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Move an existing Home Page Folder.",
        "operationId": "MoveHomePageFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Home Page Folder",
                  "description": "This example demonstrates how to move an existing home page folder to be under the root 'Home Pages' folder.",
                  "value": {
                    "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Home Page Folder",
                  "description": "This example demonstrates how to move an existing home page folder to be under the root 'Home Pages' folder.",
                  "value": {
                    "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Home Page Folder",
                  "description": "This example demonstrates how to move an existing home page folder to be under the root 'Home Pages' folder.",
                  "value": {
                    "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFolder"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Home Page Folder",
                  "description": "This example demonstrates how to move an existing home page folder to be under the root 'Home Pages' folder.",
                  "value": {
                    "parentGuid": "c13eb185-2558-4b4a-8395-33c031663925"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolder"
                },
                "example": {
                  "hasFiles": false,
                  "hasChildFolders": false,
                  "name": "Exporters",
                  "guid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot move the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move the root HomePage folder.",
                    "value": {
                      "message": "Cannot move HomePage folder with GUID 'c13eb185-2558-4b4a-8395-33c031663925'.",
                      "code": "folderMove",
                      "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "You cannot move the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot move the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move the root HomePage folder.",
                    "value": {
                      "message": "Cannot move HomePage folder with GUID 'c13eb185-2558-4b4a-8395-33c031663925'.",
                      "code": "folderMove",
                      "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "You cannot move the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFolderMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot move the root folder",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move the root HomePage folder.",
                    "value": {
                      "message": "Cannot move HomePage folder with GUID 'c13eb185-2558-4b4a-8395-33c031663925'.",
                      "code": "folderMove",
                      "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "You cannot move the root folder.",
                          "reason": "root"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders/{folder-guid}/files": {
      "get": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Get the Home Page Files in a Folder",
        "operationId": "GetHomePageFiles",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "home-page-1.html",
                      "guid": "129de795-fd1b-4a5f-a2bd-746c5628a311"
                    },
                    {
                      "name": "home-page-2.html",
                      "guid": "23885a55-91c0-4afb-9d1c-a8db820e5f27"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "home-page-1.html",
                      "guid": "129de795-fd1b-4a5f-a2bd-746c5628a311"
                    },
                    {
                      "name": "home-page-2.html",
                      "guid": "23885a55-91c0-4afb-9d1c-a8db820e5f27"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFilesInfo"
                },
                "example": {
                  "files": [
                    {
                      "name": "home-page-1.html",
                      "guid": "129de795-fd1b-4a5f-a2bd-746c5628a311"
                    },
                    {
                      "name": "home-page-2.html",
                      "guid": "23885a55-91c0-4afb-9d1c-a8db820e5f27"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Create a new Home Page File.",
        "operationId": "CreateHomePageFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "781a32dc-59d5-4389-9420-83269c77f1f5"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "781a32dc-59d5-4389-9420-83269c77f1f5"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "781a32dc-59d5-4389-9420-83269c77f1f5"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HomePage file with name '<new-file>'.",
                    "value": {
                      "message": "Cannot create HomePage file '<new-file>'.",
                      "code": "fileCreation",
                      "name": "<new-file>",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HomePage file with name '<new-file>'.",
                    "value": {
                      "message": "Cannot create HomePage file '<new-file>'.",
                      "code": "fileCreation",
                      "name": "<new-file>",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a HomePage file with name '<new-file>'.",
                    "value": {
                      "message": "Cannot create HomePage file '<new-file>'.",
                      "code": "fileCreation",
                      "name": "<new-file>",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders/{folder-guid}/files/{file-guid}": {
      "get": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Get the header information for a Home Page File",
        "operationId": "GetHomePageFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                  "description": "Description of home page file.",
                  "extension": "html",
                  "dataLength": 12895,
                  "path": "HomePages",
                  "name": "home-page.html",
                  "guid": "f8868ea7-8222-4bfa-a577-63b607882ca6"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                  "description": "Description of home page file.",
                  "extension": "html",
                  "dataLength": 12895,
                  "path": "HomePages",
                  "name": "home-page.html",
                  "guid": "f8868ea7-8222-4bfa-a577-63b607882ca6"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925",
                  "description": "Description of home page file.",
                  "extension": "html",
                  "dataLength": 12895,
                  "path": "HomePages",
                  "name": "home-page.html",
                  "guid": "f8868ea7-8222-4bfa-a577-63b607882ca6"
                }
              }
            }
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Update an existing Home Page File.",
        "operationId": "UpdateHomePageFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Home Page File",
                  "description": "This example demonstrates how to rename an existing home page file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Home Page File",
                  "description": "This example demonstrates how to change the description for an existing home page file.",
                  "value": {
                    "description": "New description for home page file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Home Page File",
                  "description": "This example demonstrates how to modify the guid of an existing home page file.",
                  "value": {
                    "guid": "59ae043c-c42b-4f93-ae1e-f8052039c05d"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Home Page File",
                  "description": "This example demonstrates how to rename an existing home page file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Home Page File",
                  "description": "This example demonstrates how to change the description for an existing home page file.",
                  "value": {
                    "description": "New description for home page file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Home Page File",
                  "description": "This example demonstrates how to modify the guid of an existing home page file.",
                  "value": {
                    "guid": "59ae043c-c42b-4f93-ae1e-f8052039c05d"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Home Page File",
                  "description": "This example demonstrates how to rename an existing home page file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Home Page File",
                  "description": "This example demonstrates how to change the description for an existing home page file.",
                  "value": {
                    "description": "New description for home page file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Home Page File",
                  "description": "This example demonstrates how to modify the guid of an existing home page file.",
                  "value": {
                    "guid": "59ae043c-c42b-4f93-ae1e-f8052039c05d"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Rename Home Page File",
                  "description": "This example demonstrates how to rename an existing home page file.",
                  "value": {
                    "name": "New File Name"
                  }
                },
                "Example 2": {
                  "summary": "Modify the description for a Home Page File",
                  "description": "This example demonstrates how to change the description for an existing home page file.",
                  "value": {
                    "description": "New description for home page file."
                  }
                },
                "Example 3": {
                  "summary": "Change guid for Home Page File",
                  "description": "This example demonstrates how to modify the guid of an existing home page file.",
                  "value": {
                    "guid": "59ae043c-c42b-4f93-ae1e-f8052039c05d"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "d938a610-4f36-4741-8be6-572624795155"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "d938a610-4f36-4741-8be6-572624795155"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "d938a610-4f36-4741-8be6-572624795155"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename a HomePage file to '<new-file>'.",
                    "value": {
                      "message": "Cannot update HomePage file with GUID '2b3290a0-15ce-45da-9339-37dcbb9325e3'.",
                      "code": "fileUpdate",
                      "fileGuid": "2b3290a0-15ce-45da-9339-37dcbb9325e3",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename a HomePage file to '<new-file>'.",
                    "value": {
                      "message": "Cannot update HomePage file with GUID '2b3290a0-15ce-45da-9339-37dcbb9325e3'.",
                      "code": "fileUpdate",
                      "fileGuid": "2b3290a0-15ce-45da-9339-37dcbb9325e3",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid File name",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to rename a HomePage file to '<new-file>'.",
                    "value": {
                      "message": "Cannot update HomePage file with GUID '2b3290a0-15ce-45da-9339-37dcbb9325e3'.",
                      "code": "fileUpdate",
                      "fileGuid": "2b3290a0-15ce-45da-9339-37dcbb9325e3",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "'<new-file>' is not a valid file name. You cannot use directory separators or special characters in file or folder names.",
                          "name": "<new-file>",
                          "reason": "fileName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Delete a Home Page File.",
        "operationId": "DeleteHomePageFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders/{folder-guid}:export": {
      "get": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Get Home Page folder and contents as a zip file",
        "operationId": "ExportHomePageFolder",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "404": {
            "description": "Database or folder not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders/{folder-guid}/files/{file-guid}:export": {
      "get": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Get Home Page File as a file",
        "operationId": "ExportHomePageFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-is-file": true
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/home-page-folders/{folder-guid}/files/{file-guid}:move": {
      "post": {
        "tags": [
          "Schema - Home Pages"
        ],
        "summary": "Move an existing Home Page File.",
        "operationId": "MoveHomePageFile",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "folder-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Home Page File",
                  "description": "This example demonstrates how to move an existing home page file to be under the root 'Home Pages' folder.",
                  "value": {
                    "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Home Page File",
                  "description": "This example demonstrates how to move an existing home page file to be under the root 'Home Pages' folder.",
                  "value": {
                    "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Home Page File",
                  "description": "This example demonstrates how to move an existing home page file to be under the root 'Home Pages' folder.",
                  "value": {
                    "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaMoveFile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Move Home Page File",
                  "description": "This example demonstrates how to move an existing home page file to be under the root 'Home Pages' folder.",
                  "value": {
                    "folderGuid": "c13eb185-2558-4b4a-8395-33c031663925"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "adef3988-c061-433d-9622-42068313fda3"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "adef3988-c061-433d-9622-42068313fda3"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileHeader"
                },
                "example": {
                  "folderGuid": "c4e0bbbd-71b3-4bf7-ac6e-7ceeef058a44",
                  "description": "Description of exporter file.",
                  "extension": "exp",
                  "dataLength": 12895,
                  "path": "Exporters",
                  "name": "exporter-1.exp",
                  "guid": "adef3988-c061-433d-9622-42068313fda3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent folder not found.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move an existing file to a folder with GUID '87901250-fd2e-4877-ad0d-6fda93e9f467', but there is no HomePage folder with that GUID.",
                    "value": {
                      "message": "Cannot move HomePage file with GUID 'ffb100c2-1cd8-4f96-82b5-6a50373ac6d2'.",
                      "code": "fileMove",
                      "fileGuid": "ffb100c2-1cd8-4f96-82b5-6a50373ac6d2",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "A HomePage folder with GUID '87901250-fd2e-4877-ad0d-6fda93e9f467' does not exist in database MI_Training.",
                          "folderGuid": "87901250-fd2e-4877-ad0d-6fda93e9f467",
                          "folderType": "homePage",
                          "databaseKey": "MI_Training",
                          "reason": "noSuchNewParent"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent folder not found.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move an existing file to a folder with GUID '87901250-fd2e-4877-ad0d-6fda93e9f467', but there is no HomePage folder with that GUID.",
                    "value": {
                      "message": "Cannot move HomePage file with GUID 'ffb100c2-1cd8-4f96-82b5-6a50373ac6d2'.",
                      "code": "fileMove",
                      "fileGuid": "ffb100c2-1cd8-4f96-82b5-6a50373ac6d2",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "A HomePage folder with GUID '87901250-fd2e-4877-ad0d-6fda93e9f467' does not exist in database MI_Training.",
                          "folderGuid": "87901250-fd2e-4877-ad0d-6fda93e9f467",
                          "folderType": "homePage",
                          "databaseKey": "MI_Training",
                          "reason": "noSuchNewParent"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaFileMoveException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "New parent folder not found.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to move an existing file to a folder with GUID '87901250-fd2e-4877-ad0d-6fda93e9f467', but there is no HomePage folder with that GUID.",
                    "value": {
                      "message": "Cannot move HomePage file with GUID 'ffb100c2-1cd8-4f96-82b5-6a50373ac6d2'.",
                      "code": "fileMove",
                      "fileGuid": "ffb100c2-1cd8-4f96-82b5-6a50373ac6d2",
                      "folderType": "homePage",
                      "errors": [
                        {
                          "message": "A HomePage folder with GUID '87901250-fd2e-4877-ad0d-6fda93e9f467' does not exist in database MI_Training.",
                          "folderGuid": "87901250-fd2e-4877-ad0d-6fda93e9f467",
                          "folderType": "homePage",
                          "databaseKey": "MI_Training",
                          "reason": "noSuchNewParent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, folder or file not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}/sections": {
      "get": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Get all sections for a layout",
        "operationId": "GetLayoutSections",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "showFullDetail",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaLayoutSectionsInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Get 'slim' layout sections",
                    "description": "This example demonstrates the response to getting the sections for a layout with the 'showFullDetail' parameter set to false, which is the default value.",
                    "value": {
                      "layoutSections": [
                        {
                          "sectionDetailType": "slim",
                          "displayNames": {
                            "en": "General Properties English Display Name",
                            "fr": "General Properties French Display Name"
                          },
                          "name": "General Properties",
                          "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                        },
                        {
                          "sectionDetailType": "slim",
                          "displayNames": {
                            "en": "Mechanical Properties English Display Name",
                            "fr": "Mechanical Properties French Display Name"
                          },
                          "name": "Mechanical Properties",
                          "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Get 'full' layout sections",
                    "description": "This example demonstrates the response to getting the sections for a layout with the 'showFullDetail' parameter set to true.",
                    "value": {
                      "layoutSections": [
                        {
                          "sectionDetailType": "full",
                          "sectionItems": [
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": false,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "5792a3f0-cb62-4ffa-a907-77aaaf937bba",
                              "name": "Price",
                              "guid": "b2b52ebc-cef3-484e-9864-b6f6d2ad4307"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": false,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "eddac4d9-e812-4273-b7e0-5b20d269a4ec",
                              "name": "Density",
                              "guid": "0d10d495-78c1-43b3-b482-d96f4dc74ce8"
                            }
                          ],
                          "displayNames": {
                            "en": "General Properties English Display Name",
                            "fr": "General Properties French Display Name"
                          },
                          "name": "General Properties",
                          "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                        },
                        {
                          "sectionDetailType": "full",
                          "sectionItems": [
                            {
                              "itemType": "attribute",
                              "attributeType": "floatFunctional",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "af9fb93e-f5e5-4970-9ef4-2034b7bf12a2",
                              "name": "Young's modulus",
                              "guid": "07377e80-8b7a-4118-90bb-64099435f7d3"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "range",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "a65af827-5786-4985-a055-6a52fa22a9c0",
                              "name": "Tensile strength",
                              "guid": "690c9241-2789-4fea-a814-83e081ab912f"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "aa465b64-4ba6-4932-9f95-abd1805f07a8",
                              "name": "Shape factor",
                              "guid": "f4ca9ee5-e0b7-4754-b595-e51a0729f13d"
                            }
                          ],
                          "displayNames": {
                            "en": "Mechanical Properties English Display Name",
                            "fr": "Mechanical Properties French Display Name"
                          },
                          "name": "Mechanical Properties",
                          "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Create a new layout section.",
        "operationId": "CreateSection",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateLayoutSection"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Section",
                  "description": "This example demonstrates how to create a new layout section in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Additional Properties"
                  }
                },
                "Example 2": {
                  "summary": "Layout Section with Guid",
                  "description": "This example demonstrates how to create a new layout section with a specified guid value in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "Additional Properties (Guid)",
                    "guid": "8b973667-a3de-41a1-8a5a-ece1d0314dda"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateLayoutSection"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Section",
                  "description": "This example demonstrates how to create a new layout section in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Additional Properties"
                  }
                },
                "Example 2": {
                  "summary": "Layout Section with Guid",
                  "description": "This example demonstrates how to create a new layout section with a specified guid value in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "Additional Properties (Guid)",
                    "guid": "8b973667-a3de-41a1-8a5a-ece1d0314dda"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateLayoutSection"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Section",
                  "description": "This example demonstrates how to create a new layout section in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Additional Properties"
                  }
                },
                "Example 2": {
                  "summary": "Layout Section with Guid",
                  "description": "This example demonstrates how to create a new layout section with a specified guid value in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "Additional Properties (Guid)",
                    "guid": "8b973667-a3de-41a1-8a5a-ece1d0314dda"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateLayoutSection"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Section",
                  "description": "This example demonstrates how to create a new layout section in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Additional Properties"
                  }
                },
                "Example 2": {
                  "summary": "Layout Section with Guid",
                  "description": "This example demonstrates how to create a new layout section with a specified guid value in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "Additional Properties (Guid)",
                    "guid": "8b973667-a3de-41a1-8a5a-ece1d0314dda"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSlimLayoutSection"
                },
                "example": {
                  "sectionDetailType": "slim",
                  "displayNames": {},
                  "name": "Additional Properties",
                  "guid": "95f42f24-a2e4-4d28-9bbe-86019fbd9db8"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      },
      "put": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Reorder the list of layout sections for a layout.",
        "operationId": "ReorderSections",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaReorderSectionsInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Reorder Layout Sections",
                  "description": "This example demonstrates how to reorder sections in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "layoutSections": [
                      {
                        "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                      },
                      {
                        "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                      },
                      {
                        "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                      },
                      {
                        "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                      },
                      {
                        "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                      },
                      {
                        "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                      },
                      {
                        "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                      },
                      {
                        "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                      },
                      {
                        "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                      },
                      {
                        "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                      },
                      {
                        "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                      },
                      {
                        "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                      },
                      {
                        "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                      },
                      {
                        "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                      },
                      {
                        "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                      },
                      {
                        "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                      },
                      {
                        "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                      },
                      {
                        "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                      },
                      {
                        "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaReorderSectionsInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Reorder Layout Sections",
                  "description": "This example demonstrates how to reorder sections in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "layoutSections": [
                      {
                        "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                      },
                      {
                        "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                      },
                      {
                        "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                      },
                      {
                        "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                      },
                      {
                        "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                      },
                      {
                        "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                      },
                      {
                        "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                      },
                      {
                        "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                      },
                      {
                        "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                      },
                      {
                        "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                      },
                      {
                        "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                      },
                      {
                        "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                      },
                      {
                        "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                      },
                      {
                        "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                      },
                      {
                        "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                      },
                      {
                        "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                      },
                      {
                        "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                      },
                      {
                        "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                      },
                      {
                        "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaReorderSectionsInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Reorder Layout Sections",
                  "description": "This example demonstrates how to reorder sections in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "layoutSections": [
                      {
                        "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                      },
                      {
                        "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                      },
                      {
                        "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                      },
                      {
                        "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                      },
                      {
                        "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                      },
                      {
                        "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                      },
                      {
                        "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                      },
                      {
                        "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                      },
                      {
                        "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                      },
                      {
                        "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                      },
                      {
                        "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                      },
                      {
                        "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                      },
                      {
                        "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                      },
                      {
                        "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                      },
                      {
                        "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                      },
                      {
                        "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                      },
                      {
                        "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                      },
                      {
                        "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                      },
                      {
                        "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaReorderSectionsInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Reorder Layout Sections",
                  "description": "This example demonstrates how to reorder sections in the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "layoutSections": [
                      {
                        "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                      },
                      {
                        "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                      },
                      {
                        "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                      },
                      {
                        "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                      },
                      {
                        "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                      },
                      {
                        "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                      },
                      {
                        "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                      },
                      {
                        "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                      },
                      {
                        "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                      },
                      {
                        "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                      },
                      {
                        "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                      },
                      {
                        "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                      },
                      {
                        "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                      },
                      {
                        "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                      },
                      {
                        "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                      },
                      {
                        "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                      },
                      {
                        "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                      },
                      {
                        "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                      },
                      {
                        "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaLayoutSectionsInfo"
                },
                "example": {
                  "layoutSections": [
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Mechanical Properties English Display Name",
                        "fr": "Mechanical Properties French Display Name"
                      },
                      "name": "Mechanical Properties",
                      "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "General Properties English Display Name",
                        "fr": "General Properties French Display Name"
                      },
                      "name": "General Properties",
                      "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Electrical Properties English Display Name",
                        "fr": "Electrical Properties French Display Name"
                      },
                      "name": "Electrical Properties",
                      "guid": "07124fac-3100-444f-ad5b-385decd9539f"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Composition Overview English Display Name",
                        "fr": "Composition Overview French Display Name"
                      },
                      "name": "Composition Overview",
                      "guid": "937e77fe-70ca-4e99-b013-f9186bce45d3"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Composition detail (metals, ceramics and glasses) English Display Name",
                        "fr": "Composition detail (metals, ceramics and glasses) French Display Name"
                      },
                      "name": "Composition detail (metals, ceramics and glasses)",
                      "guid": "6f610145-72f9-4c11-aa72-6cbe268e9238"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Restricted substances English Display Name",
                        "fr": "Restricted substances French Display Name"
                      },
                      "name": "Restricted substances",
                      "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Further Information English Display Name",
                        "fr": "Further Information French Display Name"
                      },
                      "name": "Further Information",
                      "guid": "6a5788ea-1a46-4806-a9d7-916a2eebb71c"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Restricted substances English Display Name",
                        "fr": "Restricted substances French Display Name"
                      },
                      "name": "Restricted substances",
                      "guid": "f2587e4f-36b4-4b75-8ecb-853e51adf3a5"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Notes English Display Name",
                        "fr": "Notes French Display Name"
                      },
                      "name": "Notes",
                      "guid": "e243499b-3369-45db-bf3e-3c0dbb82f57f"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Material recycling: energy, CO2 and recycle fraction English Display Name",
                        "fr": "Material recycling: energy, CO2 and recycle fraction French Display Name"
                      },
                      "name": "Material recycling: energy, CO2 and recycle fraction",
                      "guid": "b175f578-cf61-4642-9b98-eda48578db1e"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Material processing: CO2 footprint English Display Name",
                        "fr": "Material processing: CO2 footprint French Display Name"
                      },
                      "name": "Material processing: CO2 footprint",
                      "guid": "268854a1-1886-4bbf-b6aa-02aa64020fac"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Material processing: energy English Display Name",
                        "fr": "Material processing: energy French Display Name"
                      },
                      "name": "Material processing: energy",
                      "guid": "3bde950b-9320-439e-8e7a-cf12c54eb94d"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Eco-indicators for principal component English Display Name",
                        "fr": "Eco-indicators for principal component French Display Name"
                      },
                      "name": "Eco-indicators for principal component",
                      "guid": "3b829b2a-bfca-4531-9532-834eedcc0778"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Primary material production: energy, CO2 and water English Display Name",
                        "fr": "Primary material production: energy, CO2 and water French Display Name"
                      },
                      "name": "Primary material production: energy, CO2 and water",
                      "guid": "b9d84ce2-9435-4f22-9377-9db56fb80c53"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Geo-economic data for principal component English Display Name",
                        "fr": "Geo-economic data for principal component French Display Name"
                      },
                      "name": "Geo-economic data for principal component",
                      "guid": "3be73930-15a2-4dca-a818-3e18aa6081aa"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Durability: fluids and sunlight English Display Name",
                        "fr": "Durability: fluids and sunlight French Display Name"
                      },
                      "name": "Durability: fluids and sunlight",
                      "guid": "83ba3aad-cb2f-49df-89e5-091017087563"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Durability: flammability English Display Name",
                        "fr": "Durability: flammability French Display Name"
                      },
                      "name": "Durability: flammability",
                      "guid": "0c17f625-debe-4b6a-bcde-d60f3db571f5"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Optical properties English Display Name",
                        "fr": "Optical properties French Display Name"
                      },
                      "name": "Optical properties",
                      "guid": "461c81d8-ecb4-4675-a05d-2dfef747db71"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Thermal properties English Display Name",
                        "fr": "Thermal properties French Display Name"
                      },
                      "name": "Thermal properties",
                      "guid": "5b986b6d-ce14-48fd-b5a9-6286b9983954"
                    },
                    {
                      "sectionDetailType": "slim",
                      "displayNames": {
                        "en": "Bio-data English Display Name",
                        "fr": "Bio-data French Display Name"
                      },
                      "name": "Bio-data",
                      "guid": "d15a87a0-2880-4508-af1e-381a2aa9e831"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, layout or layout section not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}/sections/{section-guid}": {
      "get": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Get a layout section with a specified guid for a given layout.",
        "operationId": "GetLayoutSection",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "section-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "showFullDetail",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaLayoutSection"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Get 'slim' layout section",
                    "description": "This example demonstrates the response to getting a layout section with the 'showFullDetail' parameter set to false, which is the default value.",
                    "value": {
                      "detailType": "slim",
                      "displayNames": {
                        "de": "Testing Information German Display Name",
                        "fr": "Testing Information French Display Name"
                      },
                      "name": "Testing Information",
                      "guid": "771179d8-f39b-4a9c-8e66-997e65639ca5"
                    }
                  },
                  "Example 2": {
                    "summary": "Get 'full' layout section",
                    "description": "This example demonstrates the response to getting a layout section with the 'showFullDetail' parameter set to true.",
                    "value": {
                      "detailType": "full",
                      "sectionItems": [
                        {
                          "itemType": "attribute",
                          "attributeType": "shortText",
                          "required": true,
                          "readOnly": false,
                          "metaAttributes": [],
                          "underlyingEntityGuid": "71fcd170-0270-407e-8dda-dd4ad9f0ff3c",
                          "name": "Form",
                          "guid": "28e84bcd-118b-4228-a0cc-5ecf738f4422"
                        },
                        {
                          "itemType": "attribute",
                          "attributeType": "point",
                          "required": true,
                          "readOnly": false,
                          "metaAttributes": [
                            {
                              "itemType": "attribute",
                              "attributeType": "longText",
                              "required": true,
                              "readOnly": false,
                              "underlyingEntityGuid": "1c487dcd-a534-48f1-af0b-2f132d35c114",
                              "name": "Sources",
                              "guid": "031e2632-7915-4c4a-a21f-7775cad16d6e"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "shortText",
                              "required": true,
                              "readOnly": false,
                              "underlyingEntityGuid": "98901116-b7ac-4702-89a6-0714df7e2f6c",
                              "name": "Notes",
                              "guid": "992a9f4d-69c5-4dfa-9a35-6d75ad7eabda"
                            }
                          ],
                          "underlyingEntityGuid": "d365f970-f433-4249-9fe2-158eef87e6c4",
                          "name": "Chemical resistance",
                          "guid": "eca85963-61ed-4da9-83a3-ad43b3e893bc"
                        },
                        {
                          "itemType": "link",
                          "linkType": "recordLink",
                          "targetDatabase": "862fe64b-ff73-43d5-a2ca-3930ec36c7a8",
                          "targetDatabaseVersion": "18e9d60f-251b-4d86-8b93-0b4ecd7a06a6",
                          "targetTable": "26641fb5-0ca5-45ab-b3ff-a78b82a80a79",
                          "forwards": true,
                          "underlyingEntityGuid": "27151a9c-b2c3-4586-a673-3632ca4c97cb",
                          "name": "Material Pedigree",
                          "guid": "e50ed19f-6f43-45ae-9662-451e05beae62"
                        },
                        {
                          "itemType": "attribute",
                          "attributeType": "link",
                          "required": false,
                          "readOnly": false,
                          "metaAttributes": [],
                          "tabularColumns": [
                            {
                              "columnType": "linkedAttribute",
                              "tabularColumnGuid": "d3ad77d4-db18-4a5f-9d40-93cfbcc41292",
                              "name": "Offset Yield Stress",
                              "guid": "62f65f72-7640-4de1-8caa-7e19b47b7af6"
                            },
                            {
                              "columnType": "localShortText",
                              "tabularColumnGuid": "b29a69e9-70c1-40e2-9875-1db8b2b32df2",
                              "name": "Young's Modulus Notes",
                              "guid": "e576e923-a1d5-4597-91ca-ab734910a237"
                            }
                          ],
                          "underlyingEntityGuid": "7312a9e3-5683-4696-ba19-1499b6dd8e51",
                          "name": "Reference Characteristics",
                          "guid": "92584d7e-bb07-4791-ba6c-82739e238af1"
                        },
                        {
                          "itemType": "link",
                          "linkType": "associationChain",
                          "targetDatabase": "862fe64b-ff73-43d5-a2ca-3930ec36c7a8",
                          "targetDatabaseVersion": "18e9d60f-251b-4d86-8b93-0b4ecd7a06a6",
                          "targetTable": "9ce0490e-bae0-46fd-a5da-494fab1629af",
                          "forwards": true,
                          "nextLink": {
                            "itemType": "link",
                            "linkType": "associationChain",
                            "targetDatabase": "862fe64b-ff73-43d5-a2ca-3930ec36c7a8",
                            "targetDatabaseVersion": "18e9d60f-251b-4d86-8b93-0b4ecd7a06a6",
                            "targetTable": "ee233c69-85cb-44b6-84fd-23d77919984d",
                            "forwards": false,
                            "underlyingEntityGuid": "41cc5fc3-0d32-49ee-b2fb-9aaf33a92dcc",
                            "name": "Pedigree information",
                            "guid": "c75cc683-920e-4153-80b6-2b9f1975af11"
                          },
                          "underlyingEntityGuid": "909f48d3-6771-41b1-8b6f-75797e991ffc",
                          "name": "To Pedigree from Producers",
                          "guid": "706b6fe5-49bb-447b-bbd4-245ca43cfe36"
                        }
                      ],
                      "displayNames": {
                        "de": "Testing Information German Display Name",
                        "fr": "Testing Information French Display Name"
                      },
                      "name": "Testing Information",
                      "guid": "dfeedd13-7abc-47e6-90a7-718988a99204"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table, layout or layout section not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Delete a layout section.",
        "operationId": "DeleteSection",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "section-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, layout or layout section not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}/sections/{section-guid}/items": {
      "post": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Add a new layout item.",
        "operationId": "CreateLayoutItem",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "section-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaNewLayoutItem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Attribute Item",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The ReadOnly and Required properties default to false.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b"
                  }
                },
                "Example 2": {
                  "summary": "Layout Attribute Item with ReadOnly and Required properties set",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database specifying the ReadOnly and Required properties and the Guid of the created layout item.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                    "required": true,
                    "readOnly": true
                  }
                },
                "Example 3": {
                  "summary": "Layout Attribute Item with Meta Attributes",
                  "description": "This example demonstrates how to add the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                    "metaAttributes": [
                      {
                        "itemType": "attribute",
                        "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                        "required": false,
                        "readOnly": false
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Layout Attribute Item for a Tabular Attribute",
                  "description": "This example demonstrates how to add the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                    "tabularColumnGuids": [
                      "7b28a5fd-4972-40fc-8181-626586258bc3",
                      "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Layout Record Link Group Item",
                  "description": "This example demonstrates how to add the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "recordLink",
                    "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                  }
                },
                "Example 6": {
                  "summary": "Layout Smart Link Group Item",
                  "description": "This example demonstrates how to add the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "smartLink",
                    "forwards": true,
                    "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                  }
                },
                "Example 7": {
                  "summary": "Layout Cross Database Link Group Item",
                  "description": "This example demonstrates how to add a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "crossDatabaseLink",
                    "sourceDatabaseGuid": "2ce68637-8053-4427-8de8-8d4759c54538",
                    "sourceTableGuid": "6ef4492e-8bb7-465a-9f5d-6ad8dfaec236",
                    "linkGroupGuid": "f4e42582-8271-40c6-807f-22cd038916ab"
                  }
                },
                "Example 8": {
                  "summary": "Layout Association Chain Item",
                  "description": "This example demonstrates how to add an association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "associationChain",
                    "associationChainName": "Name of association chain",
                    "associationChainLinks": [
                      {
                        "forwards": true,
                        "sourceDatabaseVersionGuid": "851d383e-fb36-4a39-b059-f5416e37d664",
                        "tabularAttributeGuid": "776308d1-b53f-4bb9-9a24-858916c873cc"
                      },
                      {
                        "forwards": false,
                        "sourceDatabaseVersionGuid": "9de169a2-2259-49fe-b2da-86a00f98d2ec",
                        "tabularAttributeGuid": "8107216a-fdc5-4177-bf64-1ab6b3549150"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaNewLayoutItem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Attribute Item",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The ReadOnly and Required properties default to false.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b"
                  }
                },
                "Example 2": {
                  "summary": "Layout Attribute Item with ReadOnly and Required properties set",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database specifying the ReadOnly and Required properties and the Guid of the created layout item.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                    "required": true,
                    "readOnly": true
                  }
                },
                "Example 3": {
                  "summary": "Layout Attribute Item with Meta Attributes",
                  "description": "This example demonstrates how to add the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                    "metaAttributes": [
                      {
                        "itemType": "attribute",
                        "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                        "required": false,
                        "readOnly": false
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Layout Attribute Item for a Tabular Attribute",
                  "description": "This example demonstrates how to add the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                    "tabularColumnGuids": [
                      "7b28a5fd-4972-40fc-8181-626586258bc3",
                      "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Layout Record Link Group Item",
                  "description": "This example demonstrates how to add the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "recordLink",
                    "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                  }
                },
                "Example 6": {
                  "summary": "Layout Smart Link Group Item",
                  "description": "This example demonstrates how to add the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "smartLink",
                    "forwards": true,
                    "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                  }
                },
                "Example 7": {
                  "summary": "Layout Cross Database Link Group Item",
                  "description": "This example demonstrates how to add a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "crossDatabaseLink",
                    "sourceDatabaseGuid": "2ce68637-8053-4427-8de8-8d4759c54538",
                    "sourceTableGuid": "6ef4492e-8bb7-465a-9f5d-6ad8dfaec236",
                    "linkGroupGuid": "f4e42582-8271-40c6-807f-22cd038916ab"
                  }
                },
                "Example 8": {
                  "summary": "Layout Association Chain Item",
                  "description": "This example demonstrates how to add an association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "associationChain",
                    "associationChainName": "Name of association chain",
                    "associationChainLinks": [
                      {
                        "forwards": true,
                        "sourceDatabaseVersionGuid": "851d383e-fb36-4a39-b059-f5416e37d664",
                        "tabularAttributeGuid": "776308d1-b53f-4bb9-9a24-858916c873cc"
                      },
                      {
                        "forwards": false,
                        "sourceDatabaseVersionGuid": "9de169a2-2259-49fe-b2da-86a00f98d2ec",
                        "tabularAttributeGuid": "8107216a-fdc5-4177-bf64-1ab6b3549150"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaNewLayoutItem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Attribute Item",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The ReadOnly and Required properties default to false.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b"
                  }
                },
                "Example 2": {
                  "summary": "Layout Attribute Item with ReadOnly and Required properties set",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database specifying the ReadOnly and Required properties and the Guid of the created layout item.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                    "required": true,
                    "readOnly": true
                  }
                },
                "Example 3": {
                  "summary": "Layout Attribute Item with Meta Attributes",
                  "description": "This example demonstrates how to add the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                    "metaAttributes": [
                      {
                        "itemType": "attribute",
                        "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                        "required": false,
                        "readOnly": false
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Layout Attribute Item for a Tabular Attribute",
                  "description": "This example demonstrates how to add the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                    "tabularColumnGuids": [
                      "7b28a5fd-4972-40fc-8181-626586258bc3",
                      "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Layout Record Link Group Item",
                  "description": "This example demonstrates how to add the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "recordLink",
                    "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                  }
                },
                "Example 6": {
                  "summary": "Layout Smart Link Group Item",
                  "description": "This example demonstrates how to add the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "smartLink",
                    "forwards": true,
                    "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                  }
                },
                "Example 7": {
                  "summary": "Layout Cross Database Link Group Item",
                  "description": "This example demonstrates how to add a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "crossDatabaseLink",
                    "sourceDatabaseGuid": "2ce68637-8053-4427-8de8-8d4759c54538",
                    "sourceTableGuid": "6ef4492e-8bb7-465a-9f5d-6ad8dfaec236",
                    "linkGroupGuid": "f4e42582-8271-40c6-807f-22cd038916ab"
                  }
                },
                "Example 8": {
                  "summary": "Layout Association Chain Item",
                  "description": "This example demonstrates how to add an association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "associationChain",
                    "associationChainName": "Name of association chain",
                    "associationChainLinks": [
                      {
                        "forwards": true,
                        "sourceDatabaseVersionGuid": "851d383e-fb36-4a39-b059-f5416e37d664",
                        "tabularAttributeGuid": "776308d1-b53f-4bb9-9a24-858916c873cc"
                      },
                      {
                        "forwards": false,
                        "sourceDatabaseVersionGuid": "9de169a2-2259-49fe-b2da-86a00f98d2ec",
                        "tabularAttributeGuid": "8107216a-fdc5-4177-bf64-1ab6b3549150"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaNewLayoutItem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout Attribute Item",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. The ReadOnly and Required properties default to false.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b"
                  }
                },
                "Example 2": {
                  "summary": "Layout Attribute Item with ReadOnly and Required properties set",
                  "description": "This example demonstrates how to add the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database specifying the ReadOnly and Required properties and the Guid of the created layout item.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                    "required": true,
                    "readOnly": true
                  }
                },
                "Example 3": {
                  "summary": "Layout Attribute Item with Meta Attributes",
                  "description": "This example demonstrates how to add the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                    "metaAttributes": [
                      {
                        "itemType": "attribute",
                        "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                        "required": false,
                        "readOnly": false
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Layout Attribute Item for a Tabular Attribute",
                  "description": "This example demonstrates how to add the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include.",
                  "value": {
                    "itemType": "attribute",
                    "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                    "tabularColumnGuids": [
                      "7b28a5fd-4972-40fc-8181-626586258bc3",
                      "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                    ]
                  }
                },
                "Example 5": {
                  "summary": "Layout Record Link Group Item",
                  "description": "This example demonstrates how to add the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "recordLink",
                    "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                  }
                },
                "Example 6": {
                  "summary": "Layout Smart Link Group Item",
                  "description": "This example demonstrates how to add the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "smartLink",
                    "forwards": true,
                    "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                  }
                },
                "Example 7": {
                  "summary": "Layout Cross Database Link Group Item",
                  "description": "This example demonstrates how to add a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "crossDatabaseLink",
                    "sourceDatabaseGuid": "2ce68637-8053-4427-8de8-8d4759c54538",
                    "sourceTableGuid": "6ef4492e-8bb7-465a-9f5d-6ad8dfaec236",
                    "linkGroupGuid": "f4e42582-8271-40c6-807f-22cd038916ab"
                  }
                },
                "Example 8": {
                  "summary": "Layout Association Chain Item",
                  "description": "This example demonstrates how to add an association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "itemType": "associationChain",
                    "associationChainName": "Name of association chain",
                    "associationChainLinks": [
                      {
                        "forwards": true,
                        "sourceDatabaseVersionGuid": "851d383e-fb36-4a39-b059-f5416e37d664",
                        "tabularAttributeGuid": "776308d1-b53f-4bb9-9a24-858916c873cc"
                      },
                      {
                        "forwards": false,
                        "sourceDatabaseVersionGuid": "9de169a2-2259-49fe-b2da-86a00f98d2ec",
                        "tabularAttributeGuid": "8107216a-fdc5-4177-bf64-1ab6b3549150"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaNewLayoutItem"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Layout Attribute Item",
                    "description": "This example demonstrates the response to creating a new attribute layout item. It was created by adding the 'Additive' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "attribute",
                      "attributeGuid": "ec51581f-4a78-4b1b-81df-83382c541b7b",
                      "required": true,
                      "readOnly": false,
                      "metaAttributes": null,
                      "tabularColumnGuids": null,
                      "guid": "f51f46fb-98ae-411f-bfff-c67434d2769d"
                    }
                  },
                  "Example 2": {
                    "summary": "Layout Attribute Item with Meta Attributes",
                    "description": "This example demonstrates the response to creating a new attribute layout item with a meta-attribute. It was created by adding the 'Flexural modulus' attribute with its 'Notes' meta-attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "attribute",
                      "attributeGuid": "000000ec-0001-4fff-8fff-dd92ffff0000",
                      "required": false,
                      "readOnly": false,
                      "metaAttributes": [
                        {
                          "itemType": "attribute",
                          "attributeGuid": "3cd6866c-3ad4-4cc9-b2d0-e7296b0c12d5",
                          "required": true,
                          "readOnly": false
                        }
                      ],
                      "tabularColumnGuids": null,
                      "guid": "28ebbe8a-073a-4f0d-b4cd-e6e1c6ff3690"
                    }
                  },
                  "Example 3": {
                    "summary": "Layout Attribute Item for a Tabular Attribute",
                    "description": "This example demonstrates the response to creating a new tabular attribute layout item with specified tabular columns to include. It was created by adding the 'Restricted substances associated with this material' attribute to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified tabular columns to include. ",
                    "value": {
                      "itemType": "attribute",
                      "attributeGuid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "required": false,
                      "readOnly": false,
                      "metaAttributes": null,
                      "tabularColumnGuids": [
                        "7b28a5fd-4972-40fc-8181-626586258bc3",
                        "9a0ce77a-60cf-42c7-b827-e7d74bea7a6b"
                      ],
                      "guid": null
                    }
                  },
                  "Example 4": {
                    "summary": "Layout Record Link Group Item",
                    "description": "This example demonstrates the response to creating a new link group layout item. It was created by adding the 'MaterialUniverse' (reverse name 'Training Exercise') link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "recordLink",
                      "forwards": null,
                      "linkGroupGuid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949",
                      "guid": null
                    }
                  },
                  "Example 5": {
                    "summary": "Layout Smart Link Group Item",
                    "description": "This example demonstrates the response to creating a new smart link group layout item. It was created by adding the 'Smart Link to Training Record' smart link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "smartLink",
                      "forwards": true,
                      "linkGroupGuid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66",
                      "guid": null
                    }
                  },
                  "Example 6": {
                    "summary": "Layout Cross Database Link Group Item",
                    "description": "This example demonstrates the response to creating a new cross database link group layout item. It was created by adding a cross database link group to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "crossDatabaseLink",
                      "sourceDatabaseGuid": "fc4206a0-7d54-4dd1-95b3-122f458d2167",
                      "sourceTableGuid": "77e784ed-6d51-41af-a230-dc7d9e51446c",
                      "linkGroupGuid": "0bee3c0a-becf-4bcf-8db9-ac2733a1d405",
                      "guid": null
                    }
                  },
                  "Example 7": {
                    "summary": "Layout Association Chain Item",
                    "description": "This example demonstrates the response to creating a new association chain layout item. It was created by adding a association chain to the 'General Properties' layout section (guid = b10170ab-ff56-4828-81b8-c4427674ed2f) of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                    "value": {
                      "itemType": "associationChain",
                      "associationChainName": "Name of association chain",
                      "associationChainLinks": [
                        {
                          "forwards": true,
                          "sourceDatabaseVersionGuid": "00000000-0000-0000-0000-000000000000",
                          "tabularAttributeGuid": "913fdd8f-638e-4c69-bedc-6c56cc684ac1"
                        },
                        {
                          "forwards": false,
                          "sourceDatabaseVersionGuid": "00000000-0000-0000-0000-000000000000",
                          "tabularAttributeGuid": "55219ed1-9a32-4542-a466-b6fd27d52159"
                        }
                      ],
                      "guid": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, layout or layout section not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}/sections/{section-guid}/items/{item-guid}": {
      "delete": {
        "tags": [
          "Schema - Layout Sections"
        ],
        "summary": "Delete a layout item.",
        "operationId": "DeleteItem",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "section-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "item-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table, layout, layout section or layout section item not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts": {
      "get": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Get all layouts for table",
        "operationId": "GetLayouts",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "application",
            "in": "query",
            "description": "Optionally filter by application that the layout is applicable to.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaLayoutsInfo"
                },
                "example": {
                  "layouts": [
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {},
                      "name": "Polymers",
                      "guid": "00007645-0009-4fff-8fff-dd92ffff0000"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Create a new layout.",
        "operationId": "CreateLayout",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Composite materials"
                  }
                },
                "Example 2": {
                  "summary": "Layout with Guid",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with a specified guid value. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Composite materials (guid)",
                    "guid": "00fce882-c942-4d49-a6e1-24cd7ad2a6ec"
                  }
                },
                "Example 3": {
                  "summary": "Layout with applicable applications",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified applicable applications.  If no applicable applications are set, the layout is always applicable.",
                  "value": {
                    "applicableApplications": [
                      "MI:Explore",
                      "An Application"
                    ],
                    "name": "Composite materials (with applicable applications)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Composite materials"
                  }
                },
                "Example 2": {
                  "summary": "Layout with Guid",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with a specified guid value. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Composite materials (guid)",
                    "guid": "00fce882-c942-4d49-a6e1-24cd7ad2a6ec"
                  }
                },
                "Example 3": {
                  "summary": "Layout with applicable applications",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified applicable applications.  If no applicable applications are set, the layout is always applicable.",
                  "value": {
                    "applicableApplications": [
                      "MI:Explore",
                      "An Application"
                    ],
                    "name": "Composite materials (with applicable applications)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Composite materials"
                  }
                },
                "Example 2": {
                  "summary": "Layout with Guid",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with a specified guid value. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Composite materials (guid)",
                    "guid": "00fce882-c942-4d49-a6e1-24cd7ad2a6ec"
                  }
                },
                "Example 3": {
                  "summary": "Layout with applicable applications",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified applicable applications.  If no applicable applications are set, the layout is always applicable.",
                  "value": {
                    "applicableApplications": [
                      "MI:Explore",
                      "An Application"
                    ],
                    "name": "Composite materials (with applicable applications)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Layout",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Composite materials"
                  }
                },
                "Example 2": {
                  "summary": "Layout with Guid",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with a specified guid value. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Composite materials (guid)",
                    "guid": "00fce882-c942-4d49-a6e1-24cd7ad2a6ec"
                  }
                },
                "Example 3": {
                  "summary": "Layout with applicable applications",
                  "description": "This example demonstrates how to create a new layout for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with specified applicable applications.  If no applicable applications are set, the layout is always applicable.",
                  "value": {
                    "applicableApplications": [
                      "MI:Explore",
                      "An Application"
                    ],
                    "name": "Composite materials (with applicable applications)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaLayout"
                },
                "example": {
                  "applicableApplications": [],
                  "displayNames": {},
                  "name": "Ceramics",
                  "guid": "41178e25-e0db-466c-a5ad-1b37a860227c"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts/{layout-guid}": {
      "get": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Get a layout with a specified guid for a given database and table.",
        "operationId": "GetLayout",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "showFullDetail",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaLayout"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Layout with 'slim' sections",
                    "description": "This example demonstrated the response to getting a layout with the 'showFullDetail' parameter set to false, which is the default value.",
                    "value": {
                      "sections": [
                        {
                          "sectionDetailType": "slim",
                          "displayNames": {
                            "en": "General Properties English Display Name",
                            "fr": "General Properties French Display Name"
                          },
                          "name": "General Properties",
                          "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                        },
                        {
                          "sectionDetailType": "slim",
                          "displayNames": {
                            "en": "Mechanical Properties English Display Name",
                            "fr": "Mechanical Properties French Display Name"
                          },
                          "name": "Mechanical Properties",
                          "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                        }
                      ],
                      "applicableApplications": [],
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    }
                  },
                  "Example 2": {
                    "summary": "Layout with 'full' sections",
                    "description": "This example demonstrated the response to getting a layout with the 'showFullDetail' parameter set to true.",
                    "value": {
                      "sections": [
                        {
                          "sectionDetailType": "full",
                          "sectionItems": [
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": false,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "8eb3aed8-755e-437b-8894-8fd01ff73e85",
                              "name": "Price",
                              "guid": "b274733a-72a4-42c3-a4f8-77694bfa4116"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": false,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "e243dcbb-2bc7-4b60-87a7-b8e6de19efca",
                              "name": "Density",
                              "guid": "6392c7f1-9806-4743-9f92-13289273023c"
                            }
                          ],
                          "displayNames": {
                            "en": "General Properties English Display Name",
                            "fr": "General Properties French Display Name"
                          },
                          "name": "General Properties",
                          "guid": "b10170ab-ff56-4828-81b8-c4427674ed2f"
                        },
                        {
                          "sectionDetailType": "full",
                          "sectionItems": [
                            {
                              "itemType": "attribute",
                              "attributeType": "floatFunctional",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "71424b76-f26f-47cd-b02d-c20c8af19d7d",
                              "name": "Young's modulus",
                              "guid": "24e5fc87-63ab-4942-bedd-9fe1900d982c"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "range",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "ca5debec-dc3c-4336-9583-a24a4a640b2a",
                              "name": "Tensile strength",
                              "guid": "87816bbe-2feb-450d-8770-40e412024f46"
                            },
                            {
                              "itemType": "attribute",
                              "attributeType": "point",
                              "required": true,
                              "readOnly": false,
                              "metaAttributes": [],
                              "underlyingEntityGuid": "24244c2d-cb4d-4a41-80ac-491e13b53be6",
                              "name": "Shape factor",
                              "guid": "fe660a14-a8e4-4094-8671-7ac7a90bf62b"
                            }
                          ],
                          "displayNames": {
                            "en": "Mechanical Properties English Display Name",
                            "fr": "Mechanical Properties French Display Name"
                          },
                          "name": "Mechanical Properties",
                          "guid": "aa6a7ef2-0e37-40a6-b3eb-11d502408281"
                        }
                      ],
                      "applicableApplications": [],
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Update a layout.",
        "operationId": "UpdateLayout",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a layout",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "applicableApplications": [
                      "MI:Explore",
                      "An Application"
                    ],
                    "name": "Ceramics (Updated)",
                    "guid": "65cec218-6758-4328-a0da-036e3cad928c"
                  }
                },
                "Example 2": {
                  "summary": "Rename layout",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Remove applicable applications from layout",
                  "description": "This example demonstrates how to remove any applicable applications from the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "applicableApplications": null
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a layout",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "applicableApplications": [
                      "MI:Explore",
                      "An Application"
                    ],
                    "name": "Ceramics (Updated)",
                    "guid": "65cec218-6758-4328-a0da-036e3cad928c"
                  }
                },
                "Example 2": {
                  "summary": "Rename layout",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Remove applicable applications from layout",
                  "description": "This example demonstrates how to remove any applicable applications from the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "applicableApplications": null
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a layout",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "applicableApplications": [
                      "MI:Explore",
                      "An Application"
                    ],
                    "name": "Ceramics (Updated)",
                    "guid": "65cec218-6758-4328-a0da-036e3cad928c"
                  }
                },
                "Example 2": {
                  "summary": "Rename layout",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Remove applicable applications from layout",
                  "description": "This example demonstrates how to remove any applicable applications from the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "applicableApplications": null
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateLayout"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a layout",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "applicableApplications": [
                      "MI:Explore",
                      "An Application"
                    ],
                    "name": "Ceramics (Updated)",
                    "guid": "65cec218-6758-4328-a0da-036e3cad928c"
                  }
                },
                "Example 2": {
                  "summary": "Rename layout",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Remove applicable applications from layout",
                  "description": "This example demonstrates how to remove any applicable applications from the 'Ceramics' layout (guid = 00000b36-0009-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "applicableApplications": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaLayout"
                },
                "example": {
                  "applicableApplications": [],
                  "displayNames": {},
                  "name": "Ceramics",
                  "guid": "de26a11c-39b6-4e36-bf5c-a0f9a7925ee6"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Delete a layout.",
        "operationId": "DeleteLayout",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "layout-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or layout not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/layouts:applications": {
      "get": {
        "tags": [
          "Schema - Layouts"
        ],
        "summary": "Returns applications that are either MI Applications, or in use in layouts in this table.\r\nCan be used as applicable applications for layouts.",
        "operationId": "Applications",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaApplicationsInfo"
                },
                "example": {
                  "applications": [
                    "MI:Viewer",
                    "MI:Explore",
                    "MI:Materials Gateway",
                    "An Application"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters": {
      "get": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Get all parameters for a given database.",
        "operationId": "GetParameters",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParametersInfo"
                },
                "examples": {
                  "Example 1": {
                    "summary": "A mix of parameters",
                    "description": "This example contains a mix of numeric and discrete parameters from the MI_Training database.",
                    "value": {
                      "parameters": [
                        {
                          "type": "numeric",
                          "isRestricted": false,
                          "unit": {
                            "symbol": "% strain",
                            "guid": "0000019b-0013-4fff-8fff-0000ffff0000"
                          },
                          "values": [
                            {
                              "type": "numeric",
                              "value": 0.1,
                              "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                            },
                            {
                              "type": "numeric",
                              "value": 1.0,
                              "guid": "00000005-000b-4fff-8fff-0005ffff0000"
                            }
                          ],
                          "interpolationType": "linear",
                          "scaleType": "linear",
                          "helpPath": "/help/strain.html",
                          "defaultParameterValueGuid": "00000005-000b-4fff-8fff-0005ffff0000",
                          "displayNames": {
                            "en": "Strain",
                            "fr": "Souche"
                          },
                          "name": "Strain",
                          "guid": "00000005-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "type": "numeric",
                          "isRestricted": false,
                          "values": [
                            {
                              "type": "numeric",
                              "value": -1.0,
                              "guid": "4c35e5cd-0641-45d1-96d3-bc42076b3a94"
                            },
                            {
                              "type": "numeric",
                              "value": 0.0,
                              "guid": "00000022-000b-4fff-8fff-0022ffff0000"
                            }
                          ],
                          "interpolationType": "linear",
                          "scaleType": "linear",
                          "helpPath": "/help/strain-ratio.html",
                          "defaultParameterValueGuid": "4c35e5cd-0641-45d1-96d3-bc42076b3a94",
                          "displayNames": {
                            "en": "Strain Ratio",
                            "fr": "Rapport de contrainte"
                          },
                          "name": "Strain Ratio",
                          "guid": "00000022-000a-4fff-8fff-0000ffff0000"
                        },
                        {
                          "type": "discrete",
                          "values": [
                            {
                              "type": "discrete",
                              "name": "Mean",
                              "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                            },
                            {
                              "type": "discrete",
                              "name": "A-basis",
                              "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                            },
                            {
                              "type": "discrete",
                              "name": "B-basis",
                              "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                            }
                          ],
                          "helpPath": "/help/basis.html",
                          "defaultParameterValueGuid": "21a27377-12eb-413c-bac4-d4ffceda39d1",
                          "displayNames": {
                            "en": "Basis",
                            "fr": "Base"
                          },
                          "name": "Basis",
                          "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Create a new parameter.",
        "operationId": "CreateParameter",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Parameter",
                  "description": "This example demonstrates how to create a new discrete parameter for the MI_Training database.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "name": "Red"
                      },
                      {
                        "type": "discrete",
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "defaultParameterValueIndex": 0,
                    "name": "Color"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Parameter with Guids",
                  "description": "This example demonstrates how to create a new discrete parameter with a specified guid value for the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. Guids can be explicitly set for the individual parameter values, if needed.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "name": "Red",
                        "guid": "6432368c-4681-40a7-a9ed-2c208c2baa51"
                      },
                      {
                        "type": "discrete",
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "defaultParameterValueIndex": 1,
                    "name": "Color (guid)",
                    "guid": "3042c326-6346-45de-9af8-ba517c6ccaee"
                  }
                },
                "Example 3": {
                  "summary": "Numeric Restricted Parameter",
                  "description": "This example demonstrates how to create a new numeric restricted parameter for the MI_Training database. Note that the IsRestricted flag is set to true.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "values": [
                      {
                        "value": 2010.0,
                        "type": "numeric",
                        "name": "Twenty Ten"
                      },
                      {
                        "value": 2015.0,
                        "type": "numeric"
                      },
                      {
                        "value": 2020.0,
                        "type": "numeric",
                        "name": "Twenty Twenty"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "defaultParameterValueIndex": 2,
                    "name": "Year"
                  }
                },
                "Example 4": {
                  "summary": "Numeric Restricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric restricted parameter which also has the 'centimetre' unit from the MI_Training database. Note that the IsRestricted flag is set to true. Only the unit guid is required to reference a unit.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "unit": {
                      "guid": "00000099-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "name": "Small box"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric"
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "name": "Big box"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "defaultParameterValueIndex": 0,
                    "name": "Box dimension"
                  }
                },
                "Example 5": {
                  "summary": "Numeric Unrestricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric unrestricted parameter which also has the 'Temperature (Kelvin/Celsius)' unit from the MI_Training database. The IsRestricted flag can either be explicitly set to false or omitted. Pre-defined parameter values can still be specified, but the parameter will not be restricted to them.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": false,
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "name": "Cold"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric"
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "name": "Hot"
                      }
                    ],
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "/help/outside-temperature.html",
                    "defaultParameterValueIndex": 2,
                    "name": "Outside Temperature"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Parameter",
                  "description": "This example demonstrates how to create a new discrete parameter for the MI_Training database.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "name": "Red"
                      },
                      {
                        "type": "discrete",
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "defaultParameterValueIndex": 0,
                    "name": "Color"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Parameter with Guids",
                  "description": "This example demonstrates how to create a new discrete parameter with a specified guid value for the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. Guids can be explicitly set for the individual parameter values, if needed.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "name": "Red",
                        "guid": "6432368c-4681-40a7-a9ed-2c208c2baa51"
                      },
                      {
                        "type": "discrete",
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "defaultParameterValueIndex": 1,
                    "name": "Color (guid)",
                    "guid": "3042c326-6346-45de-9af8-ba517c6ccaee"
                  }
                },
                "Example 3": {
                  "summary": "Numeric Restricted Parameter",
                  "description": "This example demonstrates how to create a new numeric restricted parameter for the MI_Training database. Note that the IsRestricted flag is set to true.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "values": [
                      {
                        "value": 2010.0,
                        "type": "numeric",
                        "name": "Twenty Ten"
                      },
                      {
                        "value": 2015.0,
                        "type": "numeric"
                      },
                      {
                        "value": 2020.0,
                        "type": "numeric",
                        "name": "Twenty Twenty"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "defaultParameterValueIndex": 2,
                    "name": "Year"
                  }
                },
                "Example 4": {
                  "summary": "Numeric Restricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric restricted parameter which also has the 'centimetre' unit from the MI_Training database. Note that the IsRestricted flag is set to true. Only the unit guid is required to reference a unit.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "unit": {
                      "guid": "00000099-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "name": "Small box"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric"
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "name": "Big box"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "defaultParameterValueIndex": 0,
                    "name": "Box dimension"
                  }
                },
                "Example 5": {
                  "summary": "Numeric Unrestricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric unrestricted parameter which also has the 'Temperature (Kelvin/Celsius)' unit from the MI_Training database. The IsRestricted flag can either be explicitly set to false or omitted. Pre-defined parameter values can still be specified, but the parameter will not be restricted to them.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": false,
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "name": "Cold"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric"
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "name": "Hot"
                      }
                    ],
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "/help/outside-temperature.html",
                    "defaultParameterValueIndex": 2,
                    "name": "Outside Temperature"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Parameter",
                  "description": "This example demonstrates how to create a new discrete parameter for the MI_Training database.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "name": "Red"
                      },
                      {
                        "type": "discrete",
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "defaultParameterValueIndex": 0,
                    "name": "Color"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Parameter with Guids",
                  "description": "This example demonstrates how to create a new discrete parameter with a specified guid value for the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. Guids can be explicitly set for the individual parameter values, if needed.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "name": "Red",
                        "guid": "6432368c-4681-40a7-a9ed-2c208c2baa51"
                      },
                      {
                        "type": "discrete",
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "defaultParameterValueIndex": 1,
                    "name": "Color (guid)",
                    "guid": "3042c326-6346-45de-9af8-ba517c6ccaee"
                  }
                },
                "Example 3": {
                  "summary": "Numeric Restricted Parameter",
                  "description": "This example demonstrates how to create a new numeric restricted parameter for the MI_Training database. Note that the IsRestricted flag is set to true.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "values": [
                      {
                        "value": 2010.0,
                        "type": "numeric",
                        "name": "Twenty Ten"
                      },
                      {
                        "value": 2015.0,
                        "type": "numeric"
                      },
                      {
                        "value": 2020.0,
                        "type": "numeric",
                        "name": "Twenty Twenty"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "defaultParameterValueIndex": 2,
                    "name": "Year"
                  }
                },
                "Example 4": {
                  "summary": "Numeric Restricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric restricted parameter which also has the 'centimetre' unit from the MI_Training database. Note that the IsRestricted flag is set to true. Only the unit guid is required to reference a unit.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "unit": {
                      "guid": "00000099-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "name": "Small box"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric"
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "name": "Big box"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "defaultParameterValueIndex": 0,
                    "name": "Box dimension"
                  }
                },
                "Example 5": {
                  "summary": "Numeric Unrestricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric unrestricted parameter which also has the 'Temperature (Kelvin/Celsius)' unit from the MI_Training database. The IsRestricted flag can either be explicitly set to false or omitted. Pre-defined parameter values can still be specified, but the parameter will not be restricted to them.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": false,
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "name": "Cold"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric"
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "name": "Hot"
                      }
                    ],
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "/help/outside-temperature.html",
                    "defaultParameterValueIndex": 2,
                    "name": "Outside Temperature"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Discrete Parameter",
                  "description": "This example demonstrates how to create a new discrete parameter for the MI_Training database.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "name": "Red"
                      },
                      {
                        "type": "discrete",
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "defaultParameterValueIndex": 0,
                    "name": "Color"
                  }
                },
                "Example 2": {
                  "summary": "Discrete Parameter with Guids",
                  "description": "This example demonstrates how to create a new discrete parameter with a specified guid value for the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. Guids can be explicitly set for the individual parameter values, if needed.",
                  "value": {
                    "values": [
                      {
                        "type": "discrete",
                        "name": "Red",
                        "guid": "6432368c-4681-40a7-a9ed-2c208c2baa51"
                      },
                      {
                        "type": "discrete",
                        "name": "Green"
                      }
                    ],
                    "type": "discrete",
                    "defaultParameterValueIndex": 1,
                    "name": "Color (guid)",
                    "guid": "3042c326-6346-45de-9af8-ba517c6ccaee"
                  }
                },
                "Example 3": {
                  "summary": "Numeric Restricted Parameter",
                  "description": "This example demonstrates how to create a new numeric restricted parameter for the MI_Training database. Note that the IsRestricted flag is set to true.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "values": [
                      {
                        "value": 2010.0,
                        "type": "numeric",
                        "name": "Twenty Ten"
                      },
                      {
                        "value": 2015.0,
                        "type": "numeric"
                      },
                      {
                        "value": 2020.0,
                        "type": "numeric",
                        "name": "Twenty Twenty"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "defaultParameterValueIndex": 2,
                    "name": "Year"
                  }
                },
                "Example 4": {
                  "summary": "Numeric Restricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric restricted parameter which also has the 'centimetre' unit from the MI_Training database. Note that the IsRestricted flag is set to true. Only the unit guid is required to reference a unit.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": true,
                    "unit": {
                      "guid": "00000099-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "name": "Small box"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric"
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "name": "Big box"
                      }
                    ],
                    "interpolationType": "none",
                    "scaleType": "linear",
                    "defaultParameterValueIndex": 0,
                    "name": "Box dimension"
                  }
                },
                "Example 5": {
                  "summary": "Numeric Unrestricted Parameter with Unit",
                  "description": "This example demonstrates how to create a new numeric unrestricted parameter which also has the 'Temperature (Kelvin/Celsius)' unit from the MI_Training database. The IsRestricted flag can either be explicitly set to false or omitted. Pre-defined parameter values can still be specified, but the parameter will not be restricted to them.",
                  "value": {
                    "type": "numeric",
                    "isRestricted": false,
                    "unit": {
                      "guid": "00000002-0013-4fff-8fff-0000ffff0000"
                    },
                    "values": [
                      {
                        "value": 10.0,
                        "type": "numeric",
                        "name": "Cold"
                      },
                      {
                        "value": 20.0,
                        "type": "numeric"
                      },
                      {
                        "value": 30.0,
                        "type": "numeric",
                        "name": "Hot"
                      }
                    ],
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "/help/outside-temperature.html",
                    "defaultParameterValueIndex": 2,
                    "name": "Outside Temperature"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameter"
                },
                "example": {
                  "type": "numeric",
                  "isRestricted": false,
                  "unit": {
                    "symbol": "% strain",
                    "guid": "0000019b-0013-4fff-8fff-0000ffff0000"
                  },
                  "values": [
                    {
                      "type": "numeric",
                      "value": 0.1,
                      "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                    },
                    {
                      "type": "numeric",
                      "value": 1.0,
                      "guid": "00000005-000b-4fff-8fff-0005ffff0000"
                    }
                  ],
                  "interpolationType": "linear",
                  "scaleType": "linear",
                  "helpPath": "/help/Strain.html",
                  "defaultParameterValueGuid": "00000005-000b-4fff-8fff-0005ffff0000",
                  "displayNames": {
                    "en": "Strain",
                    "fr": "Souche"
                  },
                  "name": "Strain",
                  "guid": "00000005-000a-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameterCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "No parameter values",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a parameter with name 'Color', but did not provide any parameter values. At least one parameter value is required.",
                    "value": {
                      "message": "Cannot create parameter 'Color'.",
                      "code": "parameterCreation",
                      "name": "Color",
                      "errors": [
                        {
                          "message": "No parameter values provided",
                          "reason": "noParameterValues"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Multiple validation errors for creating a numeric parameter",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a parameter with name 'Outside Temperature'. The unit GUID provided did not match any known unit. The parameter scaleType was set to 'logarithmic' but one of the parameter values is less than or equal to zero.",
                    "value": {
                      "message": "Cannot create parameter 'Outside Temperature'.",
                      "code": "parameterCreation",
                      "name": "Outside Temperature",
                      "errors": [
                        {
                          "message": "Could not find unit with GUID '6ffddcb8-7cbf-40bd-baa3-8e918c102be8'.",
                          "guid": "6ffddcb8-7cbf-40bd-baa3-8e918c102be8",
                          "reason": "noSuchUnit"
                        },
                        {
                          "message": "Parameter value is not valid.",
                          "errors": [
                            {
                              "message": "For a log-scale parameter, all values must be greater than zero.",
                              "reason": "logScaleNegative"
                            }
                          ],
                          "reason": "parameterValue"
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateNumericParameter: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters/{parameter-guid}": {
      "get": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Get a parameter with a specified guid for a given database.",
        "operationId": "GetParameter",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameter"
                },
                "example": {
                  "type": "numeric",
                  "isRestricted": false,
                  "unit": {
                    "symbol": "% strain",
                    "guid": "0000019b-0013-4fff-8fff-0000ffff0000"
                  },
                  "values": [
                    {
                      "type": "numeric",
                      "value": 0.1,
                      "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                    },
                    {
                      "type": "numeric",
                      "value": 1.0,
                      "guid": "00000005-000b-4fff-8fff-0005ffff0000"
                    }
                  ],
                  "interpolationType": "linear",
                  "scaleType": "linear",
                  "helpPath": "/help/Strain.html",
                  "defaultParameterValueGuid": "00000005-000b-4fff-8fff-0005ffff0000",
                  "displayNames": {
                    "en": "Strain",
                    "fr": "Souche"
                  },
                  "name": "Strain",
                  "guid": "00000005-000a-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Update a parameter.",
        "operationId": "UpdateParameter",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter",
                  "description": "This example shows how to update properties of the 'Strain' numeric parameter (GUID ='00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Its Unit will be changed to kg.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "help/strain-updated.html",
                    "defaultParameterValueGuid": "173284fb-e557-406f-a7eb-f4e75f1d48a9",
                    "name": "Strain (Updated)",
                    "guid": "f3dc690e-1df8-43df-9447-72179f3bad23"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter",
                  "description": "This example shows how to update properties of the 'Basis' discrete parameter (GUID = '7a6ccb7b-8a47-4cab-8203-c741d476560f') from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "helpPath": "help/basis-updated.html",
                    "defaultParameterValueGuid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c",
                    "name": "Basis (Updated)",
                    "guid": "ebe1d225-ad00-4231-9b3d-25f54ae0ea61"
                  }
                },
                "Example 3": {
                  "summary": "Update Guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Strain' parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Guid can be updated for both kinds of parameters.",
                  "value": {
                    "type": "numeric",
                    "guid": "7082536b-91ab-4615-9f96-00799f88a827"
                  }
                },
                "Example 4": {
                  "summary": "Update Name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Strain' parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Name can be updated for both kinds of parameters.",
                  "value": {
                    "type": "discrete",
                    "name": "Strain (Updated)"
                  }
                },
                "Example 5": {
                  "summary": "Update Guid and Unit",
                  "description": "This example demonstrates how to update the 'Guid' and 'Unit' properties of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Its Unit will be changed to kg. Only numeric parameters have units.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "guid": "3e579bf2-9071-456d-a928-def7f883c36d"
                  }
                },
                "Example 6": {
                  "summary": "Remove Unit",
                  "description": "This example demonstrates how to remove the 'Unit' property of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database by setting it to null.",
                  "value": {
                    "type": "numeric",
                    "unit": null
                  }
                },
                "Example 7": {
                  "summary": "Change interpolation and scale type",
                  "description": "This example demonstrates how to update the interpolation type and scale type of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. The parameter must be a numeric parameter.",
                  "value": {
                    "type": "numeric",
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic"
                  }
                },
                "Example 8": {
                  "summary": "Update Values",
                  "description": "This example shows how to update parameter values on the 'Basis' discrete parameter (GUID = '7a6ccb7b-8a47-4cab-8203-c741d476560f') from the MI_Training database. A new value 'New Value' will be added between the existing values 'A-basis' (GUID = '505b5d32-0a4a-48af-9a7a-90c4caacd35c') and 'B-basis' (GUID = '9ba94816-6784-4848-bfa6-d24b12597a5b'). The value 'Mean' (GUID = '21a27377-12eb-413c-bac4-d4ffceda39d1') will be moved to the end. The existing value 'B-basis' (GUID = '9ba94816-6784-4848-bfa6-d24b12597a5b') will be renamed.",
                  "value": {
                    "type": "discrete",
                    "values": [
                      {
                        "type": "discrete",
                        "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                      },
                      {
                        "type": "discrete",
                        "name": "New Value"
                      },
                      {
                        "type": "discrete",
                        "name": "B-basis - renamed",
                        "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                      },
                      {
                        "type": "discrete",
                        "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter",
                  "description": "This example shows how to update properties of the 'Strain' numeric parameter (GUID ='00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Its Unit will be changed to kg.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "help/strain-updated.html",
                    "defaultParameterValueGuid": "173284fb-e557-406f-a7eb-f4e75f1d48a9",
                    "name": "Strain (Updated)",
                    "guid": "f3dc690e-1df8-43df-9447-72179f3bad23"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter",
                  "description": "This example shows how to update properties of the 'Basis' discrete parameter (GUID = '7a6ccb7b-8a47-4cab-8203-c741d476560f') from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "helpPath": "help/basis-updated.html",
                    "defaultParameterValueGuid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c",
                    "name": "Basis (Updated)",
                    "guid": "ebe1d225-ad00-4231-9b3d-25f54ae0ea61"
                  }
                },
                "Example 3": {
                  "summary": "Update Guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Strain' parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Guid can be updated for both kinds of parameters.",
                  "value": {
                    "type": "numeric",
                    "guid": "7082536b-91ab-4615-9f96-00799f88a827"
                  }
                },
                "Example 4": {
                  "summary": "Update Name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Strain' parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Name can be updated for both kinds of parameters.",
                  "value": {
                    "type": "discrete",
                    "name": "Strain (Updated)"
                  }
                },
                "Example 5": {
                  "summary": "Update Guid and Unit",
                  "description": "This example demonstrates how to update the 'Guid' and 'Unit' properties of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Its Unit will be changed to kg. Only numeric parameters have units.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "guid": "3e579bf2-9071-456d-a928-def7f883c36d"
                  }
                },
                "Example 6": {
                  "summary": "Remove Unit",
                  "description": "This example demonstrates how to remove the 'Unit' property of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database by setting it to null.",
                  "value": {
                    "type": "numeric",
                    "unit": null
                  }
                },
                "Example 7": {
                  "summary": "Change interpolation and scale type",
                  "description": "This example demonstrates how to update the interpolation type and scale type of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. The parameter must be a numeric parameter.",
                  "value": {
                    "type": "numeric",
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic"
                  }
                },
                "Example 8": {
                  "summary": "Update Values",
                  "description": "This example shows how to update parameter values on the 'Basis' discrete parameter (GUID = '7a6ccb7b-8a47-4cab-8203-c741d476560f') from the MI_Training database. A new value 'New Value' will be added between the existing values 'A-basis' (GUID = '505b5d32-0a4a-48af-9a7a-90c4caacd35c') and 'B-basis' (GUID = '9ba94816-6784-4848-bfa6-d24b12597a5b'). The value 'Mean' (GUID = '21a27377-12eb-413c-bac4-d4ffceda39d1') will be moved to the end. The existing value 'B-basis' (GUID = '9ba94816-6784-4848-bfa6-d24b12597a5b') will be renamed.",
                  "value": {
                    "type": "discrete",
                    "values": [
                      {
                        "type": "discrete",
                        "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                      },
                      {
                        "type": "discrete",
                        "name": "New Value"
                      },
                      {
                        "type": "discrete",
                        "name": "B-basis - renamed",
                        "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                      },
                      {
                        "type": "discrete",
                        "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter",
                  "description": "This example shows how to update properties of the 'Strain' numeric parameter (GUID ='00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Its Unit will be changed to kg.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "help/strain-updated.html",
                    "defaultParameterValueGuid": "173284fb-e557-406f-a7eb-f4e75f1d48a9",
                    "name": "Strain (Updated)",
                    "guid": "f3dc690e-1df8-43df-9447-72179f3bad23"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter",
                  "description": "This example shows how to update properties of the 'Basis' discrete parameter (GUID = '7a6ccb7b-8a47-4cab-8203-c741d476560f') from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "helpPath": "help/basis-updated.html",
                    "defaultParameterValueGuid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c",
                    "name": "Basis (Updated)",
                    "guid": "ebe1d225-ad00-4231-9b3d-25f54ae0ea61"
                  }
                },
                "Example 3": {
                  "summary": "Update Guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Strain' parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Guid can be updated for both kinds of parameters.",
                  "value": {
                    "type": "numeric",
                    "guid": "7082536b-91ab-4615-9f96-00799f88a827"
                  }
                },
                "Example 4": {
                  "summary": "Update Name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Strain' parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Name can be updated for both kinds of parameters.",
                  "value": {
                    "type": "discrete",
                    "name": "Strain (Updated)"
                  }
                },
                "Example 5": {
                  "summary": "Update Guid and Unit",
                  "description": "This example demonstrates how to update the 'Guid' and 'Unit' properties of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Its Unit will be changed to kg. Only numeric parameters have units.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "guid": "3e579bf2-9071-456d-a928-def7f883c36d"
                  }
                },
                "Example 6": {
                  "summary": "Remove Unit",
                  "description": "This example demonstrates how to remove the 'Unit' property of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database by setting it to null.",
                  "value": {
                    "type": "numeric",
                    "unit": null
                  }
                },
                "Example 7": {
                  "summary": "Change interpolation and scale type",
                  "description": "This example demonstrates how to update the interpolation type and scale type of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. The parameter must be a numeric parameter.",
                  "value": {
                    "type": "numeric",
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic"
                  }
                },
                "Example 8": {
                  "summary": "Update Values",
                  "description": "This example shows how to update parameter values on the 'Basis' discrete parameter (GUID = '7a6ccb7b-8a47-4cab-8203-c741d476560f') from the MI_Training database. A new value 'New Value' will be added between the existing values 'A-basis' (GUID = '505b5d32-0a4a-48af-9a7a-90c4caacd35c') and 'B-basis' (GUID = '9ba94816-6784-4848-bfa6-d24b12597a5b'). The value 'Mean' (GUID = '21a27377-12eb-413c-bac4-d4ffceda39d1') will be moved to the end. The existing value 'B-basis' (GUID = '9ba94816-6784-4848-bfa6-d24b12597a5b') will be renamed.",
                  "value": {
                    "type": "discrete",
                    "values": [
                      {
                        "type": "discrete",
                        "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                      },
                      {
                        "type": "discrete",
                        "name": "New Value"
                      },
                      {
                        "type": "discrete",
                        "name": "B-basis - renamed",
                        "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                      },
                      {
                        "type": "discrete",
                        "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateParameter"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter",
                  "description": "This example shows how to update properties of the 'Strain' numeric parameter (GUID ='00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Its Unit will be changed to kg.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic",
                    "helpPath": "help/strain-updated.html",
                    "defaultParameterValueGuid": "173284fb-e557-406f-a7eb-f4e75f1d48a9",
                    "name": "Strain (Updated)",
                    "guid": "f3dc690e-1df8-43df-9447-72179f3bad23"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter",
                  "description": "This example shows how to update properties of the 'Basis' discrete parameter (GUID = '7a6ccb7b-8a47-4cab-8203-c741d476560f') from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "helpPath": "help/basis-updated.html",
                    "defaultParameterValueGuid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c",
                    "name": "Basis (Updated)",
                    "guid": "ebe1d225-ad00-4231-9b3d-25f54ae0ea61"
                  }
                },
                "Example 3": {
                  "summary": "Update Guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Strain' parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Guid can be updated for both kinds of parameters.",
                  "value": {
                    "type": "numeric",
                    "guid": "7082536b-91ab-4615-9f96-00799f88a827"
                  }
                },
                "Example 4": {
                  "summary": "Update Name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Strain' parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Name can be updated for both kinds of parameters.",
                  "value": {
                    "type": "discrete",
                    "name": "Strain (Updated)"
                  }
                },
                "Example 5": {
                  "summary": "Update Guid and Unit",
                  "description": "This example demonstrates how to update the 'Guid' and 'Unit' properties of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. Its Unit will be changed to kg. Only numeric parameters have units.",
                  "value": {
                    "type": "numeric",
                    "unit": {
                      "guid": "0000007a-0013-4fff-8fff-0000ffff0000"
                    },
                    "guid": "3e579bf2-9071-456d-a928-def7f883c36d"
                  }
                },
                "Example 6": {
                  "summary": "Remove Unit",
                  "description": "This example demonstrates how to remove the 'Unit' property of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database by setting it to null.",
                  "value": {
                    "type": "numeric",
                    "unit": null
                  }
                },
                "Example 7": {
                  "summary": "Change interpolation and scale type",
                  "description": "This example demonstrates how to update the interpolation type and scale type of the 'Strain' numeric parameter (GUID = '00000005-000a-4fff-8fff-0000ffff0000') from the MI_Training database. The parameter must be a numeric parameter.",
                  "value": {
                    "type": "numeric",
                    "interpolationType": "cubicSpline",
                    "scaleType": "logarithmic"
                  }
                },
                "Example 8": {
                  "summary": "Update Values",
                  "description": "This example shows how to update parameter values on the 'Basis' discrete parameter (GUID = '7a6ccb7b-8a47-4cab-8203-c741d476560f') from the MI_Training database. A new value 'New Value' will be added between the existing values 'A-basis' (GUID = '505b5d32-0a4a-48af-9a7a-90c4caacd35c') and 'B-basis' (GUID = '9ba94816-6784-4848-bfa6-d24b12597a5b'). The value 'Mean' (GUID = '21a27377-12eb-413c-bac4-d4ffceda39d1') will be moved to the end. The existing value 'B-basis' (GUID = '9ba94816-6784-4848-bfa6-d24b12597a5b') will be renamed.",
                  "value": {
                    "type": "discrete",
                    "values": [
                      {
                        "type": "discrete",
                        "guid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c"
                      },
                      {
                        "type": "discrete",
                        "name": "New Value"
                      },
                      {
                        "type": "discrete",
                        "name": "B-basis - renamed",
                        "guid": "9ba94816-6784-4848-bfa6-d24b12597a5b"
                      },
                      {
                        "type": "discrete",
                        "guid": "21a27377-12eb-413c-bac4-d4ffceda39d1"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameter"
                },
                "example": {
                  "type": "numeric",
                  "isRestricted": false,
                  "unit": {
                    "symbol": "% strain",
                    "guid": "0000019b-0013-4fff-8fff-0000ffff0000"
                  },
                  "values": [
                    {
                      "type": "numeric",
                      "value": 0.1,
                      "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                    },
                    {
                      "type": "numeric",
                      "value": 1.0,
                      "guid": "00000005-000b-4fff-8fff-0005ffff0000"
                    }
                  ],
                  "interpolationType": "linear",
                  "scaleType": "linear",
                  "helpPath": "/help/Strain.html",
                  "defaultParameterValueGuid": "00000005-000b-4fff-8fff-0005ffff0000",
                  "displayNames": {
                    "en": "Strain",
                    "fr": "Souche"
                  },
                  "name": "Strain",
                  "guid": "00000005-000a-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameterUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "No such unit",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the unit of the 'Temperature' parameter with GUID '00000001-000a-4fff-8fff-0000ffff0000', but the unit GUID provided did not match any known unit.",
                    "value": {
                      "message": "Cannot update parameter with GUID '00000001-000a-4fff-8fff-0000ffff0000'.",
                      "code": "parameterUpdate",
                      "parameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                      "errors": [
                        {
                          "message": "Could not find unit with GUID '5fae929d-1ec5-4904-aa15-e33d8360c779'.",
                          "guid": "5fae929d-1ec5-4904-aa15-e33d8360c779",
                          "reason": "noSuchUnit"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Multiple validation errors for updating a numeric parameter",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the 'Stress Ratio' parameter with GUID '00000004-000a-4fff-8fff-0000ffff0000'. The unit GUID provided did not match any known unit. The parameter scaleType was set to 'logarithmic', which is invalid because one of the parameter values is less than or equal to zero.",
                    "value": {
                      "message": "Cannot update parameter with GUID '00000004-000a-4fff-8fff-0000ffff0000'.",
                      "code": "parameterUpdate",
                      "parameterGuid": "00000004-000a-4fff-8fff-0000ffff0000",
                      "errors": [
                        {
                          "message": "Could not find unit with GUID 'df61e5d7-2fe3-42ed-b9fa-323d8df5d69f'.",
                          "guid": "df61e5d7-2fe3-42ed-b9fa-323d8df5d69f",
                          "reason": "noSuchUnit"
                        },
                        {
                          "message": "Parameter value is not valid.",
                          "errors": [
                            {
                              "message": "For a log-scale parameter, all values must be greater than zero.",
                              "reason": "logScaleNegative"
                            }
                          ],
                          "reason": "parameterValue"
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "UpdateNumericParameter: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Delete a parameter.",
        "operationId": "DeleteParameter",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Parameter in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameterDeletionException"
                },
                "example": {
                  "message": "Cannot delete parameter with GUID '00000005-000a-4fff-8fff-0000ffff0000'.",
                  "code": "deletion",
                  "errors": [
                    {
                      "message": "It is being used in one or more attributes.",
                      "reason": "usage",
                      "referencedByType": "attribute",
                      "referencedBy": [
                        {
                          "type": "floatFunctional",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Tensile strength with temperature",
                          "guid": "00000002-0001-4fff-8fff-dd92ffff0000"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters/{parameter-guid}:usages": {
      "get": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Get attributes which currently use the given parameter.",
        "operationId": "GetObjectsUsingParameter",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSlimObjects"
                }
              }
            }
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters/{parameter-guid}/parameter-values/{parameter-value-guid}": {
      "get": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Get a parameter value with a specified guid for a given database for a given parameter.",
        "operationId": "GetParameterValue",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parameter-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameterValue"
                },
                "example": {
                  "type": "numeric",
                  "value": 0.1,
                  "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                }
              }
            }
          },
          "404": {
            "description": "Database, parameter or parameter value not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Update a parameter value.",
        "operationId": "UpdateParameterValue",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parameter-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update numeric parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "name": "Strain 0.1 (Updated)",
                    "guid": "55b12fe2-1950-4faf-9c6d-0812cdaaf2bd"
                  }
                },
                "Example 2": {
                  "summary": "Update discrete parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Mean' discrete parameter value (guid = 21a27377-12eb-413c-bac4-d4ffceda39d1) from the 'Basis' numeric parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "name": "Mean (Updated)",
                    "guid": "dd2b29b6-816f-4217-99d7-39d41b5c7f2c"
                  }
                },
                "Example 3": {
                  "summary": "Change guid of numeric",
                  "description": "This example demonstrates how to update guid of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database using a PATCH request.",
                  "value": {
                    "type": "numeric",
                    "guid": "22fa1e4c-5ef3-47ef-a8fd-67395c72b3d3"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update numeric parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "name": "Strain 0.1 (Updated)",
                    "guid": "55b12fe2-1950-4faf-9c6d-0812cdaaf2bd"
                  }
                },
                "Example 2": {
                  "summary": "Update discrete parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Mean' discrete parameter value (guid = 21a27377-12eb-413c-bac4-d4ffceda39d1) from the 'Basis' numeric parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "name": "Mean (Updated)",
                    "guid": "dd2b29b6-816f-4217-99d7-39d41b5c7f2c"
                  }
                },
                "Example 3": {
                  "summary": "Change guid of numeric",
                  "description": "This example demonstrates how to update guid of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database using a PATCH request.",
                  "value": {
                    "type": "numeric",
                    "guid": "22fa1e4c-5ef3-47ef-a8fd-67395c72b3d3"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update numeric parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "name": "Strain 0.1 (Updated)",
                    "guid": "55b12fe2-1950-4faf-9c6d-0812cdaaf2bd"
                  }
                },
                "Example 2": {
                  "summary": "Update discrete parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Mean' discrete parameter value (guid = 21a27377-12eb-413c-bac4-d4ffceda39d1) from the 'Basis' numeric parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "name": "Mean (Updated)",
                    "guid": "dd2b29b6-816f-4217-99d7-39d41b5c7f2c"
                  }
                },
                "Example 3": {
                  "summary": "Change guid of numeric",
                  "description": "This example demonstrates how to update guid of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database using a PATCH request.",
                  "value": {
                    "type": "numeric",
                    "guid": "22fa1e4c-5ef3-47ef-a8fd-67395c72b3d3"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update numeric parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "name": "Strain 0.1 (Updated)",
                    "guid": "55b12fe2-1950-4faf-9c6d-0812cdaaf2bd"
                  }
                },
                "Example 2": {
                  "summary": "Update discrete parameter value",
                  "description": "This example demonstrates how to update all properties of the 'Mean' discrete parameter value (guid = 21a27377-12eb-413c-bac4-d4ffceda39d1) from the 'Basis' numeric parameter (guid = 7a6ccb7b-8a47-4cab-8203-c741d476560f) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "name": "Mean (Updated)",
                    "guid": "dd2b29b6-816f-4217-99d7-39d41b5c7f2c"
                  }
                },
                "Example 3": {
                  "summary": "Change guid of numeric",
                  "description": "This example demonstrates how to update guid of the 'Strain 0.1' numeric parameter value (guid = 173284fb-e557-406f-a7eb-f4e75f1d48a9) from the 'Strain' numeric parameter (guid = 00000005-000a-4fff-8fff-0000ffff0000) from the MI_Training database using a PATCH request.",
                  "value": {
                    "type": "numeric",
                    "guid": "22fa1e4c-5ef3-47ef-a8fd-67395c72b3d3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameterValue"
                },
                "example": {
                  "type": "numeric",
                  "value": 0.1,
                  "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Parameter in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameterValueUpdateException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Name already exists.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update the 'A-basis' parameter value with GUID '505b5d32-0a4a-48af-9a7a-90c4caacd35c' on 'Basis' parameter with GUID '7a6ccb7b-8a47-4cab-8203-c741d476560f'. The name was set to 'Mean', which is invalid because there is already a parameter value with that name on this parameter.",
                    "value": {
                      "message": "Cannot update parameter value with GUID '505b5d32-0a4a-48af-9a7a-90c4caacd35c' on parameter with GUID '7a6ccb7b-8a47-4cab-8203-c741d476560f'.",
                      "code": "parameterValueUpdate",
                      "parameterValueGuid": "505b5d32-0a4a-48af-9a7a-90c4caacd35c",
                      "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f",
                      "errors": [
                        {
                          "message": "The parameter value name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "ParameterValue with name 'Mean' already exists in this Parameter.",
                              "name": "Mean",
                              "parentEntityType": "parameter",
                              "reason": "nameAlreadyExists",
                              "entityType": "parameterValue"
                            }
                          ],
                          "reason": "namedEntity"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Multiple validation errors for updating a numeric parameter value",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to update Batch Size 1000 parameter value with GUID '00000010-000b-4fff-8fff-0010ffff0000' on 'Batch Size' parameter with GUID '00000010-000a-4fff-8fff-0000ffff0000'. The name was set to 'Batch size A ', which is invalid because it has trailing white space. The parameter value was set to be negative, which is invalid because the parameter scaleType is 'logarithmic'. For a log-scale parameter, all values must be greater than zero.",
                    "value": {
                      "message": "Cannot update parameter value with GUID '00000010-000b-4fff-8fff-0010ffff0000' on parameter with GUID '00000010-000a-4fff-8fff-0000ffff0000'.",
                      "code": "parameterValueUpdate",
                      "parameterValueGuid": "00000010-000b-4fff-8fff-0010ffff0000",
                      "parameterGuid": "00000010-000a-4fff-8fff-0000ffff0000",
                      "errors": [
                        {
                          "message": "For a log-scale parameter, all values must be greater than zero.",
                          "reason": "logScaleNegative"
                        },
                        {
                          "message": "Parameter value name cannot contain leading or trailing whitespace.",
                          "name": "Batch size A ",
                          "reason": "nameWhitespace"
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "UpdateNumericParameterValue: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database, parameter or parameter value not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Delete a parameter value.",
        "operationId": "DeleteParameterValue",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parameter-value-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Parameter in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameterValueDeletionException"
                },
                "example": {
                  "message": "Cannot delete parameter value with GUID '21a27377-12eb-413c-bac4-d4ffceda39d1'.",
                  "code": "deletion",
                  "errors": [
                    {
                      "message": "It is being used as the parameter default value.",
                      "reason": "usage",
                      "referencedByType": "defaultParameterValue",
                      "referencedBy": [
                        {
                          "name": "Basis",
                          "guid": "7a6ccb7b-8a47-4cab-8203-c741d476560f"
                        }
                      ]
                    },
                    {
                      "message": "It is being used by multi-valued point data.",
                      "reason": "usage",
                      "referencedByType": "multiValuedPointData"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database, parameter or parameter value not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/parameters/{parameter-guid}/parameter-values": {
      "post": {
        "tags": [
          "Schema - Parameters"
        ],
        "summary": "Create a new parameter value.",
        "operationId": "CreateParameterValue",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "parameter-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter value",
                  "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "name": "Cold"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter value",
                  "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "name": "Heavy water"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter value",
                  "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "name": "Cold"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter value",
                  "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "name": "Heavy water"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter value",
                  "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "name": "Cold"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter value",
                  "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "name": "Heavy water"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateParameterValue"
              },
              "examples": {
                "Example 1": {
                  "summary": "Numeric parameter value",
                  "description": "This example demonstrates how to create a new numeric parameter value for the 'Temperature' numeric parameter (guid = 00000001-000a-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "value": 10.0,
                    "type": "numeric",
                    "name": "Cold"
                  }
                },
                "Example 2": {
                  "summary": "Discrete parameter value",
                  "description": "This example demonstrates how to create a new discrete parameter value for the 'Chemical Environment' discrete parameter (guid = b7cee874-160f-439a-a784-b887c516b2d5) from the MI_Training database.",
                  "value": {
                    "type": "discrete",
                    "name": "Heavy water"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameterValue"
                },
                "example": {
                  "type": "numeric",
                  "value": 0.1,
                  "guid": "173284fb-e557-406f-a7eb-f4e75f1d48a9"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Parameter in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaParameterValueCreationException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Parameter value type does not match the type of the parameter.",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a numeric parameter value with name 'A New Basis' on discrete parameter 'Basis' with GUID '7a6ccb7b-8a47-4cab-8203-c741d476560f'. Discrete parameters cannot have numeric parameter values.",
                    "value": {
                      "message": "Cannot create parameter value 'A New Basis' on parameter with GUID '7a6ccb7b-8a47-4cab-8203-c741d476560f'.",
                      "code": "parameterValueCreation",
                      "name": "A New Basis",
                      "parameterGuid": "7a6ccb7b-8a47-4cab-8203-c741d476560f",
                      "errors": [
                        {
                          "message": "Discrete parameters cannot have numeric parameter values.",
                          "parameterType": "discrete",
                          "reason": "parameterValueType"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Multiple validation errors for creating a numeric parameter value",
                    "description": "This example demonstrates an error response returned for an invalid request that attempted to create a numeric parameter value with name 'Batch size A ' on parameter 'Batch Size' with GUID '00000010-000a-4fff-8fff-0000ffff0000'. The name was set to 'Batch size A ', which is invalid because it has trailing white space. The parameter value was set to be negative, which is invalid because the parameter scaleType is 'logarithmic'. For a log-scale parameter, all values must be greater than zero.",
                    "value": {
                      "message": "Cannot create parameter value 'Minimum' on parameter with GUID '00000010-000a-4fff-8fff-0000ffff0000'.",
                      "code": "parameterValueCreation",
                      "name": "Minimum",
                      "parameterGuid": "00000010-000a-4fff-8fff-0000ffff0000",
                      "errors": [
                        {
                          "message": "The parameter value name or GUID is not valid.",
                          "errors": [
                            {
                              "message": "ParameterValue with name 'Minimum' already exists in this Parameter.",
                              "name": "Minimum",
                              "parentEntityType": "parameter",
                              "reason": "nameAlreadyExists",
                              "entityType": "parameterValue"
                            }
                          ],
                          "reason": "namedEntity"
                        },
                        {
                          "message": "For a log-scale parameter, all values must be greater than zero.",
                          "reason": "logScaleNegative"
                        }
                      ]
                    }
                  },
                  "Example 3": {
                    "summary": "Invalid JSON",
                    "description": "The required property 'name' was not provided.",
                    "value": {
                      "message": "CreateNumericParameterValue: Required property 'name' not found in JSON",
                      "code": "jsonSerialization"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or parameter not found"
          }
        }
      }
    },
    "/v1alpha/profiles": {
      "get": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Get AllProfilesInfo",
        "operationId": "GetProfiles",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAllProfilesInfo"
                },
                "example": {
                  "profiles": [
                    {
                      "key": "MI_Training",
                      "isImplicit": true,
                      "name": "MI Training"
                    },
                    {
                      "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                      "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Metals"
                    },
                    {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a",
                      "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Composites"
                    },
                    {
                      "key": "MITrainingAdditiveManufacturing-31ae18d9-eaf7-43ab-9b88-716c34e61658",
                      "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Additive Manufacturing"
                    }
                  ],
                  "defaultProfile": {
                    "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                    "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                    "groupName": "MI:Training Profiles",
                    "isImplicit": false,
                    "name": "MI:Training Metals"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Update AllProfilesInfo",
        "operationId": "UpdateAllProfilesInfo",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAllProfilesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update default profile",
                  "description": "This example demonstrates how to update default profile. Default Profile might be set to one of the profiles visible to user or to null.",
                  "value": {
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Remove default profile",
                  "description": "This example demonstrates how to remove default profile by setting it to null",
                  "value": {
                    "defaultProfile": null
                  }
                },
                "Example 3": {
                  "summary": "Update profiles order",
                  "description": "This example demonstrates how to reorder profiles. Profiles will be reordered in the order provided. Their values can not be changed. Full list of explicit profiles must be provided.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Everything for AllProfilesInfo",
                  "description": "This example shows all properties that can be updated for AllProfilesInfo.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ],
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAllProfilesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update default profile",
                  "description": "This example demonstrates how to update default profile. Default Profile might be set to one of the profiles visible to user or to null.",
                  "value": {
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Remove default profile",
                  "description": "This example demonstrates how to remove default profile by setting it to null",
                  "value": {
                    "defaultProfile": null
                  }
                },
                "Example 3": {
                  "summary": "Update profiles order",
                  "description": "This example demonstrates how to reorder profiles. Profiles will be reordered in the order provided. Their values can not be changed. Full list of explicit profiles must be provided.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Everything for AllProfilesInfo",
                  "description": "This example shows all properties that can be updated for AllProfilesInfo.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ],
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAllProfilesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update default profile",
                  "description": "This example demonstrates how to update default profile. Default Profile might be set to one of the profiles visible to user or to null.",
                  "value": {
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Remove default profile",
                  "description": "This example demonstrates how to remove default profile by setting it to null",
                  "value": {
                    "defaultProfile": null
                  }
                },
                "Example 3": {
                  "summary": "Update profiles order",
                  "description": "This example demonstrates how to reorder profiles. Profiles will be reordered in the order provided. Their values can not be changed. Full list of explicit profiles must be provided.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Everything for AllProfilesInfo",
                  "description": "This example shows all properties that can be updated for AllProfilesInfo.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ],
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateAllProfilesInfo"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update default profile",
                  "description": "This example demonstrates how to update default profile. Default Profile might be set to one of the profiles visible to user or to null.",
                  "value": {
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                },
                "Example 2": {
                  "summary": "Remove default profile",
                  "description": "This example demonstrates how to remove default profile by setting it to null",
                  "value": {
                    "defaultProfile": null
                  }
                },
                "Example 3": {
                  "summary": "Update profiles order",
                  "description": "This example demonstrates how to reorder profiles. Profiles will be reordered in the order provided. Their values can not be changed. Full list of explicit profiles must be provided.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Everything for AllProfilesInfo",
                  "description": "This example shows all properties that can be updated for AllProfilesInfo.",
                  "value": {
                    "profiles": [
                      {
                        "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658"
                      },
                      {
                        "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f"
                      },
                      {
                        "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a"
                      }
                    ],
                    "defaultProfile": {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaAllProfilesInfo"
                },
                "example": {
                  "profiles": [
                    {
                      "key": "MI_Training",
                      "isImplicit": true,
                      "name": "MI Training"
                    },
                    {
                      "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                      "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Metals"
                    },
                    {
                      "key": "MITrainingComposites-90cb537b-82e9-4e8b-8193-208f581f7e0a",
                      "guid": "90cb537b-82e9-4e8b-8193-208f581f7e0a",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Composites"
                    },
                    {
                      "key": "MITrainingAdditiveManufacturing-31ae18d9-eaf7-43ab-9b88-716c34e61658",
                      "guid": "31ae18d9-eaf7-43ab-9b88-716c34e61658",
                      "groupName": "MI:Training Profiles",
                      "isImplicit": false,
                      "name": "MI:Training Additive Manufacturing"
                    }
                  ],
                  "defaultProfile": {
                    "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                    "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                    "groupName": "MI:Training Profiles",
                    "isImplicit": false,
                    "name": "MI:Training Metals"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Create a new profile",
        "operationId": "CreateProfile",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile",
                  "description": "This example demonstrates how to create a new profile",
                  "value": {
                    "name": "MI:Training Processes"
                  }
                },
                "Example 2": {
                  "summary": "Profile with specified guid",
                  "description": "This example demonstrates how to create a new profile with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "MI:Training Processes",
                    "guid": "0a0de237-1d93-4fce-857f-d7653c0e6b32"
                  }
                },
                "Example 3": {
                  "summary": "Full profile",
                  "description": "This example demonstrates how to create a new profile with all of its fields filled out.",
                  "value": {
                    "description": "#markdown\r\nFor process-oriented users.",
                    "homepageUrl": "TrainingProfiles/TrainingProcesses",
                    "groupName": "MI:Training Profiles",
                    "name": "MI:Training Processes",
                    "guid": "493190d4-dd9a-40fd-be9b-0bf45a55d0fb"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile",
                  "description": "This example demonstrates how to create a new profile",
                  "value": {
                    "name": "MI:Training Processes"
                  }
                },
                "Example 2": {
                  "summary": "Profile with specified guid",
                  "description": "This example demonstrates how to create a new profile with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "MI:Training Processes",
                    "guid": "0a0de237-1d93-4fce-857f-d7653c0e6b32"
                  }
                },
                "Example 3": {
                  "summary": "Full profile",
                  "description": "This example demonstrates how to create a new profile with all of its fields filled out.",
                  "value": {
                    "description": "#markdown\r\nFor process-oriented users.",
                    "homepageUrl": "TrainingProfiles/TrainingProcesses",
                    "groupName": "MI:Training Profiles",
                    "name": "MI:Training Processes",
                    "guid": "493190d4-dd9a-40fd-be9b-0bf45a55d0fb"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile",
                  "description": "This example demonstrates how to create a new profile",
                  "value": {
                    "name": "MI:Training Processes"
                  }
                },
                "Example 2": {
                  "summary": "Profile with specified guid",
                  "description": "This example demonstrates how to create a new profile with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "MI:Training Processes",
                    "guid": "0a0de237-1d93-4fce-857f-d7653c0e6b32"
                  }
                },
                "Example 3": {
                  "summary": "Full profile",
                  "description": "This example demonstrates how to create a new profile with all of its fields filled out.",
                  "value": {
                    "description": "#markdown\r\nFor process-oriented users.",
                    "homepageUrl": "TrainingProfiles/TrainingProcesses",
                    "groupName": "MI:Training Profiles",
                    "name": "MI:Training Processes",
                    "guid": "493190d4-dd9a-40fd-be9b-0bf45a55d0fb"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile",
                  "description": "This example demonstrates how to create a new profile",
                  "value": {
                    "name": "MI:Training Processes"
                  }
                },
                "Example 2": {
                  "summary": "Profile with specified guid",
                  "description": "This example demonstrates how to create a new profile with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "name": "MI:Training Processes",
                    "guid": "0a0de237-1d93-4fce-857f-d7653c0e6b32"
                  }
                },
                "Example 3": {
                  "summary": "Full profile",
                  "description": "This example demonstrates how to create a new profile with all of its fields filled out.",
                  "value": {
                    "description": "#markdown\r\nFor process-oriented users.",
                    "homepageUrl": "TrainingProfiles/TrainingProcesses",
                    "groupName": "MI:Training Profiles",
                    "name": "MI:Training Processes",
                    "guid": "493190d4-dd9a-40fd-be9b-0bf45a55d0fb"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProfile"
                },
                "example": {
                  "description": "#markdown\r\nFor metals-oriented users.",
                  "homepageUrl": "TrainingProfiles/MITrainingMetals",
                  "profileTables": [
                    {
                      "guid": "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e",
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "MaterialUniverse"
                    },
                    {
                      "guid": "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "ProcessUniverse"
                    }
                  ],
                  "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "groupName": "MI:Training Profiles",
                  "isImplicit": false,
                  "name": "MI:Training Metals"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v1alpha/profiles/{profile-guid}": {
      "get": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Get individual profile",
        "operationId": "GetProfile",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProfile"
                },
                "example": {
                  "description": "#markdown\r\nFor metals-oriented users.",
                  "homepageUrl": "TrainingProfiles/MITrainingMetals",
                  "profileTables": [
                    {
                      "guid": "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e",
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "MaterialUniverse"
                    },
                    {
                      "guid": "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "ProcessUniverse"
                    }
                  ],
                  "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "groupName": "MI:Training Profiles",
                  "isImplicit": false,
                  "name": "MI:Training Metals"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Update a profile",
        "operationId": "UpdateProfile",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update a guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "1c80cd24-39f1-42d3-ba73-66bab6664666"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "name": "MI:Training Metals (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Everything for a profile",
                  "description": "This example demonstrates how to update all properties of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f). Profile tables will be reordered in the order provided. Their values can not be changed. Full list of profiles profileTables must be provided.",
                  "value": {
                    "description": "#markdown\r\nFor metals-oriented users. (Updated)",
                    "homepageUrl": "TrainingProfiles/TrainingMetalsUpdated",
                    "profileTableGuids": [
                      "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    ],
                    "guid": "fe08e116-11ad-46d4-b6ac-dad3ee7fc19b",
                    "groupName": "MI:Training Profiles (Updated)",
                    "name": "MI:Training Metals"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update a guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "1c80cd24-39f1-42d3-ba73-66bab6664666"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "name": "MI:Training Metals (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Everything for a profile",
                  "description": "This example demonstrates how to update all properties of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f). Profile tables will be reordered in the order provided. Their values can not be changed. Full list of profiles profileTables must be provided.",
                  "value": {
                    "description": "#markdown\r\nFor metals-oriented users. (Updated)",
                    "homepageUrl": "TrainingProfiles/TrainingMetalsUpdated",
                    "profileTableGuids": [
                      "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    ],
                    "guid": "fe08e116-11ad-46d4-b6ac-dad3ee7fc19b",
                    "groupName": "MI:Training Profiles (Updated)",
                    "name": "MI:Training Metals"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update a guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "1c80cd24-39f1-42d3-ba73-66bab6664666"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "name": "MI:Training Metals (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Everything for a profile",
                  "description": "This example demonstrates how to update all properties of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f). Profile tables will be reordered in the order provided. Their values can not be changed. Full list of profiles profileTables must be provided.",
                  "value": {
                    "description": "#markdown\r\nFor metals-oriented users. (Updated)",
                    "homepageUrl": "TrainingProfiles/TrainingMetalsUpdated",
                    "profileTableGuids": [
                      "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    ],
                    "guid": "fe08e116-11ad-46d4-b6ac-dad3ee7fc19b",
                    "groupName": "MI:Training Profiles (Updated)",
                    "name": "MI:Training Metals"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateProfile"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update a guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "1c80cd24-39f1-42d3-ba73-66bab6664666"
                  }
                },
                "Example 2": {
                  "summary": "Update a name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "name": "MI:Training Metals (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Everything for a profile",
                  "description": "This example demonstrates how to update all properties of the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f). Profile tables will be reordered in the order provided. Their values can not be changed. Full list of profiles profileTables must be provided.",
                  "value": {
                    "description": "#markdown\r\nFor metals-oriented users. (Updated)",
                    "homepageUrl": "TrainingProfiles/TrainingMetalsUpdated",
                    "profileTableGuids": [
                      "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e"
                    ],
                    "guid": "fe08e116-11ad-46d4-b6ac-dad3ee7fc19b",
                    "groupName": "MI:Training Profiles (Updated)",
                    "name": "MI:Training Metals"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProfile"
                },
                "example": {
                  "description": "#markdown\r\nFor metals-oriented users.",
                  "homepageUrl": "TrainingProfiles/MITrainingMetals",
                  "profileTables": [
                    {
                      "guid": "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e",
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "MaterialUniverse"
                    },
                    {
                      "guid": "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "ProcessUniverse"
                    }
                  ],
                  "key": "MITrainingMetals-f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "guid": "f76e3ce8-608a-42da-8d99-f0009dac966f",
                  "groupName": "MI:Training Profiles",
                  "isImplicit": false,
                  "name": "MI:Training Metals"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Profiles"
        ],
        "summary": "Delete a profile",
        "operationId": "DeleteProfile",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request. Profile is set as default."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      }
    },
    "/v1alpha/profiles/{profile-guid}/profile-tables": {
      "get": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Get all profile tables of given profile",
        "operationId": "GetProfileTables",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProfileTablesInfo"
                },
                "example": {
                  "profileTables": [
                    {
                      "guid": "a7cb2018-8410-42fd-ac6a-8bc1b441ba6e",
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "MaterialUniverse"
                    },
                    {
                      "guid": "81bb4607-e2a3-4c78-81fc-a18a09979c72",
                      "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                      "databaseFallbackHint": "MI:Training",
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000",
                      "tableFallbackHint": "ProcessUniverse"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Create a new profile table",
        "operationId": "CreateProfileTable",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f)",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e"
                  }
                },
                "Example 2": {
                  "summary": "Profile Table with specified guid",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "3cb16b57-659e-4d5d-ae25-7bc16bb4752c"
                  }
                },
                "Example 3": {
                  "summary": "Full Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with all of its fields filled out.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "subsetGuid": "c2a6b6d0-540c-4927-b861-840644fc3968",
                    "layoutGuid": "f8379ae4-a8a8-4329-b9b5-cd0b2d285fd0",
                    "guid": "add993ce-fe6a-47fa-8243-aaba9ba8e290"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f)",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e"
                  }
                },
                "Example 2": {
                  "summary": "Profile Table with specified guid",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "3cb16b57-659e-4d5d-ae25-7bc16bb4752c"
                  }
                },
                "Example 3": {
                  "summary": "Full Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with all of its fields filled out.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "subsetGuid": "c2a6b6d0-540c-4927-b861-840644fc3968",
                    "layoutGuid": "f8379ae4-a8a8-4329-b9b5-cd0b2d285fd0",
                    "guid": "add993ce-fe6a-47fa-8243-aaba9ba8e290"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f)",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e"
                  }
                },
                "Example 2": {
                  "summary": "Profile Table with specified guid",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "3cb16b57-659e-4d5d-ae25-7bc16bb4752c"
                  }
                },
                "Example 3": {
                  "summary": "Full Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with all of its fields filled out.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "subsetGuid": "c2a6b6d0-540c-4927-b861-840644fc3968",
                    "layoutGuid": "f8379ae4-a8a8-4329-b9b5-cd0b2d285fd0",
                    "guid": "add993ce-fe6a-47fa-8243-aaba9ba8e290"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f)",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e"
                  }
                },
                "Example 2": {
                  "summary": "Profile Table with specified guid",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "guid": "3cb16b57-659e-4d5d-ae25-7bc16bb4752c"
                  }
                },
                "Example 3": {
                  "summary": "Full Profile Table",
                  "description": "This example demonstrates how to create a new profile table for the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f) with all of its fields filled out.",
                  "value": {
                    "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                    "tableGuid": "bc666ac6-8ac6-482b-9a16-502e6ab3730e",
                    "subsetGuid": "c2a6b6d0-540c-4927-b861-840644fc3968",
                    "layoutGuid": "f8379ae4-a8a8-4329-b9b5-cd0b2d285fd0",
                    "guid": "add993ce-fe6a-47fa-8243-aaba9ba8e290"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProfileTable"
                },
                "example": {
                  "subsetGuid": "c43d5d46-1d6a-4fd3-8cc7-923e8592daec",
                  "subsetFallbackHint": "Metals",
                  "layoutGuid": "2826bb31-9fb5-4ca5-8db2-121ae944221d",
                  "layoutFallbackHint": "Metals",
                  "guid": "2aa49cb3-19a4-44e3-a389-278123c96631",
                  "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                  "databaseFallbackHint": "MI:Training",
                  "tableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                  "tableFallbackHint": "Design Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      }
    },
    "/v1alpha/profiles/{profile-guid}/profile-tables/{profile-table-guid}": {
      "get": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Get individual profile table",
        "operationId": "GetProfileTable",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "profile-table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProfileTable"
                },
                "example": {
                  "subsetGuid": "c43d5d46-1d6a-4fd3-8cc7-923e8592daec",
                  "subsetFallbackHint": "Metals",
                  "layoutGuid": "2826bb31-9fb5-4ca5-8db2-121ae944221d",
                  "layoutFallbackHint": "Metals",
                  "guid": "2aa49cb3-19a4-44e3-a389-278123c96631",
                  "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                  "databaseFallbackHint": "MI:Training",
                  "tableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                  "tableFallbackHint": "Design Data"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile or profile table not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Update a profile table",
        "operationId": "UpdateProfileTable",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "profile-table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a profile table",
                  "description": "This example shows how to update all properties of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "layoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "guid": "29de9dfa-942c-46f7-ade9-b1542eea2b41"
                  }
                },
                "Example 2": {
                  "summary": "Remove subset and layout",
                  "description": "This example shows how to remove the 'Subset' and 'Layout' properties from the 'Design Data' profile table (guid = 2aa49cb3-19a4-44e3-a389-278123c96631) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": null,
                    "layoutGuid": null
                  }
                },
                "Example 3": {
                  "summary": "Just guid",
                  "description": "This example shows how to update the 'Guid' property of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "d4ca1cae-fc21-44c9-8bfc-4ec6d21eb428"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a profile table",
                  "description": "This example shows how to update all properties of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "layoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "guid": "29de9dfa-942c-46f7-ade9-b1542eea2b41"
                  }
                },
                "Example 2": {
                  "summary": "Remove subset and layout",
                  "description": "This example shows how to remove the 'Subset' and 'Layout' properties from the 'Design Data' profile table (guid = 2aa49cb3-19a4-44e3-a389-278123c96631) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": null,
                    "layoutGuid": null
                  }
                },
                "Example 3": {
                  "summary": "Just guid",
                  "description": "This example shows how to update the 'Guid' property of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "d4ca1cae-fc21-44c9-8bfc-4ec6d21eb428"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a profile table",
                  "description": "This example shows how to update all properties of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "layoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "guid": "29de9dfa-942c-46f7-ade9-b1542eea2b41"
                  }
                },
                "Example 2": {
                  "summary": "Remove subset and layout",
                  "description": "This example shows how to remove the 'Subset' and 'Layout' properties from the 'Design Data' profile table (guid = 2aa49cb3-19a4-44e3-a389-278123c96631) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": null,
                    "layoutGuid": null
                  }
                },
                "Example 3": {
                  "summary": "Just guid",
                  "description": "This example shows how to update the 'Guid' property of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "d4ca1cae-fc21-44c9-8bfc-4ec6d21eb428"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateProfileTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a profile table",
                  "description": "This example shows how to update all properties of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "layoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "guid": "29de9dfa-942c-46f7-ade9-b1542eea2b41"
                  }
                },
                "Example 2": {
                  "summary": "Remove subset and layout",
                  "description": "This example shows how to remove the 'Subset' and 'Layout' properties from the 'Design Data' profile table (guid = 2aa49cb3-19a4-44e3-a389-278123c96631) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "subsetGuid": null,
                    "layoutGuid": null
                  }
                },
                "Example 3": {
                  "summary": "Just guid",
                  "description": "This example shows how to update the 'Guid' property of the 'MaterialUniverse' profile table (guid = a7cb2018-8410-42fd-ac6a-8bc1b441ba6e) from the 'MI:Training Metals' profile (guid = f76e3ce8-608a-42da-8d99-f0009dac966f).",
                  "value": {
                    "guid": "d4ca1cae-fc21-44c9-8bfc-4ec6d21eb428"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaProfileTable"
                },
                "example": {
                  "subsetGuid": "c43d5d46-1d6a-4fd3-8cc7-923e8592daec",
                  "subsetFallbackHint": "Metals",
                  "layoutGuid": "2826bb31-9fb5-4ca5-8db2-121ae944221d",
                  "layoutFallbackHint": "Metals",
                  "guid": "2aa49cb3-19a4-44e3-a389-278123c96631",
                  "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                  "databaseFallbackHint": "MI:Training",
                  "tableGuid": "0000b5e2-0011-4fff-8fff-0000ffff0000",
                  "tableFallbackHint": "Design Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile or profile table not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - ProfileTables"
        ],
        "summary": "Delete a profile table",
        "operationId": "DeleteProfileTable",
        "parameters": [
          {
            "name": "profile-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "profile-table-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile or profile table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-link-groups": {
      "get": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Get all record link groups pointing from this table.",
        "operationId": "GetRecordLinkGroups",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordLinkGroupsInfo"
                },
                "example": {
                  "recordLinkGroups": [
                    {
                      "identity": 115,
                      "type": "static",
                      "reverseName": "Training Exercise",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "MaterialUniverse",
                      "guid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                    },
                    {
                      "identity": 3,
                      "type": "smart",
                      "reverseName": "Smart Link to Training Record",
                      "reverseDisplayNames": {
                        "en": "en-Smart Link to Training Record",
                        "fr": "fr-Smart Link to Training Record"
                      },
                      "displayNames": {
                        "en": "en-Smart Link to MaterialUniverse",
                        "fr": "fr-Smart Link to MaterialUniverse"
                      },
                      "name": "Smart Link to MaterialUniverse",
                      "guid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                    },
                    {
                      "identity": 1,
                      "type": "crossDatabase",
                      "reverseName": "Second Training Database And Table - MI Training Exercise for Import",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "MI Training Exercise for Import - Second Training Database And Table",
                      "guid": "f655dfc4-123d-4c10-988a-54616989c08b"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Create a new record link group.",
        "operationId": "CreateRecordLinkGroup",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Static record link group",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself.",
                  "value": {
                    "type": "static",
                    "linkTarget": {
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    "includeIndirectLinks": false,
                    "reverseName": "Material Universe static self link reversed",
                    "name": "Material Universe static self link"
                  }
                },
                "Example 2": {
                  "summary": "Static record link group with specified guid",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "type": "static",
                    "linkTarget": {
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                    },
                    "includeIndirectLinks": true,
                    "reverseName": "Material Universe static link",
                    "name": "Process Universe static link",
                    "guid": "bcc9d069-7504-435b-8175-a0091c5c1f0e"
                  }
                },
                "Example 3": {
                  "summary": "Cross database record link group",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to a table in different databases. Since no database guid is specified this will link to all databases containing this table.",
                  "value": {
                    "type": "crossDatabase",
                    "linkTarget": {
                      "tableGuid": "ea8b9af3-493a-4d40-b6d7-f6f6fec5e59f"
                    },
                    "includeIndirectLinks": false,
                    "reverseName": "Cross database link to Material Universe",
                    "name": "Cross database link from Material Universe"
                  }
                },
                "Example 4": {
                  "summary": "Cross database record link group with specified guid and target database guid",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to a table in different database. Since the database guid is specified it will link to all versions of that specific database.",
                  "value": {
                    "type": "crossDatabase",
                    "linkTarget": {
                      "databaseGuid": "50e8f3d3-0943-42f1-aa26-83943e417697",
                      "tableGuid": "6e5d7b02-ab72-4a70-96ec-dfb45ea6e201"
                    },
                    "includeIndirectLinks": true,
                    "reverseName": "Cross database link to MI Training - Material Universe",
                    "name": "Cross database link from MI Training - Material Universe",
                    "guid": "273573f2-dd57-48c8-8543-cc1b916cc682"
                  }
                },
                "Example 5": {
                  "summary": "Smart record link group",
                  "description": "This example demonstrates how to create a new smart record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself. Created link will have 'One to One' referential integrity model and will allow orphans.",
                  "value": {
                    "type": "smart",
                    "linkTarget": {
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    "forbidOrphans": false,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "bd489a13-97ee-4933-a677-7a18513e0997",
                        "attributeTargetGuid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "reverseName": "Material Universe smart self link reversed",
                    "name": "Material Universe smart self link"
                  }
                },
                "Example 6": {
                  "summary": "Smart record link group with all fields specified",
                  "description": "This example demonstrates how to create a new smart record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid, referential integrity model and forbid orphans flag. If the guid is not specified a random new Guid will be generated. If referential integrity model is not specified it defaults to 'One to One' model. If forbid orphans flag is not specified it defaults to allowing them. This link group will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "type": "smart",
                    "linkTarget": {
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                    },
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToMany",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "bd489a13-97ee-4933-a677-7a18513e0997",
                        "attributeTargetGuid": "00000079-0001-4fff-8fff-3248ffff0000"
                      },
                      {
                        "attributeSourceGuid": "0000007c-0001-4fff-8fff-dd92ffff0000",
                        "attributeTargetGuid": "000000cf-0001-4fff-8fff-3248ffff0000"
                      }
                    ],
                    "reverseName": "Material Universe smart link",
                    "name": "Process Universe smart link",
                    "guid": "f6cc4959-e14d-45d6-89d0-ecbe130f8556"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Static record link group",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself.",
                  "value": {
                    "type": "static",
                    "linkTarget": {
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    "includeIndirectLinks": false,
                    "reverseName": "Material Universe static self link reversed",
                    "name": "Material Universe static self link"
                  }
                },
                "Example 2": {
                  "summary": "Static record link group with specified guid",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "type": "static",
                    "linkTarget": {
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                    },
                    "includeIndirectLinks": true,
                    "reverseName": "Material Universe static link",
                    "name": "Process Universe static link",
                    "guid": "bcc9d069-7504-435b-8175-a0091c5c1f0e"
                  }
                },
                "Example 3": {
                  "summary": "Cross database record link group",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to a table in different databases. Since no database guid is specified this will link to all databases containing this table.",
                  "value": {
                    "type": "crossDatabase",
                    "linkTarget": {
                      "tableGuid": "ea8b9af3-493a-4d40-b6d7-f6f6fec5e59f"
                    },
                    "includeIndirectLinks": false,
                    "reverseName": "Cross database link to Material Universe",
                    "name": "Cross database link from Material Universe"
                  }
                },
                "Example 4": {
                  "summary": "Cross database record link group with specified guid and target database guid",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to a table in different database. Since the database guid is specified it will link to all versions of that specific database.",
                  "value": {
                    "type": "crossDatabase",
                    "linkTarget": {
                      "databaseGuid": "50e8f3d3-0943-42f1-aa26-83943e417697",
                      "tableGuid": "6e5d7b02-ab72-4a70-96ec-dfb45ea6e201"
                    },
                    "includeIndirectLinks": true,
                    "reverseName": "Cross database link to MI Training - Material Universe",
                    "name": "Cross database link from MI Training - Material Universe",
                    "guid": "273573f2-dd57-48c8-8543-cc1b916cc682"
                  }
                },
                "Example 5": {
                  "summary": "Smart record link group",
                  "description": "This example demonstrates how to create a new smart record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself. Created link will have 'One to One' referential integrity model and will allow orphans.",
                  "value": {
                    "type": "smart",
                    "linkTarget": {
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    "forbidOrphans": false,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "bd489a13-97ee-4933-a677-7a18513e0997",
                        "attributeTargetGuid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "reverseName": "Material Universe smart self link reversed",
                    "name": "Material Universe smart self link"
                  }
                },
                "Example 6": {
                  "summary": "Smart record link group with all fields specified",
                  "description": "This example demonstrates how to create a new smart record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid, referential integrity model and forbid orphans flag. If the guid is not specified a random new Guid will be generated. If referential integrity model is not specified it defaults to 'One to One' model. If forbid orphans flag is not specified it defaults to allowing them. This link group will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "type": "smart",
                    "linkTarget": {
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                    },
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToMany",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "bd489a13-97ee-4933-a677-7a18513e0997",
                        "attributeTargetGuid": "00000079-0001-4fff-8fff-3248ffff0000"
                      },
                      {
                        "attributeSourceGuid": "0000007c-0001-4fff-8fff-dd92ffff0000",
                        "attributeTargetGuid": "000000cf-0001-4fff-8fff-3248ffff0000"
                      }
                    ],
                    "reverseName": "Material Universe smart link",
                    "name": "Process Universe smart link",
                    "guid": "f6cc4959-e14d-45d6-89d0-ecbe130f8556"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Static record link group",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself.",
                  "value": {
                    "type": "static",
                    "linkTarget": {
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    "includeIndirectLinks": false,
                    "reverseName": "Material Universe static self link reversed",
                    "name": "Material Universe static self link"
                  }
                },
                "Example 2": {
                  "summary": "Static record link group with specified guid",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "type": "static",
                    "linkTarget": {
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                    },
                    "includeIndirectLinks": true,
                    "reverseName": "Material Universe static link",
                    "name": "Process Universe static link",
                    "guid": "bcc9d069-7504-435b-8175-a0091c5c1f0e"
                  }
                },
                "Example 3": {
                  "summary": "Cross database record link group",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to a table in different databases. Since no database guid is specified this will link to all databases containing this table.",
                  "value": {
                    "type": "crossDatabase",
                    "linkTarget": {
                      "tableGuid": "ea8b9af3-493a-4d40-b6d7-f6f6fec5e59f"
                    },
                    "includeIndirectLinks": false,
                    "reverseName": "Cross database link to Material Universe",
                    "name": "Cross database link from Material Universe"
                  }
                },
                "Example 4": {
                  "summary": "Cross database record link group with specified guid and target database guid",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to a table in different database. Since the database guid is specified it will link to all versions of that specific database.",
                  "value": {
                    "type": "crossDatabase",
                    "linkTarget": {
                      "databaseGuid": "50e8f3d3-0943-42f1-aa26-83943e417697",
                      "tableGuid": "6e5d7b02-ab72-4a70-96ec-dfb45ea6e201"
                    },
                    "includeIndirectLinks": true,
                    "reverseName": "Cross database link to MI Training - Material Universe",
                    "name": "Cross database link from MI Training - Material Universe",
                    "guid": "273573f2-dd57-48c8-8543-cc1b916cc682"
                  }
                },
                "Example 5": {
                  "summary": "Smart record link group",
                  "description": "This example demonstrates how to create a new smart record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself. Created link will have 'One to One' referential integrity model and will allow orphans.",
                  "value": {
                    "type": "smart",
                    "linkTarget": {
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    "forbidOrphans": false,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "bd489a13-97ee-4933-a677-7a18513e0997",
                        "attributeTargetGuid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "reverseName": "Material Universe smart self link reversed",
                    "name": "Material Universe smart self link"
                  }
                },
                "Example 6": {
                  "summary": "Smart record link group with all fields specified",
                  "description": "This example demonstrates how to create a new smart record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid, referential integrity model and forbid orphans flag. If the guid is not specified a random new Guid will be generated. If referential integrity model is not specified it defaults to 'One to One' model. If forbid orphans flag is not specified it defaults to allowing them. This link group will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "type": "smart",
                    "linkTarget": {
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                    },
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToMany",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "bd489a13-97ee-4933-a677-7a18513e0997",
                        "attributeTargetGuid": "00000079-0001-4fff-8fff-3248ffff0000"
                      },
                      {
                        "attributeSourceGuid": "0000007c-0001-4fff-8fff-dd92ffff0000",
                        "attributeTargetGuid": "000000cf-0001-4fff-8fff-3248ffff0000"
                      }
                    ],
                    "reverseName": "Material Universe smart link",
                    "name": "Process Universe smart link",
                    "guid": "f6cc4959-e14d-45d6-89d0-ecbe130f8556"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Static record link group",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself.",
                  "value": {
                    "type": "static",
                    "linkTarget": {
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    "includeIndirectLinks": false,
                    "reverseName": "Material Universe static self link reversed",
                    "name": "Material Universe static self link"
                  }
                },
                "Example 2": {
                  "summary": "Static record link group with specified guid",
                  "description": "This example demonstrates how to create a new static record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "type": "static",
                    "linkTarget": {
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                    },
                    "includeIndirectLinks": true,
                    "reverseName": "Material Universe static link",
                    "name": "Process Universe static link",
                    "guid": "bcc9d069-7504-435b-8175-a0091c5c1f0e"
                  }
                },
                "Example 3": {
                  "summary": "Cross database record link group",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to a table in different databases. Since no database guid is specified this will link to all databases containing this table.",
                  "value": {
                    "type": "crossDatabase",
                    "linkTarget": {
                      "tableGuid": "ea8b9af3-493a-4d40-b6d7-f6f6fec5e59f"
                    },
                    "includeIndirectLinks": false,
                    "reverseName": "Cross database link to Material Universe",
                    "name": "Cross database link from Material Universe"
                  }
                },
                "Example 4": {
                  "summary": "Cross database record link group with specified guid and target database guid",
                  "description": "This example demonstrates how to create a new cross database record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated. This will link from 'MaterialUniverse' table to a table in different database. Since the database guid is specified it will link to all versions of that specific database.",
                  "value": {
                    "type": "crossDatabase",
                    "linkTarget": {
                      "databaseGuid": "50e8f3d3-0943-42f1-aa26-83943e417697",
                      "tableGuid": "6e5d7b02-ab72-4a70-96ec-dfb45ea6e201"
                    },
                    "includeIndirectLinks": true,
                    "reverseName": "Cross database link to MI Training - Material Universe",
                    "name": "Cross database link from MI Training - Material Universe",
                    "guid": "273573f2-dd57-48c8-8543-cc1b916cc682"
                  }
                },
                "Example 5": {
                  "summary": "Smart record link group",
                  "description": "This example demonstrates how to create a new smart record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000'). This will link from 'MaterialUniverse' table to itself. Created link will have 'One to One' referential integrity model and will allow orphans.",
                  "value": {
                    "type": "smart",
                    "linkTarget": {
                      "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    "forbidOrphans": false,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "bd489a13-97ee-4933-a677-7a18513e0997",
                        "attributeTargetGuid": "000002cf-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "reverseName": "Material Universe smart self link reversed",
                    "name": "Material Universe smart self link"
                  }
                },
                "Example 6": {
                  "summary": "Smart record link group with all fields specified",
                  "description": "This example demonstrates how to create a new smart record link group for the MI_Training database in 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') with a specified guid, referential integrity model and forbid orphans flag. If the guid is not specified a random new Guid will be generated. If referential integrity model is not specified it defaults to 'One to One' model. If forbid orphans flag is not specified it defaults to allowing them. This link group will link from 'MaterialUniverse' table to 'ProcessUniverse' table",
                  "value": {
                    "type": "smart",
                    "linkTarget": {
                      "tableGuid": "00003248-0011-4fff-8fff-0000ffff0000"
                    },
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToMany",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "bd489a13-97ee-4933-a677-7a18513e0997",
                        "attributeTargetGuid": "00000079-0001-4fff-8fff-3248ffff0000"
                      },
                      {
                        "attributeSourceGuid": "0000007c-0001-4fff-8fff-dd92ffff0000",
                        "attributeTargetGuid": "000000cf-0001-4fff-8fff-3248ffff0000"
                      }
                    ],
                    "reverseName": "Material Universe smart link",
                    "name": "Process Universe smart link",
                    "guid": "f6cc4959-e14d-45d6-89d0-ecbe130f8556"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordLinkGroup"
                },
                "examples": {
                  "Example 4": {
                    "summary": "Static record link group",
                    "description": "This example demonstrates the returned value from getting a 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from MI_Training database.",
                    "value": {
                      "type": "static",
                      "includeIndirectLinks": false,
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "c9954321-b4d4-4443-949e-f9b161e2c8fb"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "73d8f19a-38df-4144-964d-cc1448d38ebb"
                        }
                      },
                      "identity": 125,
                      "reverseName": "Fatigue Statistical Data",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Fatigue Test Data",
                      "guid": "485da78d-d094-4edb-a5a9-077fe1bc02f2"
                    }
                  },
                  "Example 5": {
                    "summary": "Cross database record link group",
                    "description": "This example demonstrates the returned value from getting a cross database record link group from 'MaterialUniverse' table from MI_Training database.",
                    "value": {
                      "type": "crossDatabase",
                      "includeIndirectLinks": false,
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        },
                        "linkTarget": {
                          "databaseGuid": "32e613b3-551f-4744-9ac5-58187fa7ce29",
                          "tableGuid": "6ef9b51d-87b2-45a2-895e-f1e61c731074"
                        }
                      },
                      "identity": 1,
                      "reverseName": "MI Training - MaterialUniverse",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Different database - different table",
                      "guid": "13fbf5d6-98d6-4672-8893-d626ba542eb1"
                    }
                  },
                  "Example 6": {
                    "summary": "Smart record link group",
                    "description": "This example demonstrates the returned value from getting a 'Tensile test data' smart record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from MI_Training database.",
                    "value": {
                      "type": "smart",
                      "forbidOrphans": false,
                      "referentialIntegrityModel": "oneToMany",
                      "attributePairs": [
                        {
                          "attributeSource": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                            },
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                          },
                          "attributeTarget": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "0dd5348e-72f3-4bcb-bb38-621e5953a333"
                            },
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                          }
                        }
                      ],
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333"
                        }
                      },
                      "identity": 8,
                      "reverseName": "Further panel information",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Tensile test data",
                      "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-link-groups/{record-link-group-guid}/{record-link-group-type}": {
      "get": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Get individual record link group",
        "operationId": "GetRecordLinkGroup",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-type",
            "in": "path",
            "description": "The record link group type.",
            "required": true,
            "schema": {
              "enum": [
                "static",
                "smart",
                "crossDatabase"
              ],
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordLinkGroup"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Static record link group",
                    "description": "This example demonstrates the returned value from getting a 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from MI_Training database.",
                    "value": {
                      "type": "static",
                      "includeIndirectLinks": false,
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "c9954321-b4d4-4443-949e-f9b161e2c8fb"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "73d8f19a-38df-4144-964d-cc1448d38ebb"
                        }
                      },
                      "identity": 125,
                      "reverseName": "Fatigue Statistical Data",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Fatigue Test Data",
                      "guid": "485da78d-d094-4edb-a5a9-077fe1bc02f2"
                    }
                  },
                  "Example 2": {
                    "summary": "Cross database record link group",
                    "description": "This example demonstrates the returned value from getting a cross database record link group from 'MaterialUniverse' table from MI_Training database.",
                    "value": {
                      "type": "crossDatabase",
                      "includeIndirectLinks": false,
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        },
                        "linkTarget": {
                          "databaseGuid": "9afb21d1-10ec-41ca-a4bd-c67196a72564",
                          "tableGuid": "adcaeb81-bdcf-4280-8dbb-cc679d876694"
                        }
                      },
                      "identity": 1,
                      "reverseName": "MI Training - MaterialUniverse",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Different database - different table",
                      "guid": "084bc0e5-81c4-48bc-ade1-bc57be84e9a6"
                    }
                  },
                  "Example 3": {
                    "summary": "Smart record link group",
                    "description": "This example demonstrates the returned value from getting a 'Tensile test data' smart record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from MI_Training database.",
                    "value": {
                      "type": "smart",
                      "forbidOrphans": false,
                      "referentialIntegrityModel": "oneToMany",
                      "attributePairs": [
                        {
                          "attributeSource": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                            },
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                          },
                          "attributeTarget": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "0dd5348e-72f3-4bcb-bb38-621e5953a333"
                            },
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                          }
                        }
                      ],
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333"
                        }
                      },
                      "identity": 8,
                      "reverseName": "Further panel information",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Tensile test data",
                      "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Database, table or record link group not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Delete a record link group.",
        "operationId": "DeleteRecordLinkGroup",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-type",
            "in": "path",
            "description": "The record link group type.",
            "required": true,
            "schema": {
              "enum": [
                "static",
                "smart",
                "crossDatabase"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or record link group not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/record-link-groups/{record-link-group-guid}": {
      "patch": {
        "tags": [
          "Schema - Record Link Groups"
        ],
        "summary": "Update record link group.",
        "operationId": "UpdateRecordLinkGroup",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "record-link-group-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "guid": "3784c494-1bc7-4eb5-8b12-227ae8968098"
                  }
                },
                "Example 2": {
                  "summary": "Update name and reverse name",
                  "description": "This example demonstrates how to update the 'Name' and 'Reverse name' properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update everything for static record link group",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)",
                    "guid": "54490e99-41e4-4a8a-bd11-5e389d70a1fd"
                  }
                },
                "Example 4": {
                  "summary": "Update everything for cross database record link group",
                  "description": "This example demonstrates how to update all properties of cross database record link group from the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "reverseName": "Link To MI Training - Material Universe (Updated)",
                    "name": "Link From MI Training - Material Universe (Updated)",
                    "guid": "aaba41a9-2705-4c67-945c-a07d3986c551"
                  }
                },
                "Example 5": {
                  "summary": "Update everything for smart record link group",
                  "description": "This example demonstrates how to update all properties of 'Tensile test data' smart record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from the 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from the MI_Training database.",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "6e50a7a8-a759-44c9-b151-215a07949c1f",
                        "attributeTargetGuid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                      },
                      {
                        "attributeSourceGuid": "1228c02f-25e7-4748-bcfa-038c334c73e4",
                        "attributeTargetGuid": "61796104-14e0-4d59-bdba-22a9277f4775"
                      }
                    ],
                    "type": "smart",
                    "reverseName": "Further panel information (Updated)",
                    "name": "Tensile test data (Updated)",
                    "guid": "7a32e31c-9f66-47f0-a33f-8a9bb581f9e9"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "guid": "3784c494-1bc7-4eb5-8b12-227ae8968098"
                  }
                },
                "Example 2": {
                  "summary": "Update name and reverse name",
                  "description": "This example demonstrates how to update the 'Name' and 'Reverse name' properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update everything for static record link group",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)",
                    "guid": "54490e99-41e4-4a8a-bd11-5e389d70a1fd"
                  }
                },
                "Example 4": {
                  "summary": "Update everything for cross database record link group",
                  "description": "This example demonstrates how to update all properties of cross database record link group from the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "reverseName": "Link To MI Training - Material Universe (Updated)",
                    "name": "Link From MI Training - Material Universe (Updated)",
                    "guid": "aaba41a9-2705-4c67-945c-a07d3986c551"
                  }
                },
                "Example 5": {
                  "summary": "Update everything for smart record link group",
                  "description": "This example demonstrates how to update all properties of 'Tensile test data' smart record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from the 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from the MI_Training database.",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "6e50a7a8-a759-44c9-b151-215a07949c1f",
                        "attributeTargetGuid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                      },
                      {
                        "attributeSourceGuid": "1228c02f-25e7-4748-bcfa-038c334c73e4",
                        "attributeTargetGuid": "61796104-14e0-4d59-bdba-22a9277f4775"
                      }
                    ],
                    "type": "smart",
                    "reverseName": "Further panel information (Updated)",
                    "name": "Tensile test data (Updated)",
                    "guid": "7a32e31c-9f66-47f0-a33f-8a9bb581f9e9"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "guid": "3784c494-1bc7-4eb5-8b12-227ae8968098"
                  }
                },
                "Example 2": {
                  "summary": "Update name and reverse name",
                  "description": "This example demonstrates how to update the 'Name' and 'Reverse name' properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update everything for static record link group",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)",
                    "guid": "54490e99-41e4-4a8a-bd11-5e389d70a1fd"
                  }
                },
                "Example 4": {
                  "summary": "Update everything for cross database record link group",
                  "description": "This example demonstrates how to update all properties of cross database record link group from the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "reverseName": "Link To MI Training - Material Universe (Updated)",
                    "name": "Link From MI Training - Material Universe (Updated)",
                    "guid": "aaba41a9-2705-4c67-945c-a07d3986c551"
                  }
                },
                "Example 5": {
                  "summary": "Update everything for smart record link group",
                  "description": "This example demonstrates how to update all properties of 'Tensile test data' smart record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from the 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from the MI_Training database.",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "6e50a7a8-a759-44c9-b151-215a07949c1f",
                        "attributeTargetGuid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                      },
                      {
                        "attributeSourceGuid": "1228c02f-25e7-4748-bcfa-038c334c73e4",
                        "attributeTargetGuid": "61796104-14e0-4d59-bdba-22a9277f4775"
                      }
                    ],
                    "type": "smart",
                    "reverseName": "Further panel information (Updated)",
                    "name": "Tensile test data (Updated)",
                    "guid": "7a32e31c-9f66-47f0-a33f-8a9bb581f9e9"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateRecordLinkGroup"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "guid": "3784c494-1bc7-4eb5-8b12-227ae8968098"
                  }
                },
                "Example 2": {
                  "summary": "Update name and reverse name",
                  "description": "This example demonstrates how to update the 'Name' and 'Reverse name' properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update everything for static record link group",
                  "description": "This example demonstrates how to update all properties of the 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from the 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "static",
                    "reverseName": "Fatigue Statistical Data (updated)",
                    "name": "Fatigue Test Data (updated)",
                    "guid": "54490e99-41e4-4a8a-bd11-5e389d70a1fd"
                  }
                },
                "Example 4": {
                  "summary": "Update everything for cross database record link group",
                  "description": "This example demonstrates how to update all properties of cross database record link group from the 'MaterialUniverse' table (GUID = '0000dd92-0011-4fff-8fff-0000ffff0000') from the MI_Training database.",
                  "value": {
                    "includeIndirectLinks": true,
                    "type": "crossDatabase",
                    "reverseName": "Link To MI Training - Material Universe (Updated)",
                    "name": "Link From MI Training - Material Universe (Updated)",
                    "guid": "aaba41a9-2705-4c67-945c-a07d3986c551"
                  }
                },
                "Example 5": {
                  "summary": "Update everything for smart record link group",
                  "description": "This example demonstrates how to update all properties of 'Tensile test data' smart record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from the 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from the MI_Training database.",
                  "value": {
                    "forbidOrphans": true,
                    "referentialIntegrityModel": "oneToOne",
                    "attributePairs": [
                      {
                        "attributeSourceGuid": "6e50a7a8-a759-44c9-b151-215a07949c1f",
                        "attributeTargetGuid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                      },
                      {
                        "attributeSourceGuid": "1228c02f-25e7-4748-bcfa-038c334c73e4",
                        "attributeTargetGuid": "61796104-14e0-4d59-bdba-22a9277f4775"
                      }
                    ],
                    "type": "smart",
                    "reverseName": "Further panel information (Updated)",
                    "name": "Tensile test data (Updated)",
                    "guid": "7a32e31c-9f66-47f0-a33f-8a9bb581f9e9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaRecordLinkGroup"
                },
                "examples": {
                  "Example 7": {
                    "summary": "Static record link group",
                    "description": "This example demonstrates the returned value from getting a 'Fatigue Test Data' static record link group (GUID = '485da78d-d094-4edb-a5a9-077fe1bc02f2') from 'Fatigue Statistical Data' table (GUID = 'c9954321-b4d4-4443-949e-f9b161e2c8fb') from MI_Training database.",
                    "value": {
                      "type": "static",
                      "includeIndirectLinks": false,
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "c9954321-b4d4-4443-949e-f9b161e2c8fb"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "73d8f19a-38df-4144-964d-cc1448d38ebb"
                        }
                      },
                      "identity": 125,
                      "reverseName": "Fatigue Statistical Data",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Fatigue Test Data",
                      "guid": "485da78d-d094-4edb-a5a9-077fe1bc02f2"
                    }
                  },
                  "Example 8": {
                    "summary": "Cross database record link group",
                    "description": "This example demonstrates the returned value from getting a cross database record link group from 'MaterialUniverse' table from MI_Training database.",
                    "value": {
                      "type": "crossDatabase",
                      "includeIndirectLinks": false,
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        },
                        "linkTarget": {
                          "databaseGuid": "a28f0719-a70e-4178-9845-2f3a6eca0ddd",
                          "tableGuid": "9bcde281-e885-499e-8499-40ba7cfbf581"
                        }
                      },
                      "identity": 1,
                      "reverseName": "MI Training - MaterialUniverse",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Different database - different table",
                      "guid": "aac3c669-ae37-47df-966b-aa82054db68f"
                    }
                  },
                  "Example 9": {
                    "summary": "Smart record link group",
                    "description": "This example demonstrates the returned value from getting a 'Tensile test data' smart record link group (GUID = '5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f') from 'Composite Pedigree' table (GUID = '7db2ff8e-54ed-45d6-b522-e03c8be405b3') from MI_Training database.",
                    "value": {
                      "type": "smart",
                      "forbidOrphans": false,
                      "referentialIntegrityModel": "oneToMany",
                      "attributePairs": [
                        {
                          "attributeSource": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                            },
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "6e50a7a8-a759-44c9-b151-215a07949c1f"
                          },
                          "attributeTarget": {
                            "type": "shortText",
                            "isHiddenFromSearchCriteria": false,
                            "isProtected": false,
                            "table": {
                              "guid": "0dd5348e-72f3-4bcb-bb38-621e5953a333"
                            },
                            "displayNames": {},
                            "name": "Panel Number",
                            "guid": "ab0ddcf2-d73e-44b1-9e69-383a7374edf7"
                          }
                        }
                      ],
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "7db2ff8e-54ed-45d6-b522-e03c8be405b3"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0dd5348e-72f3-4bcb-bb38-621e5953a333"
                        }
                      },
                      "identity": 8,
                      "reverseName": "Further panel information",
                      "reverseDisplayNames": {},
                      "displayNames": {},
                      "name": "Tensile test data",
                      "guid": "5b8fca7e-b8e7-4fc6-8e02-642b3fb3218f"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or record link group not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/replacement-strings": {
      "get": {
        "tags": [
          "Schema - Replacement Strings"
        ],
        "summary": "Get all replacement strings",
        "operationId": "GetReplacementStrings",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which replacement strings will be searched for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaReplacementStringsInfo"
                },
                "example": {
                  "replacementStrings": [
                    {
                      "name": "Links to GRANTA MI support on the ANSYS Granta website",
                      "guid": "0800f9b3-c48f-497e-a937-2e1af139055e"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Replacement Strings"
        ],
        "summary": "Create a new replacement string.",
        "operationId": "CreateReplacementString",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which replacement string will be created",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "description": "Replacement string to add to database",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateReplacementString"
              },
              "examples": {
                "Example 1": {
                  "summary": "Replacement string",
                  "description": "This example demonstrates how to create a new replacement string for the MI_Training database.",
                  "value": {
                    "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                    "name": "Links to GRANTA MI support on the ANSYS Granta website"
                  }
                },
                "Example 2": {
                  "summary": "Replacement string with specified guid",
                  "description": "This example demonstrates how to create a new replacement string for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                    "name": "Links to GRANTA MI support on the ANSYS Granta website",
                    "guid": "41cf2417-da01-4351-9b17-e2349fae28e1"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateReplacementString"
              },
              "examples": {
                "Example 1": {
                  "summary": "Replacement string",
                  "description": "This example demonstrates how to create a new replacement string for the MI_Training database.",
                  "value": {
                    "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                    "name": "Links to GRANTA MI support on the ANSYS Granta website"
                  }
                },
                "Example 2": {
                  "summary": "Replacement string with specified guid",
                  "description": "This example demonstrates how to create a new replacement string for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                    "name": "Links to GRANTA MI support on the ANSYS Granta website",
                    "guid": "41cf2417-da01-4351-9b17-e2349fae28e1"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateReplacementString"
              },
              "examples": {
                "Example 1": {
                  "summary": "Replacement string",
                  "description": "This example demonstrates how to create a new replacement string for the MI_Training database.",
                  "value": {
                    "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                    "name": "Links to GRANTA MI support on the ANSYS Granta website"
                  }
                },
                "Example 2": {
                  "summary": "Replacement string with specified guid",
                  "description": "This example demonstrates how to create a new replacement string for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                    "name": "Links to GRANTA MI support on the ANSYS Granta website",
                    "guid": "41cf2417-da01-4351-9b17-e2349fae28e1"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateReplacementString"
              },
              "examples": {
                "Example 1": {
                  "summary": "Replacement string",
                  "description": "This example demonstrates how to create a new replacement string for the MI_Training database.",
                  "value": {
                    "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                    "name": "Links to GRANTA MI support on the ANSYS Granta website"
                  }
                },
                "Example 2": {
                  "summary": "Replacement string with specified guid",
                  "description": "This example demonstrates how to create a new replacement string for the MI_Training database with a specified guid. Normally, if the guid is not specified, a random new Guid will be generated.",
                  "value": {
                    "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                    "name": "Links to GRANTA MI support on the ANSYS Granta website",
                    "guid": "41cf2417-da01-4351-9b17-e2349fae28e1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaReplacementString"
                },
                "example": {
                  "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                  "name": "Links to GRANTA MI support on the ANSYS Granta website",
                  "guid": "0800f9b3-c48f-497e-a937-2e1af139055e"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/replacement-strings/{replacement-string-guid}": {
      "get": {
        "tags": [
          "Schema - Replacement Strings"
        ],
        "summary": "Get individual replacement string",
        "operationId": "GetReplacementString",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which replacement string will be searched for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "replacement-string-guid",
            "in": "path",
            "description": "Guid of requested replacement string",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaReplacementString"
                },
                "example": {
                  "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                  "name": "Links to GRANTA MI support on the ANSYS Granta website",
                  "guid": "0800f9b3-c48f-497e-a937-2e1af139055e"
                }
              }
            }
          },
          "404": {
            "description": "Database or replacement string not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Replacement Strings"
        ],
        "summary": "Update a replacement string.",
        "operationId": "UpdateReplacementString",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which replacement string will be search for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "replacement-string-guid",
            "in": "path",
            "description": "Guid of replacement string to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Replacement string data to be updated",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateReplacementString"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a replacement string",
                  "description": "This example shows how to update all properties of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "value": "New value for replacement string",
                    "name": "New name for replacement string",
                    "guid": "926353dd-66ee-4cd7-bfd1-dcd6dbb1dfe5"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "name": "New name for replacement string"
                  }
                },
                "Example 3": {
                  "summary": "Update value",
                  "description": "This example shows how to update the 'Value' property of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "value": "New value for replacement string"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateReplacementString"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a replacement string",
                  "description": "This example shows how to update all properties of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "value": "New value for replacement string",
                    "name": "New name for replacement string",
                    "guid": "926353dd-66ee-4cd7-bfd1-dcd6dbb1dfe5"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "name": "New name for replacement string"
                  }
                },
                "Example 3": {
                  "summary": "Update value",
                  "description": "This example shows how to update the 'Value' property of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "value": "New value for replacement string"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateReplacementString"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a replacement string",
                  "description": "This example shows how to update all properties of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "value": "New value for replacement string",
                    "name": "New name for replacement string",
                    "guid": "926353dd-66ee-4cd7-bfd1-dcd6dbb1dfe5"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "name": "New name for replacement string"
                  }
                },
                "Example 3": {
                  "summary": "Update value",
                  "description": "This example shows how to update the 'Value' property of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "value": "New value for replacement string"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateReplacementString"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a replacement string",
                  "description": "This example shows how to update all properties of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "value": "New value for replacement string",
                    "name": "New name for replacement string",
                    "guid": "926353dd-66ee-4cd7-bfd1-dcd6dbb1dfe5"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example shows how to update the 'Name' property of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "name": "New name for replacement string"
                  }
                },
                "Example 3": {
                  "summary": "Update value",
                  "description": "This example shows how to update the 'Value' property of the 'Links to GRANTA MI support on the ANSYS Granta website' replacement string (guid = 0800f9b3-c48f-497e-a937-2e1af139055e) from the MI_Training database.",
                  "value": {
                    "value": "New value for replacement string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaReplacementString"
                },
                "example": {
                  "value": "https://grantadesign.com/industry/support/granta-mi/{a:My Granta web folder}",
                  "name": "Links to GRANTA MI support on the ANSYS Granta website",
                  "guid": "0800f9b3-c48f-497e-a937-2e1af139055e"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or replacement string not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Replacement Strings"
        ],
        "summary": "Delete a replacement string",
        "operationId": "DeleteReplacementString",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "Database in which replacement string will be search for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "replacement-string-guid",
            "in": "path",
            "description": "Guid of replacement string to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or replacement string not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/standard-names": {
      "get": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Gets all standard names for a given database.",
        "operationId": "GetStandardNames",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaStandardNamesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Create a new standard name",
        "operationId": "CreateStandardName",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Standard name for attributes",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 2": {
                  "summary": "Standard name for parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                  "value": {
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 3": {
                  "summary": "Standard name for record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                  "value": {
                    "mappedRecordLinkGroups": [
                      {
                        "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 4": {
                  "summary": "Standard name for cross-database record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                  "value": {
                    "mappedCrossDatabaseRecordLinkGroups": [
                      {
                        "guid": "32dbae12-965f-4620-84dd-cecf16b1908b"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 5": {
                  "summary": "Standard name for attributes and parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Standard name for attributes",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 2": {
                  "summary": "Standard name for parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                  "value": {
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 3": {
                  "summary": "Standard name for record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                  "value": {
                    "mappedRecordLinkGroups": [
                      {
                        "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 4": {
                  "summary": "Standard name for cross-database record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                  "value": {
                    "mappedCrossDatabaseRecordLinkGroups": [
                      {
                        "guid": "32dbae12-965f-4620-84dd-cecf16b1908b"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 5": {
                  "summary": "Standard name for attributes and parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Standard name for attributes",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 2": {
                  "summary": "Standard name for parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                  "value": {
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 3": {
                  "summary": "Standard name for record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                  "value": {
                    "mappedRecordLinkGroups": [
                      {
                        "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 4": {
                  "summary": "Standard name for cross-database record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                  "value": {
                    "mappedCrossDatabaseRecordLinkGroups": [
                      {
                        "guid": "32dbae12-965f-4620-84dd-cecf16b1908b"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 5": {
                  "summary": "Standard name for attributes and parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Standard name for attributes",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 2": {
                  "summary": "Standard name for parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two parameters from the MI_Training database.",
                  "value": {
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 3": {
                  "summary": "Standard name for record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a record link group from the MI_Training database.",
                  "value": {
                    "mappedRecordLinkGroups": [
                      {
                        "guid": "9337df8e-c22b-4aaf-a9fc-6930c69c94cb"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 4": {
                  "summary": "Standard name for cross-database record link groups",
                  "description": "This example demonstrates how to create a new standard name which maps to a cross-database record link group.",
                  "value": {
                    "mappedCrossDatabaseRecordLinkGroups": [
                      {
                        "guid": "32dbae12-965f-4620-84dd-cecf16b1908b"
                      }
                    ],
                    "name": "Unification"
                  }
                },
                "Example 5": {
                  "summary": "Standard name for attributes and parameters",
                  "description": "This example demonstrates how to create a new standard name which maps to two attributes and a parameter from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      }
                    ],
                    "name": "Unification"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaStandardName"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/standard-names/{standard-name-guid}": {
      "get": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Gets a standard name for a given database and guid.",
        "operationId": "GetStandardName",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "standard-name-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaStandardName"
                }
              }
            }
          },
          "404": {
            "description": "Database or standard name not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Edit a standard name",
        "operationId": "UpdateStandardName",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "standard-name-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "name": "Density (Updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "guid": "6a86ec57-8f62-42da-8147-d1db3a70b0ca"
                  }
                },
                "Example 3": {
                  "summary": "Update mapped attributes",
                  "description": "This example demonstrates how to update the mapped attributes of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Replace mapped attributes with parameters",
                  "description": "This example demonstrates how to remove the mapped attribute and add mapped parameters to the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "name": "Density (Updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "guid": "6a86ec57-8f62-42da-8147-d1db3a70b0ca"
                  }
                },
                "Example 3": {
                  "summary": "Update mapped attributes",
                  "description": "This example demonstrates how to update the mapped attributes of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Replace mapped attributes with parameters",
                  "description": "This example demonstrates how to remove the mapped attribute and add mapped parameters to the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "name": "Density (Updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "guid": "6a86ec57-8f62-42da-8147-d1db3a70b0ca"
                  }
                },
                "Example 3": {
                  "summary": "Update mapped attributes",
                  "description": "This example demonstrates how to update the mapped attributes of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Replace mapped attributes with parameters",
                  "description": "This example demonstrates how to remove the mapped attribute and add mapped parameters to the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateStandardName"
              },
              "examples": {
                "Example 1": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "name": "Density (Updated)"
                  }
                },
                "Example 2": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' property of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "guid": "6a86ec57-8f62-42da-8147-d1db3a70b0ca"
                  }
                },
                "Example 3": {
                  "summary": "Update mapped attributes",
                  "description": "This example demonstrates how to update the mapped attributes of the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [
                      {
                        "guid": "000000b9-0001-4fff-8fff-dd92ffff0000"
                      },
                      {
                        "guid": "000000ec-0001-4fff-8fff-dd92ffff0000"
                      }
                    ]
                  }
                },
                "Example 4": {
                  "summary": "Replace mapped attributes with parameters",
                  "description": "This example demonstrates how to remove the mapped attribute and add mapped parameters to the 'Density' standard name (guid = 5f5b89f7-da4e-4ae2-8c65-485e3c1a98fd) from the MI_Training database.",
                  "value": {
                    "mappedAttributes": [],
                    "mappedParameters": [
                      {
                        "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                      },
                      {
                        "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaStandardName"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or standard name not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Standard Names"
        ],
        "summary": "Delete a standard name.",
        "operationId": "DeleteStandardName",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "standard-name-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or standard name not found."
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/subsets": {
      "get": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Get all subsets for table",
        "operationId": "GetSubsets",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSubsetsInfo"
                },
                "example": {
                  "subsets": [
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {},
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {},
                      "name": "Polymers",
                      "guid": "00007645-0010-4fff-8fff-dd92ffff0000"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Create a new subset.",
        "operationId": "CreateSubset",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Subset",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Alloys"
                  }
                },
                "Example 2": {
                  "summary": "Subset with Guid",
                  "description": "This example demonstrates how to create a new subset with a specified guid value for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Alloys (guid)",
                    "guid": "d899abdf-7383-4aee-81e6-6d83dd18cd2c"
                  }
                },
                "Example 3": {
                  "summary": "Subset with associated layout",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with the 'Ceramics' layout associated.",
                  "value": {
                    "associatedLayout": {
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Alloys (Layout)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Subset",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Alloys"
                  }
                },
                "Example 2": {
                  "summary": "Subset with Guid",
                  "description": "This example demonstrates how to create a new subset with a specified guid value for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Alloys (guid)",
                    "guid": "d899abdf-7383-4aee-81e6-6d83dd18cd2c"
                  }
                },
                "Example 3": {
                  "summary": "Subset with associated layout",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with the 'Ceramics' layout associated.",
                  "value": {
                    "associatedLayout": {
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Alloys (Layout)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Subset",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Alloys"
                  }
                },
                "Example 2": {
                  "summary": "Subset with Guid",
                  "description": "This example demonstrates how to create a new subset with a specified guid value for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Alloys (guid)",
                    "guid": "d899abdf-7383-4aee-81e6-6d83dd18cd2c"
                  }
                },
                "Example 3": {
                  "summary": "Subset with associated layout",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with the 'Ceramics' layout associated.",
                  "value": {
                    "associatedLayout": {
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Alloys (Layout)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Subset",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Alloys"
                  }
                },
                "Example 2": {
                  "summary": "Subset with Guid",
                  "description": "This example demonstrates how to create a new subset with a specified guid value for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "name": "Alloys (guid)",
                    "guid": "d899abdf-7383-4aee-81e6-6d83dd18cd2c"
                  }
                },
                "Example 3": {
                  "summary": "Subset with associated layout",
                  "description": "This example demonstrates how to create a new subset for the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database with the 'Ceramics' layout associated.",
                  "value": {
                    "associatedLayout": {
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Alloys (Layout)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSubset"
                },
                "example": {
                  "associatedLayout": {
                    "name": "Ceramics",
                    "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  },
                  "displayNames": {},
                  "name": "Ceramics",
                  "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/subsets/{subset-guid}": {
      "get": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Get a subset with a specified guid for a given database and table.",
        "operationId": "GetSubset",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "subset-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSubset"
                },
                "example": {
                  "associatedLayout": {
                    "displayNames": {
                      "en": "Ceramics Layout English Display Name",
                      "fr": "Ceramics Layout French Display Name"
                    },
                    "name": "Ceramics",
                    "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  },
                  "displayNames": {
                    "en": "Ceramics English Display Name",
                    "fr": "Ceramics French Display Name"
                  },
                  "name": "Ceramics",
                  "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database, table or subset not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Update a subset.",
        "operationId": "UpdateSubset",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "subset-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a subset",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Ceramics (Updated)",
                    "guid": "83365f52-bd67-4cc9-be8c-9e924133a2dd"
                  }
                },
                "Example 2": {
                  "summary": "Rename subset",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update associated layout",
                  "description": "This example demonstrates how to update associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove associated layout",
                  "description": "This example demonstrates how to remove associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": null
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a subset",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Ceramics (Updated)",
                    "guid": "83365f52-bd67-4cc9-be8c-9e924133a2dd"
                  }
                },
                "Example 2": {
                  "summary": "Rename subset",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update associated layout",
                  "description": "This example demonstrates how to update associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove associated layout",
                  "description": "This example demonstrates how to remove associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": null
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a subset",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Ceramics (Updated)",
                    "guid": "83365f52-bd67-4cc9-be8c-9e924133a2dd"
                  }
                },
                "Example 2": {
                  "summary": "Rename subset",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update associated layout",
                  "description": "This example demonstrates how to update associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove associated layout",
                  "description": "This example demonstrates how to remove associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": null
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a subset",
                  "description": "This example demonstrates how to update all properties of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    "name": "Ceramics (Updated)",
                    "guid": "83365f52-bd67-4cc9-be8c-9e924133a2dd"
                  }
                },
                "Example 2": {
                  "summary": "Rename subset",
                  "description": "This example demonstrates how to update the 'Name' property of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "Ceramics (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update associated layout",
                  "description": "This example demonstrates how to update associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": {
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    }
                  }
                },
                "Example 4": {
                  "summary": "Remove associated layout",
                  "description": "This example demonstrates how to remove associated layout of the 'Ceramics' subset (guid = 00000b36-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "associatedLayout": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSubset"
                },
                "example": {
                  "associatedLayout": {
                    "displayNames": {
                      "en": "Ceramics Layout English Display Name",
                      "fr": "Ceramics Layout French Display Name"
                    },
                    "name": "Ceramics",
                    "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  },
                  "displayNames": {
                    "en": "Ceramics English Display Name",
                    "fr": "Ceramics French Display Name"
                  },
                  "name": "Ceramics",
                  "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or subset not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Delete a subset.",
        "operationId": "DeleteSubset",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "subset-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or subset not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/subsets/{subset-guid}:add-to-subset": {
      "post": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Add a record history to a subset.",
        "operationId": "AddToSubset",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "subset-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddRecordHistoryToSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Add a Record History to a Subset",
                  "description": "This example demonstrates how to add the 'Alumino Silicate' Record History only (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) to the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03",
                    "recurseChildren": false
                  }
                },
                "Example 2": {
                  "summary": "Add a Record History and its descendants to a Subset",
                  "description": "This example demonstrates how to add the 'Alumino Silicate' Record History  (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) and all of its descendants to the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03",
                    "recurseChildren": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddRecordHistoryToSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Add a Record History to a Subset",
                  "description": "This example demonstrates how to add the 'Alumino Silicate' Record History only (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) to the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03",
                    "recurseChildren": false
                  }
                },
                "Example 2": {
                  "summary": "Add a Record History and its descendants to a Subset",
                  "description": "This example demonstrates how to add the 'Alumino Silicate' Record History  (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) and all of its descendants to the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03",
                    "recurseChildren": true
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddRecordHistoryToSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Add a Record History to a Subset",
                  "description": "This example demonstrates how to add the 'Alumino Silicate' Record History only (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) to the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03",
                    "recurseChildren": false
                  }
                },
                "Example 2": {
                  "summary": "Add a Record History and its descendants to a Subset",
                  "description": "This example demonstrates how to add the 'Alumino Silicate' Record History  (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) and all of its descendants to the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03",
                    "recurseChildren": true
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaAddRecordHistoryToSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Add a Record History to a Subset",
                  "description": "This example demonstrates how to add the 'Alumino Silicate' Record History only (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) to the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03",
                    "recurseChildren": false
                  }
                },
                "Example 2": {
                  "summary": "Add a Record History and its descendants to a Subset",
                  "description": "This example demonstrates how to add the 'Alumino Silicate' Record History  (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) and all of its descendants to the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03",
                    "recurseChildren": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or subset not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}/subsets/{subset-guid}:remove-from-subset": {
      "post": {
        "tags": [
          "Schema - Subsets"
        ],
        "summary": "Remove a record history, and all of its descendants, from a subset.",
        "operationId": "RemoveFromSubset",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "subset-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRemoveRecordHistoryFromSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Remove a Record History from a Subset",
                  "description": "This example demonstrates how to remove the 'Alumino Silicate' Record History (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) from the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRemoveRecordHistoryFromSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Remove a Record History from a Subset",
                  "description": "This example demonstrates how to remove the 'Alumino Silicate' Record History (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) from the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRemoveRecordHistoryFromSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Remove a Record History from a Subset",
                  "description": "This example demonstrates how to remove the 'Alumino Silicate' Record History (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) from the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaRemoveRecordHistoryFromSubset"
              },
              "examples": {
                "Example 1": {
                  "summary": "Remove a Record History from a Subset",
                  "description": "This example demonstrates how to remove the 'Alumino Silicate' Record History (guid = 5a842e54-e143-45f5-aec8-18fb84f4fe03) from the 'All Bulk Materials' subset (guid = 0000b1c5-0010-4fff-8fff-dd92ffff0000) from the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "recordHistoryGuid": "5a842e54-e143-45f5-aec8-18fb84f4fe03"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database, table or subset not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables": {
      "get": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Get all tables",
        "operationId": "GetTables",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaTablesInfo"
                },
                "example": {
                  "tables": [
                    {
                      "databaseKey": "MI_TRAINING",
                      "isHiddenFromBrowse": false,
                      "isHiddenFromSearch": false,
                      "isVersioned": false,
                      "tableTypes": [
                        "Universe",
                        "Material"
                      ],
                      "displayNames": {
                        "en": "MaterialUniverse English Display Name",
                        "fr": "MaterialUniverse French Display Name"
                      },
                      "name": "MaterialUniverse",
                      "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                    },
                    {
                      "databaseKey": "MI_TRAINING",
                      "isHiddenFromBrowse": false,
                      "isHiddenFromSearch": false,
                      "isVersioned": true,
                      "tableTypes": [
                        "Design"
                      ],
                      "displayNames": {},
                      "name": "Design Data",
                      "guid": "0000b5e2-0011-4fff-8fff-0000ffff0000"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Create a new table.",
        "operationId": "CreateTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "name": "Coatings"
                  }
                },
                "Example 2": {
                  "summary": "Table with Guid",
                  "description": "This example demonstrates how to create a new table with a specified guid value in the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "name": "Coatings (Guid)",
                    "guid": "d718174e-0bf6-4bdc-aa2a-14e06dcb6ace"
                  }
                },
                "Example 3": {
                  "summary": "Hidden Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database that is not browsable or searchable. ",
                  "value": {
                    "isHiddenFromBrowse": true,
                    "isHiddenFromSearch": true,
                    "name": "Coatings (Hidden)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "name": "Coatings"
                  }
                },
                "Example 2": {
                  "summary": "Table with Guid",
                  "description": "This example demonstrates how to create a new table with a specified guid value in the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "name": "Coatings (Guid)",
                    "guid": "d718174e-0bf6-4bdc-aa2a-14e06dcb6ace"
                  }
                },
                "Example 3": {
                  "summary": "Hidden Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database that is not browsable or searchable. ",
                  "value": {
                    "isHiddenFromBrowse": true,
                    "isHiddenFromSearch": true,
                    "name": "Coatings (Hidden)"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "name": "Coatings"
                  }
                },
                "Example 2": {
                  "summary": "Table with Guid",
                  "description": "This example demonstrates how to create a new table with a specified guid value in the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "name": "Coatings (Guid)",
                    "guid": "d718174e-0bf6-4bdc-aa2a-14e06dcb6ace"
                  }
                },
                "Example 3": {
                  "summary": "Hidden Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database that is not browsable or searchable. ",
                  "value": {
                    "isHiddenFromBrowse": true,
                    "isHiddenFromSearch": true,
                    "name": "Coatings (Hidden)"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "name": "Coatings"
                  }
                },
                "Example 2": {
                  "summary": "Table with Guid",
                  "description": "This example demonstrates how to create a new table with a specified guid value in the MI_Training database. Normally, if the guid is not specified, a random new Guid will be generated. ",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": false,
                    "name": "Coatings (Guid)",
                    "guid": "d718174e-0bf6-4bdc-aa2a-14e06dcb6ace"
                  }
                },
                "Example 3": {
                  "summary": "Hidden Table",
                  "description": "This example demonstrates how to create a new table in the MI_Training database that is not browsable or searchable. ",
                  "value": {
                    "isHiddenFromBrowse": true,
                    "isHiddenFromSearch": true,
                    "name": "Coatings (Hidden)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaTable"
                },
                "example": {
                  "versionState": "unversioned",
                  "databaseKey": "MI_TRAINING",
                  "isHiddenFromBrowse": false,
                  "isHiddenFromSearch": false,
                  "isVersioned": false,
                  "tableTypes": [],
                  "displayNames": {},
                  "name": "Material Universe",
                  "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}": {
      "get": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Get a table with a specified guid for a given database.",
        "operationId": "GetTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaTable"
                },
                "example": {
                  "defaultSubset": {
                    "name": "All bulk materials",
                    "guid": "0000b1c5-0010-4fff-8fff-dd92ffff0000"
                  },
                  "subsets": [
                    {
                      "name": "Aerospace materials",
                      "guid": "0000fc72-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "All bulk materials",
                      "guid": "0000b1c5-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Metals",
                      "guid": "0000b135-0010-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Polymers",
                      "guid": "00007645-0010-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "defaultLayout": {
                    "name": "All Attributes",
                    "guid": "384f9abe-0581-434d-a976-86952282207a"
                  },
                  "layouts": [
                    {
                      "name": "Aerospace materials",
                      "guid": "0000fc72-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "All Attributes",
                      "guid": "384f9abe-0581-434d-a976-86952282207a"
                    },
                    {
                      "name": "All bulk materials",
                      "guid": "0000b1c5-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "displayNames": {
                        "en": "Ceramics English Display Name",
                        "fr": "Ceramics French Display Name"
                      },
                      "name": "Ceramics",
                      "guid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Metals",
                      "guid": "0000b135-0009-4fff-8fff-dd92ffff0000"
                    },
                    {
                      "name": "Polymers",
                      "guid": "00007645-0009-4fff-8fff-dd92ffff0000"
                    }
                  ],
                  "versionState": "unversioned",
                  "databaseKey": "MI_TRAINING",
                  "isHiddenFromBrowse": false,
                  "isHiddenFromSearch": false,
                  "isVersioned": false,
                  "displayNames": {
                    "en": "MaterialUniverse English Display Name",
                    "fr": "MaterialUniverse French Display Name"
                  },
                  "name": "MaterialUniverse",
                  "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Update a table.",
        "operationId": "UpdateTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a table",
                  "description": "This example demonstrates how to update all properties of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": true,
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "name": "MaterialUniverse (Updated)",
                    "guid": "787abac8-7ea9-45f1-b248-e217f959e994"
                  }
                },
                "Example 2": {
                  "summary": "Update 'IsHiddenFromBrowse'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromBrowse' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": true
                  }
                },
                "Example 3": {
                  "summary": "Update 'IsHiddenFromSearch'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromSearch' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromSearch": false
                  }
                },
                "Example 4": {
                  "summary": "Update default subset",
                  "description": "This example demonstrates how to update the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 5": {
                  "summary": "Remove default subset",
                  "description": "This example demonstrates how to remove the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": null
                  }
                },
                "Example 6": {
                  "summary": "Update default layout",
                  "description": "This example demonstrates how to update the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 7": {
                  "summary": "Remove default layout",
                  "description": "This example demonstrates how to remove the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": null
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a table",
                  "description": "This example demonstrates how to update all properties of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": true,
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "name": "MaterialUniverse (Updated)",
                    "guid": "787abac8-7ea9-45f1-b248-e217f959e994"
                  }
                },
                "Example 2": {
                  "summary": "Update 'IsHiddenFromBrowse'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromBrowse' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": true
                  }
                },
                "Example 3": {
                  "summary": "Update 'IsHiddenFromSearch'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromSearch' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromSearch": false
                  }
                },
                "Example 4": {
                  "summary": "Update default subset",
                  "description": "This example demonstrates how to update the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 5": {
                  "summary": "Remove default subset",
                  "description": "This example demonstrates how to remove the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": null
                  }
                },
                "Example 6": {
                  "summary": "Update default layout",
                  "description": "This example demonstrates how to update the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 7": {
                  "summary": "Remove default layout",
                  "description": "This example demonstrates how to remove the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": null
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a table",
                  "description": "This example demonstrates how to update all properties of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": true,
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "name": "MaterialUniverse (Updated)",
                    "guid": "787abac8-7ea9-45f1-b248-e217f959e994"
                  }
                },
                "Example 2": {
                  "summary": "Update 'IsHiddenFromBrowse'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromBrowse' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": true
                  }
                },
                "Example 3": {
                  "summary": "Update 'IsHiddenFromSearch'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromSearch' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromSearch": false
                  }
                },
                "Example 4": {
                  "summary": "Update default subset",
                  "description": "This example demonstrates how to update the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 5": {
                  "summary": "Remove default subset",
                  "description": "This example demonstrates how to remove the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": null
                  }
                },
                "Example 6": {
                  "summary": "Update default layout",
                  "description": "This example demonstrates how to update the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 7": {
                  "summary": "Remove default layout",
                  "description": "This example demonstrates how to remove the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": null
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateTable"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a table",
                  "description": "This example demonstrates how to update all properties of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": false,
                    "isHiddenFromSearch": true,
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000",
                    "name": "MaterialUniverse (Updated)",
                    "guid": "787abac8-7ea9-45f1-b248-e217f959e994"
                  }
                },
                "Example 2": {
                  "summary": "Update 'IsHiddenFromBrowse'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromBrowse' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromBrowse": true
                  }
                },
                "Example 3": {
                  "summary": "Update 'IsHiddenFromSearch'",
                  "description": "This example demonstrates how to update the 'IsHiddenFromSearch' property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "isHiddenFromSearch": false
                  }
                },
                "Example 4": {
                  "summary": "Update default subset",
                  "description": "This example demonstrates how to update the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 5": {
                  "summary": "Remove default subset",
                  "description": "This example demonstrates how to remove the default subset property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultSubsetGuid": null
                  }
                },
                "Example 6": {
                  "summary": "Update default layout",
                  "description": "This example demonstrates how to update the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": "00000b36-0009-4fff-8fff-dd92ffff0000"
                  }
                },
                "Example 7": {
                  "summary": "Remove default layout",
                  "description": "This example demonstrates how to remove the default layout property of the 'MaterialUniverse' table (guid = 0000dd92-0011-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "defaultLayoutGuid": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaTable"
                },
                "example": {
                  "defaultSubset": {
                    "name": "All substances",
                    "guid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9"
                  },
                  "subsets": [
                    {
                      "name": "All substances",
                      "guid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9"
                    }
                  ],
                  "defaultLayout": {
                    "name": "All substances",
                    "guid": "bdd30b01-f9bc-4024-a1de-55956c8f2e5c"
                  },
                  "layouts": [
                    {
                      "name": "All substances",
                      "guid": "bdd30b01-f9bc-4024-a1de-55956c8f2e5c"
                    }
                  ],
                  "versionState": "unreleased",
                  "databaseKey": "MI_TRAINING",
                  "isHiddenFromBrowse": false,
                  "isHiddenFromSearch": false,
                  "isVersioned": true,
                  "name": "Restricted Substances",
                  "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Delete a table.",
        "operationId": "DeleteTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request. Table in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaTableDeletionException"
                },
                "example": {
                  "message": "Cannot delete table with GUID 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'.",
                  "code": "deletion",
                  "errors": [
                    {
                      "message": "It is being used in one or more tabular attributes.",
                      "reason": "usage",
                      "referencedByType": "tabularAttribute",
                      "referencedBy": [
                        {
                          "type": "tabular",
                          "isHiddenFromSearchCriteria": false,
                          "isProtected": false,
                          "table": {
                            "guid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                          },
                          "name": "Restricted substances associated with this material",
                          "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}:release": {
      "post": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Releases the table.  Table must be version-controlled and unreleased.",
        "operationId": "ReleaseTable",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaTable"
                },
                "example": {
                  "defaultSubset": {
                    "name": "All substances",
                    "guid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9"
                  },
                  "subsets": [
                    {
                      "name": "All substances",
                      "guid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9"
                    }
                  ],
                  "defaultLayout": {
                    "name": "All substances",
                    "guid": "bdd30b01-f9bc-4024-a1de-55956c8f2e5c"
                  },
                  "layouts": [
                    {
                      "name": "All substances",
                      "guid": "bdd30b01-f9bc-4024-a1de-55956c8f2e5c"
                    }
                  ],
                  "versionState": "released",
                  "databaseKey": "MI_TRAINING",
                  "isHiddenFromBrowse": false,
                  "isHiddenFromSearch": false,
                  "isVersioned": true,
                  "name": "Restricted Substances",
                  "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Table is not unreleased, or table is not version controlled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaReleaseTableVersionControlException"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid version state.",
                    "description": "A table can only be released if it is currently unreleased.",
                    "value": {
                      "message": "Cannot release table with GUID 'fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f'.",
                      "code": "releaseTableVersionControl",
                      "errors": [
                        {
                          "message": "Invalid version state 'Released'.",
                          "reason": "invalidVersionState",
                          "versionState": "released"
                        }
                      ]
                    }
                  },
                  "Example 2": {
                    "summary": "Table is not version controlled.",
                    "value": {
                      "message": "Cannot release table with GUID '0000dd92-0011-4fff-8fff-0000ffff0000'.",
                      "code": "releaseTableVersionControl",
                      "errors": [
                        {
                          "message": "Table is not version controlled.",
                          "reason": "notVersioned"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}:enable-version-control": {
      "post": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Enable version control on the table.  This cannot be undone.\r\nAfter this method has been called all records and data in the table are in an unreleased state.\r\nThis means that read users will not be able to see any records unless they are subsequently released.",
        "operationId": "EnableVersionControl",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaTable"
                },
                "example": {
                  "defaultSubset": {
                    "name": "All substances",
                    "guid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9"
                  },
                  "subsets": [
                    {
                      "name": "All substances",
                      "guid": "883ab52b-01b6-4a15-a89a-2bfa17c8d0e9"
                    }
                  ],
                  "defaultLayout": {
                    "name": "All substances",
                    "guid": "bdd30b01-f9bc-4024-a1de-55956c8f2e5c"
                  },
                  "layouts": [
                    {
                      "name": "All substances",
                      "guid": "bdd30b01-f9bc-4024-a1de-55956c8f2e5c"
                    }
                  ],
                  "versionState": "unreleased",
                  "databaseKey": "MI_TRAINING",
                  "isHiddenFromBrowse": false,
                  "isHiddenFromSearch": false,
                  "isVersioned": true,
                  "name": "Restricted Substances",
                  "guid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Table is already versioned."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}:inbound-links": {
      "post": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Get all record link groups and tabular attributes pointing towards the table.",
        "operationId": "GetInboundLinks",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The link types to include in the response. If not provided, all link types are included.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GsaLinkAttributeType"
              }
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaLinksInfo"
                },
                "example": {
                  "links": [
                    {
                      "type": "recordLink",
                      "reverseName": "Training Exercise",
                      "reverseDisplayNames": {},
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0404f83b-64fb-47b1-8f3c-3388c513c9b0"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        }
                      },
                      "displayNames": {},
                      "name": "MaterialUniverse",
                      "guid": "00e07ec0-695e-4ca3-bf1d-3bbeef126949"
                    },
                    {
                      "type": "smartLink",
                      "reverseName": "Smart Link to Training Record",
                      "reverseDisplayNames": {
                        "en": "en-Smart Link to Training Record",
                        "fr": "fr-Smart Link to Training Record"
                      },
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0404f83b-64fb-47b1-8f3c-3388c513c9b0"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        }
                      },
                      "displayNames": {
                        "en": "en-Smart Link to MaterialUniverse",
                        "fr": "fr-Smart Link to MaterialUniverse"
                      },
                      "name": "Smart Link to MaterialUniverse",
                      "guid": "7bf0d4d5-6896-4a10-b7a1-d1fe4e533e66"
                    },
                    {
                      "type": "crossDatabaseLink",
                      "reverseName": "Cross database link group : MI Training MaterialUniverse - Second Training Database And Table",
                      "reverseDisplayNames": {},
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "3d900277-f4f5-4d3f-a2d1-ffd16c11bc17",
                          "databaseVersionGuid": "176de36d-fbf3-4150-ac80-3d79d01ace7b",
                          "tableGuid": "b44f3bf3-d1d8-4ba4-abe8-bc58599930c7"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        }
                      },
                      "displayNames": {},
                      "name": "Cross database link group : Second Training Database And Table - MI Training MaterialUniverse",
                      "guid": "c22a2a7f-0576-4104-a349-20c66e60bab9"
                    },
                    {
                      "type": "tabularAttribute",
                      "reverseName": "Environmental performances overview",
                      "reverseDisplayNames": {},
                      "linkInfo": {
                        "linkSource": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0404f83b-64fb-47b1-8f3c-3388c513c9b0"
                        },
                        "linkTarget": {
                          "databaseGuid": "43a43640-4919-428a-bac9-16efbc4ce6ed",
                          "databaseVersionGuid": "feead34a-cc0e-4070-bbc0-647654a25407",
                          "tableGuid": "0000dd92-0011-4fff-8fff-0000ffff0000"
                        }
                      },
                      "displayNames": {},
                      "name": "Environmental performances overview",
                      "guid": "2523a67a-6246-4c9e-8583-15b64d6290e5"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Database or table not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables:query": {
      "post": {
        "tags": [
          "Schema - Tables"
        ],
        "summary": "Gets tables for a given database, populates the requested properties.",
        "operationId": "QueryTables",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryTablesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all tables with custom properties",
                  "value": {
                    "properties": {
                      "isHiddenFromBrowse": true,
                      "isHiddenFromSearch": true,
                      "isVersioned": true,
                      "versionState": true,
                      "tableTypes": true,
                      "layouts": {
                        "name": true,
                        "guid": true
                      },
                      "defaultLayout": {
                        "name": true,
                        "guid": true
                      },
                      "subsets": {
                        "name": true,
                        "guid": true
                      },
                      "defaultSubset": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch table with name \"MaterialUniverse\"",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "MaterialUniverse"
                      ]
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryTablesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all tables with custom properties",
                  "value": {
                    "properties": {
                      "isHiddenFromBrowse": true,
                      "isHiddenFromSearch": true,
                      "isVersioned": true,
                      "versionState": true,
                      "tableTypes": true,
                      "layouts": {
                        "name": true,
                        "guid": true
                      },
                      "defaultLayout": {
                        "name": true,
                        "guid": true
                      },
                      "subsets": {
                        "name": true,
                        "guid": true
                      },
                      "defaultSubset": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch table with name \"MaterialUniverse\"",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "MaterialUniverse"
                      ]
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryTablesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all tables with custom properties",
                  "value": {
                    "properties": {
                      "isHiddenFromBrowse": true,
                      "isHiddenFromSearch": true,
                      "isVersioned": true,
                      "versionState": true,
                      "tableTypes": true,
                      "layouts": {
                        "name": true,
                        "guid": true
                      },
                      "defaultLayout": {
                        "name": true,
                        "guid": true
                      },
                      "subsets": {
                        "name": true,
                        "guid": true
                      },
                      "defaultSubset": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch table with name \"MaterialUniverse\"",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "MaterialUniverse"
                      ]
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaQueryTablesRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Fetch all tables with custom properties",
                  "value": {
                    "properties": {
                      "isHiddenFromBrowse": true,
                      "isHiddenFromSearch": true,
                      "isVersioned": true,
                      "versionState": true,
                      "tableTypes": true,
                      "layouts": {
                        "name": true,
                        "guid": true
                      },
                      "defaultLayout": {
                        "name": true,
                        "guid": true
                      },
                      "subsets": {
                        "name": true,
                        "guid": true
                      },
                      "defaultSubset": {
                        "name": true,
                        "guid": true
                      },
                      "displayNames": true,
                      "name": true,
                      "guid": true
                    }
                  }
                },
                "Example 2": {
                  "summary": "Fetch table with name \"MaterialUniverse\"",
                  "value": {
                    "properties": {
                      "name": true,
                      "guid": true
                    },
                    "filter": {
                      "name": [
                        "MaterialUniverse"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaQueryTablesInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/unit-conversions": {
      "post": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Gets all the equivalent units and their conversion factors for the specified source units,\r\nincluding any errors that occurred.",
        "operationId": "GetUnitConversions",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGetUnitConversionsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Convert units",
                  "description": "This example demonstrates how to request the unit conversions of Kelvin to Fahrenheit in the MI_Training database.",
                  "value": {
                    "sourceUnits": [
                      {
                        "sourceUnitSymbol": "K",
                        "targetUnitSymbol": "°F"
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGetUnitConversionsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Convert units",
                  "description": "This example demonstrates how to request the unit conversions of Kelvin to Fahrenheit in the MI_Training database.",
                  "value": {
                    "sourceUnits": [
                      {
                        "sourceUnitSymbol": "K",
                        "targetUnitSymbol": "°F"
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGetUnitConversionsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Convert units",
                  "description": "This example demonstrates how to request the unit conversions of Kelvin to Fahrenheit in the MI_Training database.",
                  "value": {
                    "sourceUnits": [
                      {
                        "sourceUnitSymbol": "K",
                        "targetUnitSymbol": "°F"
                      }
                    ]
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaGetUnitConversionsRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Convert units",
                  "description": "This example demonstrates how to request the unit conversions of Kelvin to Fahrenheit in the MI_Training database.",
                  "value": {
                    "sourceUnits": [
                      {
                        "sourceUnitSymbol": "K",
                        "targetUnitSymbol": "°F"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnitConversionsInfo"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}/equivalent-units": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get equivalent units (one per unit system)",
        "operationId": "GetUnitEquivalents",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnitEquivalentsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}/equivalent-units/unit-system/{unit-system-guid}/equivalent-unit/{equivalent-unit-guid}:set-equivalent-unit": {
      "post": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Set the equivalent unit for a given unit system",
        "operationId": "SetUnitEquivalent",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "unit-system-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "equivalent-unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Database, unit system, unit or equivalent unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get all units",
        "operationId": "GetUnits",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnitsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Create a new unit.",
        "operationId": "CreateUnit",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateUnit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateUnit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateUnit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateUnit"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get individual units",
        "operationId": "GetUnit",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnit"
                }
              }
            }
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Update unit.",
        "operationId": "UpdateUnit",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUnit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUnit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUnit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUnit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Delete unit.",
        "operationId": "DeleteUnit",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}:compatible-units": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get compatible units for unit",
        "operationId": "GetCompatibleUnits",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnitsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/units/{unit-guid}:usages": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get all usages of unit",
        "operationId": "GetUnitUsages",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnitUsage"
                }
              }
            }
          },
          "404": {
            "description": "Database or unit not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/unit-systems": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get all unit systems in the database",
        "operationId": "GetUnitSystems",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnitSystemsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Database not found"
          }
        }
      },
      "post": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Create a new unit system.",
        "operationId": "CreateUnitSystem",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Unit System",
                  "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                  "value": {
                    "name": "Hawaiian common",
                    "guid": "fd586da9-de43-4b41-838a-a9e228b91a6f"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Unit System",
                  "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                  "value": {
                    "name": "Hawaiian common",
                    "guid": "fd586da9-de43-4b41-838a-a9e228b91a6f"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Unit System",
                  "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                  "value": {
                    "name": "Hawaiian common",
                    "guid": "fd586da9-de43-4b41-838a-a9e228b91a6f"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaCreateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Unit System",
                  "description": "This example demonstrates how to create a new unit system for the MI_Training database. Only guid and name can be set as the rest of fields is backend generated and changes via equivalents endpoints.",
                  "value": {
                    "name": "Hawaiian common",
                    "guid": "fd586da9-de43-4b41-838a-a9e228b91a6f"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnitSystem"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/unit-systems/{unit-system-guid}": {
      "get": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Get an individual unit system",
        "operationId": "GetUnitSystem",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-system-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnitSystem"
                }
              }
            }
          },
          "404": {
            "description": "Database or unit system not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Update a unit system.",
        "operationId": "UpdateUnitSystem",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-system-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a unit system",
                  "description": "This example demonstrates how to update all properties of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)",
                    "guid": "9975b485-9f51-42cd-b04f-4f41fe07d49f"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "guid": "8a98312b-ccd8-4c04-84ed-1bf147dc2592"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a unit system",
                  "description": "This example demonstrates how to update all properties of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)",
                    "guid": "9975b485-9f51-42cd-b04f-4f41fe07d49f"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "guid": "8a98312b-ccd8-4c04-84ed-1bf147dc2592"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a unit system",
                  "description": "This example demonstrates how to update all properties of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)",
                    "guid": "9975b485-9f51-42cd-b04f-4f41fe07d49f"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "guid": "8a98312b-ccd8-4c04-84ed-1bf147dc2592"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateUnitSystem"
              },
              "examples": {
                "Example 1": {
                  "summary": "Everything for a unit system",
                  "description": "This example demonstrates how to update all properties of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)",
                    "guid": "9975b485-9f51-42cd-b04f-4f41fe07d49f"
                  }
                },
                "Example 2": {
                  "summary": "Update name",
                  "description": "This example demonstrates how to update the 'Name' property of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "name": "UK Imperial (Updated)"
                  }
                },
                "Example 3": {
                  "summary": "Update guid",
                  "description": "This example demonstrates how to update the 'Guid' of the 'UK Imperial' unit system (guid = 00000007-0014-4fff-8fff-0000ffff0000) from the MI_Training database.",
                  "value": {
                    "guid": "8a98312b-ccd8-4c04-84ed-1bf147dc2592"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaUnitSystem"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or unit system not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Schema - Units"
        ],
        "summary": "Delete a unit system.",
        "operationId": "DeleteUnitSystem",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "unit-system-guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Database or unit system not found"
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-identity}:search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Runs a search against a given database and table identity",
        "operationId": "DatabaseSearchInTableWithIdentity",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "015e4f31-5e7e-4508-a38c-5e5894bd40c6",
                        "8bc3bfbb-4507-40d2-9f83-9d476945e9c9"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "015e4f31-5e7e-4508-a38c-5e5894bd40c6",
                        "8bc3bfbb-4507-40d2-9f83-9d476945e9c9"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "015e4f31-5e7e-4508-a38c-5e5894bd40c6",
                        "8bc3bfbb-4507-40d2-9f83-9d476945e9c9"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "015e4f31-5e7e-4508-a38c-5e5894bd40c6",
                        "8bc3bfbb-4507-40d2-9f83-9d476945e9c9"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}/tables/{table-guid}:search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Runs a search against a given database and table guid",
        "operationId": "DatabaseSearchInTableWithGuid",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "table-guid",
            "in": "path",
            "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Tables/GetTables](#/Schema%20-%20Tables/GetTables) or [Schema - Tables/QueryTables](#/Schema%20-%20Tables/QueryTables)",
              "format": "uuid"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 31": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 32": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 36": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 38": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 39": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 40": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 41": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 42": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "d21de673-d654-46e7-b7b2-b05422c57482",
                        "e60197f7-6feb-461a-93c5-192f335da97f"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 43": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 44": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 45": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 46": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 47": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 48": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 49": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 50": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 51": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 52": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 53": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 54": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 55": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 56": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 57": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 58": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 59": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 60": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 31": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 32": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 36": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 38": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 39": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 40": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 41": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 42": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "d21de673-d654-46e7-b7b2-b05422c57482",
                        "e60197f7-6feb-461a-93c5-192f335da97f"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 43": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 44": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 45": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 46": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 47": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 48": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 49": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 50": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 51": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 52": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 53": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 54": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 55": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 56": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 57": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 58": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 59": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 60": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 31": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 32": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 36": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 38": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 39": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 40": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 41": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 42": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "d21de673-d654-46e7-b7b2-b05422c57482",
                        "e60197f7-6feb-461a-93c5-192f335da97f"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 43": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 44": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 45": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 46": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 47": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 48": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 49": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 50": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 51": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 52": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 53": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 54": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 55": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 56": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 57": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 58": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 59": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 60": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 31": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 32": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 33": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 34": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 35": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 36": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 37": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 38": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 39": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 40": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 41": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 42": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "d21de673-d654-46e7-b7b2-b05422c57482",
                        "e60197f7-6feb-461a-93c5-192f335da97f"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 43": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 44": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 45": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 46": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 47": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 48": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 49": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 50": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 51": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 52": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 53": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 54": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 55": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 56": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 57": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 58": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 59": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 60": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/databases/{database-key}:search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Runs a search against a given database",
        "operationId": "DatabaseSearch",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the header.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-Ansys-VC-Mode",
            "in": "header",
            "description": "The version control mode. If not provided, defaults to write mode if the user is allowed to see that. Can also be set in the query string.",
            "schema": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "ee4b73b4-b208-4038-8c25-0a0fa32cb069",
                        "4a0e661c-9148-467f-b006-008036e1f5c7"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Free text search in multiple tables by table GUID",
                  "description": "A free text search in MI_TRAINING tables 'MaterialUniverse' or 'Design Data' by table GUID.",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "property": "tableGuid",
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              "0000dd92-0011-4fff-8fff-0000ffff0000",
                              "0000b5e2-0011-4fff-8fff-0000ffff0000"
                            ],
                            "none": [],
                            "type": "discreteGuidValues"
                          },
                          "type": "recordProperty"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Free text search in multiple tables by table name",
                  "description": "A free text search in MI_TRAINING tables 'MaterialUniverse' or 'Design Data' by table name.",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [],
                          "any": [
                            {
                              "property": "tableName",
                              "innerCriterion": {
                                "value": "MaterialUniverse",
                                "textMatchBehavior": "contains",
                                "type": "shortText"
                              },
                              "type": "recordProperty"
                            },
                            {
                              "property": "tableName",
                              "innerCriterion": {
                                "value": "Design Data",
                                "textMatchBehavior": "contains",
                                "type": "shortText"
                              },
                              "type": "recordProperty"
                            }
                          ],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "ee4b73b4-b208-4038-8c25-0a0fa32cb069",
                        "4a0e661c-9148-467f-b006-008036e1f5c7"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Free text search in multiple tables by table GUID",
                  "description": "A free text search in MI_TRAINING tables 'MaterialUniverse' or 'Design Data' by table GUID.",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "property": "tableGuid",
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              "0000dd92-0011-4fff-8fff-0000ffff0000",
                              "0000b5e2-0011-4fff-8fff-0000ffff0000"
                            ],
                            "none": [],
                            "type": "discreteGuidValues"
                          },
                          "type": "recordProperty"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Free text search in multiple tables by table name",
                  "description": "A free text search in MI_TRAINING tables 'MaterialUniverse' or 'Design Data' by table name.",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [],
                          "any": [
                            {
                              "property": "tableName",
                              "innerCriterion": {
                                "value": "MaterialUniverse",
                                "textMatchBehavior": "contains",
                                "type": "shortText"
                              },
                              "type": "recordProperty"
                            },
                            {
                              "property": "tableName",
                              "innerCriterion": {
                                "value": "Design Data",
                                "textMatchBehavior": "contains",
                                "type": "shortText"
                              },
                              "type": "recordProperty"
                            }
                          ],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "ee4b73b4-b208-4038-8c25-0a0fa32cb069",
                        "4a0e661c-9148-467f-b006-008036e1f5c7"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Free text search in multiple tables by table GUID",
                  "description": "A free text search in MI_TRAINING tables 'MaterialUniverse' or 'Design Data' by table GUID.",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "property": "tableGuid",
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              "0000dd92-0011-4fff-8fff-0000ffff0000",
                              "0000b5e2-0011-4fff-8fff-0000ffff0000"
                            ],
                            "none": [],
                            "type": "discreteGuidValues"
                          },
                          "type": "recordProperty"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Free text search in multiple tables by table name",
                  "description": "A free text search in MI_TRAINING tables 'MaterialUniverse' or 'Design Data' by table name.",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [],
                          "any": [
                            {
                              "property": "tableName",
                              "innerCriterion": {
                                "value": "MaterialUniverse",
                                "textMatchBehavior": "contains",
                                "type": "shortText"
                              },
                              "type": "recordProperty"
                            },
                            {
                              "property": "tableName",
                              "innerCriterion": {
                                "value": "Design Data",
                                "textMatchBehavior": "contains",
                                "type": "shortText"
                              },
                              "type": "recordProperty"
                            }
                          ],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "ee4b73b4-b208-4038-8c25-0a0fa32cb069",
                        "4a0e661c-9148-467f-b006-008036e1f5c7"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 31": {
                  "summary": "Free text search in multiple tables by table GUID",
                  "description": "A free text search in MI_TRAINING tables 'MaterialUniverse' or 'Design Data' by table GUID.",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "property": "tableGuid",
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              "0000dd92-0011-4fff-8fff-0000ffff0000",
                              "0000b5e2-0011-4fff-8fff-0000ffff0000"
                            ],
                            "none": [],
                            "type": "discreteGuidValues"
                          },
                          "type": "recordProperty"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 32": {
                  "summary": "Free text search in multiple tables by table name",
                  "description": "A free text search in MI_TRAINING tables 'MaterialUniverse' or 'Design Data' by table name.",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [],
                          "any": [
                            {
                              "property": "tableName",
                              "innerCriterion": {
                                "value": "MaterialUniverse",
                                "textMatchBehavior": "contains",
                                "type": "shortText"
                              },
                              "type": "recordProperty"
                            },
                            {
                              "property": "tableName",
                              "innerCriterion": {
                                "value": "Design Data",
                                "textMatchBehavior": "contains",
                                "type": "shortText"
                              },
                              "type": "recordProperty"
                            }
                          ],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/integration-schemas/{schema}:search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Runs a search against the integration schema.",
        "operationId": "IntegrationSearch",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "b911c8f1-541e-4681-8770-3a8b90a05768",
                        "44df2b3d-2078-402b-8883-019494e2834a"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "b911c8f1-541e-4681-8770-3a8b90a05768",
                        "44df2b3d-2078-402b-8883-019494e2834a"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "b911c8f1-541e-4681-8770-3a8b90a05768",
                        "44df2b3d-2078-402b-8883-019494e2834a"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Free text search",
                  "description": "This example demonstrates how to create a new free text search with results sorted by relevance",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 2": {
                  "summary": "Free text search with boosted identities",
                  "description": "A free text search in MI_TRAINING in attributes with identities -4 (record name), 928 and 886 with results in the record name boosted by a factor of 20",
                  "value": {
                    "criterion": {
                      "value": "lead",
                      "attributes": {
                        "identities": [
                          -4,
                          928,
                          886
                        ],
                        "guids": [],
                        "filterOn": "specific"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "attributeIdentitiesToBoost": [
                        {
                          "identity": -4,
                          "boostFactor": 20.0
                        }
                      ],
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 3": {
                  "summary": "Free text search with excluded columns",
                  "description": "A free text search in MI_TRAINING with local tabular columns 'Comments' and 'Category' from 'Restricted substances that may be used in the manufacture of this material' tabular attribute from 'MaterialUniverse' table excluded from search.",
                  "value": {
                    "criterion": {
                      "value": "Intermediate",
                      "attributes": {
                        "filterOn": "none"
                      },
                      "localColumns": {
                        "identities": [],
                        "guids": [
                          "d5c215fe-6305-407b-a830-cc5ff14e4cf9",
                          "bfb3edea-be3e-4598-a711-6abb171a4569"
                        ],
                        "filterOn": "specific"
                      },
                      "type": "text"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 4": {
                  "summary": "Free text prefix search",
                  "description": "This example demonstrates how to create a new free text prefix search",
                  "value": {
                    "criterion": {
                      "prefix": "ste",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "none"
                      },
                      "type": "textPrefix"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 5": {
                  "summary": "Simple attribute search",
                  "description": "A simple search in MI_TRAINING on an integer 8965 attribute, with results sorted by that attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 1,
                        "lte": 10,
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "identity": 8965,
                        "attributeType": "integer",
                        "sortDirection": "ascending",
                        "type": "attribute"
                      }
                    ]
                  }
                },
                "Example 6": {
                  "summary": "Attribute exists search",
                  "description": "A search in MI_TRAINING on for records that have data for integer 8965 attribute",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "type": "integer"
                      },
                      "identity": 8965,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 7": {
                  "summary": "Multiple attribute search",
                  "description": "A search where results must match all three attribute criterion (the long text meta attribute exist, the date time attribute has a value in the given range, and the discrete attribute has one of the given values)",
                  "value": {
                    "criterion": {
                      "all": [
                        {
                          "innerCriterion": {
                            "type": "longText"
                          },
                          "identity": 5886,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "gte": "1990-01-01T00:00:00+00:00",
                            "lte": "1999-12-31T00:00:00+00:00",
                            "type": "dateTime"
                          },
                          "identity": 5872,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "all": [],
                            "any": [
                              1665,
                              1666
                            ],
                            "none": [],
                            "type": "discreteIdentityValues"
                          },
                          "identity": 5876,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "any": [],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 8": {
                  "summary": "Attribute prefix search",
                  "description": "This example demonstrates how to create a new prefix search in MI_TRAINING in the 'Restricted Substances' table on the short text attribute 'Chemical Name'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "prefix": "chr",
                        "type": "shortTextPrefix"
                      },
                      "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 9": {
                  "summary": "Nested boolean search",
                  "description": "A nested boolean search in MI_TRAINING where results must either match the free text search for 'steel', or both the integer attribute with identity 8965 exists and attribute with identity 928 is not applicable",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "value": "steel",
                          "attributes": {
                            "filterOn": "all"
                          },
                          "localColumns": {
                            "filterOn": "all"
                          },
                          "type": "text"
                        },
                        {
                          "all": [
                            {
                              "innerCriterion": {
                                "type": "integer"
                              },
                              "identity": 8965,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "exists",
                              "type": "attribute"
                            },
                            {
                              "identity": 928,
                              "isMetaAttribute": false,
                              "attributeCriterionType": "notApplicable",
                              "type": "attribute"
                            }
                          ],
                          "any": [],
                          "none": [],
                          "type": "boolean"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 10": {
                  "summary": "Record name search",
                  "description": "A search in MI_TRAINING for a value in either the (full) record name, the short (tree) name, or the breadcrumbs, sorted by (full) record name",
                  "value": {
                    "criterion": {
                      "all": [],
                      "any": [
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -4,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -9,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        {
                          "innerCriterion": {
                            "value": "steel",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "identity": -10,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        }
                      ],
                      "none": [],
                      "type": "boolean"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 11": {
                  "summary": "Record color search",
                  "description": "A search in MI_TRAINING for results where the record color is red, sorted by record name",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "all": [
                          "red"
                        ],
                        "any": [],
                        "none": [],
                        "textMatchBehavior": "contains",
                        "type": "discreteTextValues"
                      },
                      "identity": -6,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "property": "recordName",
                        "sortType": "natural",
                        "sortDirection": "descending",
                        "type": "recordProperty"
                      }
                    ]
                  }
                },
                "Example 12": {
                  "summary": "Record list search",
                  "description": "A search in MI_TRAINING for results where the record is in any of the given (favorites) list",
                  "value": {
                    "criterion": {
                      "recordListIdentifiers": [
                        "b911c8f1-541e-4681-8770-3a8b90a05768",
                        "44df2b3d-2078-402b-8883-019494e2834a"
                      ],
                      "type": "recordListMember"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 13": {
                  "summary": "Record reference search",
                  "description": "A search in MI_TRAINING for results where the record matches the record history GUID",
                  "value": {
                    "criterion": {
                      "databaseKey": "MI_Training",
                      "recordHistoryGuid": "dc1c65fc-25fa-4b86-9b5b-d3f25fa2a8ae",
                      "type": "reference"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 14": {
                  "summary": "Record ancestor search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorGuid": "00000024-000e-4fff-8fff-dd92ffff0000",
                      "directParentOnly": false,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 15": {
                  "summary": "Record ancestor history search",
                  "description": "A search in MI_TRAINING for results where the record is below the Glasses folder in the tree",
                  "value": {
                    "criterion": {
                      "ancestorHistoryGuid": "f92315e2-f836-4c2e-aba1-6d8a1a49e8a3",
                      "directParentOnly": false,
                      "type": "recordAncestorHistory"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 16": {
                  "summary": "Top level records search",
                  "description": "A search in MI_TRAINING for results where the record has no parent in the tree",
                  "value": {
                    "criterion": {
                      "directParentOnly": true,
                      "type": "recordAncestor"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 17": {
                  "summary": "Subset search",
                  "description": "A search in MI_TRAINING for results where the record is in the Material Universe 'Ceramics' subset",
                  "value": {
                    "criterion": {
                      "subsetGuid": "00000b36-0010-4fff-8fff-dd92ffff0000",
                      "type": "subset"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 18": {
                  "summary": "Tabular data link exists",
                  "description": "A tabular search in MI_TRAINING where there is a tabular link from the tabular attribute 'Restricted substances that may be associated with this material'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 19": {
                  "summary": "Tabular data local column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where the 'amount' is greater than 10% ('amount' is a local column).",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "localColumnCriterionType": "matches",
                          "type": "localColumn"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 20": {
                  "summary": "Tabular data linked attribute column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material', where there is a linked 'Restricted Substance' with an 'amount' greater than 10% ('amount' is a local column), and the 'Chemical name' attribute in the linked 'Restricted Substances' table contains 'Alkanes'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "localCriterion": {
                          "innerCriterion": {
                            "gte": 10.0,
                            "type": "range"
                          },
                          "guid": "1f1e5808-5a10-4b70-9ff6-8b832bf561d8",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "value": "Alkanes",
                            "textMatchBehavior": "contains",
                            "type": "shortText"
                          },
                          "guid": "5555b6f5-d492-4efd-bfe3-3e9faf79ab07",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 21": {
                  "summary": "Tabular data linked column column search",
                  "description": "A tabular search in MI_TRAINING on the tabular attribute 'Restricted substances that may be associated with this material' where there is a linked 'Restricted Substance', which has a linked 'Legislations and Lists' via the tabular attribute 'Legislations restricting its use', and the 'Legislation rating' is 'Banned with conditions'. Target attribute and table may both be omitted, but this could affect performance.",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableGuid": "fa7aff0f-cac8-4c1d-be1f-d3b83f0ed74f",
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "targetAttributeGuid": "446d4fc3-f902-4875-9e48-6df9a691c2b0",
                        "innerCriterion": {
                          "innerCriterion": {
                            "targetTableGuid": "08a1f735-9b37-49bc-96b3-e46e070f6c17",
                            "targetDatabaseKey": "MI_TRAINING",
                            "linkDatumType": "tabularAttribute",
                            "indirectLinks": "fromLinkDefinition",
                            "searchInReversedDirection": false,
                            "targetAttributeGuid": "77e38bc0-d8ab-484d-a84c-a9ffec81afab",
                            "innerCriterion": {
                              "innerCriterion": {
                                "value": "Banned with conditions",
                                "textMatchBehavior": "exactMatch",
                                "type": "discreteText"
                              },
                              "guid": "5d7b7b7e-b666-4279-9964-2f28c4123c45",
                              "isMetaAttribute": false,
                              "attributeCriterionType": "matches",
                              "type": "attribute"
                            },
                            "localRowsBehavior": "AllRows",
                            "type": "link"
                          },
                          "guid": "c33cecb7-f3d2-4415-9de6-1ed4e5b2abdc",
                          "isMetaAttribute": false,
                          "attributeCriterionType": "matches",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "6e5d7d7b-be80-4e81-b013-0a19db19305f",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 22": {
                  "summary": "Tabular linking value search",
                  "description": "A tabular search in MI_TRAINING where the tabular linking value for the tabular attribute 'Restricted substances associated with this material' contains '85535'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "linkDatumType": "tabularAttribute",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "values": [
                            "85535"
                          ],
                          "linkingValueMatchBehavior": "FreeTextMatchingRows",
                          "type": "tabularLinkingValue"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "guid": "51e51832-0bcc-4fe0-bb95-ddd6917dc554",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 23": {
                  "summary": "Record link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where record link to table with identity 59 exists where the target has a populated picture attribute with identity 8563. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "picture"
                          },
                          "identity": 8563,
                          "isMetaAttribute": false,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 24": {
                  "summary": "Record link exists search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a record link to table with identity 59 exists. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 59,
                        "targetDatabaseKey": "MI_TRAINING",
                        "linkDatumType": "recordLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "type": "link"
                      },
                      "identity": 101,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "exists",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 25": {
                  "summary": "Cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a cross database link to table with identity 56 in Target_Database exists and the linked record has a populated float functional meta attribute with identity 33. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 56,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": false,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "floatFunctional"
                          },
                          "identity": 33,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 45,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 26": {
                  "summary": "Reverse cross database link search",
                  "description": "A search in MI_TRAINING from Metals Pedigree table ($ad27baf0-42e9-4136-bc96-9dbbf116e265) where a reverse cross database link from table 39 in Target_Database exists and the linked record has a populated file attribute with identity 87. Note that link searches must be made against a specific table",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "targetTableIdentity": 39,
                        "targetDatabaseKey": "Target_Database",
                        "linkDatumType": "crossDatabaseLink",
                        "indirectLinks": "fromLinkDefinition",
                        "searchInReversedDirection": true,
                        "innerCriterion": {
                          "innerCriterion": {
                            "type": "file"
                          },
                          "identity": 87,
                          "isMetaAttribute": true,
                          "attributeCriterionType": "exists",
                          "type": "attribute"
                        },
                        "localRowsBehavior": "AllRows",
                        "type": "link"
                      },
                      "identity": 65,
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 27": {
                  "summary": "Paginated search",
                  "description": "A free text search where only the first 5 results will be returned initially, and the results have a sliding expiration time of 10 minutes",
                  "value": {
                    "criterion": {
                      "value": "steel",
                      "attributes": {
                        "filterOn": "all"
                      },
                      "localColumns": {
                        "filterOn": "all"
                      },
                      "type": "text"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ],
                    "pagingOptions": {
                      "pageSize": 5,
                      "keepAliveInMinutes": 10,
                      "pageNumber": 1
                    }
                  }
                },
                "Example 28": {
                  "summary": "Float functional graph search",
                  "description": "A search on the float functional attribute 'Young's modulus with temperature' for records that have at least one series, use the Temperature parameter (00000001-000a-4fff-8fff-0000ffff0000) on the X-Axis and are not marked as 'Show as table'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "xAxisParameterGuid": "00000001-000a-4fff-8fff-0000ffff0000",
                        "numberOfSeriesGte": 1,
                        "showAsTable": false,
                        "type": "floatFunctionalGraph"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": [
                      {
                        "sortDirection": "ascending",
                        "type": "relevance"
                      }
                    ]
                  }
                },
                "Example 29": {
                  "summary": "Float functional search by attribute value",
                  "description": "A search in MI_TRAINING on 'Young's modulus with temperature' for records that have a Young's Modulus of between 75 and 80 GPa at a temperature of 100°C",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "gte": 75.0,
                        "lte": 80.0,
                        "constraints": [
                          {
                            "gte": 100.0,
                            "lte": 100.0,
                            "parameter": {
                              "guid": "00000001-000a-4fff-8fff-0000ffff0000"
                            },
                            "type": "numeric"
                          }
                        ],
                        "type": "floatFunctionalData"
                      },
                      "guid": "00000001-0001-4fff-8fff-dd92ffff0000",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                },
                "Example 30": {
                  "summary": "Discrete functional search",
                  "description": "A search in MI_TRAINING on 'Environmental Resistance' for records that have a resistance of 'Good' or 'Very good' in the Chemical Environment of 'Fresh Water'",
                  "value": {
                    "criterion": {
                      "innerCriterion": {
                        "anyGuids": [
                          "00000032-0007-4fff-8fff-000cffff0000",
                          "00000033-0007-4fff-8fff-000cffff0000"
                        ],
                        "constraints": [
                          {
                            "any": [
                              "Fresh water"
                            ],
                            "parameter": {
                              "guid": "b7cee874-160f-439a-a784-b887c516b2d5"
                            },
                            "type": "discreteName"
                          }
                        ],
                        "type": "discreteFunctionalValues"
                      },
                      "guid": "0cb16afc-c567-4e20-943c-9639b30fee62",
                      "isMetaAttribute": false,
                      "attributeCriterionType": "matches",
                      "type": "attribute"
                    },
                    "sortCriteria": []
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Schema not found"
          },
          "422": {
            "description": "MI not in attribute-based access control mode"
          }
        }
      }
    },
    "/v1alpha/searches/{searchIdentifier}/results": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Returns search results by identifier",
        "operationId": "GetSearchResults",
        "parameters": [
          {
            "name": "searchIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchResultsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchResultsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchResultsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSearchResultsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Search not found"
          }
        }
      }
    },
    "/v1alpha/searches/{searchIdentifier}": {
      "delete": {
        "tags": [
          "Search"
        ],
        "summary": "Delete search results by identifier",
        "operationId": "DeleteSearchResults",
        "parameters": [
          {
            "name": "searchIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Search not found"
          }
        }
      }
    },
    "/v1alpha/serverManager/email": {
      "get": {
        "tags": [
          "Server Manager"
        ],
        "operationId": "GetSmtpProperties",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSmtpProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSmtpProperties"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSmtpProperties"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Server Manager"
        ],
        "operationId": "Put",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSmtpProperties"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSmtpProperties"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSmtpProperties"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaSmtpProperties"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1alpha/serverManager/supportDetails": {
      "get": {
        "tags": [
          "Server Manager"
        ],
        "summary": "Returns the support details for the server, including support name, email, website, telephone, and licensing contact details.",
        "operationId": "GetSupportDetails",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSupportProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSupportProperties"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSupportProperties"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a system administrator."
          }
        }
      },
      "patch": {
        "tags": [
          "Server Manager"
        ],
        "summary": "Updates the support details. Explicitly setting a property to null will remove that property.\r\nProperties not specified will not be changed.",
        "operationId": "UpdateSupportDetails",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateSupportProperties"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateSupportProperties"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateSupportProperties"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GsaUpdateSupportProperties"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSupportProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSupportProperties"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSupportProperties"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden if the user is not a system administrator."
          }
        }
      }
    },
    "/v1alpha/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Check whether the API is available",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1alpha/status/databases": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Returns status information for all databases",
        "operationId": "GetStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaDatabaseStatusInformation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaDatabaseStatusInformation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GsaDatabaseStatusInformation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/status/databases/{database-key}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Returns status information for a given database",
        "operationId": "GetDatabaseStatus",
        "parameters": [
          {
            "name": "database-key",
            "in": "path",
            "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "See [Schema - Databases/GetAllDatabases](#/Schema%20-%20Databases/GetAllDatabases)",
              "example": "MI_TRAINING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabaseStatusInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabaseStatusInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaDatabaseStatusInformation"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/status/search-cluster": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Returns disk status information for the search cluster",
        "operationId": "GetSearchClusterStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchClusterStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchClusterStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaSearchClusterStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1alpha/status/orphanedSearchIndexes": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Returns information about orphaned search indexes",
        "operationId": "GetOrphanedSearchIndexes",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GsaOrphanedSearchIndexesInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaOrphanedSearchIndexesInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GsaOrphanedSearchIndexesInfo"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GrantaMIRecordPropertyFakeAttributeIdentities": {
        "enum": [
          {
            "name": "Breadcrumbs",
            "identity": -10,
            "guid": "00000007-0000-0000-0000-000000000000"
          },
          {
            "name": "TreeName",
            "identity": -9,
            "guid": "00000006-0000-0000-0000-000000000000"
          },
          {
            "name": "TableIdentity",
            "identity": -8,
            "guid": "00000005-0000-0000-0000-000000000000"
          },
          {
            "name": "TableName",
            "identity": -7,
            "guid": "00000004-0000-0000-0000-000000000000"
          },
          {
            "name": "RecordColor",
            "identity": -6,
            "guid": "00000003-0000-0000-0000-000000000000"
          },
          {
            "name": "DatabaseKey",
            "identity": -5,
            "guid": "00000002-0000-0000-0000-000000000000"
          },
          {
            "name": "RecordName",
            "identity": -4,
            "guid": "00000001-0000-0000-0000-000000000000"
          },
          {
            "name": "RecordModifiedBy",
            "identity": -3,
            "guid": "00000009-0000-0000-0000-000000000000"
          },
          {
            "name": "RecordCreatedBy",
            "identity": -2,
            "guid": "00000008-0000-0000-0000-000000000000"
          }
        ],
        "type": "string",
        "description": "Values that can be used in place of an attribute identity to perform a search, aggregation or export of a record property. RecordCreatedBy and RecordModifiedBy cannot be used in free text search or aggregation.",
        "format": "int32"
      },
      "GsaAboutAttributeCannotBeMetaAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Cannot have a meta-attribute as an 'About attribute'.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'aboutAttributeCannotBeMeta'",
        "x-discriminator-value": "aboutAttributeCannotBeMeta",
        "x-discriminator-name": "reason"
      },
      "GsaActivityLogApplicationNameFilter": {
        "required": [
          "applicationNameToMatch"
        ],
        "type": "object",
        "properties": {
          "applicationNameToMatch": {
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/GsaActivityLogMatchType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nmatchType: Defines how the application name should be matched. If not specified, defaults to exactMatchCaseInsensitive."
      },
      "GsaActivityLogApplicationNamesCollectionFilter": {
        "required": [
          "applicationNamesToMatch"
        ],
        "type": "object",
        "properties": {
          "applicationNamesToMatch": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "collectionMatchType": {
            "$ref": "#/components/schemas/GsaActivityLogCollectionMatchType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\ncollectionMatchType: Defines how the application names collection should be matched. If not specified, defaults to collectionExactMatch."
      },
      "GsaActivityLogCollectionMatchType": {
        "enum": [
          "collectionExactMatch",
          "collectionContains"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>collectionExactMatch</b>: Collection matches exactly.</li>\r\n<li><b>collectionContains</b>: The collection contains this subset.</li>\r\n</ul>\r\n"
      },
      "GsaActivityLogDatabaseKeyFilter": {
        "required": [
          "databaseKeyToMatch"
        ],
        "type": "object",
        "properties": {
          "databaseKeyToMatch": {
            "type": "string",
            "nullable": true
          },
          "matchType": {
            "$ref": "#/components/schemas/GsaActivityLogMatchType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nmatchType: Defines how the database key should be matched. If not specified, defaults to exactMatchCaseInsensitive."
      },
      "GsaActivityLogDateFilter": {
        "type": "object",
        "properties": {
          "dateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateFromInclusive": {
            "type": "boolean"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateToInclusive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaActivityLogEntriesFilter": {
        "type": "object",
        "properties": {
          "dateFilter": {
            "$ref": "#/components/schemas/GsaActivityLogDateFilter"
          },
          "usernameFilter": {
            "$ref": "#/components/schemas/GsaActivityLogUsernameFilter"
          },
          "applicationNamesCollectionFilter": {
            "$ref": "#/components/schemas/GsaActivityLogApplicationNamesCollectionFilter"
          },
          "applicationNameFilter": {
            "$ref": "#/components/schemas/GsaActivityLogApplicationNameFilter"
          },
          "databaseKeyFilter": {
            "$ref": "#/components/schemas/GsaActivityLogDatabaseKeyFilter"
          },
          "usageModeFilter": {
            "$ref": "#/components/schemas/GsaActivityLogUsageModeFilter"
          }
        },
        "additionalProperties": false
      },
      "GsaActivityLogEntriesInfo": {
        "required": [
          "entries",
          "links"
        ],
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaActivityLogEntry"
            }
          },
          "links": {
            "$ref": "#/components/schemas/GsaPaginationLinks"
          }
        },
        "additionalProperties": false
      },
      "GsaActivityLogEntry": {
        "required": [
          "applicationNames",
          "date",
          "usageMode",
          "username"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          },
          "applicationNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "databaseKey": {
            "type": "string",
            "nullable": true
          },
          "usageMode": {
            "$ref": "#/components/schemas/GsaActivityLogUsageMode"
          }
        },
        "additionalProperties": false
      },
      "GsaActivityLogMatchType": {
        "enum": [
          "exactMatchCaseInsensitive",
          "containsCaseInsensitive"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>exactMatchCaseInsensitive</b>: Exact match case-insensitive.</li>\r\n<li><b>containsCaseInsensitive</b>: Contains case-insensitive.</li>\r\n</ul>\r\n"
      },
      "GsaActivityLogUsageMode": {
        "enum": [
          "view",
          "edit"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>view</b>: View.</li>\r\n<li><b>edit</b>: Edit.</li>\r\n</ul>\r\n"
      },
      "GsaActivityLogUsageModeFilter": {
        "required": [
          "usageModeToMatch"
        ],
        "type": "object",
        "properties": {
          "usageModeToMatch": {
            "$ref": "#/components/schemas/GsaActivityLogUsageMode"
          }
        },
        "additionalProperties": false
      },
      "GsaActivityLogUsernameFilter": {
        "required": [
          "usernameToMatch"
        ],
        "type": "object",
        "properties": {
          "usernameToMatch": {
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/GsaActivityLogMatchType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nmatchType: Defines how the username should be matched. If not specified, defaults to exactMatchCaseInsensitive."
      },
      "GsaAddDatabase": {
        "required": [
          "connectionDetails",
          "databaseKey"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string"
          },
          "connectionDetails": {
            "$ref": "#/components/schemas/GsaConnectionDetails"
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "(Optional) True if the database should be set to read only after adding",
            "nullable": true
          },
          "loadingOrder": {
            "type": "integer",
            "description": "(Optional) The MI loading order for the database",
            "format": "int32",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "(Optional) The language of the database, used when indexing the database. Currently \"english\" is the only supported value.",
            "nullable": true
          },
          "versionGuid": {
            "type": "string",
            "description": "(Optional) Overrides the database version guid stored in the database. This must be unique across all the loaded databases.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nconnectionDetails: The SQL server connection details for the database"
      },
      "GsaAddDatabaseIssueType": {
        "enum": [
          "schemaTooNew",
          "schemaTooOld",
          "duplicateGuid",
          "duplicateVersionGuid",
          "duplicateKey",
          "invalidKey",
          "unableToConnect",
          "duplicateDatabase"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>schemaTooNew</b>: The specified database schema is too new, you must upgrade MI:Server before this database can be used.</li>\r\n<li><b>schemaTooOld</b>: The specified database schema is too old and must be upgraded.</li>\r\n<li><b>duplicateGuid</b>: Duplicate Guid.</li>\r\n<li><b>duplicateVersionGuid</b>: Duplicate version Guid.</li>\r\n<li><b>duplicateKey</b>: Duplicate database key.</li>\r\n<li><b>invalidKey</b>: Invalid database key.</li>\r\n<li><b>unableToConnect</b>: Unable to connect to database.</li>\r\n<li><b>duplicateDatabase</b>: Duplicate database - this database has already been added to MI.</li>\r\n</ul>\r\n"
      },
      "GsaAddDatabaseValidationIssue": {
        "required": [
          "IssueType"
        ],
        "type": "object",
        "properties": {
          "IssueType": {
            "$ref": "#/components/schemas/GsaAddDatabaseIssueType"
          },
          "additionalInformation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDuplicateGuidAddDatabaseValidationIssue\r\n * GsaDuplicateVersionGuidAddDatabaseValidationIssue\r\n * GsaDuplicateKeyAddDatabaseValidationIssue\r\n * GsaInvalidKeyAddDatabaseValidationIssue\r\n * GsaSchemaTooNewAddDatabaseValidationIssue\r\n * GsaSchemaTooOldAddDatabaseValidationIssue\r\n * GsaUnableToConnectAddDatabaseValidationIssue\r\n * GsaDuplicateDatabaseAddDatabaseValidationIssue",
        "discriminator": {
          "propertyName": "IssueType",
          "mapping": {
            "duplicateGuid": "#/components/schemas/GsaDuplicateGuidAddDatabaseValidationIssue",
            "duplicateVersionGuid": "#/components/schemas/GsaDuplicateVersionGuidAddDatabaseValidationIssue",
            "duplicateKey": "#/components/schemas/GsaDuplicateKeyAddDatabaseValidationIssue",
            "invalidKey": "#/components/schemas/GsaInvalidKeyAddDatabaseValidationIssue",
            "schemaTooNew": "#/components/schemas/GsaSchemaTooNewAddDatabaseValidationIssue",
            "schemaTooOld": "#/components/schemas/GsaSchemaTooOldAddDatabaseValidationIssue",
            "unableToConnect": "#/components/schemas/GsaUnableToConnectAddDatabaseValidationIssue",
            "duplicateDatabase": "#/components/schemas/GsaDuplicateDatabaseAddDatabaseValidationIssue"
          }
        }
      },
      "GsaAddDatabaseValidationResult": {
        "type": "object",
        "properties": {
          "addDatabaseIssues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaAddDatabaseValidationIssue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaAddRecordHistoryToSubset": {
        "required": [
          "recordHistoryGuid"
        ],
        "type": "object",
        "properties": {
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recurseChildren": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaAggregation": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAggregationType"
          }
        },
        "additionalProperties": false,
        "description": "The results of aggregation.\r\n\r\nThis is one of: \r\n * GsaAttributeAggregation\r\n * GsaFreeTextAggregation",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "attribute": "#/components/schemas/GsaAttributeAggregation",
            "text": "#/components/schemas/GsaFreeTextAggregation"
          }
        }
      },
      "GsaAggregationCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAggregationType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaAttributeAggregationCriterion\r\n * GsaFreeTextAggregationCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "attribute": "#/components/schemas/GsaAttributeAggregationCriterion",
            "text": "#/components/schemas/GsaFreeTextAggregationCriterion"
          }
        }
      },
      "GsaAggregationDatum": {
        "required": [
          "datumType"
        ],
        "type": "object",
        "properties": {
          "datumType": {
            "$ref": "#/components/schemas/GsaAggregationDatumType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaIntegerAggregation\r\n * GsaPointAggregation\r\n * GsaRangeAggregation\r\n * GsaIntegerHistogramAggregation\r\n * GsaPointHistogramAggregation\r\n * GsaRangeHistogramAggregation\r\n * GsaDateTimeAggregation\r\n * GsaDateTimeHistogramAggregation\r\n * GsaShortTextAggregation\r\n * GsaDiscreteTextAggregation\r\n * GsaLinkAggregation\r\n * GsaLogicalAggregation\r\n * GsaFloatFunctionalAggregation",
        "discriminator": {
          "propertyName": "datumType",
          "mapping": {
            "integer": "#/components/schemas/GsaIntegerAggregation",
            "point": "#/components/schemas/GsaPointAggregation",
            "range": "#/components/schemas/GsaRangeAggregation",
            "integerHistogram": "#/components/schemas/GsaIntegerHistogramAggregation",
            "pointHistogram": "#/components/schemas/GsaPointHistogramAggregation",
            "rangeHistogram": "#/components/schemas/GsaRangeHistogramAggregation",
            "dateTime": "#/components/schemas/GsaDateTimeAggregation",
            "dateTimeHistogram": "#/components/schemas/GsaDateTimeHistogramAggregation",
            "shortText": "#/components/schemas/GsaShortTextAggregation",
            "discreteText": "#/components/schemas/GsaDiscreteTextAggregation",
            "link": "#/components/schemas/GsaLinkAggregation",
            "logical": "#/components/schemas/GsaLogicalAggregation",
            "floatFunctionalGraph": "#/components/schemas/GsaFloatFunctionalAggregation"
          }
        }
      },
      "GsaAggregationDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterionType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDateTimeAggregationDatumCriterion\r\n * GsaDateTimeHistogramAggregationDatumCriterion\r\n * GsaDateTimeFixedWidthHistogramAggregationDatumCriterion\r\n * GsaDateTimeFixedCalendarWidthHistogramAggregationDatumCriterion\r\n * GsaDiscreteTextAggregationDatumCriterion\r\n * GsaIntegerAggregationDatumCriterion\r\n * GsaPointAggregationDatumCriterion\r\n * GsaRangeAggregationDatumCriterion\r\n * GsaIntegerHistogramAggregationDatumCriterion\r\n * GsaIntegerFixedWidthHistogramAggregationDatumCriterion\r\n * GsaPointHistogramAggregationDatumCriterion\r\n * GsaPointFixedWidthHistogramAggregationDatumCriterion\r\n * GsaRangeHistogramAggregationDatumCriterion\r\n * GsaRangeFixedWidthHistogramAggregationDatumCriterion\r\n * GsaShortTextAggregationDatumCriterion\r\n * GsaLinkAggregationDatumCriterion\r\n * GsaLogicalAggregationDatumCriterion\r\n * GsaFloatFunctionalAggregationDatumCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "dateTime": "#/components/schemas/GsaDateTimeAggregationDatumCriterion",
            "dateTimeHistogram": "#/components/schemas/GsaDateTimeHistogramAggregationDatumCriterion",
            "dateTimeFixedWidthHistogram": "#/components/schemas/GsaDateTimeFixedWidthHistogramAggregationDatumCriterion",
            "dateTimeFixedCalendarWidthHistogram": "#/components/schemas/GsaDateTimeFixedCalendarWidthHistogramAggregationDatumCriterion",
            "discreteText": "#/components/schemas/GsaDiscreteTextAggregationDatumCriterion",
            "integer": "#/components/schemas/GsaIntegerAggregationDatumCriterion",
            "point": "#/components/schemas/GsaPointAggregationDatumCriterion",
            "range": "#/components/schemas/GsaRangeAggregationDatumCriterion",
            "integerHistogram": "#/components/schemas/GsaIntegerHistogramAggregationDatumCriterion",
            "integerFixedWidthHistogram": "#/components/schemas/GsaIntegerFixedWidthHistogramAggregationDatumCriterion",
            "pointHistogram": "#/components/schemas/GsaPointHistogramAggregationDatumCriterion",
            "pointFixedWidthHistogram": "#/components/schemas/GsaPointFixedWidthHistogramAggregationDatumCriterion",
            "rangeHistogram": "#/components/schemas/GsaRangeHistogramAggregationDatumCriterion",
            "rangeFixedWidthHistogram": "#/components/schemas/GsaRangeFixedWidthHistogramAggregationDatumCriterion",
            "shortText": "#/components/schemas/GsaShortTextAggregationDatumCriterion",
            "link": "#/components/schemas/GsaLinkAggregationDatumCriterion",
            "logical": "#/components/schemas/GsaLogicalAggregationDatumCriterion",
            "floatFunctionalGraph": "#/components/schemas/GsaFloatFunctionalAggregationDatumCriterion"
          }
        }
      },
      "GsaAggregationDatumCriterionType": {
        "enum": [
          "dateTime",
          "dateTimeHistogram",
          "dateTimeFixedWidthHistogram",
          "dateTimeFixedCalendarWidthHistogram",
          "discreteText",
          "integer",
          "integerHistogram",
          "integerFixedWidthHistogram",
          "point",
          "pointHistogram",
          "pointFixedWidthHistogram",
          "range",
          "rangeHistogram",
          "rangeFixedWidthHistogram",
          "shortText",
          "link",
          "logical",
          "floatFunctionalGraph"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>dateTime</b>: Aggregation datum criterion date time type</li>\r\n<li><b>dateTimeHistogram</b>: Aggregation datum criterion date time histogram type</li>\r\n<li><b>dateTimeFixedWidthHistogram</b>: Aggregation datum criterion date time fixed width histogram type</li>\r\n<li><b>dateTimeFixedCalendarWidthHistogram</b>: Aggregation datum criterion date time fixed calendar width histogram type</li>\r\n<li><b>discreteText</b>: Aggregation datum criterion discrete type</li>\r\n<li><b>integer</b>: Aggregation datum criterion integer type</li>\r\n<li><b>integerHistogram</b>: Aggregation datum criterion integer histogram type</li>\r\n<li><b>integerFixedWidthHistogram</b>: Aggregation datum criterion integer fixed width histogram type</li>\r\n<li><b>point</b>: Aggregation datum criterion point type</li>\r\n<li><b>pointHistogram</b>: Aggregation datum criterion point histogram type</li>\r\n<li><b>pointFixedWidthHistogram</b>: Aggregation datum criterion point fixed width histogram type</li>\r\n<li><b>range</b>: Aggregation datum criterion range type</li>\r\n<li><b>rangeHistogram</b>: Aggregation datum criterion range histogram type</li>\r\n<li><b>rangeFixedWidthHistogram</b>: Aggregation datum criterion range fixed width histogram type</li>\r\n<li><b>shortText</b>: Aggregation datum criterion short text type</li>\r\n<li><b>link</b>: Aggregation datum criterion link type</li>\r\n<li><b>logical</b>: Aggregation datum criterion logical type</li>\r\n<li><b>floatFunctionalGraph</b>: Aggregation datum criterion float functional graph type</li>\r\n</ul>\r\n"
      },
      "GsaAggregationDatumExistsCriterion": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          }
        },
        "additionalProperties": false,
        "description": "Inner criterion of an attribute search criterion for when the only bit of information about the datum that we want to convey is its type"
      },
      "GsaAggregationDatumType": {
        "enum": [
          "integer",
          "point",
          "range",
          "integerHistogram",
          "pointHistogram",
          "rangeHistogram",
          "dateTime",
          "dateTimeHistogram",
          "shortText",
          "discreteText",
          "link",
          "logical",
          "floatFunctionalGraph"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>integer</b>: Aggregation datum integer type</li>\r\n<li><b>point</b>: Aggregation datum point type</li>\r\n<li><b>range</b>: Aggregation datum range type</li>\r\n<li><b>integerHistogram</b>: Aggregation datum integer histogram type</li>\r\n<li><b>pointHistogram</b>: Aggregation datum point histogram type</li>\r\n<li><b>rangeHistogram</b>: Aggregation datum range histogram type</li>\r\n<li><b>dateTime</b>: Aggregation datum date time type</li>\r\n<li><b>dateTimeHistogram</b>: Aggregation datum date time histogram type</li>\r\n<li><b>shortText</b>: Aggregation datum short text type</li>\r\n<li><b>discreteText</b>: Aggregation datum discrete text type</li>\r\n<li><b>link</b>: Aggregation datum link type</li>\r\n<li><b>logical</b>: Aggregation datum logical type</li>\r\n<li><b>floatFunctionalGraph</b>: Aggregation datum float functional graph type</li>\r\n</ul>\r\n"
      },
      "GsaAggregationType": {
        "enum": [
          "attribute",
          "text"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>attribute</b>: Aggregation attribute type</li>\r\n<li><b>text</b>: Aggregation text type</li>\r\n</ul>\r\n"
      },
      "GsaAggregationsRequest": {
        "type": "object",
        "properties": {
          "criterion": {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          "aggregationCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaAggregationCriterion"
            },
            "description": "The aggregations you wish to perform.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A request for aggregation information from a particular scope. The type of information\r\nrequested can vary: for example, for attributes, it could be a request for minimum/maximum\r\nvalues, or for common text terms.\r\n            \r\nAn aggregation request is associated with a particular scope (database, table, integration\r\nschema, etc) based off the API invoked; however, the scope can be further narrowed down by\r\nproviding a criterion in the aggregation request. Only data from records matching that\r\ncriterion will be considered when aggregating data.\r\n            \r\nNote that only some types of criterion will be supported: in particular, criteria that involve\r\n\"matches\" criteria against functional attributes, or link-attribute criteria against record\r\nlink groups, are not eligible to be used as an aggregation query criterion.\r\n\r\ncriterion: An optional query criterion, to be used to filter the collection of records to aggregate over."
      },
      "GsaAggregationsResponse": {
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaAggregation"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaAllProfilesInfo": {
        "type": "object",
        "properties": {
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimProfile"
            },
            "nullable": true
          },
          "defaultProfile": {
            "$ref": "#/components/schemas/GsaSlimProfile"
          }
        },
        "additionalProperties": false,
        "description": "Object containing list of all profiles as well as default profile if it is set and can be found within the list.\r\n\r\ndefaultProfile: Profile used by default in MI Applications. Null if no default profile is chosen or if default profile is not visible for current user."
      },
      "GsaAllValuesSpecifier": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaValueSpecifier"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Specifies no filtering.\r\n\r\nThis extends: GsaValueSpecifier\r\n\r\nThe value of discriminator property ('filterOn') must be equal to 'all'",
        "x-discriminator-value": "all",
        "x-discriminator-name": "filterOn"
      },
      "GsaAnonymousExpressionsMustAllowAllCompatibleMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Anonymous expressions cannot be allowed without allowing all compatible expressions.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'anonymousExpressionsMustAllowAllCompatible'",
        "x-discriminator-value": "anonymousExpressionsMustAllowAllCompatible",
        "x-discriminator-name": "reason"
      },
      "GsaAppNameLicenseCheckoutRequest": {
        "type": "object",
        "properties": {
          "appNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaAppNameLicenseCheckoutResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaAppNameLicenseCheckoutResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaAppNameLicenseCheckoutResult": {
        "type": "object",
        "properties": {
          "appName": {
            "type": "string",
            "nullable": true
          },
          "licenseStateOk": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaAppendDiscreteValues": {
        "required": [
          "discreteValues"
        ],
        "type": "object",
        "properties": {
          "discreteValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaAppendPointValues": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSetPointDatumValue"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaApplicableDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatum"
          },
          {
            "required": [
              "datumType"
            ],
            "type": "object",
            "properties": {
              "datumType": {
                "$ref": "#/components/schemas/GsaDatumType"
              }
            },
            "discriminator": {
              "propertyName": "datumType",
              "mapping": {
                "integer": "#/components/schemas/GsaIntegerDatum",
                "logical": "#/components/schemas/GsaLogicalDatum",
                "shortText": "#/components/schemas/GsaShortTextDatum",
                "longText": "#/components/schemas/GsaLongTextDatum",
                "hyperlink": "#/components/schemas/GsaHyperlinkDatum",
                "dateTime": "#/components/schemas/GsaDateTimeDatum",
                "discrete": "#/components/schemas/GsaDiscreteDatum",
                "range": "#/components/schemas/GsaRangeDatum",
                "point": "#/components/schemas/GsaPointDatum",
                "picture": "#/components/schemas/GsaPictureDatum",
                "file": "#/components/schemas/GsaFileDatum",
                "floatFunctional": "#/components/schemas/GsaFloatFunctionalDatum",
                "discreteFunctional": "#/components/schemas/GsaDiscreteFunctionalDatum",
                "tabular": "#/components/schemas/GsaTabularDatum"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatum\r\n\r\nThe value of discriminator property ('notApplicable') must be equal to 'applicable'\r\n\r\nThis is one of: \r\n * GsaIntegerDatum\r\n * GsaLogicalDatum\r\n * GsaShortTextDatum\r\n * GsaLongTextDatum\r\n * GsaHyperlinkDatum\r\n * GsaDateTimeDatum\r\n * GsaDiscreteDatum\r\n * GsaRangeDatum\r\n * GsaPointDatum\r\n * GsaPictureDatum\r\n * GsaFileDatum\r\n * GsaFloatFunctionalDatum\r\n * GsaDiscreteFunctionalDatum\r\n * GsaTabularDatum",
        "x-discriminator-value": "applicable",
        "x-discriminator-name": "notApplicable"
      },
      "GsaApplicationsInfo": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaApplyOptions": {
        "type": "object",
        "properties": {
          "matchMode": {
            "$ref": "#/components/schemas/GsaMatchMode"
          },
          "applyAddsAsState": {
            "type": "boolean"
          },
          "retargetTabularAttributes": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaAttribute": {
        "required": [
          "defaultThresholdType",
          "displayNames",
          "guid",
          "info",
          "isHiddenFromSearchCriteria",
          "isProtected",
          "name",
          "table",
          "type"
        ],
        "type": "object",
        "properties": {
          "defaultThresholdType": {
            "$ref": "#/components/schemas/GsaAttributeThresholdType"
          },
          "axisName": {
            "$ref": "#/components/schemas/GsaAxisName"
          },
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "$ref": "#/components/schemas/GsaAttributeInfo"
          },
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "aboutAttribute": {
            "$ref": "#/components/schemas/GsaSlimTypedAttribute"
          },
          "isHiddenFromSearchCriteria": {
            "type": "boolean",
            "description": "If true, the attribute should not be shown in search UIs.\r\nIt will still be included in text searches."
          },
          "isProtected": {
            "type": "boolean",
            "description": "If true, the attribute is protected from all changes."
          },
          "table": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaPointAttribute\r\n * GsaIntegerAttribute\r\n * GsaRangeAttribute\r\n * GsaLogicalAttribute\r\n * GsaShortTextAttribute\r\n * GsaLongTextAttribute\r\n * GsaDateTimeAttribute\r\n * GsaDiscreteAttribute\r\n * GsaHyperlinkAttribute\r\n * GsaFileAttribute\r\n * GsaPictureAttribute\r\n * GsaTabularAttribute\r\n * GsaFloatFunctionalAttribute\r\n * GsaDiscreteFunctionalAttribute\r\n * GsaMathsFunctionalAttribute",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "point": "#/components/schemas/GsaPointAttribute",
            "integer": "#/components/schemas/GsaIntegerAttribute",
            "range": "#/components/schemas/GsaRangeAttribute",
            "logical": "#/components/schemas/GsaLogicalAttribute",
            "shortText": "#/components/schemas/GsaShortTextAttribute",
            "longText": "#/components/schemas/GsaLongTextAttribute",
            "dateTime": "#/components/schemas/GsaDateTimeAttribute",
            "discrete": "#/components/schemas/GsaDiscreteAttribute",
            "hyperlink": "#/components/schemas/GsaHyperlinkAttribute",
            "file": "#/components/schemas/GsaFileAttribute",
            "picture": "#/components/schemas/GsaPictureAttribute",
            "link": "#/components/schemas/GsaTabularAttribute",
            "floatFunctional": "#/components/schemas/GsaFloatFunctionalAttribute",
            "discreteFunctional": "#/components/schemas/GsaDiscreteFunctionalAttribute",
            "mathsFunctional": "#/components/schemas/GsaMathsFunctionalAttribute"
          }
        }
      },
      "GsaAttributeAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregation"
          },
          {
            "required": [
              "attributeAggregationType"
            ],
            "type": "object",
            "properties": {
              "attributeIdentity": {
                "type": "integer",
                "description": "The identity of the attribute that was aggregated over.",
                "format": "int32",
                "nullable": true
              },
              "attributeGuid": {
                "type": "string",
                "description": "The GUID of the attribute that was aggregated over.",
                "format": "uuid",
                "nullable": true
              },
              "attributeAggregationType": {
                "$ref": "#/components/schemas/GsaAttributeAggregationType"
              },
              "count": {
                "type": "integer",
                "description": "The number of records that have a populated (applicable) value for this attribute.\r\n(For multi-valued attributes: the number of records that have one or more populated\r\n(applicable) values for this attribute.)\r\n            \r\nFor a tabular attribute, this will be the number of records that have at least one\r\ntabular row in this attribute, even if those rows might be filtered out from users'\r\nviews in some clients.",
                "format": "int32"
              }
            },
            "discriminator": {
              "propertyName": "attributeAggregationType",
              "mapping": {
                "value": "#/components/schemas/GsaAttributeValueAggregation",
                "exists": "#/components/schemas/GsaAttributeExistsAggregation"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The results of aggregation over an attribute. In all cases this will report the number of records in\r\nthe aggregation scope that have a value for the attribute. In some cases, depending on the attribute\r\ntype, we may be able to report more information. For example, aggregating over a numeric attribute will\r\nalso provide the minimum and maximum values that attribute takes across records in the aggregation\r\nscope.\r\n\r\nThis extends: GsaAggregation\r\n\r\nThe value of discriminator property ('type') must be equal to 'attribute'\r\n\r\nThis is one of: \r\n * GsaAttributeValueAggregation\r\n * GsaAttributeExistsAggregation",
        "x-discriminator-value": "attribute",
        "x-discriminator-name": "type"
      },
      "GsaAttributeAggregationCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationCriterion"
          },
          {
            "required": [
              "attributeAggregationCriterionType"
            ],
            "type": "object",
            "properties": {
              "identity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "guid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "isMetaAttribute": {
                "type": "boolean"
              },
              "attributeAggregationCriterionType": {
                "$ref": "#/components/schemas/GsaAttributeAggregationType"
              }
            },
            "discriminator": {
              "propertyName": "attributeAggregationCriterionType",
              "mapping": {
                "value": "#/components/schemas/GsaAttributeAggregationValueCriterion",
                "exists": "#/components/schemas/GsaAttributeAggregationExistsCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A criterion for requesting aggregations for a single specific attribute or meta-attribute. Exactly one of the identity or GUID must be provided.\r\n\r\nThis extends: GsaAggregationCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'attribute'\r\n\r\nThis is one of: \r\n * GsaAttributeAggregationValueCriterion\r\n * GsaAttributeAggregationExistsCriterion",
        "x-discriminator-value": "attribute",
        "x-discriminator-name": "type"
      },
      "GsaAttributeAggregationExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeAggregationCriterion"
          },
          {
            "required": [
              "innerCriterion"
            ],
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaAggregationDatumExistsCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A criterion for requesting aggregations for a single specific attribute or meta-attribute.\r\n\r\nThis extends: GsaAttributeAggregationCriterion\r\n\r\nThe value of discriminator property ('attributeAggregationCriterionType') must be equal to 'exists'",
        "x-discriminator-value": "exists",
        "x-discriminator-name": "attributeAggregationCriterionType"
      },
      "GsaAttributeAggregationType": {
        "enum": [
          "value",
          "exists"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>value</b>: Attribute aggregation value type</li>\r\n<li><b>exists</b>: Attribute aggregation exists type</li>\r\n</ul>\r\n"
      },
      "GsaAttributeAggregationValueCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeAggregationCriterion"
          },
          {
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A criterion for requesting aggregations for a single specific attribute or meta-attribute,\r\nincluding summary information about the values assumed by the attribute.\r\n            \r\nFor a numeric attribute (integer, point, range, or date-time), the summary information will\r\nbe the minimum and maximum values assumed by the attribute on some record.\r\n            \r\nFor a simple text attribute (discrete, short-text), the summary information will be the most\r\ncommon terms in the search index for that attribute.\r\n            \r\nThis can also be used within the inner criteria of a 'link' attribute aggregation, to request\r\nan aggregation over a local tabular column.\r\n\r\nThis extends: GsaAttributeAggregationCriterion\r\n\r\nThe value of discriminator property ('attributeAggregationCriterionType') must be equal to 'value'",
        "x-discriminator-value": "value",
        "x-discriminator-name": "attributeAggregationCriterionType"
      },
      "GsaAttributeCreationException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaAttributeErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaAttributeCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "required": [
              "attributeCriterionType"
            ],
            "type": "object",
            "properties": {
              "identity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "guid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "isMetaAttribute": {
                "type": "boolean"
              },
              "attributeCriterionType": {
                "$ref": "#/components/schemas/GsaAttributeCriterionType"
              }
            },
            "discriminator": {
              "propertyName": "attributeCriterionType",
              "mapping": {
                "matches": "#/components/schemas/GsaAttributeMatchesCriterion",
                "exists": "#/components/schemas/GsaAttributeExistsCriterion",
                "notApplicable": "#/components/schemas/GsaAttributeNotApplicableCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Base class for attribute criterions. Exactly one of the attribute identity or GUID must be provided.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'attribute'\r\n\r\nThis is one of: \r\n * GsaAttributeMatchesCriterion\r\n * GsaAttributeExistsCriterion\r\n * GsaAttributeNotApplicableCriterion",
        "x-discriminator-value": "attribute",
        "x-discriminator-name": "type"
      },
      "GsaAttributeCriterionType": {
        "enum": [
          "matches",
          "exists",
          "notApplicable"
        ],
        "type": "string"
      },
      "GsaAttributeDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataModificationErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaAttributeErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaAttributeErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaAboutAttributeCannotBeMetaAttributeErrorDetail\r\n * GsaDuplicateParameterGuidsAttributeErrorDetail\r\n * GsaEmptyAxisNameAttributeErrorDetail\r\n * GsaFuncNoParamsAttributeErrorDetail\r\n * GsaMathsFunctionalAttributeErrorDetail\r\n * GsaMissingParameterGuidAttributeErrorDetail\r\n * GsaNamedEntityAttributeErrorDetail\r\n * GsaNoSuchEntityAttributeErrorDetail\r\n * GsaPointParametersRequiresMultiValuedAttributeErrorDetail\r\n * GsaTargetAttributeNotInTableAttributeErrorDetail\r\n * GsaTargetAttributeTypeAttributeErrorDetail\r\n * GsaThresholdTypeAttributeErrorDetail\r\n * GsaDuplicateTabularColumnGuidsErrorDetail\r\n * GsaExistingTabularColumnGuidErrorDetail\r\n * GsaTabularColumnNameNotProvidedErrorDetail\r\n * GsaDuplicateTabularColumnNamesErrorDetail\r\n * GsaNoSuchEntityTabularColumnErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "aboutAttributeCannotBeMeta": "#/components/schemas/GsaAboutAttributeCannotBeMetaAttributeErrorDetail",
            "duplicateParameterGuids": "#/components/schemas/GsaDuplicateParameterGuidsAttributeErrorDetail",
            "emptyAxisName": "#/components/schemas/GsaEmptyAxisNameAttributeErrorDetail",
            "funcNoParams": "#/components/schemas/GsaFuncNoParamsAttributeErrorDetail",
            "mathsFunctional": "#/components/schemas/GsaMathsFunctionalAttributeErrorDetail",
            "missingParameterGuid": "#/components/schemas/GsaMissingParameterGuidAttributeErrorDetail",
            "namedEntity": "#/components/schemas/GsaNamedEntityAttributeErrorDetail",
            "noSuchEntity": "#/components/schemas/GsaNoSuchEntityAttributeErrorDetail",
            "pointParametersRequiresMultiValued": "#/components/schemas/GsaPointParametersRequiresMultiValuedAttributeErrorDetail",
            "targetAttributeNotInTable": "#/components/schemas/GsaTargetAttributeNotInTableAttributeErrorDetail",
            "targetAttributeType": "#/components/schemas/GsaTargetAttributeTypeAttributeErrorDetail",
            "thresholdType": "#/components/schemas/GsaThresholdTypeAttributeErrorDetail",
            "duplicateTabularColumnGuids": "#/components/schemas/GsaDuplicateTabularColumnGuidsErrorDetail",
            "existingTabularColumnGuid": "#/components/schemas/GsaExistingTabularColumnGuidErrorDetail",
            "tabularColumnNameNotProvided": "#/components/schemas/GsaTabularColumnNameNotProvidedErrorDetail",
            "duplicateTabularColumnNames": "#/components/schemas/GsaDuplicateTabularColumnNamesErrorDetail",
            "tabularColumnNoSuchEntity": "#/components/schemas/GsaNoSuchEntityTabularColumnErrorDetail"
          }
        }
      },
      "GsaAttributeErrorReason": {
        "enum": [
          "aboutAttributeCannotBeMeta",
          "duplicateParameterGuids",
          "emptyAxisName",
          "funcNoParams",
          "mathsFunctional",
          "missingParameterGuid",
          "namedEntity",
          "noSuchEntity",
          "pointParametersRequiresMultiValued",
          "targetAttributeNotInTable",
          "targetAttributeType",
          "thresholdType",
          "duplicateTabularColumnGuids",
          "existingTabularColumnGuid",
          "tabularColumnNameNotProvided",
          "duplicateTabularColumnNames",
          "tabularColumnNoSuchEntity"
        ],
        "type": "string"
      },
      "GsaAttributeExistsAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeAggregation"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "The results of aggregation over an attribute, reporting only the number of records with a value\r\nfor the attribute.\r\n\r\nThis extends: GsaAttributeAggregation\r\n\r\nThe value of discriminator property ('attributeAggregationType') must be equal to 'exists'",
        "x-discriminator-value": "exists",
        "x-discriminator-name": "attributeAggregationType"
      },
      "GsaAttributeExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeCriterion"
          },
          {
            "required": [
              "innerCriterion"
            ],
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaDatumExistsCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching record where there is data on the attribute specified. Exactly one of the attribute identity or GUID must be provided.\r\n\r\nThis extends: GsaAttributeCriterion\r\n\r\nThe value of discriminator property ('attributeCriterionType') must be equal to 'exists'",
        "x-discriminator-value": "exists",
        "x-discriminator-name": "attributeCriterionType"
      },
      "GsaAttributeExportFailure": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaExportFailure"
          },
          {
            "required": [
              "failedAttributes"
            ],
            "type": "object",
            "properties": {
              "failedAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaAttributeReference"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaExportFailure\r\n\r\nThe value of discriminator property ('type') must be equal to 'attribute'",
        "x-discriminator-value": "attribute",
        "x-discriminator-name": "type"
      },
      "GsaAttributeInfo": {
        "required": [
          "chartable",
          "expressionable",
          "extendedName",
          "foreignDataLinkGroups",
          "isMetaAttribute",
          "linkable",
          "primaryDataLinkGroups",
          "standardNames",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "type": "string"
          },
          "chartable": {
            "type": "boolean",
            "description": "Determines whether or not this attribute is chartable in an X/Y bubble chart."
          },
          "expressionable": {
            "type": "boolean",
            "description": "Determines whether or not this attribute can be used in an expression."
          },
          "linkable": {
            "type": "boolean",
            "description": "Determines whether or not this attribute can be linked to from a tabular column."
          },
          "extendedName": {
            "type": "string"
          },
          "isMetaAttribute": {
            "type": "boolean"
          },
          "orderedMetaAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimTypedAttribute"
            },
            "nullable": true
          },
          "standardNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "primaryDataLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "foreignDataLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "primarySmartLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            },
            "nullable": true
          },
          "foreignSmartLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaAttributeInterpolationMethod": {
        "enum": [
          "auto",
          "none",
          "linear",
          "cubicSpline"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>auto</b>: The default interpolation method should be applied.</li>\r\n<li><b>none</b>: No interpolation should be performed to infer values between data points.</li>\r\n<li><b>linear</b>: Linear interpolation should be performed to infer values between data points.</li>\r\n<li><b>cubicSpline</b>: Cubic-spline interpolation should be performed to infer values between data points.</li>\r\n</ul>\r\n"
      },
      "GsaAttributeLinkPair": {
        "type": "object",
        "properties": {
          "attributeSource": {
            "$ref": "#/components/schemas/GsaSlimAttribute"
          },
          "attributeTarget": {
            "$ref": "#/components/schemas/GsaSlimAttribute"
          }
        },
        "additionalProperties": false
      },
      "GsaAttributeMatchesCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeCriterion"
          },
          {
            "required": [
              "innerCriterion"
            ],
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaDatumCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for a search matching values in a given attribute. Exactly one of the attribute identity or GUID must be provided.\r\n\r\nThis extends: GsaAttributeCriterion\r\n\r\nThe value of discriminator property ('attributeCriterionType') must be equal to 'matches'",
        "x-discriminator-value": "matches",
        "x-discriminator-name": "attributeCriterionType"
      },
      "GsaAttributeNoSuchEntityType": {
        "enum": [
          "dataRule",
          "discreteType",
          "parameter",
          "unit"
        ],
        "type": "string"
      },
      "GsaAttributeNotApplicableCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching record where there is not applicable data on the attribute specified. Exactly one of the attribute identity or GUID must be provided.\r\n\r\nThis extends: GsaAttributeCriterion\r\n\r\nThe value of discriminator property ('attributeCriterionType') must be equal to 'notApplicable'",
        "x-discriminator-value": "notApplicable",
        "x-discriminator-name": "attributeCriterionType"
      },
      "GsaAttributeReference": {
        "required": [
          "databaseKey"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string"
          },
          "attributeIdentity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaAttributeScaleType": {
        "enum": [
          "notSet",
          "linear",
          "logarithmic"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>notSet</b>: No scale type has been chosen, the default value should be applied.</li>\r\n<li><b>linear</b>: Use a linear scale</li>\r\n<li><b>logarithmic</b>: Use a logarithmic scale</li>\r\n</ul>\r\n"
      },
      "GsaAttributeSortCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSortCriterion"
          },
          {
            "type": "object",
            "properties": {
              "identity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "guid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "attributeType": {
                "$ref": "#/components/schemas/GsaAttributeType"
              },
              "sortType": {
                "$ref": "#/components/schemas/GsaSortType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Specifies an attribute based sort criterion for a search query. Either the GUID or identity of the sorting attribute must be provided.\r\n\r\nsortType: For a text-type sort, whether the results should use a natural or a pure alphabetical sort. Defaults to natural.\r\n\r\nThis extends: GsaSortCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'attribute'",
        "x-discriminator-value": "attribute",
        "x-discriminator-name": "type"
      },
      "GsaAttributeThresholdType": {
        "enum": [
          "exists",
          "doesNotExist",
          "atLeast",
          "atMost",
          "equal",
          "between",
          "isOneOf",
          "contains",
          "isNot",
          "isAllOf",
          "none"
        ],
        "type": "string"
      },
      "GsaAttributeToExport": {
        "required": [
          "attributeType"
        ],
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "attributeType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaLinkAttributeToExport\r\n * GsaSimpleAttributeToExport",
        "discriminator": {
          "propertyName": "attributeType",
          "mapping": {
            "link": "#/components/schemas/GsaLinkAttributeToExport",
            "simple": "#/components/schemas/GsaSimpleAttributeToExport"
          }
        }
      },
      "GsaAttributeType": {
        "enum": [
          "integer",
          "point",
          "range",
          "logical",
          "shortText",
          "longText",
          "dateTime",
          "discrete",
          "hyperlink",
          "file",
          "picture",
          "link",
          "floatFunctional",
          "discreteFunctional",
          "mathsFunctional",
          "tabular"
        ],
        "type": "string",
        "description": "The types of attribute that are supported by the API.<p>Possible values:</p>\r\n<ul>\r\n<li><b>integer</b>: Integer</li>\r\n<li><b>point</b>: Point</li>\r\n<li><b>range</b>: Range</li>\r\n<li><b>logical</b>: Logical</li>\r\n<li><b>shortText</b>: Short Text</li>\r\n<li><b>longText</b>: Long Text</li>\r\n<li><b>dateTime</b>: Date and Time</li>\r\n<li><b>discrete</b>: Discrete Value</li>\r\n<li><b>hyperlink</b>: Hyperlink</li>\r\n<li><b>file</b>: File</li>\r\n<li><b>picture</b>: Picture</li>\r\n<li><b>link</b>: Link</li>\r\n<li><b>floatFunctional</b>: Float functional</li>\r\n<li><b>discreteFunctional</b>: Discrete functional</li>\r\n<li><b>mathsFunctional</b>: Maths functional. Also known as Embedded Equations and Logic (EEL).</li>\r\n<li><b>tabular</b>: Tabular data</li>\r\n</ul>\r\n"
      },
      "GsaAttributeUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "referencedBy": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimAttribute"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'attribute'",
        "x-discriminator-value": "attribute",
        "x-discriminator-name": "referencedByType"
      },
      "GsaAttributeValidateResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "description": "Gets whether the provided value was valid based on the attributes data rules."
          },
          "hasValidationRules": {
            "type": "boolean",
            "description": "Gets whether the attribute has any validation rules that were checked."
          },
          "valueChanged": {
            "type": "boolean",
            "description": "Gets whether the provided value was a new value compared to the existing value. Null if no record was provided.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaAttributeValueAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeAggregation"
          },
          {
            "type": "object",
            "properties": {
              "aggregationDatum": {
                "$ref": "#/components/schemas/GsaAggregationDatum"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The results of aggregation over an attribute, reporting the number of records that have a value for\r\nthe attribute, plus additional aggregation information about the attribute values. The exact type of\r\nadditional information will depend on the type of attribute.\r\n\r\naggregationDatum: The type of datum associated with this attribute. (Note: a tabular attribute will be listed as type 'link'.)\r\n\r\nThis extends: GsaAttributeAggregation\r\n\r\nThe value of discriminator property ('attributeAggregationType') must be equal to 'value'",
        "x-discriminator-value": "value",
        "x-discriminator-name": "attributeAggregationType"
      },
      "GsaAttributesInfo": {
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimAttribute"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaAxisName": {
        "required": [
          "displayNames",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "GsaBlobInfoDto": {
        "required": [
          "fullPath",
          "lastWriteTimeUtc",
          "length",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the blob."
          },
          "fullPath": {
            "type": "string",
            "description": "Full path of the blob.\r\nPath segments are separated by '/'\r\nThe last segment is always blob name."
          },
          "length": {
            "type": "integer",
            "description": "Blob size in bytes.",
            "format": "int64"
          },
          "lastWriteTimeUtc": {
            "type": "string",
            "description": "Last modification date.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "GsaBooleanCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "type": "object",
            "properties": {
              "all": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCriterion"
                },
                "description": "Only records that match all of these criteria are returned.",
                "nullable": true
              },
              "any": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCriterion"
                },
                "description": "Only results that match any of these criteria are returned.",
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCriterion"
                },
                "description": "Only results that match none of these criteria are returned.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "boolean: Criterion that wraps other criteria in order to specify how the results should be joined together.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'boolean'",
        "x-discriminator-value": "boolean",
        "x-discriminator-name": "type"
      },
      "GsaBoostByGuid": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "boostFactor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GsaBoostByIdentity": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "boostFactor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GsaBulkInfo": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaBulkResponseItem"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaBulkRequest": {
        "required": [
          "requests"
        ],
        "type": "object",
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaBulkRequestItem"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaBulkRequestHttpMethod": {
        "enum": [
          "GET",
          "POST",
          "DELETE",
          "PATCH",
          "PUT"
        ],
        "type": "string"
      },
      "GsaBulkRequestItem": {
        "required": [
          "method",
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The relative path for this request."
          },
          "method": {
            "$ref": "#/components/schemas/GsaBulkRequestHttpMethod"
          },
          "body": {
            "type": "object",
            "description": "The request body. The type of this object depends on the request being sent.\r\nIt should be the same as if this request were being sent separately.",
            "nullable": true
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Any additional headers to set on this request. Headers from the bulk request will also be included.\r\nHeaders set in this field override any headers also set on the bulk request.",
            "nullable": true
          },
          "query": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Query string parameters.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaBulkResponseItem": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SystemNetHttpStatusCode"
          },
          "body": {
            "type": "object",
            "description": "The response body. The type of this object depends on the request being sent.\r\nIt should be the same as if the request were sent separately.",
            "nullable": true
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaCalendarInterval": {
        "enum": [
          "minute",
          "hour",
          "day",
          "week",
          "month",
          "quarter",
          "year"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>minute</b>: Minute</li>\r\n<li><b>hour</b>: Hour</li>\r\n<li><b>day</b>: Day</li>\r\n<li><b>week</b>: Week</li>\r\n<li><b>month</b>: Month</li>\r\n<li><b>quarter</b>: Quarter</li>\r\n<li><b>year</b>: Year</li>\r\n</ul>\r\n"
      },
      "GsaCircularReferenceFolderMoveErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFolderMoveErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Circular reference found - you cannot move a folder to be a child of one of its descendants.\r\n\r\nThis extends: GsaFolderMoveErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'circularReference'",
        "x-discriminator-value": "circularReference",
        "x-discriminator-name": "reason"
      },
      "GsaConfigInvalidJsonFileErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFileErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Configuration's value must be valid JSON.\r\n\r\nThis extends: GsaFileErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'configInvalidJson'",
        "x-discriminator-value": "configInvalidJson",
        "x-discriminator-name": "reason"
      },
      "GsaConfiguration": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaConfigurationDetails": {
        "required": [
          "connectionDetails",
          "language"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "connectionDetails": {
            "$ref": "#/components/schemas/GsaConnectionDetails"
          }
        },
        "additionalProperties": false
      },
      "GsaConfigurationsInfo": {
        "required": [
          "configurations"
        ],
        "type": "object",
        "properties": {
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimConfiguration"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaConnectionDetails": {
        "required": [
          "dataSource",
          "initialCatalog"
        ],
        "type": "object",
        "properties": {
          "dataSource": {
            "type": "string",
            "description": "The SQL server data source"
          },
          "useIntegratedSecurity": {
            "type": "boolean",
            "description": "Set to true if the SQL connection to the database should use Windows authentication"
          },
          "sqlUsername": {
            "type": "string",
            "description": "The username to use if the database should use SQL authentication. The password must also be provided.",
            "nullable": true
          },
          "sqlPassword": {
            "type": "string",
            "description": "The password to use if the database should use SQL authentication. The username must also be provided.",
            "nullable": true
          },
          "initialCatalog": {
            "type": "string",
            "description": "The name of the database in SQL server"
          },
          "additionalSqlParameters": {
            "type": "string",
            "description": "(Optional) Any additional parameters that will be added to the SQL connection string for the database. Must be a valid SQL connection string format.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaConstant": {
        "required": [
          "guid",
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/GsaSlimUnit"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Constant used in equations"
      },
      "GsaConstantDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataModificationErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaConstantsInfo": {
        "type": "object",
        "properties": {
          "constants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimConstant"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaContinuousRange": {
        "type": "object",
        "properties": {
          "lowValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "highValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaCopyRecordHistory": {
        "required": [
          "subsetOption"
        ],
        "type": "object",
        "properties": {
          "newParent": {
            "$ref": "#/components/schemas/GsaSlimRecordHistory"
          },
          "subsetOption": {
            "$ref": "#/components/schemas/GsaRecordPropertyInheritanceType"
          },
          "newShortName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaCreateAttribute": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "defaultThresholdType": {
            "$ref": "#/components/schemas/GsaAttributeThresholdType"
          },
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "isHiddenFromSearchCriteria": {
            "type": "boolean",
            "description": "If true, the attribute should not be shown in search UIs.\r\nIt will still be included in text searches.\r\nIf not specified, it will be set to the default value for the attribute type.",
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Set a display name for different languages.\r\nSupported languages include, but are not limited to, \"en\", \"fr\", \"de\", \"ru\", \"ko\", \"zh-CN\", \"ja\".",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaCreatePointAttribute\r\n * GsaCreateIntegerAttribute\r\n * GsaCreateRangeAttribute\r\n * GsaCreateLogicalAttribute\r\n * GsaCreateShortTextAttribute\r\n * GsaCreateLongTextAttribute\r\n * GsaCreateDateTimeAttribute\r\n * GsaCreateDiscreteAttribute\r\n * GsaCreateHyperlinkAttribute\r\n * GsaCreateFileAttribute\r\n * GsaCreatePictureAttribute\r\n * GsaCreateTabularAttribute\r\n * GsaCreateFloatFunctionalAttribute\r\n * GsaCreateDiscreteFunctionalAttribute\r\n * GsaCreateMathsFunctionalAttribute",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "point": "#/components/schemas/GsaCreatePointAttribute",
            "integer": "#/components/schemas/GsaCreateIntegerAttribute",
            "range": "#/components/schemas/GsaCreateRangeAttribute",
            "logical": "#/components/schemas/GsaCreateLogicalAttribute",
            "shortText": "#/components/schemas/GsaCreateShortTextAttribute",
            "longText": "#/components/schemas/GsaCreateLongTextAttribute",
            "dateTime": "#/components/schemas/GsaCreateDateTimeAttribute",
            "discrete": "#/components/schemas/GsaCreateDiscreteAttribute",
            "hyperlink": "#/components/schemas/GsaCreateHyperlinkAttribute",
            "file": "#/components/schemas/GsaCreateFileAttribute",
            "picture": "#/components/schemas/GsaCreatePictureAttribute",
            "link": "#/components/schemas/GsaCreateTabularAttribute",
            "floatFunctional": "#/components/schemas/GsaCreateFloatFunctionalAttribute",
            "discreteFunctional": "#/components/schemas/GsaCreateDiscreteFunctionalAttribute",
            "mathsFunctional": "#/components/schemas/GsaCreateMathsFunctionalAttribute"
          }
        }
      },
      "GsaCreateAttributeLinkPair": {
        "required": [
          "attributeSourceGuid",
          "attributeTargetGuid"
        ],
        "type": "object",
        "properties": {
          "attributeSourceGuid": {
            "type": "string",
            "format": "uuid"
          },
          "attributeTargetGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateAxisName": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateConfiguration": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateConstant": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "unitGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateContinuousRange": {
        "required": [
          "highValue",
          "lowValue"
        ],
        "type": "object",
        "properties": {
          "lowValue": {
            "type": "number",
            "format": "double"
          },
          "highValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateCrossDatabaseLinkTarget": {
        "required": [
          "tableGuid"
        ],
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "description": "If databaseGuid is set, the target will match any database with that Guid.\r\nIf databaseGuid is not set, the target wil match the tableGuid in any database.",
            "format": "uuid",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateCrossDatabaseRecordLinkGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateRecordLinkGroup"
          },
          {
            "required": [
              "linkTarget"
            ],
            "type": "object",
            "properties": {
              "linkTarget": {
                "$ref": "#/components/schemas/GsaCreateCrossDatabaseLinkTarget"
              },
              "includeIndirectLinks": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateRecordLinkGroup\r\n\r\nThe value of discriminator property ('type') must be equal to 'crossDatabase'",
        "x-discriminator-value": "crossDatabase",
        "x-discriminator-name": "type"
      },
      "GsaCreateDataRule": {
        "required": [
          "description",
          "name",
          "regularExpression"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "regularExpression": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateDateTimeAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'dateTime'",
        "x-discriminator-value": "dateTime",
        "x-discriminator-name": "type"
      },
      "GsaCreateDiscreteAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "required": [
              "discreteType"
            ],
            "type": "object",
            "properties": {
              "discreteType": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "isMultiValued": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaCreateDiscreteFunctionalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "required": [
              "attributeParameters",
              "discreteType"
            ],
            "type": "object",
            "properties": {
              "discreteType": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCreateDiscreteFunctionalAttributeParameter"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteFunctional'",
        "x-discriminator-value": "discreteFunctional",
        "x-discriminator-name": "type"
      },
      "GsaCreateDiscreteFunctionalAttributeDiscreteParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateDiscreteFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ndefaultValue: If there is no default value, fallback to the parameter default.\r\n\r\nThis extends: GsaCreateDiscreteFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaCreateDiscreteFunctionalAttributeNumericParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateDiscreteFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "type": "number",
                "description": "If there is no default value, fallback to the parameter default.",
                "format": "double",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateDiscreteFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaCreateDiscreteFunctionalAttributeParameter": {
        "required": [
          "parameter",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaCreateDiscreteFunctionalAttributeDiscreteParameter\r\n * GsaCreateDiscreteFunctionalAttributeNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaCreateDiscreteFunctionalAttributeDiscreteParameter",
            "numeric": "#/components/schemas/GsaCreateDiscreteFunctionalAttributeNumericParameter"
          }
        }
      },
      "GsaCreateDiscreteParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateParameter"
          },
          {
            "required": [
              "values"
            ],
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCreateDiscreteParameterValue"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaCreateDiscreteParameterContent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateParameterContent"
          },
          {
            "type": "object",
            "properties": {
              "parameterValue": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "parameterRange": {
                "$ref": "#/components/schemas/GsaCreateDiscreteRange"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateParameterContent\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaCreateDiscreteParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateParameterValue"
          },
          {
            "required": [
              "name"
            ],
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateParameterValue\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaCreateDiscreteRange": {
        "required": [
          "parameterValues"
        ],
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaCreateDiscreteType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "isOrdered": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateExpression": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "unit": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateFileAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'file'",
        "x-discriminator-value": "file",
        "x-discriminator-name": "type"
      },
      "GsaCreateFloatFunctionalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "required": [
              "attributeParameters"
            ],
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "axisName": {
                "$ref": "#/components/schemas/GsaCreateAxisName"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCreateFloatFunctionalAttributeParameter"
                }
              },
              "isRange": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'floatFunctional'",
        "x-discriminator-value": "floatFunctional",
        "x-discriminator-name": "type"
      },
      "GsaCreateFloatFunctionalAttributeDiscreteParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateFloatFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ndefaultValue: If there is no default value, fallback to the parameter default.\r\n\r\nThis extends: GsaCreateFloatFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaCreateFloatFunctionalAttributeNumericParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateFloatFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "type": "number",
                "description": "If there is no default value, fallback to the parameter default.",
                "format": "double",
                "nullable": true
              },
              "interpolationMethod": {
                "$ref": "#/components/schemas/GsaAttributeInterpolationMethod"
              },
              "scaleType": {
                "$ref": "#/components/schemas/GsaAttributeScaleType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ninterpolationMethod: If the InterpolationMethod is\r\n\r\nscaleType: If the ScaleType is\r\n\r\nThis extends: GsaCreateFloatFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaCreateFloatFunctionalAttributeParameter": {
        "required": [
          "parameter",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaCreateFloatFunctionalAttributeDiscreteParameter\r\n * GsaCreateFloatFunctionalAttributeNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaCreateFloatFunctionalAttributeDiscreteParameter",
            "numeric": "#/components/schemas/GsaCreateFloatFunctionalAttributeNumericParameter"
          }
        }
      },
      "GsaCreateFolder": {
        "required": [
          "name",
          "parentGuid"
        ],
        "type": "object",
        "properties": {
          "parentGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateHyperlinkAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'hyperlink'",
        "x-discriminator-value": "hyperlink",
        "x-discriminator-name": "type"
      },
      "GsaCreateIntegerAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "isUnique": {
                "type": "boolean",
                "description": "Whether or not the attribute is constrained to contain a unique value"
              },
              "axisName": {
                "$ref": "#/components/schemas/GsaCreateAxisName"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "type"
      },
      "GsaCreateJobRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "scheduledExecutionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "inputFileIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Names of temporary input files that were uploaded prior to creating this job.",
            "nullable": true
          },
          "parameters": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaCreateLayout": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "applicableApplications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "If there are no ApplicableApplications, the layout is applicable in all applications.",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Create dto for Layouts"
      },
      "GsaCreateLayoutSection": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Create dto for Layout Sections\r\nNo extra properties compared to CreateSlimNamedEntity yet, but exists for consistency with other 'create dto' types"
      },
      "GsaCreateLinkedAttributeTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "required": [
              "linkedAttribute"
            ],
            "type": "object",
            "properties": {
              "linkedAttribute": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'linkedAttribute'",
        "x-discriminator-value": "linkedAttribute",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLinkedColumnTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "required": [
              "linkedColumn"
            ],
            "type": "object",
            "properties": {
              "linkedColumn": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'linkedColumn'",
        "x-discriminator-value": "linkedColumn",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLinkedRecordTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'linkedRecord'",
        "x-discriminator-value": "linkedRecord",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateListItem": {
        "required": [
          "databaseGuid",
          "recordHistoryGuid"
        ],
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordVersion": {
            "type": "integer",
            "description": "Optional record version. Note that versioned items should not be used in lists used in the Favorites App, which considers all items to be versionless.",
            "format": "int32",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "description": "Optional table GUID. If the item exists in a loaded database, the GUID will be calculated if not provided.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaCreateLocalDateTimeTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localDateTime'",
        "x-discriminator-value": "localDateTime",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalDiscreteTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "required": [
              "discreteType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "discreteType": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localDiscrete'",
        "x-discriminator-value": "localDiscrete",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalFileTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localFile'",
        "x-discriminator-value": "localFile",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalHyperlinkTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localHyperlink'",
        "x-discriminator-value": "localHyperlink",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalIntegerTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localInteger'",
        "x-discriminator-value": "localInteger",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalLogicalTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localLogical'",
        "x-discriminator-value": "localLogical",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalLongTextTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localLongText'",
        "x-discriminator-value": "localLongText",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalPictureTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localPicture'",
        "x-discriminator-value": "localPicture",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalPointTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localPoint'",
        "x-discriminator-value": "localPoint",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalRangeTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localRange'",
        "x-discriminator-value": "localRange",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLocalShortTextTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localShortText'",
        "x-discriminator-value": "localShortText",
        "x-discriminator-name": "columnType"
      },
      "GsaCreateLogicalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "type"
      },
      "GsaCreateLongTextAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'longText'",
        "x-discriminator-value": "longText",
        "x-discriminator-name": "type"
      },
      "GsaCreateMathsContent": {
        "type": "object",
        "properties": {
          "curveLabel": {
            "type": "string",
            "nullable": true
          },
          "transposeAxes": {
            "type": "boolean"
          },
          "useLogarithmicScale": {
            "type": "boolean"
          },
          "expression": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "freeParameter": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "parameterContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaCreateParameterContent"
            }
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nexpression: Defaults to the first expression on the attribute, if there are any.\r\n\r\nfreeParameter: Defaults to the first parameter on the attribute, if there are any."
      },
      "GsaCreateMathsFunctionalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimEntity"
                },
                "nullable": true
              },
              "expressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimEntity"
                },
                "nullable": true
              },
              "allowExtrapolation": {
                "type": "boolean"
              },
              "axisName": {
                "$ref": "#/components/schemas/GsaCreateAxisName"
              },
              "isRange": {
                "type": "boolean"
              },
              "defaultContent": {
                "$ref": "#/components/schemas/GsaCreateMathsContent"
              },
              "allowAllCompatibleExpressions": {
                "type": "boolean"
              },
              "allowAnonymousExpressions": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'mathsFunctional'",
        "x-discriminator-value": "mathsFunctional",
        "x-discriminator-name": "type"
      },
      "GsaCreateNumericParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateParameter"
          },
          {
            "required": [
              "interpolationType",
              "isRestricted",
              "scaleType",
              "values"
            ],
            "type": "object",
            "properties": {
              "isRestricted": {
                "type": "boolean"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCreateNumericParameterValue"
                }
              },
              "interpolationType": {
                "$ref": "#/components/schemas/GsaParameterInterpolationType"
              },
              "scaleType": {
                "$ref": "#/components/schemas/GsaParameterScaleType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaCreateNumericParameterContent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateParameterContent"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "parameterRange": {
                "$ref": "#/components/schemas/GsaCreateContinuousRange"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateParameterContent\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaCreateNumericParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateParameterValue"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateParameterValue\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaCreateParameter": {
        "required": [
          "defaultParameterValueIndex",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "defaultParameterValueIndex": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaCreateDiscreteParameter\r\n * GsaCreateNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaCreateDiscreteParameter",
            "numeric": "#/components/schemas/GsaCreateNumericParameter"
          }
        }
      },
      "GsaCreateParameterContent": {
        "required": [
          "parameter",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          }
        },
        "additionalProperties": false,
        "description": "Set the range and/or default value for parameters used by the attribute.\r\n\r\nThis is one of: \r\n * GsaCreateDiscreteParameterContent\r\n * GsaCreateNumericParameterContent",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaCreateDiscreteParameterContent",
            "numeric": "#/components/schemas/GsaCreateNumericParameterContent"
          }
        }
      },
      "GsaCreateParameterValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterValueType"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaCreateDiscreteParameterValue\r\n * GsaCreateNumericParameterValue",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaCreateDiscreteParameterValue",
            "numeric": "#/components/schemas/GsaCreateNumericParameterValue"
          }
        }
      },
      "GsaCreatePictureAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'picture'",
        "x-discriminator-value": "picture",
        "x-discriminator-name": "type"
      },
      "GsaCreatePointAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "isMultiValued": {
                "type": "boolean"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "axisName": {
                "$ref": "#/components/schemas/GsaCreateAxisName"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimEntity"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "type"
      },
      "GsaCreateProfile": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "homepageUrl": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateProfileTable": {
        "required": [
          "databaseGuid",
          "tableGuid"
        ],
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          },
          "subsetGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "layoutGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateRangeAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "axisName": {
                "$ref": "#/components/schemas/GsaCreateAxisName"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "type"
      },
      "GsaCreateRecordHistory": {
        "required": [
          "name",
          "recordType"
        ],
        "type": "object",
        "properties": {
          "recordType": {
            "$ref": "#/components/schemas/GsaRecordType"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/GsaSlimRecordHistory"
          },
          "recordColor": {
            "$ref": "#/components/schemas/GsaRecordColor"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateRecordLinkGroup": {
        "required": [
          "name",
          "reverseName",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaRecordLinkGroupType"
          },
          "reverseName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaCreateStaticRecordLinkGroup\r\n * GsaCreateSmartRecordLinkGroup\r\n * GsaCreateCrossDatabaseRecordLinkGroup",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "static": "#/components/schemas/GsaCreateStaticRecordLinkGroup",
            "smart": "#/components/schemas/GsaCreateSmartRecordLinkGroup",
            "crossDatabase": "#/components/schemas/GsaCreateCrossDatabaseRecordLinkGroup"
          }
        }
      },
      "GsaCreateRecordList": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "items": {
            "$ref": "#/components/schemas/GsaCreateRecordListItemsInfo"
          },
          "identifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "awaitingApproval": {
            "type": "boolean"
          },
          "internalUse": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateRecordListItemsInfo": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaCreateListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaCreateReplacementString": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateShortTextAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "isUnique": {
                "type": "boolean",
                "description": "Whether or not the attribute is constrained to contain a unique value"
              },
              "dataRule": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "type"
      },
      "GsaCreateSmartLinkTarget": {
        "required": [
          "tableGuid"
        ],
        "type": "object",
        "properties": {
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateSmartRecordLinkGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateRecordLinkGroup"
          },
          {
            "required": [
              "attributePairs",
              "linkTarget"
            ],
            "type": "object",
            "properties": {
              "linkTarget": {
                "$ref": "#/components/schemas/GsaCreateSmartLinkTarget"
              },
              "forbidOrphans": {
                "type": "boolean"
              },
              "referentialIntegrityModel": {
                "$ref": "#/components/schemas/GsaReferentialIntegrityModel"
              },
              "attributePairs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCreateAttributeLinkPair"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateRecordLinkGroup\r\n\r\nThe value of discriminator property ('type') must be equal to 'smart'",
        "x-discriminator-value": "smart",
        "x-discriminator-name": "type"
      },
      "GsaCreateStandardName": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "mappedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "mappedParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "mappedRecordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "mappedCrossDatabaseRecordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateStaticLinkTarget": {
        "required": [
          "tableGuid"
        ],
        "type": "object",
        "properties": {
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateStaticRecordLinkGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateRecordLinkGroup"
          },
          {
            "required": [
              "linkTarget"
            ],
            "type": "object",
            "properties": {
              "linkTarget": {
                "$ref": "#/components/schemas/GsaCreateStaticLinkTarget"
              },
              "includeIndirectLinks": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateRecordLinkGroup\r\n\r\nThe value of discriminator property ('type') must be equal to 'static'",
        "x-discriminator-value": "static",
        "x-discriminator-name": "type"
      },
      "GsaCreateSubset": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "associatedLayout": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateTable": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "isHiddenFromBrowse": {
            "type": "boolean"
          },
          "isHiddenFromSearch": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateTabularAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCreateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "displayFullTable": {
                "type": "boolean"
              },
              "displaySummaryRowInline": {
                "type": "boolean"
              },
              "hideUnlinkedRows": {
                "type": "boolean"
              },
              "tabularColumns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCreateTabularColumn"
                },
                "nullable": true
              },
              "target": {
                "$ref": "#/components/schemas/GsaTabularAttributeTarget"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCreateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "type"
      },
      "GsaCreateTabularColumn": {
        "required": [
          "columnType",
          "name"
        ],
        "type": "object",
        "properties": {
          "columnType": {
            "$ref": "#/components/schemas/GsaTabularColumnDtoType"
          },
          "showAsLink": {
            "type": "boolean"
          },
          "summaryRowEnabled": {
            "type": "boolean"
          },
          "summaryRowText": {
            "type": "string",
            "nullable": true
          },
          "rollUpType": {
            "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
          },
          "summaryRowRollUpType": {
            "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Possible values for RollUpType depends on the underlying data type of the column:\r\n            \r\n- FloatFunctional: Chart, Count\r\n            \r\n- Numeric types (Integer, Point, Range): Count, CountDistinct, List, ListDistinct, Max, Min, Mean, StdDev, Sum, CoefficientOfVariation\r\n            \r\n- Other types: Count, CountDistinct, List, ListDistinct\r\n  - DateTime, Logical, and ordered Discrete also include Min and Max.\r\n\r\nThis is one of: \r\n * GsaCreateLinkedAttributeTabularColumn\r\n * GsaCreateLinkedColumnTabularColumn\r\n * GsaCreateLinkedRecordTabularColumn\r\n * GsaCreateLocalPointTabularColumn\r\n * GsaCreateLocalRangeTabularColumn\r\n * GsaCreateLocalIntegerTabularColumn\r\n * GsaCreateLocalLogicalTabularColumn\r\n * GsaCreateLocalShortTextTabularColumn\r\n * GsaCreateLocalLongTextTabularColumn\r\n * GsaCreateLocalDateTimeTabularColumn\r\n * GsaCreateLocalDiscreteTabularColumn\r\n * GsaCreateLocalHyperlinkTabularColumn\r\n * GsaCreateLocalFileTabularColumn\r\n * GsaCreateLocalPictureTabularColumn",
        "discriminator": {
          "propertyName": "columnType",
          "mapping": {
            "linkedAttribute": "#/components/schemas/GsaCreateLinkedAttributeTabularColumn",
            "linkedColumn": "#/components/schemas/GsaCreateLinkedColumnTabularColumn",
            "linkedRecord": "#/components/schemas/GsaCreateLinkedRecordTabularColumn",
            "localPoint": "#/components/schemas/GsaCreateLocalPointTabularColumn",
            "localRange": "#/components/schemas/GsaCreateLocalRangeTabularColumn",
            "localInteger": "#/components/schemas/GsaCreateLocalIntegerTabularColumn",
            "localLogical": "#/components/schemas/GsaCreateLocalLogicalTabularColumn",
            "localShortText": "#/components/schemas/GsaCreateLocalShortTextTabularColumn",
            "localLongText": "#/components/schemas/GsaCreateLocalLongTextTabularColumn",
            "localDateTime": "#/components/schemas/GsaCreateLocalDateTimeTabularColumn",
            "localDiscrete": "#/components/schemas/GsaCreateLocalDiscreteTabularColumn",
            "localHyperlink": "#/components/schemas/GsaCreateLocalHyperlinkTabularColumn",
            "localFile": "#/components/schemas/GsaCreateLocalFileTabularColumn",
            "localPicture": "#/components/schemas/GsaCreateLocalPictureTabularColumn"
          }
        }
      },
      "GsaCreateUnit": {
        "required": [
          "name",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "equation": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaCreateUnitSystem": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Create dto for Unit Systems\r\nNo extra properties compared to CreateSlimNamedEntity yet, but exists for consistency with other 'create dto' types"
      },
      "GsaCreatedByUserProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "createdByUser": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'createdByUser'",
        "x-discriminator-value": "createdByUser",
        "x-discriminator-name": "propertyName"
      },
      "GsaCreatedDateProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "createdDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'createdDate'",
        "x-discriminator-value": "createdDate",
        "x-discriminator-name": "propertyName"
      },
      "GsaCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaCriterionType"
          }
        },
        "additionalProperties": false,
        "description": "The criterion to be used in a search.\r\n            \r\nMultiple criterion can be provided. These should be wrapped with a boolean criterion that specifies whether the search should return results that match \"any\", \"all\", or \"none\" of the criterion.\r\nThese criterion can be nested to created complex search queries.\r\n\r\nThis is one of: \r\n * GsaBooleanCriterion\r\n * GsaFreeTextCriterion\r\n * GsaFreeTextPrefixCriterion\r\n * GsaRecordListMemberCriterion\r\n * GsaRecordPropertyCriterion\r\n * GsaRecordReferenceCriterion\r\n * GsaRecordAncestorCriterion\r\n * GsaRecordAncestorHistoryCriterion\r\n * GsaRecordSubsetCriterion\r\n * GsaTabularLinkingValueCriterion\r\n * GsaAttributeCriterion\r\n * GsaLocalColumnCriterion\r\n * GsaNamedCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "boolean": "#/components/schemas/GsaBooleanCriterion",
            "text": "#/components/schemas/GsaFreeTextCriterion",
            "textPrefix": "#/components/schemas/GsaFreeTextPrefixCriterion",
            "recordListMember": "#/components/schemas/GsaRecordListMemberCriterion",
            "recordProperty": "#/components/schemas/GsaRecordPropertyCriterion",
            "reference": "#/components/schemas/GsaRecordReferenceCriterion",
            "recordAncestor": "#/components/schemas/GsaRecordAncestorCriterion",
            "recordAncestorHistory": "#/components/schemas/GsaRecordAncestorHistoryCriterion",
            "subset": "#/components/schemas/GsaRecordSubsetCriterion",
            "tabularLinkingValue": "#/components/schemas/GsaTabularLinkingValueCriterion",
            "attribute": "#/components/schemas/GsaAttributeCriterion",
            "localColumn": "#/components/schemas/GsaLocalColumnCriterion",
            "namedCriterion": "#/components/schemas/GsaNamedCriterion"
          }
        }
      },
      "GsaCriterionType": {
        "enum": [
          "boolean",
          "text",
          "textPrefix",
          "recordListMember",
          "recordProperty",
          "reference",
          "recordAncestor",
          "recordAncestorHistory",
          "subset",
          "tabularLinkingValue",
          "attribute",
          "localColumn",
          "namedCriterion"
        ],
        "type": "string"
      },
      "GsaCrossDatabaseRecordLinkGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaRecordLinkGroup"
          },
          {
            "required": [
              "includeIndirectLinks"
            ],
            "type": "object",
            "properties": {
              "includeIndirectLinks": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaRecordLinkGroup\r\n\r\nThe value of discriminator property ('type') must be equal to 'crossDatabase'",
        "x-discriminator-value": "crossDatabase",
        "x-discriminator-name": "type"
      },
      "GsaCurrentUser": {
        "type": "object",
        "properties": {
          "isAdmin": {
            "type": "boolean"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "hasWriteAccess": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportApplicableDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportDatum"
          },
          {
            "required": [
              "datumType"
            ],
            "type": "object",
            "properties": {
              "datumType": {
                "$ref": "#/components/schemas/GsaAttributeType"
              }
            },
            "discriminator": {
              "propertyName": "datumType",
              "mapping": {
                "logical": "#/components/schemas/GsaDataExportBooleanDatum",
                "dateTime": "#/components/schemas/GsaDataExportDateTimeDatum",
                "discrete": "#/components/schemas/GsaDataExportDiscreteDatum",
                "file": "#/components/schemas/GsaDataExportFileDatum",
                "floatFunctional": "#/components/schemas/GsaDataExportFloatFunctionalDatum",
                "discreteFunctional": "#/components/schemas/GsaDataExportDiscreteFunctionalDatum",
                "hyperlink": "#/components/schemas/GsaDataExportHyperlinkDatum",
                "link": "#/components/schemas/GsaDataExportLinkDatum",
                "longText": "#/components/schemas/GsaDataExportLongTextDatum",
                "integer": "#/components/schemas/GsaDataExportNumericDatum",
                "picture": "#/components/schemas/GsaDataExportPictureDatum",
                "point": "#/components/schemas/GsaDataExportPointDatum",
                "range": "#/components/schemas/GsaDataExportRangeDatum",
                "shortText": "#/components/schemas/GsaDataExportShortTextDatum"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportDatum\r\n\r\nThe value of discriminator property ('notApplicable') must be equal to 'applicable'\r\n\r\nThis is one of: \r\n * GsaDataExportBooleanDatum\r\n * GsaDataExportDateTimeDatum\r\n * GsaDataExportDiscreteDatum\r\n * GsaDataExportFileDatum\r\n * GsaDataExportFloatFunctionalDatum\r\n * GsaDataExportDiscreteFunctionalDatum\r\n * GsaDataExportHyperlinkDatum\r\n * GsaDataExportLinkDatum\r\n * GsaDataExportLongTextDatum\r\n * GsaDataExportNumericDatum\r\n * GsaDataExportPictureDatum\r\n * GsaDataExportPointDatum\r\n * GsaDataExportRangeDatum\r\n * GsaDataExportShortTextDatum",
        "x-discriminator-value": "applicable",
        "x-discriminator-name": "notApplicable"
      },
      "GsaDataExportBinaryData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportBooleanDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportCountRollupDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportRollupDatum"
          },
          {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A count of the number of populated values\r\n\r\nThis extends: GsaDataExportRollupDatum\r\n\r\nThe value of discriminator property ('type') must be equal to 'countRollup'",
        "x-discriminator-value": "countRollup",
        "x-discriminator-name": "type"
      },
      "GsaDataExportDateTimeDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'dateTime'",
        "x-discriminator-value": "dateTime",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportDatum": {
        "required": [
          "attributeGuid",
          "attributeIdentity",
          "notApplicable"
        ],
        "type": "object",
        "properties": {
          "attributeIdentity": {
            "type": "integer",
            "format": "int64"
          },
          "attributeGuid": {
            "type": "string",
            "format": "uuid"
          },
          "metaDatums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportDatum"
            },
            "nullable": true
          },
          "notApplicable": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDataExportNotApplicableDatum\r\n * GsaDataExportApplicableDatum\r\n * GsaDataExportUnknownDatum",
        "discriminator": {
          "propertyName": "notApplicable",
          "mapping": {
            "notApplicable": "#/components/schemas/GsaDataExportNotApplicableDatum",
            "applicable": "#/components/schemas/GsaDataExportApplicableDatum",
            "unknown": "#/components/schemas/GsaDataExportUnknownDatum"
          }
        }
      },
      "GsaDataExportDiscreteDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDiscreteValue"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportDiscreteFunctionalDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "required": [
              "graphType"
            ],
            "type": "object",
            "properties": {
              "graphType": {
                "type": "string",
                "nullable": true
              },
              "xAxisParameter": {
                "$ref": "#/components/schemas/GsaFunctionalDatumParameterInfo"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaFunctionalDatumParameterInfo"
                },
                "nullable": true
              }
            },
            "discriminator": {
              "propertyName": "graphType",
              "mapping": {
                "grid": "#/components/schemas/GsaDataExportDiscreteFunctionalGridDatum",
                "series": "#/components/schemas/GsaDataExportDiscreteFunctionalSeriesDatum"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'discreteFunctional'\r\n\r\nThis is one of: \r\n * GsaDataExportDiscreteFunctionalGridDatum\r\n * GsaDataExportDiscreteFunctionalSeriesDatum",
        "x-discriminator-value": "discreteFunctional",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportDiscreteFunctionalGridDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportDiscreteFunctionalDatum"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDataExportDiscreteGridPoint"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportDiscreteFunctionalDatum\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'grid'",
        "x-discriminator-value": "grid",
        "x-discriminator-name": "graphType"
      },
      "GsaDataExportDiscreteFunctionalSeriesDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportDiscreteFunctionalDatum"
          },
          {
            "type": "object",
            "properties": {
              "series": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDataExportDiscreteSeries"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportDiscreteFunctionalDatum\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'series'",
        "x-discriminator-value": "series",
        "x-discriminator-name": "graphType"
      },
      "GsaDataExportDiscreteGridPoint": {
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportParameterValue"
            },
            "nullable": true
          },
          "value": {
            "$ref": "#/components/schemas/GsaDiscreteValue"
          },
          "isEstimated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportDiscreteSeries": {
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportParameterValue"
            },
            "nullable": true
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportDiscreteSeriesPoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportDiscreteSeriesPoint": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "xName": {
            "type": "string",
            "nullable": true
          },
          "y": {
            "$ref": "#/components/schemas/GsaDiscreteValue"
          },
          "isEstimated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportFileDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "$ref": "#/components/schemas/GsaDataExportBinaryData"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'file'",
        "x-discriminator-value": "file",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportFloatFunctionalDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "required": [
              "graphType"
            ],
            "type": "object",
            "properties": {
              "graphType": {
                "type": "string",
                "nullable": true
              },
              "unitSymbol": {
                "type": "string",
                "nullable": true
              },
              "xAxisParameter": {
                "$ref": "#/components/schemas/GsaFunctionalDatumParameterInfo"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaFunctionalDatumParameterInfo"
                },
                "nullable": true
              },
              "isEstimated": {
                "type": "boolean"
              },
              "isRange": {
                "type": "boolean"
              },
              "isLogarithmic": {
                "type": "boolean"
              }
            },
            "discriminator": {
              "propertyName": "graphType",
              "mapping": {
                "grid": "#/components/schemas/GsaDataExportFunctionalGridDatum",
                "series": "#/components/schemas/GsaDataExportFunctionalSeriesDatum"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'floatFunctional'\r\n\r\nThis is one of: \r\n * GsaDataExportFunctionalGridDatum\r\n * GsaDataExportFunctionalSeriesDatum",
        "x-discriminator-value": "floatFunctional",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportFunctionalGridDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportFloatFunctionalDatum"
          },
          {
            "type": "object",
            "properties": {
              "points": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDataExportGridPoint"
                },
                "nullable": true
              },
              "graphDecoration": {
                "$ref": "#/components/schemas/GsaDataExportGraphDecoration"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportFloatFunctionalDatum\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'grid'",
        "x-discriminator-value": "grid",
        "x-discriminator-name": "graphType"
      },
      "GsaDataExportFunctionalSeriesDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportFloatFunctionalDatum"
          },
          {
            "type": "object",
            "properties": {
              "series": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDataExportSeries"
                },
                "nullable": true
              },
              "showAsTable": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportFloatFunctionalDatum\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'series'",
        "x-discriminator-value": "series",
        "x-discriminator-name": "graphType"
      },
      "GsaDataExportGraphDecoration": {
        "enum": [
          "Lines",
          "Markers",
          "LinesAndMarkers"
        ],
        "type": "string",
        "description": "Indicates how a graphical representation of a graph should be rendered<p>Possible values:</p>\r\n<ul>\r\n<li><b>Lines</b>: Lines</li>\r\n<li><b>Markers</b>: Markers</li>\r\n<li><b>LinesAndMarkers</b>: Lines and Markers</li>\r\n</ul>\r\n"
      },
      "GsaDataExportGridPoint": {
        "required": [
          "isEstimated"
        ],
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportParameterValue"
            },
            "nullable": true
          },
          "lowValue": {
            "type": "number",
            "format": "double"
          },
          "highValue": {
            "type": "number",
            "format": "double"
          },
          "isEstimated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportHyperlink": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "formattedAddress": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "$ref": "#/components/schemas/GsaHyperlinkTarget"
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportHyperlinkDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "$ref": "#/components/schemas/GsaDataExportHyperlink"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'hyperlink'",
        "x-discriminator-value": "hyperlink",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportLinkDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "required": [
              "linkDatumType"
            ],
            "type": "object",
            "properties": {
              "linkDatumType": {
                "type": "string",
                "nullable": true
              }
            },
            "discriminator": {
              "propertyName": "linkDatumType",
              "mapping": {
                "linkGroup": "#/components/schemas/GsaDataExportLinkedRecordsDatum",
                "tabular": "#/components/schemas/GsaDataExportTabularDatum"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'link'\r\n\r\nThis is one of: \r\n * GsaDataExportLinkedRecordsDatum\r\n * GsaDataExportTabularDatum",
        "x-discriminator-value": "link",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportLinkedRecordsDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportLinkDatum"
          },
          {
            "type": "object",
            "properties": {
              "linkGroupName": {
                "type": "string",
                "nullable": true
              },
              "linkAttributeType": {
                "$ref": "#/components/schemas/GsaLinkAttributeType"
              },
              "exportInReversedDirection": {
                "type": "boolean"
              },
              "targetDatabaseGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "linkedRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaRecordWithData"
                },
                "nullable": true
              },
              "linkGroupNamesByDatabaseKey": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "nullable": true
                },
                "nullable": true
              },
              "linkGroupIdentitiesByDatabaseKey": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
                },
                "nullable": true
              },
              "rolledUpData": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDataExportRollupDatum"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportLinkDatum\r\n\r\nThe value of discriminator property ('linkDatumType') must be equal to 'linkGroup'",
        "x-discriminator-value": "linkGroup",
        "x-discriminator-name": "linkDatumType"
      },
      "GsaDataExportLongTextDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'longText'",
        "x-discriminator-value": "longText",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportNotApplicableDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportDatum"
          },
          {
            "required": [
              "datumType"
            ],
            "type": "object",
            "properties": {
              "datumType": {
                "$ref": "#/components/schemas/GsaAttributeType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportDatum\r\n\r\nThe value of discriminator property ('notApplicable') must be equal to 'notApplicable'",
        "x-discriminator-value": "notApplicable",
        "x-discriminator-name": "notApplicable"
      },
      "GsaDataExportNumericDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportNumericRollupDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportRollupDatum"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "unit": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A statistical rollup of a set of numeric values\r\n\r\nThis extends: GsaDataExportRollupDatum\r\n\r\nThe value of discriminator property ('type') must be equal to 'statisticalRollup'",
        "x-discriminator-value": "statisticalRollup",
        "x-discriminator-name": "type"
      },
      "GsaDataExportParameterValue": {
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GsaParameterInfo"
          },
          "valueName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportPictureDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "$ref": "#/components/schemas/GsaDataExportBinaryData"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'picture'",
        "x-discriminator-value": "picture",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportPoint": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportParameterValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportPointDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDataExportPoint"
                },
                "nullable": true
              },
              "isEstimated": {
                "type": "boolean"
              },
              "unit": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportRange": {
        "type": "object",
        "properties": {
          "highValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lowValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "highValueIsInclusive": {
            "type": "boolean"
          },
          "lowValueIsInclusive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportRangeDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "$ref": "#/components/schemas/GsaDataExportRange"
              },
              "isEstimated": {
                "type": "boolean"
              },
              "unit": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportRequest": {
        "required": [
          "attributes",
          "recordProperties"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaAttributeToExport"
            }
          },
          "recordProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaRecordProperty"
            }
          },
          "recordHistoryGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "recordVersionGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Data can be exported for either record histories or record versions in each request, not both.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request object for exporting the attribute data from a list of records. Either the identity or GUID of the attributes to export must be provided"
      },
      "GsaDataExportResponse": {
        "required": [
          "failures",
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaRecordWithData"
            }
          },
          "failures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaExportFailure"
            },
            "description": "List the records that were requested, but that we failed to export any data for."
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportRollupDatum": {
        "required": [
          "pathAttributeGuids",
          "pathAttributeIdentities",
          "type"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string",
            "description": "The database key of the rolled up data",
            "nullable": true
          },
          "attributeIdentity": {
            "type": "integer",
            "description": "The attribute identity of the rolled up data.\r\nIf the data came from a local column, this is the column identity.\r\nIf the data came from linked records, this is the identity of the tabular attribute",
            "format": "int64",
            "nullable": true
          },
          "attributeGuid": {
            "type": "string",
            "description": "The attribute GUID of the rolled up data.\r\nIf the data came from a local column, this is the column GUID.\r\nIf the data came from linked records, this is the GUID of the tabular attribute",
            "format": "uuid",
            "nullable": true
          },
          "rollUpType": {
            "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
          },
          "pathAttributeGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The path from the exported link datum that contains this rollup, to the rolled up attribute.\r\nCan be used to distinguish rollups over the same attribute via different link attributes.\r\nOnly populated if the attributes were requested by GUID - if they were requested by identity, see pathAttributeIdentities."
          },
          "pathAttributeIdentities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The path from the exported link datum that contains this rollup, to the rolled up attribute.\r\nCan be used to distinguish rollups over the same attribute via different link attributes.\r\nOnly populated if the attributes were requested by identity - if they were requested by GUID, see pathAttributeGuids."
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDataExportNumericRollupDatum\r\n * GsaDataExportValueRollupDatum\r\n * GsaDataExportValuesRollupDatum\r\n * GsaDataExportCountRollupDatum",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "statisticalRollup": "#/components/schemas/GsaDataExportNumericRollupDatum",
            "valueRollup": "#/components/schemas/GsaDataExportValueRollupDatum",
            "valuesRollup": "#/components/schemas/GsaDataExportValuesRollupDatum",
            "countRollup": "#/components/schemas/GsaDataExportCountRollupDatum"
          }
        }
      },
      "GsaDataExportSeries": {
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportParameterValue"
            },
            "nullable": true
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportSeriesPoint"
            },
            "nullable": true
          },
          "graphDecoration": {
            "$ref": "#/components/schemas/GsaDataExportGraphDecoration"
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportSeriesPoint": {
        "required": [
          "isEstimated"
        ],
        "type": "object",
        "properties": {
          "xValue": {
            "type": "number",
            "format": "double"
          },
          "xName": {
            "type": "string",
            "nullable": true
          },
          "yLowValue": {
            "type": "number",
            "format": "double"
          },
          "yHighValue": {
            "type": "number",
            "format": "double"
          },
          "isEstimated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportShortTextDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportApplicableDatum"
          },
          {
            "type": "object",
            "properties": {
              "datumValue": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "datumType"
      },
      "GsaDataExportTabularDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportLinkDatum"
          },
          {
            "type": "object",
            "properties": {
              "attributeName": {
                "type": "string",
                "nullable": true
              },
              "tabularRows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDataExportTabularRow"
                },
                "nullable": true
              },
              "summaryRow": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDataExportRollupDatum"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportLinkDatum\r\n\r\nThe value of discriminator property ('linkDatumType') must be equal to 'tabular'",
        "x-discriminator-value": "tabular",
        "x-discriminator-name": "linkDatumType"
      },
      "GsaDataExportTabularRow": {
        "type": "object",
        "properties": {
          "rowGuid": {
            "type": "string",
            "format": "uuid"
          },
          "linkingValue": {
            "type": "string",
            "nullable": true
          },
          "rowNumber": {
            "type": "integer",
            "format": "int32"
          },
          "localData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportDatum"
            },
            "nullable": true
          },
          "linkedRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaRecordHistoryReference"
            },
            "description": "Records linked to this tabular row (only populated if the target table/attribute was provided in the request)",
            "nullable": true
          },
          "linkedData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaRecordWithData"
            },
            "description": "Data for the linked records, if the request included linked data to export",
            "nullable": true
          },
          "rolledUpData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportRollupDatum"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDataExportUnknownDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportDatum"
          },
          {
            "required": [
              "datumType"
            ],
            "type": "object",
            "properties": {
              "datumType": {
                "$ref": "#/components/schemas/GsaAttributeType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataExportDatum\r\n\r\nThe value of discriminator property ('notApplicable') must be equal to 'unknown'",
        "x-discriminator-value": "unknown",
        "x-discriminator-name": "notApplicable"
      },
      "GsaDataExportValueRollupDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportRollupDatum"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A rollup where the value is a single object (such as a discrete value)\r\n\r\nThis extends: GsaDataExportRollupDatum\r\n\r\nThe value of discriminator property ('type') must be equal to 'valueRollup'",
        "x-discriminator-value": "valueRollup",
        "x-discriminator-name": "type"
      },
      "GsaDataExportValuesRollupDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataExportRollupDatum"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "nullable": true
              },
              "unit": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A rollup to a list of values\r\n\r\nThis extends: GsaDataExportRollupDatum\r\n\r\nThe value of discriminator property ('type') must be equal to 'valuesRollup'",
        "x-discriminator-value": "valuesRollup",
        "x-discriminator-name": "type"
      },
      "GsaDataModificationErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaDataModificationErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaUsageDataModificationErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "usage": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          }
        }
      },
      "GsaDataModificationErrorReason": {
        "enum": [
          "usage"
        ],
        "type": "string"
      },
      "GsaDataRule": {
        "required": [
          "description",
          "guid",
          "name",
          "regularExpression",
          "usedByAttributes"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "regularExpression": {
            "type": "string"
          },
          "usedByAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimAttribute"
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaDataRulesInfo": {
        "type": "object",
        "properties": {
          "dataRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDataUpdate": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/GsaDataUpdateToken"
          },
          "header": {
            "$ref": "#/components/schemas/GsaDataUpdateHeader"
          },
          "runInfo": {
            "$ref": "#/components/schemas/GsaDataUpdateRunInfo"
          }
        },
        "additionalProperties": false
      },
      "GsaDataUpdateHeader": {
        "type": "object",
        "properties": {
          "createDate": {
            "type": "string",
            "description": "The date and time that the update was created.",
            "format": "date-time"
          },
          "updateGuid": {
            "type": "string",
            "description": "A unique identity to disambiguate this update from all other updates.",
            "format": "uuid"
          },
          "prerequisiteUpdateGuid": {
            "type": "string",
            "description": "GUID for the previous update that need to have been applied before this update can be applied.",
            "format": "uuid",
            "nullable": true
          },
          "prerequisiteUpdateName": {
            "type": "string",
            "description": "Name of the previous update that need to have been applied before this update can be applied.  This is used only for display purposes.",
            "nullable": true
          },
          "miVersion": {
            "type": "string",
            "description": "Gets the version of MI that was used to create this update.",
            "nullable": true
          },
          "supportedObjectsVersion": {
            "type": "integer",
            "description": "Gets or sets the version number indicating the kinds of object that this update supports. A client will be\r\nable to process updates with an unrecognised SupportedObjectsVersion (although in doing so it will have to\r\nignore fields describing objects it does not recognise).",
            "format": "int32"
          },
          "updateFormatVersion": {
            "type": "integer",
            "description": "Gets or sets the version number of the format of the update. This will change if the meaning of any of the\r\nfields in the update changes. A client must not process an update with an UpdateFormatVersion field that it\r\ndoes not recognise, as it cannot be sure of the meaning of the fields it reads.",
            "format": "int32"
          },
          "sourceDatabaseKey": {
            "type": "string",
            "description": "Gets or sets the database key of the database from which this update was generated.",
            "nullable": true
          },
          "sourceVolumeGuid": {
            "type": "string",
            "description": "Gets or sets the guid of the volume from which the update was generated.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the update.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the update.",
            "nullable": true
          },
          "projectName": {
            "type": "string",
            "description": "Gets or sets the name of the project this update was created for.",
            "nullable": true
          },
          "projectGuid": {
            "type": "string",
            "description": "Gets or sets the guid of the project this update was created for.",
            "format": "uuid"
          },
          "containsFallbackIdentifiers": {
            "type": "boolean",
            "description": "Gets or sets the flag informing whether or not this update contains fallback identifiers (mostly names)."
          },
          "newVersionGuid": {
            "type": "string",
            "description": "Gets or sets the value Database Version GUID should be updated to.\r\nIf this field is set then we propose to retarget tabular attributes to link to new version of the database.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDataUpdateRunInfo": {
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string",
            "nullable": true
          },
          "matchMode": {
            "$ref": "#/components/schemas/GsaMatchMode"
          },
          "applyAddsAsState": {
            "type": "boolean"
          },
          "retargetTabularAttributes": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/GsaUpdateRunStatus"
          },
          "progressPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "appliedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDataUpdateToken": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "databaseKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDataUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "required": [
              "entityInUse"
            ],
            "type": "object",
            "properties": {
              "entityInUse": {
                "$ref": "#/components/schemas/GsaSlimNamedEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'data'",
        "x-discriminator-value": "data",
        "x-discriminator-name": "referencedByType"
      },
      "GsaDatabase": {
        "required": [
          "isLocked",
          "isReadOnly",
          "key",
          "status",
          "userCapabilities"
        ],
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "isAccessControlled": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/GsaDatabaseStatus"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "indexInSync": {
            "type": "boolean",
            "nullable": true
          },
          "indexUpToDate": {
            "type": "boolean",
            "nullable": true
          },
          "indexOutOfDateDuration": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "schemaVersion": {
            "type": "string",
            "nullable": true
          },
          "userCapabilities": {
            "$ref": "#/components/schemas/GsaDatabaseUserCapabilities"
          },
          "configurationDetails": {
            "$ref": "#/components/schemas/GsaConfigurationDetails"
          },
          "issues": {
            "$ref": "#/components/schemas/GsaDatabaseIssues"
          }
        },
        "additionalProperties": false
      },
      "GsaDatabaseIssues": {
        "required": [
          "databaseRevisionIdentityHasDecreased"
        ],
        "type": "object",
        "properties": {
          "databaseRevisionIdentityHasDecreased": {
            "type": "boolean"
          },
          "loadingExceptionInfo": {
            "$ref": "#/components/schemas/GsaExceptionInformation"
          }
        },
        "additionalProperties": false
      },
      "GsaDatabaseKeyProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "databaseKey": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'databaseKey'",
        "x-discriminator-value": "databaseKey",
        "x-discriminator-name": "propertyName"
      },
      "GsaDatabaseStatus": {
        "enum": [
          "Unknown",
          "Ok",
          "Unloaded",
          "Loading",
          "Unloading",
          "FailedToLoad",
          "FailedToUnload",
          "Disabled",
          "SchemaUpgradeRequired",
          "SchemaDowngradeRequired",
          "Missing"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>Unknown</b>: The current state is unknown.</li>\r\n<li><b>Ok</b>: The database is working correctly.</li>\r\n<li><b>Unloaded</b>: The database is not loaded.</li>\r\n<li><b>Loading</b>: The database is currently being loaded.</li>\r\n<li><b>Unloading</b>: The database is currently being unloaded.</li>\r\n<li><b>FailedToLoad</b>: The database failed to be loaded.</li>\r\n<li><b>FailedToUnload</b>: The database failed to be unloaded.</li>\r\n<li><b>Disabled</b>: The database is currently disabled.</li>\r\n<li><b>SchemaUpgradeRequired</b>: The database is at a lower version of the database schema than the current software</li>\r\n<li><b>SchemaDowngradeRequired</b>: The database is at a higher version of the database schema than the current software</li>\r\n<li><b>Missing</b>: The database is currently missing.</li>\r\n</ul>\r\n"
      },
      "GsaDatabaseStatusInformation": {
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string",
            "description": "Gets the database key for this database.",
            "nullable": true
          },
          "databaseIsReadOnly": {
            "type": "boolean",
            "description": "Gets a value indicating whether the database is read only."
          },
          "isLocked": {
            "type": "boolean",
            "description": "Gets a value indicating whether the database is locked for non-admin users."
          },
          "state": {
            "$ref": "#/components/schemas/GsaDatabaseStatus"
          },
          "schemaVersion": {
            "type": "string",
            "description": "Gets the schema version of the database.",
            "nullable": true
          },
          "searchIndexInSync": {
            "type": "boolean",
            "description": "Whether the search indexes for this database are in sync with the database changes"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nstate: Gets the state of this database."
      },
      "GsaDatabaseUserCapabilities": {
        "required": [
          "canRead",
          "canWrite"
        ],
        "type": "object",
        "properties": {
          "canRead": {
            "type": "boolean",
            "description": "Specifies whether the current user can read from the database."
          },
          "canWrite": {
            "type": "boolean",
            "description": "Specifies whether the current user can write to the database."
          }
        },
        "additionalProperties": false
      },
      "GsaDatabasesInfo": {
        "type": "object",
        "properties": {
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimDatabase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDateTimeAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "maximum": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'dateTime'",
        "x-discriminator-value": "dateTime",
        "x-discriminator-name": "datumType"
      },
      "GsaDateTimeAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a datetime attribute. The returned aggregation will contain the minimum and maximum\r\nvalues, and a count of records with a value for the attribute.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'dateTime'",
        "x-discriminator-value": "dateTime",
        "x-discriminator-name": "type"
      },
      "GsaDateTimeAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'dateTime'",
        "x-discriminator-value": "dateTime",
        "x-discriminator-name": "type"
      },
      "GsaDateTimeDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "dateTime"
            ],
            "type": "object",
            "properties": {
              "dateTime": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'dateTime'",
        "x-discriminator-value": "dateTime",
        "x-discriminator-name": "datumType"
      },
      "GsaDateTimeDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "string",
                "description": "Greater than or equal to",
                "format": "date-time",
                "nullable": true
              },
              "lte": {
                "type": "string",
                "description": "Less than or equal to",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "dateTime: Criterion for matching records where the datetime data is within the given bounds. If one of gte or lte is null, this will be an open ended search.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'dateTime'",
        "x-discriminator-value": "dateTime",
        "x-discriminator-name": "type"
      },
      "GsaDateTimeDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'dateTime'",
        "x-discriminator-value": "dateTime",
        "x-discriminator-name": "type"
      },
      "GsaDateTimeFixedCalendarWidthHistogramAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "required": [
              "interval"
            ],
            "type": "object",
            "properties": {
              "interval": {
                "$ref": "#/components/schemas/GsaCalendarInterval"
              },
              "offset": {
                "type": "string",
                "description": "Optional offset of the lowest bucket boundary, in SI time units. Must be an integer followed by one of the following units: ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). Defaults to 0. Must be less than the interval. Negative offsets (e.g. \"-6h\") are supported",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a date attribute. The returned aggregation will contain a histogram of the data with a fixed calendar interval.\r\n\r\ninterval: Fixed size of the resulting histogram buckets, in a calendar interval\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'dateTimeFixedCalendarWidthHistogram'",
        "x-discriminator-value": "dateTimeFixedCalendarWidthHistogram",
        "x-discriminator-name": "type"
      },
      "GsaDateTimeFixedWidthHistogramAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "required": [
              "interval"
            ],
            "type": "object",
            "properties": {
              "interval": {
                "type": "string",
                "description": "Fixed size of the resulting histogram buckets, in SI time units. Must be an integer followed by one of the following units: ms (milliseconds), s (seconds), m (minutes), h (hours), d (days)"
              },
              "offset": {
                "type": "string",
                "description": "Optional offset of the lowest bucket boundary, in SI time units. Must be an integer followed by one of the following units: ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). Defaults to 0. Must be less than the interval. Negative offsets (e.g. \"-6h\") are supported",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a date attribute. The returned aggregation will contain a histogram of the data with a fixed interval.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'dateTimeFixedWidthHistogram'",
        "x-discriminator-value": "dateTimeFixedWidthHistogram",
        "x-discriminator-name": "type"
      },
      "GsaDateTimeHistogram": {
        "type": "object",
        "properties": {
          "buckets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDateTimeHistogramBucket"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDateTimeHistogramAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "histogram": {
                "$ref": "#/components/schemas/GsaDateTimeHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'dateTimeHistogram'",
        "x-discriminator-value": "dateTimeHistogram",
        "x-discriminator-name": "datumType"
      },
      "GsaDateTimeHistogramAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "maximumNumberOfBuckets": {
                "type": "integer",
                "description": "The maximum number of buckets to return.",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within an datetime attribute. The returned aggregation will contain a histogram of the data with a fixed number of buckets. The buckets may have variable widths.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'dateTimeHistogram'",
        "x-discriminator-value": "dateTimeHistogram",
        "x-discriminator-name": "type"
      },
      "GsaDateTimeHistogramBucket": {
        "type": "object",
        "properties": {
          "lower": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GsaDatum": {
        "required": [
          "notApplicable"
        ],
        "type": "object",
        "properties": {
          "notApplicable": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaApplicableDatum\r\n * GsaNotApplicableDatum",
        "discriminator": {
          "propertyName": "notApplicable",
          "mapping": {
            "applicable": "#/components/schemas/GsaApplicableDatum",
            "notApplicable": "#/components/schemas/GsaNotApplicableDatum"
          }
        }
      },
      "GsaDatumCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaDatumCriterionType"
          }
        },
        "additionalProperties": false,
        "description": "Inner criterion of an attribute search criterion. The specific criterion used should match the type of the attribute specified on the outer criterion (Note that there are multiple types that can be used with a discrete attribute, depending on the type of search.)\r\n\r\nThis is one of: \r\n * GsaDateTimeDatumCriterion\r\n * GsaDiscreteFunctionalRangeDatumCriterion\r\n * GsaDiscreteFunctionalValuesDatumCriterion\r\n * GsaDiscreteIdentityDatumCriterion\r\n * GsaDiscreteIdentityValuesDatumCriterion\r\n * GsaDiscreteGuidDatumCriterion\r\n * GsaDiscreteGuidValuesDatumCriterion\r\n * GsaDiscreteRangeDatumCriterion\r\n * GsaDiscreteTextDatumCriterion\r\n * GsaDiscreteTextPrefixDatumCriterion\r\n * GsaDiscreteTextValuesDatumCriterion\r\n * GsaFileDatumCriterion\r\n * GsaFilePrefixDatumCriterion\r\n * GsaFloatFunctionalDatumCriterion\r\n * GsaFloatFunctionalGraphDatumCriterion\r\n * GsaHyperlinkDatumCriterion\r\n * GsaHyperlinkPrefixDatumCriterion\r\n * GsaIntegerDatumCriterion\r\n * GsaLinkDatumCriterion\r\n * GsaLogicalDatumCriterion\r\n * GsaLongTextDatumCriterion\r\n * GsaLongTextPrefixDatumCriterion\r\n * GsaMathsFunctionalDatumCriterion\r\n * GsaPictureDatumCriterion\r\n * GsaPointDatumCriterion\r\n * GsaRangeDatumCriterion\r\n * GsaShortTextDatumCriterion\r\n * GsaShortTextPrefixDatumCriterion\r\n * GsaLinkingValueExistsDatumCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "dateTime": "#/components/schemas/GsaDateTimeDatumCriterion",
            "discreteFunctionalRange": "#/components/schemas/GsaDiscreteFunctionalRangeDatumCriterion",
            "discreteFunctionalValues": "#/components/schemas/GsaDiscreteFunctionalValuesDatumCriterion",
            "discreteIdentity": "#/components/schemas/GsaDiscreteIdentityDatumCriterion",
            "discreteIdentityValues": "#/components/schemas/GsaDiscreteIdentityValuesDatumCriterion",
            "discreteGuid": "#/components/schemas/GsaDiscreteGuidDatumCriterion",
            "discreteGuidValues": "#/components/schemas/GsaDiscreteGuidValuesDatumCriterion",
            "discreteRange": "#/components/schemas/GsaDiscreteRangeDatumCriterion",
            "discreteText": "#/components/schemas/GsaDiscreteTextDatumCriterion",
            "discreteTextPrefix": "#/components/schemas/GsaDiscreteTextPrefixDatumCriterion",
            "discreteTextValues": "#/components/schemas/GsaDiscreteTextValuesDatumCriterion",
            "file": "#/components/schemas/GsaFileDatumCriterion",
            "filePrefix": "#/components/schemas/GsaFilePrefixDatumCriterion",
            "floatFunctionalData": "#/components/schemas/GsaFloatFunctionalDatumCriterion",
            "floatFunctionalGraph": "#/components/schemas/GsaFloatFunctionalGraphDatumCriterion",
            "hyperlink": "#/components/schemas/GsaHyperlinkDatumCriterion",
            "hyperlinkPrefix": "#/components/schemas/GsaHyperlinkPrefixDatumCriterion",
            "integer": "#/components/schemas/GsaIntegerDatumCriterion",
            "link": "#/components/schemas/GsaLinkDatumCriterion",
            "logical": "#/components/schemas/GsaLogicalDatumCriterion",
            "longText": "#/components/schemas/GsaLongTextDatumCriterion",
            "longTextPrefix": "#/components/schemas/GsaLongTextPrefixDatumCriterion",
            "mathsFunctional": "#/components/schemas/GsaMathsFunctionalDatumCriterion",
            "picture": "#/components/schemas/GsaPictureDatumCriterion",
            "point": "#/components/schemas/GsaPointDatumCriterion",
            "range": "#/components/schemas/GsaRangeDatumCriterion",
            "shortText": "#/components/schemas/GsaShortTextDatumCriterion",
            "shortTextPrefix": "#/components/schemas/GsaShortTextPrefixDatumCriterion",
            "smartLinkingValue": "#/components/schemas/GsaLinkingValueExistsDatumCriterion"
          }
        }
      },
      "GsaDatumCriterionType": {
        "enum": [
          "dateTime",
          "discreteFunctionalRange",
          "discreteFunctionalValues",
          "discreteIdentity",
          "discreteIdentityValues",
          "discreteGuid",
          "discreteGuidValues",
          "discreteRange",
          "discreteText",
          "discreteTextPrefix",
          "discreteTextValues",
          "file",
          "filePrefix",
          "floatFunctionalData",
          "floatFunctionalGraph",
          "hyperlink",
          "hyperlinkPrefix",
          "integer",
          "link",
          "logical",
          "longText",
          "longTextPrefix",
          "mathsFunctional",
          "picture",
          "point",
          "range",
          "shortText",
          "shortTextPrefix",
          "smartLinkingValue"
        ],
        "type": "string"
      },
      "GsaDatumDiscreteRollup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumRollup"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumRollup\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaDatumDoubleRollup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumRollup"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumRollup\r\n\r\nThe value of discriminator property ('type') must be equal to 'double'",
        "x-discriminator-value": "double",
        "x-discriminator-name": "type"
      },
      "GsaDatumExistsCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          }
        },
        "additionalProperties": false,
        "description": "Inner criterion of an attribute search criterion for when the only bit of information about the datum that we want to convey is its type\r\nFor link datum types, linking information must also be provided.\r\n\r\nThis is one of: \r\n * GsaIntegerDatumExistsCriterion\r\n * GsaPointDatumExistsCriterion\r\n * GsaRangeDatumExistsCriterion\r\n * GsaLogicalDatumExistsCriterion\r\n * GsaShortTextDatumExistsCriterion\r\n * GsaLongTextDatumExistsCriterion\r\n * GsaDateTimeDatumExistsCriterion\r\n * GsaDiscreteDatumExistsCriterion\r\n * GsaHyperlinkDatumExistsCriterion\r\n * GsaFileDatumExistsCriterion\r\n * GsaPictureDatumExistsCriterion\r\n * GsaLinkExistsDatumCriterion\r\n * GsaFloatFunctionalDatumExistsCriterion\r\n * GsaDiscreteFunctionalDatumExistsCriterion\r\n * GsaMathsFunctionalDatumExistsCriterion\r\n * GsaTabularDatumExistsCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "integer": "#/components/schemas/GsaIntegerDatumExistsCriterion",
            "point": "#/components/schemas/GsaPointDatumExistsCriterion",
            "range": "#/components/schemas/GsaRangeDatumExistsCriterion",
            "logical": "#/components/schemas/GsaLogicalDatumExistsCriterion",
            "shortText": "#/components/schemas/GsaShortTextDatumExistsCriterion",
            "longText": "#/components/schemas/GsaLongTextDatumExistsCriterion",
            "dateTime": "#/components/schemas/GsaDateTimeDatumExistsCriterion",
            "discrete": "#/components/schemas/GsaDiscreteDatumExistsCriterion",
            "hyperlink": "#/components/schemas/GsaHyperlinkDatumExistsCriterion",
            "file": "#/components/schemas/GsaFileDatumExistsCriterion",
            "picture": "#/components/schemas/GsaPictureDatumExistsCriterion",
            "link": "#/components/schemas/GsaLinkExistsDatumCriterion",
            "floatFunctional": "#/components/schemas/GsaFloatFunctionalDatumExistsCriterion",
            "discreteFunctional": "#/components/schemas/GsaDiscreteFunctionalDatumExistsCriterion",
            "mathsFunctional": "#/components/schemas/GsaMathsFunctionalDatumExistsCriterion",
            "tabular": "#/components/schemas/GsaTabularDatumExistsCriterion"
          }
        }
      },
      "GsaDatumExportFailure": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaExportFailure"
          },
          {
            "required": [
              "failedDatum"
            ],
            "type": "object",
            "properties": {
              "failedDatum": {
                "$ref": "#/components/schemas/GsaDatumReference"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaExportFailure\r\n\r\nThe value of discriminator property ('type') must be equal to 'datum'",
        "x-discriminator-value": "datum",
        "x-discriminator-name": "type"
      },
      "GsaDatumIntegerRollup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumRollup"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumRollup\r\n\r\nThe value of discriminator property ('type') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "type"
      },
      "GsaDatumListRollup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumRollup"
          },
          {
            "required": [
              "listRollupDatums"
            ],
            "type": "object",
            "properties": {
              "listRollupDatums": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaListRollupDatum"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumRollup\r\n\r\nThe value of discriminator property ('type') must be equal to 'list'",
        "x-discriminator-value": "list",
        "x-discriminator-name": "type"
      },
      "GsaDatumReference": {
        "required": [
          "attributeIdentity",
          "databaseKey",
          "recordHistoryGuid"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string"
          },
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          },
          "attributeIdentity": {
            "type": "integer",
            "format": "int32"
          },
          "attributeGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDatumRollup": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaDatumRollupType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDatumListRollup\r\n * GsaDatumIntegerRollup\r\n * GsaDatumDoubleRollup\r\n * GsaDatumDiscreteRollup",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "list": "#/components/schemas/GsaDatumListRollup",
            "integer": "#/components/schemas/GsaDatumIntegerRollup",
            "double": "#/components/schemas/GsaDatumDoubleRollup",
            "discrete": "#/components/schemas/GsaDatumDiscreteRollup"
          }
        }
      },
      "GsaDatumRollupType": {
        "enum": [
          "list",
          "integer",
          "double",
          "discrete"
        ],
        "type": "string",
        "description": "The datum rollups supported by the API.<p>Possible values:</p>\r\n<ul>\r\n<li><b>list</b>: List datum rollup</li>\r\n<li><b>integer</b>: Integer datum rollup</li>\r\n<li><b>double</b>: Double datum rollup</li>\r\n<li><b>discrete</b>: Discrete datum rollup</li>\r\n</ul>\r\n"
      },
      "GsaDatumType": {
        "enum": [
          "integer",
          "logical",
          "shortText",
          "longText",
          "hyperlink",
          "dateTime",
          "discrete",
          "range",
          "point",
          "picture",
          "file",
          "floatFunctional",
          "discreteFunctional",
          "tabular"
        ],
        "type": "string",
        "description": "The types of datum that are supported by the API.<p>Possible values:</p>\r\n<ul>\r\n<li><b>integer</b>: Integer</li>\r\n<li><b>logical</b>: Logical</li>\r\n<li><b>shortText</b>: Short Text</li>\r\n<li><b>longText</b>: Integer</li>\r\n<li><b>hyperlink</b>: Integer</li>\r\n<li><b>dateTime</b>: Date and Time</li>\r\n<li><b>discrete</b>: Discrete</li>\r\n<li><b>range</b>: Range</li>\r\n<li><b>point</b>: Point</li>\r\n<li><b>picture</b>: Picture</li>\r\n<li><b>file</b>: File</li>\r\n<li><b>floatFunctional</b>: Float Functional</li>\r\n<li><b>discreteFunctional</b>: Discrete Functional</li>\r\n<li><b>tabular</b>: Tabular</li>\r\n</ul>\r\n"
      },
      "GsaDefaultExpressionNotFoundMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Default expression must be from attribute's expressions.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'defaultExpressionNotFound'",
        "x-discriminator-value": "defaultExpressionNotFound",
        "x-discriminator-name": "reason"
      },
      "GsaDefaultFreeParameterNotFoundMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Default free parameter must be from attribute's parameters.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'defaultFreeParameterNotFound'",
        "x-discriminator-value": "defaultFreeParameterNotFound",
        "x-discriminator-name": "reason"
      },
      "GsaDefaultParameterValueGuidParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "defaultParameterValueGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Default parameter value GUID does not match any parameter value.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'defaultParameterValueGuid'",
        "x-discriminator-value": "defaultParameterValueGuid",
        "x-discriminator-name": "reason"
      },
      "GsaDefaultParameterValueIndexAndGuidParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Default parameter value can be specified by either index or GUID, not both.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'defaultParameterValueIndexAndGuid'",
        "x-discriminator-value": "defaultParameterValueIndexAndGuid",
        "x-discriminator-name": "reason"
      },
      "GsaDefaultParameterValueIndexParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "defaultParameterValueIndex": {
                "type": "integer",
                "format": "int32"
              },
              "numberOfParameterValues": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Default parameter value index out of range.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'defaultParameterValueIndex'",
        "x-discriminator-value": "defaultParameterValueIndex",
        "x-discriminator-name": "reason"
      },
      "GsaDefaultParameterValueIndexWithoutValuesParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Default parameter value index can only be used when values are being updated.\r\nUse DefaultParameterValueGuid when values are not being updated.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'defaultParameterValueIndexWithoutValues'",
        "x-discriminator-value": "defaultParameterValueIndexWithoutValues",
        "x-discriminator-name": "reason"
      },
      "GsaDefaultParameterValueUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "referencedBy": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimNamedEntity"
                },
                "nullable": true,
                "readOnly": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'defaultParameterValue'",
        "x-discriminator-value": "defaultParameterValue",
        "x-discriminator-name": "referencedByType"
      },
      "GsaDeleteRecordListItem": {
        "required": [
          "databaseGuid",
          "recordHistoryGuid"
        ],
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordVersion": {
            "type": "integer",
            "description": "Optional version. If not provided, only matching items with no version will be deleted. If provided, only items matching the version exactly will be deleted.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDeleteRecordListItems": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDeleteRecordListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaDescriptionLengthFileErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFileErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "maxLengthOfFileDescription": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The description exceeds the maximum number of allowed characters.\r\n\r\nThis extends: GsaFileErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'descriptionLength'",
        "x-discriminator-value": "descriptionLength",
        "x-discriminator-name": "reason"
      },
      "GsaDiscreteAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "required": [
              "discreteType",
              "isMultiValued"
            ],
            "type": "object",
            "properties": {
              "discreteType": {
                "$ref": "#/components/schemas/GsaSlimNamedEntity"
              },
              "isMultiValued": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "discreteValues"
            ],
            "type": "object",
            "properties": {
              "discreteValues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "datumType"
      },
      "GsaDiscreteDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteFunctionalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "required": [
              "attributeParameters",
              "discreteType"
            ],
            "type": "object",
            "properties": {
              "discreteType": {
                "$ref": "#/components/schemas/GsaSlimNamedEntity"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDiscreteFunctionalAttributeParameter"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteFunctional'",
        "x-discriminator-value": "discreteFunctional",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteFunctionalAttributeDiscreteParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDiscreteFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "$ref": "#/components/schemas/GsaSlimNamedEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ndefaultValue: If there is no default value, fallback to the parameter default.\r\n\r\nThis extends: GsaDiscreteFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteFunctionalAttributeNumericParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDiscreteFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "type": "number",
                "description": "If there is no default value, fallback to the parameter default.",
                "format": "double",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDiscreteFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteFunctionalAttributeParameter": {
        "required": [
          "parameter",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimNamedEntity"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDiscreteFunctionalAttributeDiscreteParameter\r\n * GsaDiscreteFunctionalAttributeNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaDiscreteFunctionalAttributeDiscreteParameter",
            "numeric": "#/components/schemas/GsaDiscreteFunctionalAttributeNumericParameter"
          }
        }
      },
      "GsaDiscreteFunctionalDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "graphType",
              "parameterSettings"
            ],
            "type": "object",
            "properties": {
              "graphType": {
                "$ref": "#/components/schemas/GsaGraphType"
              },
              "parameterSettings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaFunctionalParameterSetting"
                }
              }
            },
            "discriminator": {
              "propertyName": "graphType",
              "mapping": {
                "series": "#/components/schemas/GsaDiscreteFunctionalSeriesDatum",
                "grid": "#/components/schemas/GsaDiscreteFunctionalGridDatum"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'discreteFunctional'\r\n\r\nThis is one of: \r\n * GsaDiscreteFunctionalSeriesDatum\r\n * GsaDiscreteFunctionalGridDatum",
        "x-discriminator-value": "discreteFunctional",
        "x-discriminator-name": "datumType"
      },
      "GsaDiscreteFunctionalDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteFunctional'",
        "x-discriminator-value": "discreteFunctional",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteFunctionalGridDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDiscreteFunctionalDatum"
          },
          {
            "required": [
              "graph"
            ],
            "type": "object",
            "properties": {
              "graph": {
                "$ref": "#/components/schemas/GsaDiscreteGridGraph"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDiscreteFunctionalDatum\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'grid'",
        "x-discriminator-value": "grid",
        "x-discriminator-name": "graphType"
      },
      "GsaDiscreteFunctionalRangeDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "integer",
                "description": "Greater than or equal to",
                "format": "int32",
                "nullable": true
              },
              "lte": {
                "type": "integer",
                "description": "Less than or equal to",
                "format": "int32",
                "nullable": true
              },
              "constraints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaParameterConstraint"
                },
                "description": "Optional unit string. If not included, the gte and lte values are assumed to be in database units.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteFunctionalRange: Criterion for matching records with discrete functional data where the discrete values are in the given range. If one of gte or lte is null, this will be an open ended search\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteFunctionalRange'",
        "x-discriminator-value": "discreteFunctionalRange",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteFunctionalSeriesDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDiscreteFunctionalDatum"
          },
          {
            "required": [
              "graph"
            ],
            "type": "object",
            "properties": {
              "graph": {
                "$ref": "#/components/schemas/GsaDiscreteSeriesGraph"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDiscreteFunctionalDatum\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'series'",
        "x-discriminator-value": "series",
        "x-discriminator-name": "graphType"
      },
      "GsaDiscreteFunctionalValuesDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "anyIdentities": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Match any of these discrete type identities",
                "nullable": true
              },
              "anyGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Match any of these discrete type GUIDs",
                "nullable": true
              },
              "constraints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaParameterConstraint"
                },
                "description": "Constraints on the parameters of the attribute. Unspecified parameters will be assumed to be unconstrained.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteFunctionalValues: Criterion for matching records with discrete functional data where the discrete values are one of the given values. Either identities or GUIDs should be provided.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteFunctionalValues'",
        "x-discriminator-value": "discreteFunctionalValues",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteGraphParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaGraphParameterValue"
          },
          {
            "required": [
              "parameterValueGuid"
            ],
            "type": "object",
            "properties": {
              "parameterValueGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaGraphParameterValue\r\n\r\nThe value of discriminator property ('parameterType') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "parameterType"
      },
      "GsaDiscreteGraphValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaGraphValue"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaGraphValue\r\n\r\nThe value of discriminator property ('graphValueType') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "graphValueType"
      },
      "GsaDiscreteGridGraph": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaGridGraph"
          },
          {
            "required": [
              "points"
            ],
            "type": "object",
            "properties": {
              "points": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDiscreteGridPoint"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaGridGraph\r\n\r\nThe value of discriminator property ('functionalType') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "functionalType"
      },
      "GsaDiscreteGridPoint": {
        "required": [
          "constraints",
          "estimated",
          "value"
        ],
        "type": "object",
        "properties": {
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterWithDataValue"
            }
          },
          "value": {
            "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
          },
          "estimated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteGuidDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteGuid: Criterion for matching records where the GUID of the discrete data matches the specified value.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteGuid'",
        "x-discriminator-value": "discreteGuid",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteGuidValuesDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "all": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Match all of these discrete value GUIDs",
                "nullable": true
              },
              "any": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Match any of these discrete type GUIDs",
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Match none of the discrete type GUIDs",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteGuidValues: Criterion for matching records where the discrete data matches any, all and/or none of the provided discrete value GUIDs. One or more field can be null.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteGuidValues'",
        "x-discriminator-value": "discreteGuidValues",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteIdentityDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteIdentity: Criterion for matching records where the identity of the discrete data matches the specified value.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteIdentity'",
        "x-discriminator-value": "discreteIdentity",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteIdentityValuesDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "all": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Match all of these discrete value identities",
                "nullable": true
              },
              "any": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Match any of these discrete type identities",
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Match none of the discrete type identities",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteIdentityValues: Criterion for matching records where the discrete data matches any, all and/or none of the provided discrete value identities. One or more field can be null.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteIdentityValues'",
        "x-discriminator-value": "discreteIdentityValues",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameter"
          },
          {
            "required": [
              "values"
            ],
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDiscreteParameterValue"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteParameterContent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterContent"
          },
          {
            "type": "object",
            "properties": {
              "parameterValue": {
                "$ref": "#/components/schemas/GsaSlimNamedEntity"
              },
              "parameterRange": {
                "$ref": "#/components/schemas/GsaDiscreteRange"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameterContent\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteParameterDataValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterDataValue"
          },
          {
            "required": [
              "parameterValue"
            ],
            "type": "object",
            "properties": {
              "parameterValue": {
                "$ref": "#/components/schemas/GsaDiscreteParameterValue"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameterDataValue\r\n\r\nThe value of discriminator property ('parameterType') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "parameterType"
      },
      "GsaDiscreteParameterNameConstraint": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterConstraint"
          },
          {
            "type": "object",
            "properties": {
              "any": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameterConstraint\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteName'",
        "x-discriminator-value": "discreteName",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterValue"
          },
          {
            "required": [
              "name"
            ],
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameterValue\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteParameterValueConstraint": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterConstraint"
          },
          {
            "type": "object",
            "properties": {
              "any": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                },
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameterConstraint\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteValue'",
        "x-discriminator-value": "discreteValue",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteRange": {
        "required": [
          "parameterValues"
        ],
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteRangeDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "integer",
                "description": "Greater than or equal to",
                "format": "int32",
                "nullable": true
              },
              "lte": {
                "type": "integer",
                "description": "Less than or equal to",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteRange: Criterion for matching records for where the discrete values are in the given range. If one of gte or lte is null, this will be an open ended search\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteRange'",
        "x-discriminator-value": "discreteRange",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteSeries": {
        "required": [
          "constraints",
          "points"
        ],
        "type": "object",
        "properties": {
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterWithDataValue"
            }
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDiscreteSeriesPoint"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteSeriesGraph": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSeriesGraph"
          },
          {
            "required": [
              "series"
            ],
            "type": "object",
            "properties": {
              "series": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaDiscreteSeries"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSeriesGraph\r\n\r\nThe value of discriminator property ('functionalType') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "functionalType"
      },
      "GsaDiscreteSeriesPoint": {
        "required": [
          "estimated",
          "value",
          "xValue"
        ],
        "type": "object",
        "properties": {
          "xValue": {
            "type": "number",
            "format": "double"
          },
          "value": {
            "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
          },
          "estimated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteTextAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "terms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaTermWithCount"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'discreteText'",
        "x-discriminator-value": "discreteText",
        "x-discriminator-name": "datumType"
      },
      "GsaDiscreteTextAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "numberOfTerms": {
                "type": "integer",
                "description": "The maximum number of terms to return in this aggregation.",
                "format": "int32"
              },
              "prefix": {
                "type": "string",
                "description": "An optional textual prefix. If provided, only terms that start with this prefix will be\r\nconsidered in the aggregation.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating textual data within a discrete attribute. The returned aggregation will contain the most common\r\nterms for the attribute across records in the aggregation scope, with a count of records for each term.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteText'",
        "x-discriminator-value": "discreteText",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteTextDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "textMatchBehavior": {
                "$ref": "#/components/schemas/GsaTextMatchBehavior"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteText: Criterion for matching records where the text of the discrete data contains the specified value.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteText'",
        "x-discriminator-value": "discreteText",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteTextPrefixDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "prefix"
            ],
            "type": "object",
            "properties": {
              "prefix": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteTextPrefix: Criterion for matching records where the text of the discrete data begins with the specified value.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteTextPrefix'",
        "x-discriminator-value": "discreteTextPrefix",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteTextValuesDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "all": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "any": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "none": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "textMatchBehavior": {
                "$ref": "#/components/schemas/GsaTextMatchBehavior"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "discreteTextValues: Criterion for matching records where the text in the discrete data matches all, any and/or none of the specified text strings. One of more field can be null.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteTextValues'",
        "x-discriminator-value": "discreteTextValues",
        "x-discriminator-name": "type"
      },
      "GsaDiscreteType": {
        "required": [
          "discreteValues",
          "guid",
          "isOrdered",
          "isProtected",
          "name"
        ],
        "type": "object",
        "properties": {
          "discreteValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
            }
          },
          "isOrdered": {
            "type": "boolean"
          },
          "isProtected": {
            "type": "boolean",
            "description": "If true, the discrete type is protected from all changes."
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteTypeDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataModificationErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteTypeUsage": {
        "required": [
          "attributes",
          "tabularColumns"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimAttribute"
            }
          },
          "tabularColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaTabularAttributeWithColumns"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteTypesInfo": {
        "type": "object",
        "properties": {
          "discreteTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimDiscreteType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteValueAggregateErrorReason": {
        "enum": [
          "discreteValueAdditionErrors",
          "discreteValueDeletionErrors",
          "discreteValueUpdateErrors",
          "discreteValueReplacingErrors"
        ],
        "type": "string"
      },
      "GsaDiscreteValueAggregateException": {
        "required": [
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "$ref": "#/components/schemas/GsaDiscreteValueAggregateErrorReason"
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteValuesCreateDiscreteValue": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Create dto for Discrete Values\r\nNo extra properties compared to CreateSlimNamedEntity yet, but exists for consistency with other 'create dto' types"
      },
      "GsaDiscreteValuesDiscreteValue": {
        "required": [
          "guid",
          "isProtected",
          "name"
        ],
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean",
            "description": "If true, the discrete value is protected from all changes."
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteValuesDiscreteValuesInfo": {
        "type": "object",
        "properties": {
          "discreteValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDiscreteValuesDiscreteValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteValuesReplaceDiscreteValuesInfo": {
        "type": "object",
        "properties": {
          "discreteValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDiscreteValuesCreateDiscreteValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDiscreteValuesUpdateDiscreteValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaDiskStatus": {
        "enum": [
          "Ok",
          "LowWatermarkReached",
          "HighWatermarkReached",
          "FloodStageReached"
        ],
        "type": "string",
        "description": "The status of the amount of space remaining on the disk.<p>Possible values:</p>\r\n<ul>\r\n<li><b>Ok</b>: There is enough space.</li>\r\n<li><b>LowWatermarkReached</b>: Once the disk reaches this point, Elasticsearch will not allocate any more shards to this node.</li>\r\n<li><b>HighWatermarkReached</b>: At this point, Elasticsearch will attempt to relocate shards away from this node.</li>\r\n<li><b>FloodStageReached</b>: At this point, Elastic search will enforce a read only block on the index.</li>\r\n</ul>\r\n"
      },
      "GsaDisplayNameEmptyErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Display name cannot be empty.  Display names are optional and can be set to null to remove, but cannot be an empty string or white space only.\r\n\r\nThis extends: GsaNamedEntityErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'displayNameEmpty'",
        "x-discriminator-value": "displayNameEmpty",
        "x-discriminator-name": "reason"
      },
      "GsaDisplayNameLanguageNotProvidedErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Display name must have a language.\r\n\r\nThis extends: GsaNamedEntityErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'displayNameLanguageNotProvided'",
        "x-discriminator-value": "displayNameLanguageNotProvided",
        "x-discriminator-name": "reason"
      },
      "GsaDisplayNameLanguageNotSupportedErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Display name language is not supported.  Language must be a .NET culture, e.g. \"en\", \"fr\", \"de\", \"ru\", \"ko\", \"zh-CN\", \"ja\"\r\n\r\nThis extends: GsaNamedEntityErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'displayNameLanguageNotSupported'",
        "x-discriminator-value": "displayNameLanguageNotSupported",
        "x-discriminator-name": "reason"
      },
      "GsaDisplayNamesImportErrorDetail": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaDisplayNamesImportErrorReason"
          },
          "rowIndex": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fieldValue": {
            "type": "string",
            "nullable": true
          },
          "columnHeader": {
            "type": "string",
            "nullable": true
          },
          "itemType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDisplayNamesImportErrorReason": {
        "enum": [
          "unknown",
          "malformedLine",
          "incorrectNumberOfColumns",
          "invalidSchemaType",
          "invalidLanguage",
          "schemaItemNotFound",
          "emptyColumn",
          "extraInfoMissing",
          "translationTooLong"
        ],
        "type": "string"
      },
      "GsaDisplayNamesImportException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDisplayNamesImportErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaDisplayNamesInfo": {
        "type": "object",
        "properties": {
          "displayNames": {
            "$ref": "#/components/schemas/GsaGrid"
          }
        },
        "additionalProperties": false
      },
      "GsaDoubleSortingValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSortingValue"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSortingValue\r\n\r\nThe value of discriminator property ('type') must be equal to 'double'",
        "x-discriminator-value": "double",
        "x-discriminator-name": "type"
      },
      "GsaDuplicateDatabaseAddDatabaseValidationIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAddDatabaseValidationIssue"
          },
          {
            "required": [
              "databaseKey",
              "databaseName"
            ],
            "type": "object",
            "properties": {
              "databaseKey": {
                "type": "string"
              },
              "databaseName": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAddDatabaseValidationIssue\r\n\r\nThe value of discriminator property ('IssueType') must be equal to 'duplicateDatabase'",
        "x-discriminator-value": "duplicateDatabase",
        "x-discriminator-name": "IssueType"
      },
      "GsaDuplicateExpressionGuidsMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "duplicatedGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "No duplicate expression GUIDs allowed.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'duplicateExpressionGuids'",
        "x-discriminator-value": "duplicateExpressionGuids",
        "x-discriminator-name": "reason"
      },
      "GsaDuplicateGuidAddDatabaseValidationIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAddDatabaseValidationIssue"
          },
          {
            "required": [
              "clashingDatabases"
            ],
            "type": "object",
            "properties": {
              "clashingDatabases": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAddDatabaseValidationIssue\r\n\r\nThe value of discriminator property ('IssueType') must be equal to 'duplicateGuid'",
        "x-discriminator-value": "duplicateGuid",
        "x-discriminator-name": "IssueType"
      },
      "GsaDuplicateKeyAddDatabaseValidationIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAddDatabaseValidationIssue"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAddDatabaseValidationIssue\r\n\r\nThe value of discriminator property ('IssueType') must be equal to 'duplicateKey'",
        "x-discriminator-value": "duplicateKey",
        "x-discriminator-name": "IssueType"
      },
      "GsaDuplicateParameterGuidsAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "duplicatedGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "No duplicate parameter GUIDs allowed.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'duplicateParameterGuids'",
        "x-discriminator-value": "duplicateParameterGuids",
        "x-discriminator-name": "reason"
      },
      "GsaDuplicateTabularColumnGuidsErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "duplicatedGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'duplicateTabularColumnGuids'",
        "x-discriminator-value": "duplicateTabularColumnGuids",
        "x-discriminator-name": "reason"
      },
      "GsaDuplicateTabularColumnNamesErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "duplicatedNames": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'duplicateTabularColumnNames'",
        "x-discriminator-value": "duplicateTabularColumnNames",
        "x-discriminator-name": "reason"
      },
      "GsaDuplicateVersionGuidAddDatabaseValidationIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAddDatabaseValidationIssue"
          },
          {
            "required": [
              "clashingDatabase",
              "clashingVersionGuid"
            ],
            "type": "object",
            "properties": {
              "clashingDatabase": {
                "type": "string",
                "description": "The database key of the database with the same version GUID"
              },
              "clashingVersionGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAddDatabaseValidationIssue\r\n\r\nThe value of discriminator property ('IssueType') must be equal to 'duplicateVersionGuid'",
        "x-discriminator-value": "duplicateVersionGuid",
        "x-discriminator-name": "IssueType"
      },
      "GsaEmptyAxisNameAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Axis name cannot be empty or whitespace.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'emptyAxisName'",
        "x-discriminator-value": "emptyAxisName",
        "x-discriminator-name": "reason"
      },
      "GsaEnabledLicensesInfo": {
        "required": [
          "isFlexLicensingEnabled",
          "miServerEnabled",
          "MLEnabled",
          "PLMSyncEnabled",
          "restrictedSubstancesBAEnabled",
          "sustainabilityEnabledEnabled",
          "workflowAdvancedEnabled"
        ],
        "type": "object",
        "properties": {
          "isFlexLicensingEnabled": {
            "type": "boolean",
            "description": "Gets a flag indicating whether FlexLM licensing is enabled. If true, MI is in Ansys\r\nlicensing mode. If false, MI is in classic licensing mode."
          },
          "miServerEnabled": {
            "type": "boolean",
            "description": "Gets a flag indicating whether MI Server is enabled. In Ansys licensing mode, this corresponds\r\nto an MI Server license having been checked out. In classic licensing mode, it is set to true."
          },
          "workflowAdvancedEnabled": {
            "type": "boolean",
            "description": "Gets a flag indicating whether advanced workflow features are enabled. In Ansys\r\nlicensing mode, this corresponds to a Workflow Advanced license having been checked out. In classic licensing mode, it\r\nis set to true."
          },
          "restrictedSubstancesBAEnabled": {
            "type": "boolean",
            "description": "Gets a flag indicating whether features associated with the Restricted Substances Analytics\r\nproduct are enabled. In Ansys licensing mode, this corresponds to a Restricted Substances Analytics license (granta_mi_rsba) having been checked\r\nout. In classic licensing mode, it is set to false."
          },
          "sustainabilityEnabledEnabled": {
            "type": "boolean",
            "description": "Gets a flag indicating whether features associated with the Sustainability Analytics\r\nproduct are enabled. In Ansys licensing mode, this corresponds to a Sustainability Analytics license (granta_mi_sus) having been checked\r\nout. In classic licensing mode, it is set to false."
          },
          "PLMSyncEnabled": {
            "type": "boolean",
            "description": "Gets a flag indicating whether features associated with the PLM Sync (notably MI Enterprise Connect) are enabled.\r\nIn Ansys licensing mode, this corresponds to a PLM sync license having been checked out. In classic licensing mode, it is set to true."
          },
          "MLEnabled": {
            "type": "boolean",
            "description": "Gets a flag indicating whether features associated with the ML (Machine Learning) are enabled.\r\nIn Ansys licensing mode, this corresponds to a ML license having been checked out. In classic licensing mode, it is set to false."
          },
          "expiryDate": {
            "type": "string",
            "description": "Gets expiry date of Server license.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Stores information about the state of the MI Server license."
      },
      "GsaEntityAlreadyExistsErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "guid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Entity with GUID already exists.\r\n\r\nThis extends: GsaNamedEntityErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'entityAlreadyExists'",
        "x-discriminator-value": "entityAlreadyExists",
        "x-discriminator-name": "reason"
      },
      "GsaEntityIdentifierAlreadySpecifiedErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "guid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "GUID has been specified more than once in the request.\r\n\r\nThis extends: GsaNamedEntityErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'entityIdentifierAlreadySpecified'",
        "x-discriminator-value": "entityIdentifierAlreadySpecified",
        "x-discriminator-name": "reason"
      },
      "GsaEntityType": {
        "enum": [
          "attribute",
          "database",
          "discreteValue",
          "discreteType",
          "metaAttribute",
          "parameter",
          "parameterValue",
          "table",
          "file",
          "folder",
          "recordHistory"
        ],
        "type": "string"
      },
      "GsaErrorCode": {
        "enum": [
          "unknown",
          "accessDenied",
          "addDatabase",
          "attributeCreation",
          "dataValidation",
          "deleteRecordVersionControl",
          "deletion",
          "discreteValueAggregate",
          "displayNamesImport",
          "fileCreation",
          "fileMove",
          "fileUpdate",
          "folderCreation",
          "folderDeletion",
          "folderMove",
          "folderUpdate",
          "getModifiableRecordVersionControl",
          "imageTypeValidation",
          "inputValidation",
          "internalServerError",
          "jsonSerialization",
          "noSuchEntity",
          "noSuchItem",
          "notImplemented",
          "notSpecified",
          "notSupported",
          "parameterCreation",
          "parameterUpdate",
          "parameterValueCreation",
          "parameterValueUpdate",
          "recordHistoryCopy",
          "recordHistoryCreate",
          "recordHistoryMove",
          "recordListPublish",
          "recordListResetAwaitingApproval",
          "recordListSetAwaitingApproval",
          "recordListSetPermissions",
          "recordListUnpublish",
          "releaseRecordVersionControl",
          "releaseTableVersionControl",
          "subtypeDeserialization",
          "upgradeDatabase",
          "withdrawRecordVersionControl"
        ],
        "type": "string"
      },
      "GsaErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaExceptionInformation": {
        "required": [
          "exceptionTypeFullName",
          "localisedMessage",
          "message",
          "stringifiedException"
        ],
        "type": "object",
        "properties": {
          "exceptionTypeFullName": {
            "type": "string",
            "description": "Full type name of the original exception."
          },
          "message": {
            "type": "string",
            "description": "Message of the original exception."
          },
          "localisedMessage": {
            "type": "string",
            "description": "Localised message of the original exception if available. Regular message of the original exception otherwise."
          },
          "stringifiedException": {
            "type": "string",
            "description": "The result of calling .ToString() on the original exception."
          },
          "innerExceptionInfo": {
            "$ref": "#/components/schemas/GsaExceptionInformation"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\ninnerExceptionInfo: Exception information for the inner exception if available, null otherwise."
      },
      "GsaExcludeValuesSpecifier": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaValueSpecifier"
          },
          {
            "type": "object",
            "properties": {
              "excludedIdentities": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              },
              "excludedGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Filters based on a list of identities or guids to exclude.\r\nAll other guids or identities will be included.\r\nOnly one of identities or guids should be specified.\r\n\r\nThis extends: GsaValueSpecifier\r\n\r\nThe value of discriminator property ('filterOn') must be equal to 'exclude'",
        "x-discriminator-value": "exclude",
        "x-discriminator-name": "filterOn"
      },
      "GsaExistingTabularColumnGuidErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "existingGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'existingTabularColumnGuid'",
        "x-discriminator-value": "existingTabularColumnGuid",
        "x-discriminator-name": "reason"
      },
      "GsaExportFailure": {
        "required": [
          "failureDetails",
          "failureReason",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaExportFailureType"
          },
          "failureDetails": {
            "type": "string"
          },
          "failureReason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaRecordExportFailure\r\n * GsaLinkExportFailure\r\n * GsaAttributeExportFailure\r\n * GsaDatumExportFailure\r\n * GsaRollupExportFailure",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "record": "#/components/schemas/GsaRecordExportFailure",
            "link": "#/components/schemas/GsaLinkExportFailure",
            "attribute": "#/components/schemas/GsaAttributeExportFailure",
            "datum": "#/components/schemas/GsaDatumExportFailure",
            "rollup": "#/components/schemas/GsaRollupExportFailure"
          }
        }
      },
      "GsaExportFailureType": {
        "enum": [
          "record",
          "link",
          "attribute",
          "datum",
          "rollup"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>record</b>: Record</li>\r\n<li><b>link</b>: Link</li>\r\n<li><b>attribute</b>: Attribute</li>\r\n<li><b>datum</b>: Datum</li>\r\n<li><b>rollup</b>: The rollup specified is not supported by the attribute data being exported</li>\r\n</ul>\r\n"
      },
      "GsaExporterRefetchInfo": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaExpression": {
        "required": [
          "attributeDependencies",
          "constantDependencies",
          "guid",
          "name",
          "parameterDependencies",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "unit": {
            "$ref": "#/components/schemas/GsaSlimUnit"
          },
          "attributeDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimAttribute"
            }
          },
          "constantDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "parameterDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaExpressionMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "expressionGuid": {
                "type": "string",
                "format": "uuid"
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaMfaExpressionErrorDetail"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Expression is invalid.\r\nSee \"errors\" for details.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'expression'",
        "x-discriminator-value": "expression",
        "x-discriminator-name": "reason"
      },
      "GsaExpressionUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "referencedBy": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimNamedEntity"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'expression'",
        "x-discriminator-value": "expression",
        "x-discriminator-name": "referencedByType"
      },
      "GsaExpressionsHaveUnknownParametersMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "missingParameterGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Parameter lists lacks some parameters required by the chosen expressions.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'expressionsHaveUnknownParameters'",
        "x-discriminator-value": "expressionsHaveUnknownParameters",
        "x-discriminator-name": "reason"
      },
      "GsaExpressionsInfo": {
        "type": "object",
        "properties": {
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimExpression"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFileAlreadyExistsFileMoveErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFileMoveErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "parentFolderGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A file with same name already exists as a child folder of the new parent.\r\n\r\nThis extends: GsaFileMoveErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'fileAlreadyExists'",
        "x-discriminator-value": "fileAlreadyExists",
        "x-discriminator-name": "reason"
      },
      "GsaFileAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'file'",
        "x-discriminator-value": "file",
        "x-discriminator-name": "type"
      },
      "GsaFileCreationException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "folderType": {
            "$ref": "#/components/schemas/GsaFolderType"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaFileErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFileDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "contentIsInSearchIndex",
              "contentType",
              "description",
              "fileName",
              "relativeExportUrl",
              "target"
            ],
            "type": "object",
            "properties": {
              "fileName": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "contentType": {
                "type": "string"
              },
              "target": {
                "$ref": "#/components/schemas/GsaHyperlinkTarget"
              },
              "contentIsInSearchIndex": {
                "type": "boolean"
              },
              "relativeExportUrl": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'file'",
        "x-discriminator-value": "file",
        "x-discriminator-name": "datumType"
      },
      "GsaFileDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'file'",
        "x-discriminator-value": "file",
        "x-discriminator-name": "type"
      },
      "GsaFileDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'file'",
        "x-discriminator-value": "file",
        "x-discriminator-name": "type"
      },
      "GsaFileErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaFileErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaConfigInvalidJsonFileErrorDetail\r\n * GsaDescriptionLengthFileErrorDetail\r\n * GsaFileNameFileErrorDetail\r\n * GsaNamedEntityFileErrorDetail\r\n * GsaNoDataFileErrorDetail\r\n * GsaNoFileFileErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "configInvalidJson": "#/components/schemas/GsaConfigInvalidJsonFileErrorDetail",
            "descriptionLength": "#/components/schemas/GsaDescriptionLengthFileErrorDetail",
            "fileName": "#/components/schemas/GsaFileNameFileErrorDetail",
            "namedEntity": "#/components/schemas/GsaNamedEntityFileErrorDetail",
            "noData": "#/components/schemas/GsaNoDataFileErrorDetail",
            "noFile": "#/components/schemas/GsaNoFileFileErrorDetail"
          }
        }
      },
      "GsaFileErrorReason": {
        "enum": [
          "configInvalidJson",
          "descriptionLength",
          "fileName",
          "namedEntity",
          "noData",
          "noFile"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>configInvalidJson</b>: Configuration's value must be valid JSON.</li>\r\n<li><b>descriptionLength</b>: The description exceeds the maximum number of allowed characters.</li>\r\n<li><b>fileName</b>: The name is not a valid file name.</li>\r\n<li><b>namedEntity</b>: The name or GUID is not valid.</li>\r\n<li><b>noData</b>: The File is invalid as it has no data.</li>\r\n<li><b>noFile</b>: No File found in the Form data.</li>\r\n</ul>\r\n"
      },
      "GsaFileHeader": {
        "required": [
          "dataLength",
          "description",
          "extension",
          "folderGuid",
          "guid",
          "name",
          "path"
        ],
        "type": "object",
        "properties": {
          "folderGuid": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "dataLength": {
            "type": "integer",
            "format": "int64"
          },
          "path": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaFileMoveErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaFileMoveErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaFileAlreadyExistsFileMoveErrorDetail\r\n * GsaNoSuchNewParentFileMoveErrorDetail\r\n * GsaSameParentFileMoveErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "fileAlreadyExists": "#/components/schemas/GsaFileAlreadyExistsFileMoveErrorDetail",
            "noSuchNewParent": "#/components/schemas/GsaNoSuchNewParentFileMoveErrorDetail",
            "sameParent": "#/components/schemas/GsaSameParentFileMoveErrorDetail"
          }
        }
      },
      "GsaFileMoveErrorReason": {
        "enum": [
          "fileAlreadyExists",
          "noSuchNewParent",
          "sameParent"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>fileAlreadyExists</b>: A file with same name already exists as a child folder of the new parent.</li>\r\n<li><b>noSuchNewParent</b>: A folder with the given GUID does not exist in database.</li>\r\n<li><b>sameParent</b>: Unable to move file as it is already under this folder.</li>\r\n</ul>\r\n"
      },
      "GsaFileMoveException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "fileGuid": {
            "type": "string",
            "format": "uuid"
          },
          "folderType": {
            "$ref": "#/components/schemas/GsaFolderType"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaFileMoveErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFileNameFileErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFileErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The name is not a valid file name.\r\nYou cannot use directory separators or special characters in file or folder names.\r\n\r\nThis extends: GsaFileErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'fileName'",
        "x-discriminator-value": "fileName",
        "x-discriminator-name": "reason"
      },
      "GsaFileNameFolderErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFolderErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The name is not a valid file name.\r\nYou cannot use directory separators or special characters in file or folder names.\r\n\r\nThis extends: GsaFolderErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'fileName'",
        "x-discriminator-value": "fileName",
        "x-discriminator-name": "reason"
      },
      "GsaFilePrefixDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "prefix"
            ],
            "type": "object",
            "properties": {
              "prefix": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'filePrefix'",
        "x-discriminator-value": "filePrefix",
        "x-discriminator-name": "type"
      },
      "GsaFileUpdateException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "fileGuid": {
            "type": "string",
            "format": "uuid"
          },
          "folderType": {
            "$ref": "#/components/schemas/GsaFolderType"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaFileErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFilesInfo": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimFile"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFindStandardNames": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFloatFunctionalAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "seriesGraphs": {
                "$ref": "#/components/schemas/GsaFloatFunctionalSeriesGraphAggregation"
              },
              "gridGraphs": {
                "$ref": "#/components/schemas/GsaFloatFunctionalGridGraphAggregation"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'floatFunctionalGraph'",
        "x-discriminator-value": "floatFunctionalGraph",
        "x-discriminator-name": "datumType"
      },
      "GsaFloatFunctionalAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "numberOfParameterValues": {
                "type": "integer",
                "description": "The maximum number of values to return in this aggregation.",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating the graph information within a float functional attribute.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'floatFunctionalGraph'",
        "x-discriminator-value": "floatFunctionalGraph",
        "x-discriminator-name": "type"
      },
      "GsaFloatFunctionalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "required": [
              "attributeParameters",
              "isRange"
            ],
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaFloatFunctionalAttributeParameter"
                }
              },
              "isRange": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'floatFunctional'",
        "x-discriminator-value": "floatFunctional",
        "x-discriminator-name": "type"
      },
      "GsaFloatFunctionalAttributeDiscreteParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFloatFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "$ref": "#/components/schemas/GsaSlimNamedEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ndefaultValue: If there is no default value, fallback to the parameter default.\r\n\r\nThis extends: GsaFloatFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaFloatFunctionalAttributeNumericParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFloatFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "type": "number",
                "description": "If there is no default value, fallback to the parameter default.",
                "format": "double",
                "nullable": true
              },
              "interpolationMethod": {
                "$ref": "#/components/schemas/GsaAttributeInterpolationMethod"
              },
              "scaleType": {
                "$ref": "#/components/schemas/GsaAttributeScaleType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ninterpolationMethod: If the InterpolationMethod is\r\n\r\nscaleType: If the ScaleType is\r\n\r\nThis extends: GsaFloatFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaFloatFunctionalAttributeParameter": {
        "required": [
          "parameter",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimNamedEntity"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaFloatFunctionalAttributeDiscreteParameter\r\n * GsaFloatFunctionalAttributeNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaFloatFunctionalAttributeDiscreteParameter",
            "numeric": "#/components/schemas/GsaFloatFunctionalAttributeNumericParameter"
          }
        }
      },
      "GsaFloatFunctionalDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "estimated",
              "graphType",
              "isRange",
              "logScaleOnYAxis",
              "parameterSettings",
              "showAsTable"
            ],
            "type": "object",
            "properties": {
              "graphType": {
                "$ref": "#/components/schemas/GsaGraphType"
              },
              "logScaleOnYAxis": {
                "type": "boolean"
              },
              "estimated": {
                "type": "boolean"
              },
              "showAsTable": {
                "type": "boolean"
              },
              "isRange": {
                "type": "boolean"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              },
              "parameterSettings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaFunctionalParameterSetting"
                }
              }
            },
            "discriminator": {
              "propertyName": "graphType",
              "mapping": {
                "series": "#/components/schemas/GsaFloatFunctionalSeriesDatum",
                "grid": "#/components/schemas/GsaFloatFunctionalGridDatum"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'floatFunctional'\r\n\r\nThis is one of: \r\n * GsaFloatFunctionalSeriesDatum\r\n * GsaFloatFunctionalGridDatum",
        "x-discriminator-value": "floatFunctional",
        "x-discriminator-name": "datumType"
      },
      "GsaFloatFunctionalDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "number",
                "description": "Greater than or equal to",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "description": "Less than or equal to",
                "format": "double",
                "nullable": true
              },
              "constraints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaParameterConstraint"
                },
                "description": "Constraints on the parameters of the attribute. Unspecified parameters will be assumed to be unconstrained.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "floatFunctionalData: Criterion for matching records with float functional data\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'floatFunctionalData'",
        "x-discriminator-value": "floatFunctionalData",
        "x-discriminator-name": "type"
      },
      "GsaFloatFunctionalDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'floatFunctional'",
        "x-discriminator-value": "floatFunctional",
        "x-discriminator-name": "type"
      },
      "GsaFloatFunctionalGraphDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "xAxisParameterIdentity": {
                "type": "integer",
                "description": "Optional x axis parameter filter. Only series graphs have an x axis.",
                "format": "int32",
                "nullable": true
              },
              "xAxisParameterGuid": {
                "type": "string",
                "description": "Optional x axis parameter filter. Only series graphs have an x axis.",
                "format": "uuid",
                "nullable": true
              },
              "numberOfSeriesLte": {
                "type": "integer",
                "description": "Optional filter for the number of series.",
                "format": "int32",
                "nullable": true
              },
              "numberOfSeriesGte": {
                "type": "integer",
                "description": "Optional filter for the number of series.",
                "format": "int32",
                "nullable": true
              },
              "showAsTable": {
                "type": "boolean",
                "description": "Optional filter for data on the \"Show as table\" property",
                "nullable": true
              },
              "defaultXAxisParameterIdentity": {
                "type": "integer",
                "description": "Optional default x axis parameter filter. Only grid graphs have a default x axis.",
                "format": "int32",
                "nullable": true
              },
              "defaultXAxisParameterGuid": {
                "type": "string",
                "description": "Optional x axis parameter filter. Only grid graphs have a default x axis..",
                "format": "uuid",
                "nullable": true
              },
              "numberOfPointsLte": {
                "type": "integer",
                "description": "Optional filter for the number of points in a grid graph.",
                "format": "int32",
                "nullable": true
              },
              "numberOfPointsGte": {
                "type": "integer",
                "description": "Optional filter for the number of points in a grid graph.",
                "format": "int32",
                "nullable": true
              },
              "isSeriesGraph": {
                "type": "boolean",
                "description": "Optional filter for data on the type of graph",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "floatFunctionalGraph: Criterion for matching records with float functional data\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'floatFunctionalGraph'",
        "x-discriminator-value": "floatFunctionalGraph",
        "x-discriminator-name": "type"
      },
      "GsaFloatFunctionalGridDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFloatFunctionalDatum"
          },
          {
            "required": [
              "graph"
            ],
            "type": "object",
            "properties": {
              "graph": {
                "$ref": "#/components/schemas/GsaFloatGridGraph"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaFloatFunctionalDatum\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'grid'",
        "x-discriminator-value": "grid",
        "x-discriminator-name": "graphType"
      },
      "GsaFloatFunctionalGridGraphAggregation": {
        "type": "object",
        "properties": {
          "defaultXAxisParameterIdentityValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaValueWithCountOfInt32"
            },
            "nullable": true
          },
          "defaultXAxisParameterGuidValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaValueWithCountOfGuid"
            },
            "nullable": true
          },
          "showAsTableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaValueWithCountOfBoolean"
            },
            "nullable": true
          },
          "minimumNumberOfPoints": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maximumNumberOfPoints": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "The number of record where the data is a series graph",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GsaFloatFunctionalSeriesDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFloatFunctionalDatum"
          },
          {
            "required": [
              "graph"
            ],
            "type": "object",
            "properties": {
              "graph": {
                "$ref": "#/components/schemas/GsaFloatSeriesGraph"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaFloatFunctionalDatum\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'series'",
        "x-discriminator-value": "series",
        "x-discriminator-name": "graphType"
      },
      "GsaFloatFunctionalSeriesGraphAggregation": {
        "type": "object",
        "properties": {
          "xAxisParameterIdentityValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaValueWithCountOfInt32"
            },
            "nullable": true
          },
          "xAxisParameterGuidValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaValueWithCountOfGuid"
            },
            "nullable": true
          },
          "showAsTableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaValueWithCountOfBoolean"
            },
            "nullable": true
          },
          "minimumNumberOfSeries": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maximumNumberOfSeries": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "The number of record where the data is a series graph",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GsaFloatGridGraph": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaGridGraph"
          },
          {
            "required": [
              "points"
            ],
            "type": "object",
            "properties": {
              "points": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaFloatGridPoint"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaGridGraph\r\n\r\nThe value of discriminator property ('functionalType') must be equal to 'float'",
        "x-discriminator-value": "float",
        "x-discriminator-name": "functionalType"
      },
      "GsaFloatGridPoint": {
        "required": [
          "constraints",
          "estimated",
          "highValue",
          "lowValue"
        ],
        "type": "object",
        "properties": {
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterWithDataValue"
            }
          },
          "lowValue": {
            "type": "number",
            "format": "double"
          },
          "highValue": {
            "type": "number",
            "format": "double"
          },
          "estimated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaFloatSeries": {
        "required": [
          "constraints",
          "graphDecoration",
          "points"
        ],
        "type": "object",
        "properties": {
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterWithDataValue"
            }
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaFloatSeriesPoint"
            }
          },
          "graphDecoration": {
            "$ref": "#/components/schemas/GsaGraphDecorationType"
          }
        },
        "additionalProperties": false
      },
      "GsaFloatSeriesGraph": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSeriesGraph"
          },
          {
            "required": [
              "series"
            ],
            "type": "object",
            "properties": {
              "series": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaFloatSeries"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSeriesGraph\r\n\r\nThe value of discriminator property ('functionalType') must be equal to 'float'",
        "x-discriminator-value": "float",
        "x-discriminator-name": "functionalType"
      },
      "GsaFloatSeriesPoint": {
        "required": [
          "estimated",
          "xValue",
          "yHighValue",
          "yLowValue"
        ],
        "type": "object",
        "properties": {
          "xValue": {
            "type": "number",
            "format": "double"
          },
          "yLowValue": {
            "type": "number",
            "format": "double"
          },
          "yHighValue": {
            "type": "number",
            "format": "double"
          },
          "estimated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaFolder": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "parentGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          },
          "hasChildFolders": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaFolderAlreadyExistsFolderMoveErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFolderMoveErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "newParentFolderGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A folder with same name already exists as a child folder of the new parent.\r\n\r\nThis extends: GsaFolderMoveErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'folderAlreadyExists'",
        "x-discriminator-value": "folderAlreadyExists",
        "x-discriminator-name": "reason"
      },
      "GsaFolderCreationException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "folderType": {
            "$ref": "#/components/schemas/GsaFolderType"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaFolderErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFolderDeletionErrorDetail": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaFolderDeletionErrorReason"
          }
        },
        "additionalProperties": false
      },
      "GsaFolderDeletionErrorReason": {
        "enum": [
          "root"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>root</b>: You cannot delete the root folder.</li>\r\n</ul>\r\n"
      },
      "GsaFolderDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "folderGuid": {
            "type": "string",
            "format": "uuid"
          },
          "folderType": {
            "$ref": "#/components/schemas/GsaFolderType"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaFolderDeletionErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFolderErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaFolderErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaFileNameFolderErrorDetail\r\n * GsaNamedEntityFolderErrorDetail\r\n * GsaUpdateRootFolderErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "fileName": "#/components/schemas/GsaFileNameFolderErrorDetail",
            "namedEntity": "#/components/schemas/GsaNamedEntityFolderErrorDetail",
            "updateRoot": "#/components/schemas/GsaUpdateRootFolderErrorDetail"
          }
        }
      },
      "GsaFolderErrorReason": {
        "enum": [
          "fileName",
          "namedEntity",
          "updateRoot"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>fileName</b>: The name is not a valid file name.</li>\r\n<li><b>namedEntity</b>: The name or GUID is not valid.</li>\r\n<li><b>updateRoot</b>: You cannot edit the root folder.</li>\r\n</ul>\r\n"
      },
      "GsaFolderMoveErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaFolderMoveErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaCircularReferenceFolderMoveErrorDetail\r\n * GsaFolderAlreadyExistsFolderMoveErrorDetail\r\n * GsaNoSuchNewParentFolderMoveErrorDetail\r\n * GsaRootFolderMoveErrorDetail\r\n * GsaSameParentFolderMoveErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "circularReference": "#/components/schemas/GsaCircularReferenceFolderMoveErrorDetail",
            "folderAlreadyExists": "#/components/schemas/GsaFolderAlreadyExistsFolderMoveErrorDetail",
            "noSuchNewParent": "#/components/schemas/GsaNoSuchNewParentFolderMoveErrorDetail",
            "root": "#/components/schemas/GsaRootFolderMoveErrorDetail",
            "sameParent": "#/components/schemas/GsaSameParentFolderMoveErrorDetail"
          }
        }
      },
      "GsaFolderMoveErrorReason": {
        "enum": [
          "circularReference",
          "folderAlreadyExists",
          "noSuchNewParent",
          "root",
          "sameParent"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>circularReference</b>: Circular reference found - you cannot move a folder to be a child of one of its descendants.</li>\r\n<li><b>folderAlreadyExists</b>: A folder with same name already exists as a child folder of the new parent.</li>\r\n<li><b>noSuchNewParent</b>: A folder with the given GUID does not exist in the database.</li>\r\n<li><b>root</b>: You cannot move the root folder.</li>\r\n<li><b>sameParent</b>: Unable to move folder as it is already under this folder.</li>\r\n</ul>\r\n"
      },
      "GsaFolderMoveException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "folderGuid": {
            "type": "string",
            "format": "uuid"
          },
          "folderType": {
            "$ref": "#/components/schemas/GsaFolderType"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaFolderMoveErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFolderType": {
        "enum": [
          "homePage",
          "helpPage",
          "exporter",
          "configuration"
        ],
        "type": "string"
      },
      "GsaFolderUpdateException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "folderGuid": {
            "type": "string",
            "format": "uuid"
          },
          "folderType": {
            "$ref": "#/components/schemas/GsaFolderType"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaFolderErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFoldersInfo": {
        "type": "object",
        "properties": {
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaFolder"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaFreeTextAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregation"
          },
          {
            "type": "object",
            "properties": {
              "guid": {
                "type": "string",
                "description": "The GUID of the input aggregation criterion.",
                "format": "uuid"
              },
              "terms": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The topmost terms in the specified attributes, across all relevant records. Due to how\r\nmatches in multiple attributes are reconciled, we cannot easily provide a document count,\r\nnor can we guarantee that the terms are perfectly correctly ordered.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The results of aggregation over an attribute.\r\n\r\nThis extends: GsaAggregation\r\n\r\nThe value of discriminator property ('type') must be equal to 'text'",
        "x-discriminator-value": "text",
        "x-discriminator-name": "type"
      },
      "GsaFreeTextAggregationCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationCriterion"
          },
          {
            "type": "object",
            "properties": {
              "criterionGuid": {
                "type": "string",
                "description": "A GUID to identify this free-text criterion, so that its results can be determined in the output.\r\nFor each input free-text aggregation criterion, there will be a free-text aggregation in the output\r\nwith a matching GUID.",
                "format": "uuid"
              },
              "numberOfTerms": {
                "type": "integer",
                "description": "The number of terms that should be returned",
                "format": "int32"
              },
              "prefix": {
                "type": "string",
                "nullable": true
              },
              "attributes": {
                "$ref": "#/components/schemas/GsaValueSpecifier"
              },
              "localColumns": {
                "$ref": "#/components/schemas/GsaValueSpecifier"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A criterion for requesting a free text aggregation over a set of attributes and tabular local columns.\r\nUses ValueSpecifiers to specify how to filter on attributes and local columns.\r\nAt least one filter must be specified.\r\n\r\nThis extends: GsaAggregationCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'text'",
        "x-discriminator-value": "text",
        "x-discriminator-name": "type"
      },
      "GsaFreeTextCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              },
              "attributes": {
                "$ref": "#/components/schemas/GsaValueSpecifier"
              },
              "localColumns": {
                "$ref": "#/components/schemas/GsaValueSpecifier"
              },
              "attributeIdentitiesToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaBoostByIdentity"
                },
                "nullable": true
              },
              "attributeGuidsToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaBoostByGuid"
                },
                "nullable": true
              },
              "columnIdentitiesToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaBoostByIdentity"
                },
                "nullable": true
              },
              "columnGuidsToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaBoostByGuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Base type for free text criteria.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'text'",
        "x-discriminator-value": "text",
        "x-discriminator-name": "type"
      },
      "GsaFreeTextPrefixCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "required": [
              "prefix"
            ],
            "type": "object",
            "properties": {
              "prefix": {
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/GsaValueSpecifier"
              },
              "localColumns": {
                "$ref": "#/components/schemas/GsaValueSpecifier"
              },
              "attributeIdentitiesToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaBoostByIdentity"
                },
                "nullable": true
              },
              "attributeGuidsToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaBoostByGuid"
                },
                "nullable": true
              },
              "columnIdentitiesToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaBoostByIdentity"
                },
                "nullable": true
              },
              "columnGuidsToBoost": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaBoostByGuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'textPrefix'",
        "x-discriminator-value": "textPrefix",
        "x-discriminator-name": "type"
      },
      "GsaFullLayoutSection": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLayoutSection"
          },
          {
            "required": [
              "sectionItems"
            ],
            "type": "object",
            "properties": {
              "sectionItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaLayoutItem"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaLayoutSection\r\n\r\nThe value of discriminator property ('sectionDetailType') must be equal to 'full'",
        "x-discriminator-value": "full",
        "x-discriminator-name": "sectionDetailType"
      },
      "GsaFullNameProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'fullName'",
        "x-discriminator-value": "fullName",
        "x-discriminator-name": "propertyName"
      },
      "GsaFuncNoParamsAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Functional attributes must have at least one parameter.\r\nFunctional attributes only.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'funcNoParams'",
        "x-discriminator-value": "funcNoParams",
        "x-discriminator-name": "reason"
      },
      "GsaFunctionalDataDefaultUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'functionalDataDefault'",
        "x-discriminator-value": "functionalDataDefault",
        "x-discriminator-name": "referencedByType"
      },
      "GsaFunctionalDatumParameterInfo": {
        "type": "object",
        "properties": {
          "scaleTypeDefinedAt": {
            "$ref": "#/components/schemas/GsaParameterSettingDefinedAt"
          },
          "interpolationMethodDefinedAt": {
            "$ref": "#/components/schemas/GsaParameterSettingDefinedAt"
          },
          "defaultValueDefinedAt": {
            "$ref": "#/components/schemas/GsaParameterSettingDefinedAt"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "unitSymbol": {
            "type": "string",
            "nullable": true
          },
          "scaleType": {
            "$ref": "#/components/schemas/GsaParameterInfoScaleType"
          },
          "interpolationType": {
            "$ref": "#/components/schemas/GsaParameterInfoInterpolationType"
          },
          "parameterType": {
            "$ref": "#/components/schemas/GsaParameterInfoParameterType"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/GsaDataExportParameterValue"
          }
        },
        "additionalProperties": false
      },
      "GsaFunctionalParameterSetting": {
        "required": [
          "defaultValue",
          "interpolationType",
          "parameter",
          "scaleType"
        ],
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimParameter"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/GsaParameterDataValue"
          },
          "scaleType": {
            "$ref": "#/components/schemas/GsaParameterScaleType"
          },
          "interpolationType": {
            "$ref": "#/components/schemas/GsaParameterInterpolationType"
          }
        },
        "additionalProperties": false
      },
      "GsaFunctionalType": {
        "enum": [
          "float",
          "discrete"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>float</b>: Float functional</li>\r\n<li><b>discrete</b>: Discrete functional</li>\r\n</ul>\r\n"
      },
      "GsaGeneratedIntegrationSchemaOfObjectIdentifier": {
        "required": [
          "schema"
        ],
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaIntegrationSchemaGenerationErrorDetail"
            },
            "nullable": true
          },
          "schema": {
            "$ref": "#/components/schemas/GsaGuidOnlyIntegrationSchemaOfObjectIdentifier"
          }
        },
        "additionalProperties": false
      },
      "GsaGetJobsResponse": {
        "type": "object",
        "properties": {
          "totalResultCount": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaJob"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaGetJobsSummaryResponse": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaJobTypeAndStatus"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaGetModifiableRecordVersionControlException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaVersionControlErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaGetUnitConversionsRequest": {
        "required": [
          "sourceUnits"
        ],
        "type": "object",
        "properties": {
          "sourceUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaUnitConversionSetRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaGraph": {
        "required": [
          "graphType"
        ],
        "type": "object",
        "properties": {
          "graphType": {
            "$ref": "#/components/schemas/GsaGraphType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaSeriesGraph\r\n * GsaGridGraph",
        "discriminator": {
          "propertyName": "graphType",
          "mapping": {
            "series": "#/components/schemas/GsaSeriesGraph",
            "grid": "#/components/schemas/GsaGridGraph"
          }
        }
      },
      "GsaGraphDecorationType": {
        "enum": [
          "linesOnly",
          "markersOnly",
          "linesAndMarkers"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>linesOnly</b>: Graph shows only lines.</li>\r\n<li><b>markersOnly</b>: Graph shows only markers.</li>\r\n<li><b>linesAndMarkers</b>: Graph shows both lines and markers.</li>\r\n</ul>\r\n"
      },
      "GsaGraphEvaluationSettings": {
        "required": [
          "parametersWithValues"
        ],
        "type": "object",
        "properties": {
          "parametersWithValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaGraphParameterWithValue"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaGraphParameterValue": {
        "required": [
          "parameterType"
        ],
        "type": "object",
        "properties": {
          "parameterType": {
            "$ref": "#/components/schemas/GsaParameterType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDiscreteGraphParameterValue\r\n * GsaNumericGraphParameterValue",
        "discriminator": {
          "propertyName": "parameterType",
          "mapping": {
            "discrete": "#/components/schemas/GsaDiscreteGraphParameterValue",
            "numeric": "#/components/schemas/GsaNumericGraphParameterValue"
          }
        }
      },
      "GsaGraphParameterWithValue": {
        "required": [
          "parameterGuid",
          "parameterValue"
        ],
        "type": "object",
        "properties": {
          "parameterGuid": {
            "type": "string",
            "format": "uuid"
          },
          "parameterValue": {
            "$ref": "#/components/schemas/GsaGraphParameterValue"
          }
        },
        "additionalProperties": false
      },
      "GsaGraphType": {
        "enum": [
          "series",
          "grid"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>series</b>: Series graph</li>\r\n<li><b>grid</b>: Gridded graph</li>\r\n</ul>\r\n"
      },
      "GsaGraphValue": {
        "required": [
          "graphValueType"
        ],
        "type": "object",
        "properties": {
          "graphValueType": {
            "$ref": "#/components/schemas/GsaGraphValueType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDiscreteGraphValue\r\n * GsaRangeGraphValue\r\n * GsaNoValueExistsGraphValue",
        "discriminator": {
          "propertyName": "graphValueType",
          "mapping": {
            "discrete": "#/components/schemas/GsaDiscreteGraphValue",
            "range": "#/components/schemas/GsaRangeGraphValue",
            "noValueExists": "#/components/schemas/GsaNoValueExistsGraphValue"
          }
        }
      },
      "GsaGraphValueType": {
        "enum": [
          "discrete",
          "range",
          "noValueExists"
        ],
        "type": "string"
      },
      "GsaGrid": {
        "required": [
          "headers",
          "rows"
        ],
        "type": "object",
        "properties": {
          "headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "GsaGridGraph": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaGraph"
          },
          {
            "required": [
              "allParameters",
              "defaultXAxisParameter",
              "functionalType"
            ],
            "type": "object",
            "properties": {
              "functionalType": {
                "$ref": "#/components/schemas/GsaFunctionalType"
              },
              "defaultXAxisParameter": {
                "$ref": "#/components/schemas/GsaSlimParameter"
              },
              "allParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimParameter"
                }
              }
            },
            "discriminator": {
              "propertyName": "functionalType",
              "mapping": {
                "float": "#/components/schemas/GsaFloatGridGraph",
                "discrete": "#/components/schemas/GsaDiscreteGridGraph"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaGraph\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'grid'\r\n\r\nThis is one of: \r\n * GsaFloatGridGraph\r\n * GsaDiscreteGridGraph",
        "x-discriminator-value": "grid",
        "x-discriminator-name": "graphType"
      },
      "GsaGuidOnlyAttribute": {
        "required": [
          "guid",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "unitSymbol": {
            "type": "string",
            "description": "If isUnitted is true, then this must have a non empty value",
            "nullable": true
          },
          "isUnitted": {
            "type": "boolean",
            "nullable": true
          },
          "discreteTypeGuid": {
            "type": "string",
            "description": "A discrete attribute must define the guid of its discrete type (i.e. list of possible values)",
            "format": "uuid",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaGuidOnlyIntegrationParameterInfo"
            },
            "description": "A float functional attribute must define a list of parameters.",
            "nullable": true
          },
          "targetDatabase": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "targetTable": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "graphType": {
            "type": "string",
            "description": "A float functional attribute must be either a Series or a Grid type graph.",
            "nullable": true
          },
          "xAxisParameter": {
            "type": "string",
            "description": "A float functional attribute must define an x-axis. This will be one of the parameters listed in parameters",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An attribute as defined in an integration schema.\r\n\r\ntargetDatabase: A link attribute must define the database of the linked records.\r\n\r\ntargetTable: A link attribute must define the table of the linked records."
      },
      "GsaGuidOnlyDiscreteType": {
        "required": [
          "guid"
        ],
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An integration schema discrete type defines the list of values that a discrete attribute can take."
      },
      "GsaGuidOnlyIntegrationParameterInfo": {
        "required": [
          "guid"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "unitSymbol": {
            "type": "string",
            "nullable": true
          },
          "scaleType": {
            "$ref": "#/components/schemas/GsaParameterInfoScaleType"
          },
          "interpolationType": {
            "$ref": "#/components/schemas/GsaParameterInfoInterpolationType"
          },
          "parameterType": {
            "$ref": "#/components/schemas/GsaParameterInfoParameterType"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/GsaDataExportParameterValue"
          }
        },
        "additionalProperties": false
      },
      "GsaGuidOnlyIntegrationSchemaOfObjectIdentifier": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaGuidOnlyAttribute"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaGuidOnlyLayout"
            },
            "nullable": true
          },
          "unitSystem": {
            "type": "string",
            "nullable": true
          },
          "discreteTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaGuidOnlyDiscreteType"
            },
            "nullable": true
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaGuidOnlySourceOfObjectIdentifier"
            },
            "nullable": true
          },
          "accessControlCategoryValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "nullable": true
          },
          "securityGroups": {
            "$ref": "#/components/schemas/GsaSecurityGroups"
          }
        },
        "additionalProperties": false,
        "description": "Similar to IntegrationSchema, but without identities.\r\nUsed when we don't want consumers to specify/know about identities."
      },
      "GsaGuidOnlyLayout": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "attributeGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An integration schema layout is named list of attribute identities."
      },
      "GsaGuidOnlyMappingOfObjectIdentifier": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "targetGuid": {
            "type": "string",
            "description": "The guid of the integration schema attribute",
            "format": "uuid"
          },
          "parameterMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaGuidOnlyMappingOfObjectIdentifier"
            },
            "description": "Any mapped parameters (float functional attributes only). The target parameters must be defined on the target integration attribute.\r\nNot every parameters from the source database needs to be mapped for each attribute.",
            "nullable": true
          },
          "linkSourceType": {
            "$ref": "#/components/schemas/GsaLinkSourceType"
          }
        },
        "additionalProperties": false,
        "description": "A mapping between a source database item and an integration schema attribute."
      },
      "GsaGuidOnlySourceOfObjectIdentifier": {
        "required": [
          "mappings",
          "table"
        ],
        "type": "object",
        "properties": {
          "database": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "databaseKey": {
            "type": "string",
            "nullable": true
          },
          "table": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaGuidOnlyMappingOfObjectIdentifier"
            },
            "description": "Mappings for items from this table to the integration schema attributes."
          }
        },
        "additionalProperties": false,
        "description": "A source table from which integrated data will be taken."
      },
      "GsaHelpPathsValidationResponse": {
        "required": [
          "attributes",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimAttributeWithHelpPath"
            }
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimParameterWithHelpPath"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaHistogram": {
        "type": "object",
        "properties": {
          "buckets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaHistogramBucket"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaHistogramBucket": {
        "type": "object",
        "properties": {
          "lower": {
            "type": "number",
            "format": "double"
          },
          "upper": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GsaHyperlinkAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'hyperlink'",
        "x-discriminator-value": "hyperlink",
        "x-discriminator-name": "type"
      },
      "GsaHyperlinkDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "address",
              "description",
              "target"
            ],
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "target": {
                "$ref": "#/components/schemas/GsaHyperlinkTarget"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'hyperlink'",
        "x-discriminator-value": "hyperlink",
        "x-discriminator-name": "datumType"
      },
      "GsaHyperlinkDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "hyperlink: Criterion for matching records where the hyperlink description contains the given value.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'hyperlink'",
        "x-discriminator-value": "hyperlink",
        "x-discriminator-name": "type"
      },
      "GsaHyperlinkDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'hyperlink'",
        "x-discriminator-value": "hyperlink",
        "x-discriminator-name": "type"
      },
      "GsaHyperlinkPrefixDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "prefix"
            ],
            "type": "object",
            "properties": {
              "prefix": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'hyperlinkPrefix'",
        "x-discriminator-value": "hyperlinkPrefix",
        "x-discriminator-name": "type"
      },
      "GsaHyperlinkTarget": {
        "enum": [
          "newWindow",
          "top",
          "parent",
          "tree",
          "content",
          "currentFrame"
        ],
        "type": "string",
        "description": "A target for a `HyperlinkDatum`<p>Possible values:</p>\r\n<ul>\r\n<li><b>newWindow</b>: Target a new window (equivalent to \"_blank\").</li>\r\n<li><b>top</b>: Target the topmost frame of the current frameset (equivalent to \"_top\").</li>\r\n<li><b>parent</b>: Target the parent frame of the current frame (equivalent to \"_parent\").</li>\r\n<li><b>tree</b>: Target the left-hand side frame.</li>\r\n<li><b>content</b>: Target the right-hand side frame.</li>\r\n<li><b>currentFrame</b>: Target the current frame (equivalent to \"_self\").</li>\r\n</ul>\r\n"
      },
      "GsaInUseParameterValueErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterValueErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "parameterValueGuid": {
                "type": "string",
                "format": "uuid"
              },
              "usedByType": {
                "$ref": "#/components/schemas/GsaParameterValueUsedByType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The parameter value is being used by an attribute.\r\n\r\nThis extends: GsaParameterValueErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'inUse'",
        "x-discriminator-value": "inUse",
        "x-discriminator-name": "reason"
      },
      "GsaIndexRecordFailure": {
        "type": "object",
        "properties": {
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordName": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "description": "This is the error message from the indexing exception. It may have been returned directly from Elasticsearch.",
            "nullable": true
          },
          "recordWasOversized": {
            "type": "boolean",
            "description": "Records that contain a large amount of data are intentionally not sent to the index. This size limit is configurable through\r\nMIServer.exe.config"
          }
        },
        "additionalProperties": false,
        "description": "Detail of a record that has failed to successfully index. A record that was not indexed will not be returned\r\nas a result in any searches."
      },
      "GsaIndirectLinks": {
        "enum": [
          "fromLinkDefinition",
          "include",
          "exclude"
        ],
        "type": "string"
      },
      "GsaInputValidationErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaIntegerAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "maximum": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "datumType"
      },
      "GsaIntegerAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within an integer attribute. The returned aggregation will contain the minimum and maximum\r\nvalues, and a count of records with a value for the attribute.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "type"
      },
      "GsaIntegerAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "required": [
              "isUnique"
            ],
            "type": "object",
            "properties": {
              "isUnique": {
                "type": "boolean",
                "description": "Whether or not the attribute is constrained to contain a unique value"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "type"
      },
      "GsaIntegerDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "datumType"
      },
      "GsaIntegerDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "integer",
                "description": "Greater than or equal to",
                "format": "int32",
                "nullable": true
              },
              "lte": {
                "type": "integer",
                "description": "Less than or equal to",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "integer: Criterion for matching records where the integer data is within the given bounds. If one of gte or lte is null, this will be an open ended search.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "type"
      },
      "GsaIntegerDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "type"
      },
      "GsaIntegerFixedWidthHistogramAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "interval": {
                "type": "number",
                "description": "Fixed size of the resulting histogram buckets",
                "format": "double"
              },
              "offset": {
                "type": "number",
                "description": "Offset of the lowest bucket boundary. Defaults to 0. Must be less than the interval.",
                "format": "double"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within an integer attribute. The returned aggregation will contain a histogram of the data with a fixed interval.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'integerFixedWidthHistogram'",
        "x-discriminator-value": "integerFixedWidthHistogram",
        "x-discriminator-name": "type"
      },
      "GsaIntegerHistogramAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "histogram": {
                "$ref": "#/components/schemas/GsaHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'integerHistogram'",
        "x-discriminator-value": "integerHistogram",
        "x-discriminator-name": "datumType"
      },
      "GsaIntegerHistogramAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "maximumNumberOfBuckets": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within an integer attribute. The returned aggregation will contain a histogram of the data with a fixed number of buckets. The buckets may have variable widths.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'integerHistogram'",
        "x-discriminator-value": "integerHistogram",
        "x-discriminator-name": "type"
      },
      "GsaIntegrationAttribute": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "unitSymbol": {
            "type": "string",
            "description": "If isUnitted is true, then this must have a non empty value",
            "nullable": true
          },
          "isUnitted": {
            "type": "boolean",
            "nullable": true
          },
          "discreteTypeIdentity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "discreteTypeGuid": {
            "type": "string",
            "description": "A discrete attribute must define the guid of its discrete type (i.e. list of possible values)",
            "format": "uuid",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaIntegrationParameterInfo"
            },
            "description": "A float functional attribute must define a list of parameters.",
            "nullable": true
          },
          "targetDatabase": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "targetTable": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "graphType": {
            "type": "string",
            "description": "A float functional attribute must be either a Series or a Grid type graph.",
            "nullable": true
          },
          "xAxisParameter": {
            "type": "string",
            "description": "A float functional attribute must define an x-axis. This will be one of the parameters listed in parameters",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An attribute as defined in an integration schema.\r\n\r\ntargetDatabase: A link attribute must define the database of the linked records.\r\n\r\ntargetTable: A link attribute must define the table of the linked records."
      },
      "GsaIntegrationDataExportRequest": {
        "required": [
          "attributeIdentities"
        ],
        "type": "object",
        "properties": {
          "recordReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaRecordReference"
            },
            "description": "A list of record references to export. These are references to the underlying records in the source database.\r\nData can be exported for either record histories or record versions in each request, not both.",
            "nullable": true
          },
          "attributeIdentities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of attribute to export. These are the attribute identities from the integration schema."
          }
        },
        "additionalProperties": false
      },
      "GsaIntegrationDiscreteType": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An integration schema discrete type defines the list of values that a discrete attribute can take."
      },
      "GsaIntegrationLayout": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "attributeIdentities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "attributeGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An integration schema layout is named list of attribute identities."
      },
      "GsaIntegrationParameterInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "unitSymbol": {
            "type": "string",
            "nullable": true
          },
          "scaleType": {
            "$ref": "#/components/schemas/GsaParameterInfoScaleType"
          },
          "interpolationType": {
            "$ref": "#/components/schemas/GsaParameterInfoInterpolationType"
          },
          "parameterType": {
            "$ref": "#/components/schemas/GsaParameterInfoParameterType"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/GsaDataExportParameterValue"
          }
        },
        "additionalProperties": false
      },
      "GsaIntegrationSchemaGenerationErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaIntegrationSchemaOfObjectIdentifier": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaIntegrationAttribute"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaIntegrationLayout"
            },
            "nullable": true
          },
          "unitSystem": {
            "type": "string",
            "nullable": true
          },
          "discreteTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaIntegrationDiscreteType"
            },
            "nullable": true
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSourceOfObjectIdentifier"
            },
            "nullable": true
          },
          "accessControlCategoryValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "nullable": true
          },
          "securityGroups": {
            "$ref": "#/components/schemas/GsaSecurityGroups"
          }
        },
        "additionalProperties": false,
        "description": "A type representing an integration schema. An integration schema is a schema that describes\r\na shape that data must conform to, similar to an MI schema, but unlike an MI schema, an\r\nintegration schema does not have any corresponding data stored in it. Instead, an integration\r\nschema defines mappings or transformations from existing stored data, which may be a different\r\nshape from the integration schema."
      },
      "GsaIntegrationSchemaStatus": {
        "type": "object",
        "properties": {
          "loadedDatabases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Loaded databases have been successfully indexed into the integration schema.",
            "nullable": true
          },
          "loadingDatabases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Databases which are in the process of loading.",
            "nullable": true
          },
          "notLoadedDatabases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Databases that are referenced in the schema but that are not yet loaded. This could be because they are still queued for\r\nload in the MI system, or because they have not yet been added.",
            "nullable": true
          },
          "erroredDatabases": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Databases that encountered an error while loading. These databases will not be available for searches.",
            "nullable": true
          },
          "loadedDatabaseIndexStatuses": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GsaSearchIndexStatus"
            },
            "description": "Index information about all loaded databases, including the out of sync status.",
            "nullable": true
          },
          "searchIndexUpToDate": {
            "type": "boolean",
            "description": "Whether all changes up to and including the most recent database revision have been sent to the search index. This will return true\r\neven if some of those revisions could not be indexed"
          },
          "searchIndexOutOfDateDuration": {
            "type": "string",
            "description": "How long has the index been out of date.\r\nSpecifically the duration between the first non-indexed revision and the current time.",
            "format": "date-span",
            "nullable": true
          },
          "searchIndexInSync": {
            "type": "boolean",
            "description": "Returns false if the search index is out of sync with the database (i.e. because changes were made that could not be indexed)"
          },
          "searchIndexLocation": {
            "type": "string",
            "description": "The location of the index.",
            "nullable": true
          },
          "searchIndexIsReadOnly": {
            "type": "boolean",
            "description": "True if the index is read only.",
            "nullable": true
          },
          "searchIndexUnavailable": {
            "type": "boolean",
            "description": "True if the index could not be contacted.",
            "nullable": true
          },
          "recordsThatFailedToIndex": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaIndexRecordFailure"
            },
            "description": "Details of any records that failed to index.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaInvalidKeyAddDatabaseValidationIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAddDatabaseValidationIssue"
          },
          {
            "required": [
              "databaseKey"
            ],
            "type": "object",
            "properties": {
              "databaseKey": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAddDatabaseValidationIssue\r\n\r\nThe value of discriminator property ('IssueType') must be equal to 'invalidKey'",
        "x-discriminator-value": "invalidKey",
        "x-discriminator-name": "IssueType"
      },
      "GsaInvalidParentStateErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaVersionControlErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaVersionControlErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'invalidParentState'",
        "x-discriminator-value": "invalidParentState",
        "x-discriminator-name": "reason"
      },
      "GsaInvalidVersionStateErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaVersionControlErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "versionState": {
                "$ref": "#/components/schemas/GsaVersionState"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaVersionControlErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'invalidVersionState'",
        "x-discriminator-value": "invalidVersionState",
        "x-discriminator-name": "reason"
      },
      "GsaJob": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "submitterName": {
            "type": "string",
            "nullable": true
          },
          "submitterRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "submissionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "scheduledExecutionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "executionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/GsaJobStatus"
          },
          "inputFileIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "outputFileNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobSpecificOutputs": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaJobStatus": {
        "enum": [
          "Pending",
          "Running",
          "Succeeded",
          "Failed",
          "Cancelled"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>Pending</b>: Pending</li>\r\n<li><b>Running</b>: Running</li>\r\n<li><b>Succeeded</b>: Succeeded</li>\r\n<li><b>Failed</b>: Failed</li>\r\n<li><b>Cancelled</b>: Cancelled</li>\r\n</ul>\r\n"
      },
      "GsaJobTypeAndStatus": {
        "type": "object",
        "properties": {
          "jobType": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaLastModifiedByUserProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "lastModifiedByUser": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'lastModifiedByUser'",
        "x-discriminator-value": "lastModifiedByUser",
        "x-discriminator-name": "propertyName"
      },
      "GsaLastModifiedDateProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'lastModifiedDate'",
        "x-discriminator-value": "lastModifiedDate",
        "x-discriminator-name": "propertyName"
      },
      "GsaLayout": {
        "required": [
          "applicableApplications",
          "displayNames",
          "guid",
          "name",
          "sections"
        ],
        "type": "object",
        "properties": {
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaLayoutSection"
            }
          },
          "applicableApplications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "If there are no ApplicableApplications, the layout is applicable in all applications."
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaLayoutAttributeItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLayoutItem"
          },
          {
            "required": [
              "attributeType",
              "readOnly",
              "required"
            ],
            "type": "object",
            "properties": {
              "attributeType": {
                "$ref": "#/components/schemas/GsaAttributeType"
              },
              "required": {
                "type": "boolean"
              },
              "readOnly": {
                "type": "boolean"
              },
              "metaAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaLayoutAttributeItem"
                },
                "nullable": true
              },
              "tabularColumns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaLayoutTabularColumn"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaLayoutItem\r\n\r\nThe value of discriminator property ('itemType') must be equal to 'attribute'",
        "x-discriminator-value": "attribute",
        "x-discriminator-name": "itemType"
      },
      "GsaLayoutItem": {
        "required": [
          "guid",
          "itemType",
          "name",
          "underlyingEntityGuid"
        ],
        "type": "object",
        "properties": {
          "itemType": {
            "$ref": "#/components/schemas/GsaLayoutItemType"
          },
          "underlyingEntityGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaLayoutAttributeItem\r\n * GsaLayoutLinkItem",
        "discriminator": {
          "propertyName": "itemType",
          "mapping": {
            "attribute": "#/components/schemas/GsaLayoutAttributeItem",
            "link": "#/components/schemas/GsaLayoutLinkItem"
          }
        }
      },
      "GsaLayoutItemLinkType": {
        "enum": [
          "recordLink",
          "smartLink",
          "crossDatabaseLink",
          "associationChain"
        ],
        "type": "string",
        "description": "The types of layout items that represent links to another table."
      },
      "GsaLayoutItemType": {
        "enum": [
          "attribute",
          "link"
        ],
        "type": "string",
        "description": "The types of layout item that are supported by the API."
      },
      "GsaLayoutLinkItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLayoutItem"
          },
          {
            "required": [
              "forwards",
              "linkType",
              "targetTable"
            ],
            "type": "object",
            "properties": {
              "linkType": {
                "$ref": "#/components/schemas/GsaLayoutItemLinkType"
              },
              "targetDatabase": {
                "type": "string",
                "description": "May be null for a cross database link group that can target multiple databases",
                "format": "uuid",
                "nullable": true
              },
              "targetDatabaseVersion": {
                "type": "string",
                "description": "May be null for a cross database link group that can target multiple databases",
                "format": "uuid",
                "nullable": true
              },
              "targetTable": {
                "type": "string",
                "format": "uuid"
              },
              "forwards": {
                "type": "boolean",
                "description": "true if the link points from the table the layout is in; or false if it points towards the table the layout is in (an inbound link)."
              },
              "nextLink": {
                "$ref": "#/components/schemas/GsaLayoutLinkItem"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaLayoutItem\r\n\r\nThe value of discriminator property ('itemType') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "itemType"
      },
      "GsaLayoutSection": {
        "required": [
          "displayNames",
          "guid",
          "name",
          "sectionDetailType"
        ],
        "type": "object",
        "properties": {
          "sectionDetailType": {
            "$ref": "#/components/schemas/GsaLayoutSectionDetailType"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaSlimLayoutSection\r\n * GsaFullLayoutSection",
        "discriminator": {
          "propertyName": "sectionDetailType",
          "mapping": {
            "slim": "#/components/schemas/GsaSlimLayoutSection",
            "full": "#/components/schemas/GsaFullLayoutSection"
          }
        }
      },
      "GsaLayoutSectionDetailType": {
        "enum": [
          "slim",
          "full"
        ],
        "type": "string",
        "description": "The types of detail returned for a layout section."
      },
      "GsaLayoutSectionsInfo": {
        "type": "object",
        "properties": {
          "layoutSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaLayoutSection"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaLayoutTabularColumn": {
        "required": [
          "columnType",
          "guid",
          "name",
          "tabularColumnGuid"
        ],
        "type": "object",
        "properties": {
          "columnType": {
            "$ref": "#/components/schemas/GsaTabularColumnDtoType"
          },
          "tabularColumnGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaLayoutsInfo": {
        "type": "object",
        "properties": {
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimLayout"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaLink": {
        "required": [
          "displayNames",
          "guid",
          "linkInfo",
          "name",
          "reverseName",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaLinkAttributeType"
          },
          "reverseName": {
            "type": "string"
          },
          "reverseDisplayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "linkInfo": {
            "$ref": "#/components/schemas/GsaLinkInfo"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaLinkAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "localAggregations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaLocalColumnAggregation"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "datumType"
      },
      "GsaLinkAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "localAggregationCriteria": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaLocalColumnAggregationCriterion"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a tabular attribute. The local columns specified will be individually aggregated\r\nacross all rows (including rows without linked records, which may be hidden in clients).\r\n            \r\nThe returned aggregation will contain a list of the individual column aggregations that have been performed. Within these\r\ncolumn aggregations, the 'record count' instead denotes the number of relevant tabular rows across all records in the\r\naggregation scope, rather than the number of records. This row count will include rows that may be hidden from the user's\r\nview in certain clients.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "type"
      },
      "GsaLinkAttributeToExport": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeToExport"
          },
          {
            "type": "object",
            "properties": {
              "localData": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSimpleAttributeToExport"
                },
                "description": "The local columns to export. Reuse the attribute object here - but the 'attribute id' is now the column id.",
                "nullable": true
              },
              "targetTableGuid": {
                "type": "string",
                "description": "Table containing the linked records",
                "format": "uuid",
                "nullable": true
              },
              "targetDatabaseGuid": {
                "type": "string",
                "description": "Database containing the linked records. For reverse cross database links, this is the database where the link is defined.\r\nThis is not required for cross-database link groups that don't have a target database.",
                "format": "uuid",
                "nullable": true
              },
              "targetAttributeGuid": {
                "type": "string",
                "description": "For tabular searching: this is the identifier of the short-text linking attribute.\r\nOtherwise null.",
                "format": "uuid",
                "nullable": true
              },
              "linkAttributeType": {
                "$ref": "#/components/schemas/GsaLinkAttributeType"
              },
              "exportInReversedDirection": {
                "type": "boolean"
              },
              "recordProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaRecordProperty"
                },
                "description": "The properties to export on any linked records.",
                "nullable": true
              },
              "attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaAttributeToExport"
                },
                "description": "The attributes to export on any linked records.",
                "nullable": true
              },
              "linkedRecordsExportBehavior": {
                "$ref": "#/components/schemas/GsaLinkedRecordExportBehavior"
              },
              "indirectLinksBehavior": {
                "$ref": "#/components/schemas/GsaIndirectLinks"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Export request information for a 'link' attribute.\r\n\r\nThis extends: GsaAttributeToExport\r\n\r\nThe value of discriminator property ('attributeType') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "attributeType"
      },
      "GsaLinkAttributeType": {
        "enum": [
          "recordLink",
          "crossDatabaseLink",
          "smartLink",
          "tabularAttribute"
        ],
        "type": "string"
      },
      "GsaLinkDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "linkDatumType"
            ],
            "type": "object",
            "properties": {
              "targetTableIdentity": {
                "type": "integer",
                "description": "Table containing the linked records.\r\nThe target table can be omitted; it is likely to improve performance if it is included.\r\nFor tabular search, if either the target attribute or the target table is provided, they should both be provided.",
                "format": "int32",
                "nullable": true
              },
              "targetTableGuid": {
                "type": "string",
                "description": "Table containing the linked records.\r\nThe target table can be omitted; it is likely to improve performance if it is included.\r\nFor tabular search, if either the target attribute or the target table is provided, they should both be provided.",
                "format": "uuid",
                "nullable": true
              },
              "targetDatabaseKey": {
                "type": "string",
                "description": "Database containing the linked records. For reverse cross database links, this is the database where the link is defined",
                "nullable": true
              },
              "localCriterion": {
                "$ref": "#/components/schemas/GsaCriterion"
              },
              "linkDatumType": {
                "$ref": "#/components/schemas/GsaLinkAttributeType"
              },
              "indirectLinks": {
                "$ref": "#/components/schemas/GsaIndirectLinks"
              },
              "searchInReversedDirection": {
                "type": "boolean"
              },
              "targetAttributeIdentity": {
                "type": "integer",
                "description": "For tabular searching: this is the identity of the short-text linking attribute.\r\nThe target attribute and table can both be omitted; it is likely to improve performance if they are included.\r\nIf either the target attribute or the target table is provided, they should both be provided.\r\nOtherwise null.",
                "format": "int32",
                "nullable": true
              },
              "targetAttributeGuid": {
                "type": "string",
                "description": "For tabular searching: this is the GUID of the short-text linking attribute.\r\n/// The target attribute and table can both be omitted; it is likely to improve performance if they are included.\r\nIf either the target attribute or the target table is provided, they should both be provided.\r\nOtherwise null.",
                "format": "uuid",
                "nullable": true
              },
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaCriterion"
              },
              "localRowsBehavior": {
                "$ref": "#/components/schemas/GsaLocalRowsBehavior"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "link: Criterion for matching records that are linked to records that match the inner criterion. The target database and table specify the location of the linked records.\r\nThe inner criterion must be a criterion that applies to the records in the linked table. The link group followed will be the link group specified on the outer AttributeCriterion.\r\nA target database is required unless searching local tabular data - In that case, the inner criterion must be absent, and the local criterion will be used.\r\n\r\nlocalCriterion: Criterion to filter local properties of the link. For a tabular attribute search, this will be a criterion against the local columns and so it will use column ids/guids instead of attribute ones. For other types of link, this is currently unused.\r\n\r\nindirectLinks: For static and cross database links: whether the search should consider indirect links between records. The default is to decide based on the definition of the links\r\n\r\ninnerCriterion: Criterion to run to filter the linked records. When running linked search for tabular attribute we are searching against actual records and attributes, so attribute ids/guids should be used instead of column ids/guids.\r\n\r\nlocalRowsBehavior: For tabular searching: Additional row filtering behavior for a search against local columns, or a tabular data exists search.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "type"
      },
      "GsaLinkExistsDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "required": [
              "targetDatabaseKey"
            ],
            "type": "object",
            "properties": {
              "targetTableIdentity": {
                "type": "integer",
                "description": "Table containing the linked records",
                "format": "int32",
                "nullable": true
              },
              "targetTableGuid": {
                "type": "string",
                "description": "Table containing the linked records",
                "format": "uuid",
                "nullable": true
              },
              "targetDatabaseKey": {
                "type": "string",
                "description": "Database containing the linked records. For reverse cross database links, this is the database where the link is defined"
              },
              "linkDatumType": {
                "$ref": "#/components/schemas/GsaLinkAttributeType"
              },
              "indirectLinks": {
                "$ref": "#/components/schemas/GsaIndirectLinks"
              },
              "searchInReversedDirection": {
                "type": "boolean"
              },
              "localRowsBehavior": {
                "$ref": "#/components/schemas/GsaLocalRowsBehavior"
              },
              "targetAttributeIdentity": {
                "type": "integer",
                "description": "For tabular searching: this is the identity of the short-text linking attribute.\r\nOtherwise null.",
                "format": "int32",
                "nullable": true
              },
              "targetAttributeGuid": {
                "type": "string",
                "description": "For tabular searching: this is the GUID of the short-text linking attribute.\r\nOtherwise null.",
                "format": "uuid",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "link: Criterion for matching records that are linked to records by the given link group. The target database and table specify the location of the linked records.\r\n\r\nindirectLinks: For static and cross database links: whether the search should consider indirect links between records. The default is to decide based on the definition of the links\r\n\r\nlocalRowsBehavior: For tabular searching: Additional row filtering behavior for a search against local columns\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "type"
      },
      "GsaLinkExportFailure": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaExportFailure"
          },
          {
            "required": [
              "failedLink"
            ],
            "type": "object",
            "properties": {
              "failedLink": {
                "$ref": "#/components/schemas/GsaLinkReference"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaExportFailure\r\n\r\nThe value of discriminator property ('type') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "type"
      },
      "GsaLinkInfo": {
        "required": [
          "linkSource",
          "linkTarget"
        ],
        "type": "object",
        "properties": {
          "linkSource": {
            "$ref": "#/components/schemas/GsaLinkTarget"
          },
          "linkTarget": {
            "$ref": "#/components/schemas/GsaLinkTarget"
          }
        },
        "additionalProperties": false
      },
      "GsaLinkReference": {
        "required": [
          "linkType"
        ],
        "type": "object",
        "properties": {
          "targetDatabaseGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "linkIdentity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "linkGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "linkType": {
            "$ref": "#/components/schemas/GsaLinkAttributeType"
          }
        },
        "additionalProperties": false
      },
      "GsaLinkSourceType": {
        "enum": [
          "recordLink",
          "crossDatabaseLink",
          "reverseCrossDatabaseLink"
        ],
        "type": "string",
        "description": "Source links for an integration schema can either be static (within an single database), or cross database. Cross database links\r\nmust indicate which database they are defined in - a reverse cross database link is defined in the \"target\" database of the mapped\r\nintegration schema attribute.<p>Possible values:</p>\r\n<ul>\r\n<li><b>recordLink</b>: A static record link that links records within a single database.</li>\r\n<li><b>crossDatabaseLink</b>: Links records across multiple databases.</li>\r\n<li><b>reverseCrossDatabaseLink</b>: Links records across multiple databases, and is defined in the \"target\" database of the mapped integration schema attribute. Links records in that database to the source database defined in the mapping.</li>\r\n</ul>\r\n"
      },
      "GsaLinkTarget": {
        "required": [
          "tableGuid"
        ],
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "databaseVersionGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaLinkedAttributeTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "linkedAttribute"
            ],
            "type": "object",
            "properties": {
              "linkedAttribute": {
                "$ref": "#/components/schemas/GsaSlimAttribute"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'linkedAttribute'",
        "x-discriminator-value": "linkedAttribute",
        "x-discriminator-name": "columnType"
      },
      "GsaLinkedColumnTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "linkedAttribute",
              "linkedColumn"
            ],
            "type": "object",
            "properties": {
              "linkedAttribute": {
                "$ref": "#/components/schemas/GsaSlimAttribute"
              },
              "linkedColumn": {
                "$ref": "#/components/schemas/GsaTabularColumn"
              },
              "linkedTarget": {
                "$ref": "#/components/schemas/GsaTabularAttributeTarget"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nlinkedAttribute: The tabular attribute that the linked column belongs to. The target of this tabular attribute is linkedTarget.\r\n\r\nlinkedColumn: The tabular column in the tabular linkedAttribute. Data from this column will be included.\r\n\r\nlinkedTarget: The target of the tabular linkedAttribute.\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'linkedColumn'",
        "x-discriminator-value": "linkedColumn",
        "x-discriminator-name": "columnType"
      },
      "GsaLinkedRecordExportBehavior": {
        "type": "object",
        "properties": {
          "tabularRowBehavior": {
            "$ref": "#/components/schemas/GsaTabularRowExportBehavior"
          },
          "summaryRollUpType": {
            "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
          },
          "rollUpTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
            },
            "description": "Optional: if this attribute is being used as part of a tabular export, this can be used to specify how linked records should be rolled up",
            "nullable": true
          },
          "linkedRecordsCriterion": {
            "$ref": "#/components/schemas/GsaCriterion"
          }
        },
        "additionalProperties": false,
        "description": "Optional property to allow filtering of the linked records returned in an export. If used on a tabular export, can be used to filter both the linked records and the tabular rows.\r\nIf a summary roll up is included, the summary row for the tabular datum will include a rollup of the linked records."
      },
      "GsaLinkedRecordTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'linkedRecord'",
        "x-discriminator-value": "linkedRecord",
        "x-discriminator-name": "columnType"
      },
      "GsaLinkingValueExistsDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "attributeType": {
                "$ref": "#/components/schemas/GsaAttributeType"
              },
              "innerHitsIdentifier": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'smartLinkingValue'",
        "x-discriminator-value": "smartLinkingValue",
        "x-discriminator-name": "type"
      },
      "GsaLinkingValueMatchBehavior": {
        "enum": [
          "AllRows",
          "VisibleRows",
          "ExactMatchMatchingRows",
          "FreeTextMatchingRows"
        ],
        "type": "string",
        "description": "Enum for use in the Granta.Server.Api.Search.TabularLinkingValueCriterion to control which tabular rows are returned<p>Possible values:</p>\r\n<ul>\r\n<li><b>AllRows</b>: Return any row where the local data matches</li>\r\n<li><b>VisibleRows</b>: Return rows with matching linking values, or no linking value</li>\r\n<li><b>ExactMatchMatchingRows</b>: Return rows with matching linking values</li>\r\n<li><b>FreeTextMatchingRows</b>: Return rows with linking values that match when using the usual free text search analyzers</li>\r\n</ul>\r\n"
      },
      "GsaLinksInfo": {
        "required": [
          "links"
        ],
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaLink"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaListAction": {
        "enum": [
          "ListCreated",
          "ListDeleted",
          "ItemAdded",
          "ItemRemoved",
          "ListNameChanged",
          "ListDescriptionChanged",
          "ListNotesChanged",
          "ListSetToAwaitingApprovalForPublishing",
          "ListAwaitingApprovalForPublishingRemoved",
          "ListSetToAwaitingApprovalForWithdrawal",
          "ListAwaitingApprovalForWithdrawalRemoved",
          "ListPublished",
          "ListUnpublished",
          "ListRevisionCreated",
          "UserSubscribed",
          "UserUnsubscribed",
          "ListCuratorAdded",
          "ListCuratorRemoved",
          "ListAdminAdded",
          "ListAdminRemoved",
          "ListPublisherAdded",
          "ListPublisherRemoved",
          "ListMadeInternal",
          "ListMadeNotInternal",
          "ListRevisionDiscarded"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>ListCreated</b>: A list has been created.</li>\r\n<li><b>ListDeleted</b>: A list has been deleted.</li>\r\n<li><b>ItemAdded</b>: An item has been added to a list.</li>\r\n<li><b>ItemRemoved</b>: An item has been removed from a list.</li>\r\n<li><b>ListNameChanged</b>: The name of a list has been changed.</li>\r\n<li><b>ListDescriptionChanged</b>: The description of a list has been changed.</li>\r\n<li><b>ListNotesChanged</b>: The notes for a list have been changed.</li>\r\n<li><b>ListSetToAwaitingApprovalForPublishing</b>: The status of an unpublished list was set to 'awaiting approval' for publishing.</li>\r\n<li><b>ListAwaitingApprovalForPublishingRemoved</b>: The 'awaiting approval for publishing' status of an unpublished list was removed.</li>\r\n<li><b>ListSetToAwaitingApprovalForWithdrawal</b>: The status of a published list was set to 'awaiting approval' for withdrawal.</li>\r\n<li><b>ListAwaitingApprovalForWithdrawalRemoved</b>: The 'awaiting approval for withdrawal' status of a published list was removed.</li>\r\n<li><b>ListPublished</b>: The status of the list was set to 'published'.</li>\r\n<li><b>ListUnpublished</b>: The status of the list was set to 'unpublished'.</li>\r\n<li><b>ListRevisionCreated</b>: A revision of a list was created.</li>\r\n<li><b>UserSubscribed</b>: A user subscribed to a list.</li>\r\n<li><b>UserUnsubscribed</b>: A user subscribed to a list.</li>\r\n<li><b>ListCuratorAdded</b>: Permissions changed - a user was set as curator for a list.</li>\r\n<li><b>ListCuratorRemoved</b>: Permissions changed - a user was removed as a curator for a list.</li>\r\n<li><b>ListAdminAdded</b>: Permissions changed - a user was set as admin for a list.</li>\r\n<li><b>ListAdminRemoved</b>: Permissions changed - a user was removed as an admin for a list.</li>\r\n<li><b>ListPublisherAdded</b>: Permissions changed - a user was set a publisher for a list.</li>\r\n<li><b>ListPublisherRemoved</b>: Permissions changed - a user was removed as a publisher for a list.</li>\r\n<li><b>ListMadeInternal</b>: A list was changed to be flagged as 'internal use'.</li>\r\n<li><b>ListMadeNotInternal</b>: A list was changed to be flagged as 'not internal use'.</li>\r\n<li><b>ListRevisionDiscarded</b>: A list revision was 'published' and discarded. Publishing a revision results in any changes to the revision list being applied to its parent before marking the revision as discarded.</li>\r\n</ul>\r\n"
      },
      "GsaListAuditLogItem": {
        "type": "object",
        "properties": {
          "listIdentifier": {
            "type": "string",
            "description": "The identifier of the list that the action was performed on",
            "format": "uuid"
          },
          "initiatingUser": {
            "$ref": "#/components/schemas/GsaListsUserOrGroup"
          },
          "userOrGroupAffected": {
            "$ref": "#/components/schemas/GsaListsUserOrGroup"
          },
          "listItemAffected": {
            "$ref": "#/components/schemas/GsaListItem"
          },
          "action": {
            "$ref": "#/components/schemas/GsaListAction"
          },
          "timestamp": {
            "type": "string",
            "description": "The date/time that the action occurred.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\ninitiatingUser: The user that carried out the action\r\n\r\nuserOrGroupAffected: The user or group associated with the action. May be null if not relevant to the action\r\n\r\nlistItemAffected: The list item associated with the action. May be null if not relevant to the action\r\n\r\naction: The action that was carried out."
      },
      "GsaListAuditLogSearchRequest": {
        "type": "object",
        "properties": {
          "listIdentifiers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The lists to include actions for. If null, all items will be returned",
            "nullable": true
          },
          "listActionsToInclude": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaListAction"
            },
            "description": "The types of actions to include. If null, all action types will be returned",
            "nullable": true
          },
          "pagingOptions": {
            "$ref": "#/components/schemas/GsaListsPagingOptions"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\npagingOptions: Paging options. If null, all items will be returned."
      },
      "GsaListBooleanCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaListCriterion"
          },
          {
            "type": "object",
            "properties": {
              "matchAny": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaListCriterion"
                },
                "nullable": true
              },
              "matchAll": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaListCriterion"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "listBoolean: Criterion that wraps other criteria in order to specify how the results should be joined together. Used in searches for record lists.\r\n\r\nThis extends: GsaListCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'listBoolean'",
        "x-discriminator-value": "listBoolean",
        "x-discriminator-name": "type"
      },
      "GsaListCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "The criterion to be used in a search for record lists.\r\n            \r\nMultiple criterion can be provided. These should be wrapped with a boolean criterion that specifies whether the search should return results that match \"any\" or \"all\" of the criteria.\r\nThese criteria can be nested to created complex search queries.\r\n\r\nThis is one of: \r\n * GsaListBooleanCriterion\r\n * GsaRecordListSearchCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "listBoolean": "#/components/schemas/GsaListBooleanCriterion",
            "recordList": "#/components/schemas/GsaRecordListSearchCriterion"
          }
        }
      },
      "GsaListItem": {
        "required": [
          "databaseGuid",
          "recordHistoryGuid",
          "tableGuid"
        ],
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordGuid": {
            "type": "string",
            "description": "This may be null if the list item does not exist in a currently loaded database",
            "format": "uuid",
            "nullable": true
          },
          "recordVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaListItemRecordReference": {
        "required": [
          "databaseGuid",
          "recordHistoryGuid"
        ],
        "type": "object",
        "properties": {
          "databaseGuid": {
            "type": "string",
            "description": "The database GUID of the record",
            "format": "uuid"
          },
          "recordHistoryGuid": {
            "type": "string",
            "description": "The record history GUID of the record",
            "format": "uuid"
          },
          "recordVersion": {
            "type": "integer",
            "description": "Optional record version. If not specified, search will return lists that were added with unspecified version",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Object that uniquely identifies a record"
      },
      "GsaListRollupDatum": {
        "required": [
          "datum",
          "sourceRow"
        ],
        "type": "object",
        "properties": {
          "sourceRow": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "datum": {
            "$ref": "#/components/schemas/GsaDatum"
          }
        },
        "additionalProperties": false
      },
      "GsaListsPagingOptions": {
        "type": "object",
        "properties": {
          "startIndex": {
            "type": "integer",
            "description": "The index of the first item in the collection to be returned. If not provided it will start at index 0.",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "description": "The number of items to be returned per page. If not provided the number of returned lists will be unlimited.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaListsUserOrGroup": {
        "required": [
          "displayName",
          "identifier",
          "name"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaLocalColumnAggregation": {
        "required": [
          "localColumnAggregationType"
        ],
        "type": "object",
        "properties": {
          "localColumnIdentity": {
            "type": "integer",
            "description": "The identity of the local column that was aggregated over.",
            "format": "int32",
            "nullable": true
          },
          "localColumnGuid": {
            "type": "string",
            "description": "The GUID of the local column that was aggregated over.",
            "format": "uuid",
            "nullable": true
          },
          "localColumnAggregationType": {
            "$ref": "#/components/schemas/GsaLocalColumnAggregationType"
          },
          "count": {
            "type": "integer",
            "description": "The number of records that have a populated (applicable) value for this local column.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "The results of aggregation over a tabular local column. In all cases this will report the number of rows in\r\nthe aggregation scope that have a value for the local column. In some cases, depending on the datum\r\ntype, we may be able to report more information. For example, aggregating over a numeric datum will\r\nalso provide the minimum and maximum values that local column takes across records in the aggregation\r\nscope.\r\n\r\nThis is one of: \r\n * GsaLocalColumnValueAggregation\r\n * GsaLocalColumnExistsAggregation",
        "discriminator": {
          "propertyName": "localColumnAggregationType",
          "mapping": {
            "value": "#/components/schemas/GsaLocalColumnValueAggregation",
            "exists": "#/components/schemas/GsaLocalColumnExistsAggregation"
          }
        }
      },
      "GsaLocalColumnAggregationCriterion": {
        "required": [
          "localColumnAggregationCriterionType"
        ],
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "localColumnAggregationCriterionType": {
            "$ref": "#/components/schemas/GsaLocalColumnAggregationType"
          }
        },
        "additionalProperties": false,
        "description": "A criterion for requesting aggregations for a single specific tabular local column. Exactly one of the identity or GUID must be provided.\r\n\r\nThis is one of: \r\n * GsaLocalColumnAggregationValueCriterion\r\n * GsaLocalColumnAggregationExistsCriterion",
        "discriminator": {
          "propertyName": "localColumnAggregationCriterionType",
          "mapping": {
            "value": "#/components/schemas/GsaLocalColumnAggregationValueCriterion",
            "exists": "#/components/schemas/GsaLocalColumnAggregationExistsCriterion"
          }
        }
      },
      "GsaLocalColumnAggregationExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLocalColumnAggregationCriterion"
          },
          {
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaAggregationDatumExistsCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A criterion for requesting aggregations for a single specific tabular local column.\r\n\r\nThis extends: GsaLocalColumnAggregationCriterion\r\n\r\nThe value of discriminator property ('localColumnAggregationCriterionType') must be equal to 'exists'",
        "x-discriminator-value": "exists",
        "x-discriminator-name": "localColumnAggregationCriterionType"
      },
      "GsaLocalColumnAggregationType": {
        "enum": [
          "value",
          "exists"
        ],
        "type": "string"
      },
      "GsaLocalColumnAggregationValueCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLocalColumnAggregationCriterion"
          },
          {
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A criterion for requesting aggregations for a single specific tabular local column,\r\nincluding summary information about the values assumed by the local column.\r\n            \r\nFor a numeric local column (integer, point, range, or date-time), the summary information will\r\nbe the minimum and maximum values assumed by the local column.\r\n            \r\nFor a simple text local column (discrete, short-text), the summary information will be the most\r\ncommon terms in the search index for that local column.\r\n\r\nThis extends: GsaLocalColumnAggregationCriterion\r\n\r\nThe value of discriminator property ('localColumnAggregationCriterionType') must be equal to 'value'",
        "x-discriminator-value": "value",
        "x-discriminator-name": "localColumnAggregationCriterionType"
      },
      "GsaLocalColumnCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "required": [
              "localColumnCriterionType"
            ],
            "type": "object",
            "properties": {
              "identity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "guid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "localColumnCriterionType": {
                "$ref": "#/components/schemas/GsaLocalColumnCriterionType"
              }
            },
            "discriminator": {
              "propertyName": "localColumnCriterionType",
              "mapping": {
                "matches": "#/components/schemas/GsaLocalColumnMatchesCriterion",
                "exists": "#/components/schemas/GsaLocalColumnExistsCriterion",
                "notApplicable": "#/components/schemas/GsaLocalColumnNotApplicableCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Base class for local column criterions. Exactly one of the local column identity or GUID must be provided.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'localColumn'\r\n\r\nThis is one of: \r\n * GsaLocalColumnMatchesCriterion\r\n * GsaLocalColumnExistsCriterion\r\n * GsaLocalColumnNotApplicableCriterion",
        "x-discriminator-value": "localColumn",
        "x-discriminator-name": "type"
      },
      "GsaLocalColumnCriterionType": {
        "enum": [
          "matches",
          "exists",
          "notApplicable"
        ],
        "type": "string"
      },
      "GsaLocalColumnExistsAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLocalColumnAggregation"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "The results of aggregation over a tabular local column, reporting only the number of rows with a value\r\nfor the local column.\r\n\r\nThis extends: GsaLocalColumnAggregation\r\n\r\nThe value of discriminator property ('localColumnAggregationType') must be equal to 'exists'",
        "x-discriminator-value": "exists",
        "x-discriminator-name": "localColumnAggregationType"
      },
      "GsaLocalColumnExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLocalColumnCriterion"
          },
          {
            "required": [
              "innerCriterion"
            ],
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaDatumExistsCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching record where there is data on the tabular local column specified. Exactly one of the local column identity or GUID must be provided.\r\n\r\nThis extends: GsaLocalColumnCriterion\r\n\r\nThe value of discriminator property ('localColumnCriterionType') must be equal to 'exists'",
        "x-discriminator-value": "exists",
        "x-discriminator-name": "localColumnCriterionType"
      },
      "GsaLocalColumnMatchesCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLocalColumnCriterion"
          },
          {
            "required": [
              "innerCriterion"
            ],
            "type": "object",
            "properties": {
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaDatumCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for a search matching values in a given tabular local column. Exactly one of the local column identity or GUID must be provided.\r\n\r\nThis extends: GsaLocalColumnCriterion\r\n\r\nThe value of discriminator property ('localColumnCriterionType') must be equal to 'matches'",
        "x-discriminator-value": "matches",
        "x-discriminator-name": "localColumnCriterionType"
      },
      "GsaLocalColumnNotApplicableCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLocalColumnCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching record where there is not applicable data on the local column specified. Exactly one of the local column identity or GUID must be provided.\r\n\r\nThis extends: GsaLocalColumnCriterion\r\n\r\nThe value of discriminator property ('localColumnCriterionType') must be equal to 'notApplicable'",
        "x-discriminator-value": "notApplicable",
        "x-discriminator-name": "localColumnCriterionType"
      },
      "GsaLocalColumnValueAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLocalColumnAggregation"
          },
          {
            "type": "object",
            "properties": {
              "aggregationDatum": {
                "$ref": "#/components/schemas/GsaAggregationDatum"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The results of aggregation over a tabular local column, reporting the number of rows that have a value for\r\nthe local column, plus additional aggregation information about the local column values. The exact type of\r\nadditional information will depend on the type of local column.\r\n\r\nThis extends: GsaLocalColumnAggregation\r\n\r\nThe value of discriminator property ('localColumnAggregationType') must be equal to 'value'",
        "x-discriminator-value": "value",
        "x-discriminator-name": "localColumnAggregationType"
      },
      "GsaLocalDateTimeTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localDateTime'",
        "x-discriminator-value": "localDateTime",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalDiscreteTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType",
              "discreteType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "discreteType": {
                "$ref": "#/components/schemas/GsaSlimNamedEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localDiscrete'",
        "x-discriminator-value": "localDiscrete",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalFileTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localFile'",
        "x-discriminator-value": "localFile",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalHyperlinkTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localHyperlink'",
        "x-discriminator-value": "localHyperlink",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalIntegerTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localInteger'",
        "x-discriminator-value": "localInteger",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalLogicalTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localLogical'",
        "x-discriminator-value": "localLogical",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalLongTextTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localLongText'",
        "x-discriminator-value": "localLongText",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalPictureTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localPicture'",
        "x-discriminator-value": "localPicture",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalPointTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localPoint'",
        "x-discriminator-value": "localPoint",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalRangeTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localRange'",
        "x-discriminator-value": "localRange",
        "x-discriminator-name": "columnType"
      },
      "GsaLocalRowsBehavior": {
        "enum": [
          "AllRows",
          "VisibleRows",
          "ExactMatchMatchingRows",
          "NoLinkingValueRows"
        ],
        "type": "string",
        "description": "Enum for use in a tabular search, to optionally further filter the results based on whether the matching rows are linked. The default value of AllRows will return all rows matching the local search.<p>Possible values:</p>\r\n<ul>\r\n<li><b>AllRows</b>: Return any row where the local data matches</li>\r\n<li><b>VisibleRows</b>: Return rows with matching linking values, or no linking value</li>\r\n<li><b>ExactMatchMatchingRows</b>: Return rows with matching linking values</li>\r\n<li><b>NoLinkingValueRows</b>: Return rows with no linking value</li>\r\n</ul>\r\n"
      },
      "GsaLocalShortTextTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "required": [
              "defaultThresholdType"
            ],
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localShortText'",
        "x-discriminator-value": "localShortText",
        "x-discriminator-name": "columnType"
      },
      "GsaLogScaleNegativeParameterValueErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterValueErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "For a log-scale parameter, all values must be greater than zero.\r\n\r\nThis extends: GsaParameterValueErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'logScaleNegative'",
        "x-discriminator-value": "logScaleNegative",
        "x-discriminator-name": "reason"
      },
      "GsaLogicalAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaValueWithCountOfBoolean"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "datumType"
      },
      "GsaLogicalAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a logical attribute. The returned aggregation will contain a count of records with at least one value for the attribute,\r\nand a count of records for the true/false values.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "type"
      },
      "GsaLogicalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "type"
      },
      "GsaLogicalDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "datumType"
      },
      "GsaLogicalDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "description": "Logical search value"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "type"
      },
      "GsaLogicalDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "type"
      },
      "GsaLongSortingValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSortingValue"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSortingValue\r\n\r\nThe value of discriminator property ('type') must be equal to 'long'",
        "x-discriminator-value": "long",
        "x-discriminator-name": "type"
      },
      "GsaLongTextAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'longText'",
        "x-discriminator-value": "longText",
        "x-discriminator-name": "type"
      },
      "GsaLongTextDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "richTextValue"
            ],
            "type": "object",
            "properties": {
              "richTextValue": {
                "$ref": "#/components/schemas/GsaRichTextValue"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'longText'",
        "x-discriminator-value": "longText",
        "x-discriminator-name": "datumType"
      },
      "GsaLongTextDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Long text search value"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'longText'",
        "x-discriminator-value": "longText",
        "x-discriminator-name": "type"
      },
      "GsaLongTextDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'longText'",
        "x-discriminator-value": "longText",
        "x-discriminator-name": "type"
      },
      "GsaLongTextPrefixDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "prefix"
            ],
            "type": "object",
            "properties": {
              "prefix": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'longTextPrefix'",
        "x-discriminator-value": "longTextPrefix",
        "x-discriminator-name": "type"
      },
      "GsaMappingOfObjectIdentifier": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "targetIdentity": {
            "type": "integer",
            "description": "The identity of the integration schema attribute",
            "format": "int32"
          },
          "targetGuid": {
            "type": "string",
            "description": "The guid of the integration schema attribute",
            "format": "uuid"
          },
          "parameterMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaMappingOfObjectIdentifier"
            },
            "description": "Any mapped parameters (float functional attributes only). The target parameters must be defined on the target integration attribute.\r\nNot every parameters from the source database needs to be mapped for each attribute.",
            "nullable": true
          },
          "linkSourceType": {
            "$ref": "#/components/schemas/GsaLinkSourceType"
          }
        },
        "additionalProperties": false,
        "description": "A mapping between a source database item and an integration schema attribute."
      },
      "GsaMatchMode": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "How to match update items.<p>Possible values:</p>\r\n<ul>\r\n<li><b>BasicGuidMatch</b>: Items are matched based on their guids alone.</li>\r\n<li><b>MatchOnGuidThenName</b>: Items are matched based on their guids. Missing items are matched on name.</li>\r\n<li><b>FullGuidSync</b>: Items are matched on their guids. Missing items are matched on name and have their guids rewritten to match those from the update file.</li>\r\n</ul>\r\n",
        "format": "int32"
      },
      "GsaMathsContent": {
        "required": [
          "parameterContents",
          "transposeAxes",
          "useLogarithmicScale"
        ],
        "type": "object",
        "properties": {
          "curveLabel": {
            "type": "string",
            "nullable": true
          },
          "transposeAxes": {
            "type": "boolean"
          },
          "useLogarithmicScale": {
            "type": "boolean"
          },
          "expression": {
            "$ref": "#/components/schemas/GsaSlimExpression"
          },
          "freeParameter": {
            "$ref": "#/components/schemas/GsaSlimNamedEntity"
          },
          "parameterContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterContent"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaMathsFunctionalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "required": [
              "allowAllCompatibleExpressions",
              "allowAnonymousExpressions",
              "allowExtrapolation",
              "attributeParameters",
              "defaultContent",
              "expressions",
              "isRange"
            ],
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimNamedEntity"
                }
              },
              "expressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimExpression"
                }
              },
              "allowExtrapolation": {
                "type": "boolean"
              },
              "isRange": {
                "type": "boolean"
              },
              "allowAllCompatibleExpressions": {
                "type": "boolean"
              },
              "allowAnonymousExpressions": {
                "type": "boolean"
              },
              "defaultContent": {
                "$ref": "#/components/schemas/GsaMathsContent"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'mathsFunctional'",
        "x-discriminator-value": "mathsFunctional",
        "x-discriminator-name": "type"
      },
      "GsaMathsFunctionalAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Errors specific to Maths Functional attributes.\r\nSee \"errors\" for details.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'mathsFunctional'",
        "x-discriminator-value": "mathsFunctional",
        "x-discriminator-name": "reason"
      },
      "GsaMathsFunctionalDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "number",
                "description": "Greater than or equal to",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "description": "Less than or equal to",
                "format": "double",
                "nullable": true
              },
              "constraints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaParameterConstraint"
                },
                "description": "Constraints on the parameters of the attribute. Unspecified parameters will be assumed to be unconstrained.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "mathsFunctional: Criterion for matching records with maths functional data (EELs)\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'mathsFunctional'",
        "x-discriminator-value": "mathsFunctional",
        "x-discriminator-name": "type"
      },
      "GsaMathsFunctionalDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'mathsFunctional'",
        "x-discriminator-value": "mathsFunctional",
        "x-discriminator-name": "type"
      },
      "GsaMathsFunctionalErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaAnonymousExpressionsMustAllowAllCompatibleMathsFunctionalErrorDetail\r\n * GsaDefaultExpressionNotFoundMathsFunctionalErrorDetail\r\n * GsaDefaultFreeParameterNotFoundMathsFunctionalErrorDetail\r\n * GsaDuplicateExpressionGuidsMathsFunctionalErrorDetail\r\n * GsaExpressionMathsFunctionalErrorDetail\r\n * GsaExpressionsHaveUnknownParametersMathsFunctionalErrorDetail\r\n * GsaNoExpressionsMathsFunctionalErrorDetail\r\n * GsaNoSuchExpressionsMathsFunctionalErrorDetail\r\n * GsaParameterContentMathsFunctionalErrorDetail\r\n * GsaParameterContentDuplicateGuidsMathsFunctionalErrorDetail\r\n * GsaParameterContentUnknownParametersMathsFunctionalErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "anonymousExpressionsMustAllowAllCompatible": "#/components/schemas/GsaAnonymousExpressionsMustAllowAllCompatibleMathsFunctionalErrorDetail",
            "defaultExpressionNotFound": "#/components/schemas/GsaDefaultExpressionNotFoundMathsFunctionalErrorDetail",
            "defaultFreeParameterNotFound": "#/components/schemas/GsaDefaultFreeParameterNotFoundMathsFunctionalErrorDetail",
            "duplicateExpressionGuids": "#/components/schemas/GsaDuplicateExpressionGuidsMathsFunctionalErrorDetail",
            "expression": "#/components/schemas/GsaExpressionMathsFunctionalErrorDetail",
            "expressionsHaveUnknownParameters": "#/components/schemas/GsaExpressionsHaveUnknownParametersMathsFunctionalErrorDetail",
            "noExpressions": "#/components/schemas/GsaNoExpressionsMathsFunctionalErrorDetail",
            "noSuchExpressions": "#/components/schemas/GsaNoSuchExpressionsMathsFunctionalErrorDetail",
            "parameterContent": "#/components/schemas/GsaParameterContentMathsFunctionalErrorDetail",
            "parameterContentDuplicateGuids": "#/components/schemas/GsaParameterContentDuplicateGuidsMathsFunctionalErrorDetail",
            "parameterContentUnknownParameters": "#/components/schemas/GsaParameterContentUnknownParametersMathsFunctionalErrorDetail"
          }
        }
      },
      "GsaMathsFunctionalErrorReason": {
        "enum": [
          "anonymousExpressionsMustAllowAllCompatible",
          "defaultExpressionNotFound",
          "defaultFreeParameterNotFound",
          "duplicateExpressionGuids",
          "expression",
          "expressionsHaveUnknownParameters",
          "noExpressions",
          "noSuchExpressions",
          "parameterContent",
          "parameterContentDuplicateGuids",
          "parameterContentUnknownParameters"
        ],
        "type": "string"
      },
      "GsaMfaExpressionErrorDetail": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaMfaExpressionErrorReason"
          }
        },
        "additionalProperties": false
      },
      "GsaMfaExpressionErrorReason": {
        "enum": [
          "notAnAttributeExpression",
          "incompatibleUnit",
          "expressionAlreadyUsesThisAttribute",
          "anonymousExpression"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>notAnAttributeExpression</b>: Expression is not an attribute expression.</li>\r\n<li><b>incompatibleUnit</b>: Expression unit is incompatible with attribute unit.</li>\r\n<li><b>expressionAlreadyUsesThisAttribute</b>: Expression already uses this attribute.</li>\r\n<li><b>anonymousExpression</b>: Expression is an anonymous expression.</li>\r\n</ul>\r\n"
      },
      "GsaMiVersion": {
        "type": "object",
        "properties": {
          "binaryCompatibilityVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "majorMinorVersion": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaMissingArgumentsParameterContentErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterContentErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "missingArgument": {
                "$ref": "#/components/schemas/GsaParameterContentMissingArgument"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "MissingArgument must be provided.\r\n\r\nThis extends: GsaParameterContentErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'missingArguments'",
        "x-discriminator-value": "missingArguments",
        "x-discriminator-name": "reason"
      },
      "GsaMissingParameterGuidAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "All supplied attribute parameters must have parameter GUIDs specified.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'missingParameterGuid'",
        "x-discriminator-value": "missingParameterGuid",
        "x-discriminator-name": "reason"
      },
      "GsaMoveFile": {
        "required": [
          "folderGuid"
        ],
        "type": "object",
        "properties": {
          "folderGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaMoveFolder": {
        "required": [
          "parentGuid"
        ],
        "type": "object",
        "properties": {
          "parentGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaMoveRecordHistory": {
        "type": "object",
        "properties": {
          "newParent": {
            "$ref": "#/components/schemas/GsaSlimRecordHistory"
          }
        },
        "additionalProperties": false
      },
      "GsaMultiValuedPointDataUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'multiValuedPointData'",
        "x-discriminator-value": "multiValuedPointData",
        "x-discriminator-name": "referencedByType"
      },
      "GsaNameAlreadyExistsErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "parentEntityType": {
                "$ref": "#/components/schemas/GsaEntityType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Database Entity with name already exists.\r\n\r\nThis extends: GsaNamedEntityErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'nameAlreadyExists'",
        "x-discriminator-value": "nameAlreadyExists",
        "x-discriminator-name": "reason"
      },
      "GsaNameAlreadySpecifiedErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Name has been specified more than once in the request.\r\n\r\nThis extends: GsaNamedEntityErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'nameAlreadySpecified'",
        "x-discriminator-value": "nameAlreadySpecified",
        "x-discriminator-name": "reason"
      },
      "GsaNameNotProvidedErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Entity must have a name.\r\n\r\nThis extends: GsaNamedEntityErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'nameNotProvided'",
        "x-discriminator-value": "nameNotProvided",
        "x-discriminator-name": "reason"
      },
      "GsaNameWhitespaceParameterValueErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterValueErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Parameter value names must not contain leading or trailing whitespace.\r\n\r\nThis extends: GsaParameterValueErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'nameWhitespace'",
        "x-discriminator-value": "nameWhitespace",
        "x-discriminator-name": "reason"
      },
      "GsaNamedCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'namedCriterion'",
        "x-discriminator-value": "namedCriterion",
        "x-discriminator-name": "type"
      },
      "GsaNamedEntityAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The name or GUID is not valid.\r\nSee \"errors\" for details.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'namedEntity'",
        "x-discriminator-value": "namedEntity",
        "x-discriminator-name": "reason"
      },
      "GsaNamedEntityErrorDetail": {
        "required": [
          "entityType",
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaNamedEntityErrorReason"
          },
          "entityType": {
            "$ref": "#/components/schemas/GsaEntityType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaEntityAlreadyExistsErrorDetail\r\n * GsaNameNotProvidedErrorDetail\r\n * GsaNameAlreadyExistsErrorDetail\r\n * GsaNameAlreadySpecifiedErrorDetail\r\n * GsaEntityIdentifierAlreadySpecifiedErrorDetail\r\n * GsaDisplayNameEmptyErrorDetail\r\n * GsaDisplayNameLanguageNotProvidedErrorDetail\r\n * GsaDisplayNameLanguageNotSupportedErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "entityAlreadyExists": "#/components/schemas/GsaEntityAlreadyExistsErrorDetail",
            "nameNotProvided": "#/components/schemas/GsaNameNotProvidedErrorDetail",
            "nameAlreadyExists": "#/components/schemas/GsaNameAlreadyExistsErrorDetail",
            "nameAlreadySpecified": "#/components/schemas/GsaNameAlreadySpecifiedErrorDetail",
            "entityIdentifierAlreadySpecified": "#/components/schemas/GsaEntityIdentifierAlreadySpecifiedErrorDetail",
            "displayNameEmpty": "#/components/schemas/GsaDisplayNameEmptyErrorDetail",
            "displayNameLanguageNotProvided": "#/components/schemas/GsaDisplayNameLanguageNotProvidedErrorDetail",
            "displayNameLanguageNotSupported": "#/components/schemas/GsaDisplayNameLanguageNotSupportedErrorDetail"
          }
        }
      },
      "GsaNamedEntityErrorReason": {
        "enum": [
          "entityAlreadyExists",
          "entityIdentifierAlreadySpecified",
          "nameNotProvided",
          "nameAlreadyExists",
          "nameAlreadySpecified",
          "displayNameEmpty",
          "displayNameLanguageNotProvided",
          "displayNameLanguageNotSupported"
        ],
        "type": "string"
      },
      "GsaNamedEntityFileErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFileErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The name or GUID is not valid.\r\nSee \"errors\" for details.\r\n\r\nThis extends: GsaFileErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'namedEntity'",
        "x-discriminator-value": "namedEntity",
        "x-discriminator-name": "reason"
      },
      "GsaNamedEntityFolderErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFolderErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The name or GUID is not valid.\r\nSee \"errors\" for details.\r\n\r\nThis extends: GsaFolderErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'namedEntity'",
        "x-discriminator-value": "namedEntity",
        "x-discriminator-name": "reason"
      },
      "GsaNamedEntityParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The name or GUID is not valid.\r\nSee \"errors\" for details.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'namedEntity'",
        "x-discriminator-value": "namedEntity",
        "x-discriminator-name": "reason"
      },
      "GsaNamedEntityParameterValueErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterValueErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaNamedEntityErrorDetail"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The parameter value name or GUID is not valid.\r\nSee \"errors\" for details.\r\n\r\nThis extends: GsaParameterValueErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'namedEntity'",
        "x-discriminator-value": "namedEntity",
        "x-discriminator-name": "reason"
      },
      "GsaNewLayoutAssociationChainItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNewLayoutItem"
          },
          {
            "required": [
              "associationChainLinks",
              "associationChainName"
            ],
            "type": "object",
            "properties": {
              "associationChainName": {
                "type": "string"
              },
              "associationChainLinks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaNewLayoutAssociationChainLink"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaNewLayoutItem\r\n\r\nThe value of discriminator property ('itemType') must be equal to 'associationChain'",
        "x-discriminator-value": "associationChain",
        "x-discriminator-name": "itemType"
      },
      "GsaNewLayoutAssociationChainLink": {
        "required": [
          "sourceDatabaseVersionGuid",
          "tabularAttributeGuid"
        ],
        "type": "object",
        "properties": {
          "forwards": {
            "type": "boolean"
          },
          "sourceDatabaseVersionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "tabularAttributeGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaNewLayoutAttributeItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNewLayoutItem"
          },
          {
            "required": [
              "attributeGuid"
            ],
            "type": "object",
            "properties": {
              "attributeGuid": {
                "type": "string",
                "format": "uuid"
              },
              "required": {
                "type": "boolean"
              },
              "readOnly": {
                "type": "boolean"
              },
              "metaAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaNewLayoutAttributeItem"
                },
                "nullable": true
              },
              "tabularColumnGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaNewLayoutItem\r\n\r\nThe value of discriminator property ('itemType') must be equal to 'attribute'",
        "x-discriminator-value": "attribute",
        "x-discriminator-name": "itemType"
      },
      "GsaNewLayoutCrossDatabaseLinkItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNewLayoutItem"
          },
          {
            "required": [
              "linkGroupGuid",
              "sourceDatabaseGuid",
              "sourceTableGuid"
            ],
            "type": "object",
            "properties": {
              "sourceDatabaseGuid": {
                "type": "string",
                "format": "uuid"
              },
              "sourceTableGuid": {
                "type": "string",
                "format": "uuid"
              },
              "linkGroupGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaNewLayoutItem\r\n\r\nThe value of discriminator property ('itemType') must be equal to 'crossDatabaseLink'",
        "x-discriminator-value": "crossDatabaseLink",
        "x-discriminator-name": "itemType"
      },
      "GsaNewLayoutItem": {
        "required": [
          "itemType"
        ],
        "type": "object",
        "properties": {
          "itemType": {
            "$ref": "#/components/schemas/GsaNewLayoutItemType"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaNewLayoutAttributeItem\r\n * GsaNewLayoutRecordLinkItem\r\n * GsaNewLayoutSmartLinkItem\r\n * GsaNewLayoutCrossDatabaseLinkItem\r\n * GsaNewLayoutAssociationChainItem",
        "discriminator": {
          "propertyName": "itemType",
          "mapping": {
            "attribute": "#/components/schemas/GsaNewLayoutAttributeItem",
            "recordLink": "#/components/schemas/GsaNewLayoutRecordLinkItem",
            "smartLink": "#/components/schemas/GsaNewLayoutSmartLinkItem",
            "crossDatabaseLink": "#/components/schemas/GsaNewLayoutCrossDatabaseLinkItem",
            "associationChain": "#/components/schemas/GsaNewLayoutAssociationChainItem"
          }
        }
      },
      "GsaNewLayoutItemType": {
        "enum": [
          "attribute",
          "recordLink",
          "smartLink",
          "crossDatabaseLink",
          "associationChain"
        ],
        "type": "string",
        "description": "The types of new layout item that are supported by the API."
      },
      "GsaNewLayoutRecordLinkItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNewLayoutItem"
          },
          {
            "required": [
              "linkGroupGuid"
            ],
            "type": "object",
            "properties": {
              "forwards": {
                "type": "boolean",
                "description": "true if the record link points from the table the layout is in; or false if it points towards the table the layout is in (an inbound link).  Optional - only required to determine the direction for a link group when the source and target table are the same.",
                "nullable": true
              },
              "linkGroupGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaNewLayoutItem\r\n\r\nThe value of discriminator property ('itemType') must be equal to 'recordLink'",
        "x-discriminator-value": "recordLink",
        "x-discriminator-name": "itemType"
      },
      "GsaNewLayoutSmartLinkItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaNewLayoutItem"
          },
          {
            "required": [
              "linkGroupGuid"
            ],
            "type": "object",
            "properties": {
              "forwards": {
                "type": "boolean",
                "description": "true if the smart link points from the table the layout is in; or false if it points towards the table the layout is in (an inbound link)."
              },
              "linkGroupGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaNewLayoutItem\r\n\r\nThe value of discriminator property ('itemType') must be equal to 'smartLink'",
        "x-discriminator-value": "smartLink",
        "x-discriminator-name": "itemType"
      },
      "GsaNoDataFileErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFileErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "isConfiguration": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The File is invalid as it has no data/Configuration must have a value.\r\n\r\nThis extends: GsaFileErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noData'",
        "x-discriminator-value": "noData",
        "x-discriminator-name": "reason"
      },
      "GsaNoExpressionsMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Maths functional attribute must have at least one expression or have 'allow anonymous expressions' set to true.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noExpressions'",
        "x-discriminator-value": "noExpressions",
        "x-discriminator-name": "reason"
      },
      "GsaNoFileFileErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFileErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "No File found in the Form data.\r\n\r\nThis extends: GsaFileErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noFile'",
        "x-discriminator-value": "noFile",
        "x-discriminator-name": "reason"
      },
      "GsaNoParameterValuesParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "No parameter values provided.  At least one parameter value is required.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noParameterValues'",
        "x-discriminator-value": "noParameterValues",
        "x-discriminator-name": "reason"
      },
      "GsaNoSuchEntityAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "guid": {
                "type": "string",
                "format": "uuid"
              },
              "databaseKey": {
                "type": "string",
                "nullable": true
              },
              "entityType": {
                "$ref": "#/components/schemas/GsaAttributeNoSuchEntityType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Could not find the entityType with the given GUID.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noSuchEntity'",
        "x-discriminator-value": "noSuchEntity",
        "x-discriminator-name": "reason"
      },
      "GsaNoSuchEntityTabularColumnErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "tabularColumnName": {
                "type": "string",
                "nullable": true
              },
              "guid": {
                "type": "string",
                "format": "uuid"
              },
              "databaseKey": {
                "type": "string",
                "nullable": true
              },
              "entityType": {
                "$ref": "#/components/schemas/GsaTabularColumnNoSuchEntityType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'tabularColumnNoSuchEntity'",
        "x-discriminator-value": "tabularColumnNoSuchEntity",
        "x-discriminator-name": "reason"
      },
      "GsaNoSuchExpressionsMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "notFoundGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              },
              "tableGuid": {
                "type": "string",
                "format": "uuid"
              },
              "databaseKey": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The not found GUIDs do not correspond to existing expressions.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noSuchExpressions'",
        "x-discriminator-value": "noSuchExpressions",
        "x-discriminator-name": "reason"
      },
      "GsaNoSuchNewParentFileMoveErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFileMoveErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "folderGuid": {
                "type": "string",
                "format": "uuid"
              },
              "folderType": {
                "$ref": "#/components/schemas/GsaFolderType"
              },
              "databaseKey": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A folder with the given GUID does not exist in database.\r\n\r\nThis extends: GsaFileMoveErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noSuchNewParent'",
        "x-discriminator-value": "noSuchNewParent",
        "x-discriminator-name": "reason"
      },
      "GsaNoSuchNewParentFolderMoveErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFolderMoveErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "newParentFolderGuid": {
                "type": "string",
                "format": "uuid"
              },
              "folderType": {
                "$ref": "#/components/schemas/GsaFolderType"
              },
              "databaseKey": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "A folder with the given GUID does not exist in the database.\r\n\r\nThis extends: GsaFolderMoveErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noSuchNewParent'",
        "x-discriminator-value": "noSuchNewParent",
        "x-discriminator-name": "reason"
      },
      "GsaNoSuchParameterValueParameterContentErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterContentErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "parameterValueGuid": {
                "type": "string",
                "format": "uuid"
              },
              "parameterGuid": {
                "type": "string",
                "format": "uuid"
              },
              "databaseKey": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Could not find parameter value for parameter.\r\n\r\nThis extends: GsaParameterContentErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noSuchParameterValue'",
        "x-discriminator-value": "noSuchParameterValue",
        "x-discriminator-name": "reason"
      },
      "GsaNoSuchUnitParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "guid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Could not find the unit with the given GUID.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'noSuchUnit'",
        "x-discriminator-value": "noSuchUnit",
        "x-discriminator-name": "reason"
      },
      "GsaNoValueExistsGraphValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaGraphValue"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaGraphValue\r\n\r\nThe value of discriminator property ('graphValueType') must be equal to 'noValueExists'",
        "x-discriminator-value": "noValueExists",
        "x-discriminator-name": "graphValueType"
      },
      "GsaNoValuesSpecifier": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaValueSpecifier"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Used to return no values.\r\n\r\nThis extends: GsaValueSpecifier\r\n\r\nThe value of discriminator property ('filterOn') must be equal to 'none'",
        "x-discriminator-value": "none",
        "x-discriminator-name": "filterOn"
      },
      "GsaNotApplicableDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatum"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatum\r\n\r\nThe value of discriminator property ('notApplicable') must be equal to 'notApplicable'",
        "x-discriminator-value": "notApplicable",
        "x-discriminator-name": "notApplicable"
      },
      "GsaNotTheLatestVersionErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaVersionControlErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "newerVersion": {
                "$ref": "#/components/schemas/GsaSlimRecordVersion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaVersionControlErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'notTheLatestVersion'",
        "x-discriminator-value": "notTheLatestVersion",
        "x-discriminator-name": "reason"
      },
      "GsaNotVersionedErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaVersionControlErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaVersionControlErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'notVersioned'",
        "x-discriminator-value": "notVersioned",
        "x-discriminator-name": "reason"
      },
      "GsaNumericGraphParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaGraphParameterValue"
          },
          {
            "required": [
              "parameterValue"
            ],
            "type": "object",
            "properties": {
              "parameterValue": {
                "type": "number",
                "format": "double"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaGraphParameterValue\r\n\r\nThe value of discriminator property ('parameterType') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "parameterType"
      },
      "GsaNumericParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameter"
          },
          {
            "required": [
              "interpolationType",
              "isRestricted",
              "scaleType",
              "values"
            ],
            "type": "object",
            "properties": {
              "isRestricted": {
                "type": "boolean"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaNumericParameterValue"
                }
              },
              "interpolationType": {
                "$ref": "#/components/schemas/GsaParameterInterpolationType"
              },
              "scaleType": {
                "$ref": "#/components/schemas/GsaParameterScaleType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaNumericParameterConstraint": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterConstraint"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "significantFigures": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameterConstraint\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaNumericParameterContent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterContent"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "parameterRange": {
                "$ref": "#/components/schemas/GsaContinuousRange"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameterContent\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaNumericParameterDataValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterDataValue"
          },
          {
            "required": [
              "parameterValue"
            ],
            "type": "object",
            "properties": {
              "parameterValue": {
                "type": "number",
                "format": "double"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameterDataValue\r\n\r\nThe value of discriminator property ('parameterType') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "parameterType"
      },
      "GsaNumericParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterValue"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaParameterValue\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaNumericRestrictedInterpolationParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Numeric restricted parameters cannot have interpolation type other than 'None'.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'numericRestrictedInterpolation'",
        "x-discriminator-value": "numericRestrictedInterpolation",
        "x-discriminator-name": "reason"
      },
      "GsaObjectIdentifier": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "The GUID of this object. The GUID represents the object on a semantic level, and two objects of\r\nthe same type with the same GUID are considered to represent \"the same concept\". GUIDs should be\r\nrobust against data changes and database upgrades, and should be preferred where possible.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of this object. The name represents the object at a human-readable level, but two objects of\r\nthe same type with the same need not represent \"the same concept\". Because the name is less uniquely identifying,\r\nclients should prefer GUIDs where possible, and operations based on name instead of GUID may fail if the name\r\ncannot be uniquely resolved. Certain object types may consider names to be equivalent",
            "nullable": true
          },
          "identity": {
            "type": "integer",
            "description": "The underlying identity of this object. This represents the object at a data level, and two objects\r\nof the same type with the same identity are considered to represent \"the same object\". However, identities\r\nare not robust against database upgrades, and are only reliable and consistent within a currently-\r\nloaded database in a running MI instance. Clients should prefer GUIDs where possible, and operations\r\nbased on identity which persist data will be resolved to GUIDs instead (and may fail if this cannot\r\nbe done).",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Properties that identify an object within the MI system.\r\n            \r\nAn Granta.Server.Api.ObjectIdentifier created by MI will always contain values for all three\r\nproperties. An Granta.Server.Api.ObjectIdentifier created by a client need not contain values for\r\nall three properties, and is allowed to contain values or combinations of values that do\r\nnot correspond to an existing object in MI (in which case the Granta.Server.Api.ObjectIdentifier\r\nwill be resolved against MI objects first by GUID, and then by name, and finally by identity,\r\ntaking the first match and ignoring subsequent fields."
      },
      "GsaOrphanedSearchIndex": {
        "required": [
          "indexName"
        ],
        "type": "object",
        "properties": {
          "indexName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaOrphanedSearchIndexesInfo": {
        "required": [
          "diskSpaceUsedInBytes",
          "orphanedSearchIndexes"
        ],
        "type": "object",
        "properties": {
          "orphanedSearchIndexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaOrphanedSearchIndex"
            }
          },
          "diskSpaceUsedInBytes": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GsaPaginationLinks": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaPagingOptions": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "description": "The number of results that should be returned in each page",
            "format": "int32"
          },
          "keepAliveInMinutes": {
            "type": "integer",
            "description": "The length of time that the paginated search should be kept in memory",
            "format": "int32",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "description": "(Optional) the (1-indexed) number of the page to return from the search. No pages are returned if not provided",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An optional field for paging options. If provided on a request, the response will contain an identifier that can be used to retrieve the other pages. Page size must be smaller than 10,000"
      },
      "GsaParameter": {
        "required": [
          "defaultParameterValueGuid",
          "displayNames",
          "guid",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "defaultParameterValueGuid": {
            "type": "string",
            "format": "uuid"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDiscreteParameter\r\n * GsaNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaDiscreteParameter",
            "numeric": "#/components/schemas/GsaNumericParameter"
          }
        }
      },
      "GsaParameterConstraint": {
        "required": [
          "parameter",
          "type"
        ],
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "type": {
            "$ref": "#/components/schemas/GsaParameterConstraintType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDiscreteParameterNameConstraint\r\n * GsaDiscreteParameterValueConstraint\r\n * GsaNumericParameterConstraint",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discreteName": "#/components/schemas/GsaDiscreteParameterNameConstraint",
            "discreteValue": "#/components/schemas/GsaDiscreteParameterValueConstraint",
            "numeric": "#/components/schemas/GsaNumericParameterConstraint"
          }
        }
      },
      "GsaParameterConstraintType": {
        "enum": [
          "discreteName",
          "discreteValue",
          "numeric"
        ],
        "type": "string"
      },
      "GsaParameterContent": {
        "required": [
          "parameter",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimNamedEntity"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDiscreteParameterContent\r\n * GsaNumericParameterContent",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaDiscreteParameterContent",
            "numeric": "#/components/schemas/GsaNumericParameterContent"
          }
        }
      },
      "GsaParameterContentDuplicateGuidsMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "duplicatedGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "No duplicate parameter GUIDs allowed in parameter contents.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'parameterContentDuplicateGuids'",
        "x-discriminator-value": "parameterContentDuplicateGuids",
        "x-discriminator-name": "reason"
      },
      "GsaParameterContentErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaParameterContentErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaParameterTypeParameterContentErrorDetail\r\n * GsaMissingArgumentsParameterContentErrorDetail\r\n * GsaNoSuchParameterValueParameterContentErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "parameterType": "#/components/schemas/GsaParameterTypeParameterContentErrorDetail",
            "missingArguments": "#/components/schemas/GsaMissingArgumentsParameterContentErrorDetail",
            "noSuchParameterValue": "#/components/schemas/GsaNoSuchParameterValueParameterContentErrorDetail"
          }
        }
      },
      "GsaParameterContentErrorReason": {
        "enum": [
          "parameterType",
          "missingArguments",
          "noSuchParameterValue"
        ],
        "type": "string"
      },
      "GsaParameterContentMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "parameterGuid": {
                "type": "string",
                "format": "uuid"
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaParameterContentErrorDetail"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "ParameterContent is not valid.\r\nSee \"errors\" for details.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'parameterContent'",
        "x-discriminator-value": "parameterContent",
        "x-discriminator-name": "reason"
      },
      "GsaParameterContentMissingArgument": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>discreteParameterValueGuid</b>: Parameter value GUID from parameter content must be provided.</li>\r\n<li><b>parameterRange</b>: Parameter range from parameter content must be provided.</li>\r\n<li><b>parameterRangeParameterValues</b>: Parameter values from parameter range from parameter content must be provided.</li>\r\n</ul>\r\n",
        "format": "int32"
      },
      "GsaParameterContentUnknownParametersMathsFunctionalErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaMathsFunctionalErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "parameterGuids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              },
              "attributeGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Parameters in parameter contents must be from this attribute's parameters.\r\nMaths functional attributes only.\r\n\r\nThis extends: GsaMathsFunctionalErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'parameterContentUnknownParameters'",
        "x-discriminator-value": "parameterContentUnknownParameters",
        "x-discriminator-name": "reason"
      },
      "GsaParameterCreationException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaParameterDataValue": {
        "required": [
          "parameterType"
        ],
        "type": "object",
        "properties": {
          "parameterType": {
            "$ref": "#/components/schemas/GsaParameterType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDiscreteParameterDataValue\r\n * GsaNumericParameterDataValue",
        "discriminator": {
          "propertyName": "parameterType",
          "mapping": {
            "discrete": "#/components/schemas/GsaDiscreteParameterDataValue",
            "numeric": "#/components/schemas/GsaNumericParameterDataValue"
          }
        }
      },
      "GsaParameterDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataModificationErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaParameterErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaParameterErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDefaultParameterValueGuidParameterErrorDetail\r\n * GsaDefaultParameterValueIndexParameterErrorDetail\r\n * GsaDefaultParameterValueIndexWithoutValuesParameterErrorDetail\r\n * GsaDefaultParameterValueIndexAndGuidParameterErrorDetail\r\n * GsaNamedEntityParameterErrorDetail\r\n * GsaNoParameterValuesParameterErrorDetail\r\n * GsaNoSuchUnitParameterErrorDetail\r\n * GsaNumericRestrictedInterpolationParameterErrorDetail\r\n * GsaParameterTypeParameterErrorDetail\r\n * GsaParameterValueParameterErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "defaultParameterValueGuid": "#/components/schemas/GsaDefaultParameterValueGuidParameterErrorDetail",
            "defaultParameterValueIndex": "#/components/schemas/GsaDefaultParameterValueIndexParameterErrorDetail",
            "defaultParameterValueIndexWithoutValues": "#/components/schemas/GsaDefaultParameterValueIndexWithoutValuesParameterErrorDetail",
            "defaultParameterValueIndexAndGuid": "#/components/schemas/GsaDefaultParameterValueIndexAndGuidParameterErrorDetail",
            "namedEntity": "#/components/schemas/GsaNamedEntityParameterErrorDetail",
            "noParameterValues": "#/components/schemas/GsaNoParameterValuesParameterErrorDetail",
            "noSuchUnit": "#/components/schemas/GsaNoSuchUnitParameterErrorDetail",
            "numericRestrictedInterpolation": "#/components/schemas/GsaNumericRestrictedInterpolationParameterErrorDetail",
            "parameterType": "#/components/schemas/GsaParameterTypeParameterErrorDetail",
            "parameterValue": "#/components/schemas/GsaParameterValueParameterErrorDetail"
          }
        }
      },
      "GsaParameterErrorReason": {
        "enum": [
          "defaultParameterValueGuid",
          "defaultParameterValueIndex",
          "defaultParameterValueIndexAndGuid",
          "defaultParameterValueIndexWithoutValues",
          "namedEntity",
          "noParameterValues",
          "noSuchUnit",
          "numericRestrictedInterpolation",
          "parameterType",
          "parameterValue"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>defaultParameterValueGuid</b>: Default parameter value GUID does not match any parameter value.</li>\r\n<li><b>defaultParameterValueIndex</b>: Default parameter value index out of range.</li>\r\n<li><b>defaultParameterValueIndexAndGuid</b>: Default parameter value can be specified by either index or GUID, not both.</li>\r\n<li><b>defaultParameterValueIndexWithoutValues</b>: Default parameter value index can only be used when values are being updated. Use DefaultParameterValueGuid when values are not being updated.</li>\r\n<li><b>namedEntity</b>: The name or GUID is not valid.</li>\r\n<li><b>noParameterValues</b>: No parameter values provided. At least one parameter value is required.</li>\r\n<li><b>noSuchUnit</b>: Could not find the unit with the given GUID.</li>\r\n<li><b>numericRestrictedInterpolation</b>: Numeric restricted parameters cannot have interpolation type other than 'None'.</li>\r\n<li><b>parameterType</b>: When updating an existing parameter, parameter type must match.</li>\r\n<li><b>parameterValue</b>: Parameter value is not valid.</li>\r\n</ul>\r\n"
      },
      "GsaParameterInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "unitSymbol": {
            "type": "string",
            "nullable": true
          },
          "scaleType": {
            "$ref": "#/components/schemas/GsaParameterInfoScaleType"
          },
          "interpolationType": {
            "$ref": "#/components/schemas/GsaParameterInfoInterpolationType"
          },
          "parameterType": {
            "$ref": "#/components/schemas/GsaParameterInfoParameterType"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/GsaDataExportParameterValue"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nparameterType: Parameter type can be null for integration schema"
      },
      "GsaParameterInfoInterpolationType": {
        "enum": [
          "auto",
          "none",
          "linear",
          "cubicSpline"
        ],
        "type": "string"
      },
      "GsaParameterInfoParameterType": {
        "enum": [
          "discrete",
          "numericRestricted",
          "numericUnrestricted"
        ],
        "type": "string"
      },
      "GsaParameterInfoScaleType": {
        "enum": [
          "notSet",
          "linear",
          "log"
        ],
        "type": "string"
      },
      "GsaParameterInterpolationType": {
        "enum": [
          "none",
          "linear",
          "cubicSpline"
        ],
        "type": "string"
      },
      "GsaParameterScaleType": {
        "enum": [
          "linear",
          "logarithmic"
        ],
        "type": "string"
      },
      "GsaParameterSettingDefinedAt": {
        "enum": [
          "parameter",
          "attribute",
          "datum"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>parameter</b>: Parameter Level</li>\r\n<li><b>attribute</b>: Attribute Level</li>\r\n<li><b>datum</b>: Datum Level</li>\r\n</ul>\r\n"
      },
      "GsaParameterType": {
        "enum": [
          "discrete",
          "numeric"
        ],
        "type": "string"
      },
      "GsaParameterTypeParameterContentErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterContentErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "requestedParameterType": {
                "$ref": "#/components/schemas/GsaParameterType"
              },
              "actualParameterType": {
                "$ref": "#/components/schemas/GsaParameterType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Requested parameter content type does not align with its actual parameter type.\r\n\r\nThis extends: GsaParameterContentErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'parameterType'",
        "x-discriminator-value": "parameterType",
        "x-discriminator-name": "reason"
      },
      "GsaParameterTypeParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "newParameterType": {
                "$ref": "#/components/schemas/GsaParameterType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "When updating an existing parameter, parameter type must match.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'parameterType'",
        "x-discriminator-value": "parameterType",
        "x-discriminator-name": "reason"
      },
      "GsaParameterUpdateException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "parameterGuid": {
            "type": "string",
            "format": "uuid"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaParameterValue": {
        "required": [
          "guid",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterValueType"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDiscreteParameterValue\r\n * GsaNumericParameterValue",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaDiscreteParameterValue",
            "numeric": "#/components/schemas/GsaNumericParameterValue"
          }
        }
      },
      "GsaParameterValueCreationException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameterGuid": {
            "type": "string",
            "format": "uuid"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterValueErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaParameterValueDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataModificationErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaParameterValueErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/GsaParameterValueErrorReason"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaInUseParameterValueErrorDetail\r\n * GsaLogScaleNegativeParameterValueErrorDetail\r\n * GsaNamedEntityParameterValueErrorDetail\r\n * GsaNameWhitespaceParameterValueErrorDetail\r\n * GsaParameterValueTypeParameterValueErrorDetail\r\n * GsaValueNotProvidedParameterValueErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "inUse": "#/components/schemas/GsaInUseParameterValueErrorDetail",
            "logScaleNegative": "#/components/schemas/GsaLogScaleNegativeParameterValueErrorDetail",
            "namedEntity": "#/components/schemas/GsaNamedEntityParameterValueErrorDetail",
            "nameWhitespace": "#/components/schemas/GsaNameWhitespaceParameterValueErrorDetail",
            "parameterValueType": "#/components/schemas/GsaParameterValueTypeParameterValueErrorDetail",
            "valueNotProvided": "#/components/schemas/GsaValueNotProvidedParameterValueErrorDetail"
          }
        }
      },
      "GsaParameterValueErrorReason": {
        "enum": [
          "inUse",
          "logScaleNegative",
          "namedEntity",
          "nameWhitespace",
          "parameterValueType",
          "valueNotProvided"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>inUse</b>: The parameter value is being used.</li>\r\n<li><b>logScaleNegative</b>: For a log-scale parameter, all values must be greater than zero.</li>\r\n<li><b>namedEntity</b>: The parameter value name or GUID is not valid.</li>\r\n<li><b>nameWhitespace</b>: Parameter value names must not contain leading or trailing whitespace.</li>\r\n<li><b>parameterValueType</b>: All parameter values should match the type (discrete or numeric) of the parameter.</li>\r\n<li><b>valueNotProvided</b>: Numeric parameter values must have a value.</li>\r\n</ul>\r\n"
      },
      "GsaParameterValueParameterErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaParameterValueErrorDetail"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Parameter value is not valid.\r\nSee \"errors\" for details.\r\n\r\nThis extends: GsaParameterErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'parameterValue'",
        "x-discriminator-value": "parameterValue",
        "x-discriminator-name": "reason"
      },
      "GsaParameterValueType": {
        "enum": [
          "discrete",
          "numeric"
        ],
        "type": "string"
      },
      "GsaParameterValueTypeParameterValueErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterValueErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "parameterType": {
                "$ref": "#/components/schemas/GsaParameterType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "All parameter values should match the type (discrete or numeric) of the parameter.\r\n\r\nThis extends: GsaParameterValueErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'parameterValueType'",
        "x-discriminator-value": "parameterValueType",
        "x-discriminator-name": "reason"
      },
      "GsaParameterValueUpdateException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "parameterValueGuid": {
            "type": "string",
            "format": "uuid"
          },
          "parameterGuid": {
            "type": "string",
            "format": "uuid"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterValueErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaParameterValueUsedByType": {
        "enum": [
          "functionalDataDefault",
          "multiValuedPointData"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>functionalDataDefault</b>: The parameter value is used as the default parameter value on one or more functional datums.</li>\r\n<li><b>multiValuedPointData</b>: The discrete parameter value is used by multi-valued point data.</li>\r\n</ul>\r\n"
      },
      "GsaParameterWithDataValue": {
        "required": [
          "parameter",
          "parameterDataValue"
        ],
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimNamedEntity"
          },
          "parameterDataValue": {
            "$ref": "#/components/schemas/GsaParameterDataValue"
          }
        },
        "additionalProperties": false
      },
      "GsaParametersInfo": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaPermission": {
        "required": [
          "guid",
          "name",
          "role"
        ],
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "setMessage": {
            "type": "string",
            "description": "Message to show when this permission is set.",
            "nullable": true
          },
          "unsetMessage": {
            "type": "string",
            "description": "Message to show when this permission is not set.",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaPermissionCategoriesInfo": {
        "required": [
          "categories"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimPermissionCategory"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaPermissionCategory": {
        "required": [
          "guid",
          "name",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaPermissionsInfo": {
        "required": [
          "permissions"
        ],
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimPermission"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaPictureAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'picture'",
        "x-discriminator-value": "picture",
        "x-discriminator-name": "type"
      },
      "GsaPictureDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "relativeExportUrl"
            ],
            "type": "object",
            "properties": {
              "relativeExportUrl": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'picture'",
        "x-discriminator-value": "picture",
        "x-discriminator-name": "datumType"
      },
      "GsaPictureDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "picture: Criterion for matching records where picture data exists.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'picture'",
        "x-discriminator-value": "picture",
        "x-discriminator-name": "type"
      },
      "GsaPictureDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'picture'",
        "x-discriminator-value": "picture",
        "x-discriminator-name": "type"
      },
      "GsaPointAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "maximum": {
                "type": "number",
                "format": "double",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "datumType"
      },
      "GsaPointAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a point attribute. The returned aggregation will contain the minimum and maximum\r\nvalues (in database units), and a count of records with at least one value for the attribute.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "type"
      },
      "GsaPointAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "required": [
              "attributeParameters",
              "isMultiValued"
            ],
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              },
              "isMultiValued": {
                "type": "boolean"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimNamedEntity"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "type"
      },
      "GsaPointDataValue": {
        "required": [
          "parametersAndValues",
          "pointValue"
        ],
        "type": "object",
        "properties": {
          "pointValue": {
            "type": "number",
            "format": "double"
          },
          "unit": {
            "$ref": "#/components/schemas/GsaSlimUnit"
          },
          "significantFiguresInfo": {
            "$ref": "#/components/schemas/GsaSignificantFiguresInfo"
          },
          "parametersAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaParameterWithDataValue"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaPointDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "estimated",
              "values"
            ],
            "type": "object",
            "properties": {
              "estimated": {
                "type": "boolean"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaPointDataValue"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "datumType"
      },
      "GsaPointDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "number",
                "description": "Greater than or equal",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "description": "Less than or equal",
                "format": "double",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching records where the point data is within the given bounds. If one of gte or lte is null, this will be an open ended search.\r\nIf this is a unitted attribute, the search values should be given in terms of the units defined for the attribute in the database/integration schema.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "type"
      },
      "GsaPointDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "type"
      },
      "GsaPointFixedWidthHistogramAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "interval": {
                "type": "number",
                "description": "Fixed size of the resulting histogram buckets",
                "format": "double"
              },
              "offset": {
                "type": "number",
                "description": "Offset of the lowest bucket boundary. Defaults to 0. Must be less than the interval.",
                "format": "double"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a point attribute. The returned aggregation will contain a histogram of the data with a fixed interval.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'pointFixedWidthHistogram'",
        "x-discriminator-value": "pointFixedWidthHistogram",
        "x-discriminator-name": "type"
      },
      "GsaPointHistogramAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "histogram": {
                "$ref": "#/components/schemas/GsaHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'pointHistogram'",
        "x-discriminator-value": "pointHistogram",
        "x-discriminator-name": "datumType"
      },
      "GsaPointHistogramAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "maximumNumberOfBuckets": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a point attribute. The returned aggregation will contain a histogram of the data with a fixed number of buckets. The buckets may have variable widths.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'pointHistogram'",
        "x-discriminator-value": "pointHistogram",
        "x-discriminator-name": "type"
      },
      "GsaPointParametersRequiresMultiValuedAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Only attributes marked as multi-valued can be parameterized.\r\nPoint attributes only.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'pointParametersRequiresMultiValued'",
        "x-discriminator-value": "pointParametersRequiresMultiValued",
        "x-discriminator-name": "reason"
      },
      "GsaProcessingConfig": {
        "type": "object",
        "properties": {
          "purgeJobAgeInMilliseconds": {
            "type": "integer",
            "format": "int64"
          },
          "purgeIntervalInMilliseconds": {
            "type": "integer",
            "format": "int64"
          },
          "pollingIntervalInMilliseconds": {
            "type": "integer",
            "format": "int64"
          },
          "concurrency": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GsaProfile": {
        "required": [
          "isImplicit",
          "key",
          "name",
          "profileTables"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "homepageUrl": {
            "type": "string",
            "nullable": true
          },
          "profileTables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimProfileTable"
            }
          },
          "key": {
            "type": "string",
            "description": "Key is a unique identifier of a profile. Separate from guid."
          },
          "guid": {
            "type": "string",
            "description": "Guid is a unique identifier of a profile. Separate from key.",
            "format": "uuid",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "isImplicit": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "A profile, consisting of a set of tables from one or more databases."
      },
      "GsaProfileTable": {
        "required": [
          "databaseGuid",
          "tableGuid"
        ],
        "type": "object",
        "properties": {
          "subsetGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "subsetFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "layoutGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "layoutFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "databaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "databaseFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          },
          "tableFallbackHint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A table within a profile. Contains display customization."
      },
      "GsaProfileTablesInfo": {
        "type": "object",
        "properties": {
          "profileTables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimProfileTable"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaProperty": {
        "required": [
          "propertyName"
        ],
        "type": "object",
        "properties": {
          "propertyName": {
            "$ref": "#/components/schemas/GsaRecordProperty"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaCreatedByUserProperty\r\n * GsaCreatedDateProperty\r\n * GsaDatabaseKeyProperty\r\n * GsaFullNameProperty\r\n * GsaLastModifiedDateProperty\r\n * GsaLastModifiedByUserProperty\r\n * GsaRecordColorProperty\r\n * GsaRecordGuidProperty\r\n * GsaRecordHistoryGuidProperty\r\n * GsaRecordTypeProperty\r\n * GsaReleasedDateProperty\r\n * GsaShortNameProperty\r\n * GsaTableGuidProperty\r\n * GsaTableIdentityProperty\r\n * GsaTableNameProperty\r\n * GsaVersionNumberProperty\r\n * GsaVersionStateProperty",
        "discriminator": {
          "propertyName": "propertyName",
          "mapping": {
            "createdByUser": "#/components/schemas/GsaCreatedByUserProperty",
            "createdDate": "#/components/schemas/GsaCreatedDateProperty",
            "databaseKey": "#/components/schemas/GsaDatabaseKeyProperty",
            "fullName": "#/components/schemas/GsaFullNameProperty",
            "lastModifiedDate": "#/components/schemas/GsaLastModifiedDateProperty",
            "lastModifiedByUser": "#/components/schemas/GsaLastModifiedByUserProperty",
            "recordColor": "#/components/schemas/GsaRecordColorProperty",
            "recordGuid": "#/components/schemas/GsaRecordGuidProperty",
            "recordHistoryGuid": "#/components/schemas/GsaRecordHistoryGuidProperty",
            "recordType": "#/components/schemas/GsaRecordTypeProperty",
            "releasedDate": "#/components/schemas/GsaReleasedDateProperty",
            "shortName": "#/components/schemas/GsaShortNameProperty",
            "tableGuid": "#/components/schemas/GsaTableGuidProperty",
            "tableIdentity": "#/components/schemas/GsaTableIdentityProperty",
            "tableName": "#/components/schemas/GsaTableNameProperty",
            "versionNumber": "#/components/schemas/GsaVersionNumberProperty",
            "versionState": "#/components/schemas/GsaVersionStateProperty"
          }
        }
      },
      "GsaQueryAttribute": {
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "defaultThresholdType": {
            "$ref": "#/components/schemas/GsaAttributeThresholdType"
          },
          "isHiddenFromSearchCriteria": {
            "type": "boolean",
            "nullable": true
          },
          "isMultiValued": {
            "type": "boolean",
            "nullable": true
          },
          "isFunctionalRange": {
            "type": "boolean",
            "nullable": true
          },
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "axisName": {
            "$ref": "#/components/schemas/GsaQueryAxisName"
          },
          "info": {
            "$ref": "#/components/schemas/GsaQueryAttributeInfo"
          },
          "unit": {
            "$ref": "#/components/schemas/GsaQueryUnit"
          },
          "discreteType": {
            "$ref": "#/components/schemas/GsaQuerySlimDiscreteType"
          },
          "dataRule": {
            "$ref": "#/components/schemas/GsaQueryDataRule"
          },
          "target": {
            "$ref": "#/components/schemas/GsaQueryTabularAttributeTarget"
          },
          "aboutAttribute": {
            "$ref": "#/components/schemas/GsaQuerySlimTypedAttribute"
          },
          "tabularColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQuerySlimNamedEntity"
            },
            "nullable": true
          },
          "attributeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQuerySlimNamedEntity"
            },
            "nullable": true
          },
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQuerySlimNamedEntity"
            },
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\ntype: Note that Tabular attributes have type: link."
      },
      "GsaQueryAttributeFilter": {
        "type": "object",
        "properties": {
          "type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaAttributeType"
            },
            "description": "If set, only include attributes of any of these types.\r\nNote that Tabular attributes have type: link.",
            "nullable": true
          },
          "name": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "If set, attribute name must match any of these names.",
            "nullable": true
          },
          "guid": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "If set, attribute GUID must match any of these GUIDs.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Optionally filter results.\r\n            \r\nIf multiple properties are set, then attributes must match all of them."
      },
      "GsaQueryAttributeInfo": {
        "type": "object",
        "properties": {
          "chartable": {
            "type": "boolean",
            "nullable": true
          },
          "orderedMetaAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQuerySlimTypedAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQueryAttributeInfoProperties": {
        "type": "object",
        "properties": {
          "chartable": {
            "type": "boolean",
            "nullable": true
          },
          "orderedMetaAttributes": {
            "$ref": "#/components/schemas/GsaQuerySlimTypedAttributeProperties"
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaQueryAttributeProperties": {
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "type": "boolean",
            "nullable": true
          },
          "defaultThresholdType": {
            "type": "boolean",
            "nullable": true
          },
          "isHiddenFromSearchCriteria": {
            "type": "boolean",
            "nullable": true
          },
          "isMultiValued": {
            "type": "boolean",
            "nullable": true
          },
          "isFunctionalRange": {
            "type": "boolean",
            "description": "For a Granta.Server.Api.AttributeType.FloatFunctional attribute, whether the value for this attribute is ranged.\r\nFor other attribute types, returns null",
            "nullable": true
          },
          "helpPath": {
            "type": "boolean",
            "nullable": true
          },
          "axisName": {
            "$ref": "#/components/schemas/GsaQueryAxisNameProperties"
          },
          "info": {
            "$ref": "#/components/schemas/GsaQueryAttributeInfoProperties"
          },
          "unit": {
            "$ref": "#/components/schemas/GsaQueryUnitProperties"
          },
          "discreteType": {
            "$ref": "#/components/schemas/GsaQuerySlimDiscreteTypeProperties"
          },
          "dataRule": {
            "$ref": "#/components/schemas/GsaQueryDataRuleProperties"
          },
          "aboutAttribute": {
            "$ref": "#/components/schemas/GsaQuerySlimTypedAttributeProperties"
          },
          "target": {
            "$ref": "#/components/schemas/GsaQueryTabularAttributeTargetProperties"
          },
          "tabularColumns": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntityProperties"
          },
          "attributeParameters": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntityProperties"
          },
          "expressions": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntityProperties"
          },
          "displayNames": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "boolean",
            "nullable": true
          },
          "guid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaQueryAttributesInfo": {
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQueryAttribute"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaQueryAttributesRequest": {
        "required": [
          "properties"
        ],
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/GsaQueryAttributeProperties"
          },
          "filter": {
            "$ref": "#/components/schemas/GsaQueryAttributeFilter"
          }
        },
        "additionalProperties": false
      },
      "GsaQueryAxisName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQueryAxisNameProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "boolean",
            "nullable": true
          },
          "displayNames": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaQueryDataRule": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "regularExpression": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQueryDataRuleProperties": {
        "type": "object",
        "properties": {
          "description": {
            "type": "boolean",
            "nullable": true
          },
          "regularExpression": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "boolean",
            "nullable": true
          },
          "guid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaQueryDiscreteType": {
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean",
            "nullable": true
          },
          "discreteValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQuerySlimNamedEntity"
            },
            "nullable": true
          },
          "isOrdered": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQueryDiscreteTypeFilter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "If set, discrete type name must match any of these names.",
            "nullable": true
          },
          "guid": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "If set, discrete type GUID must match any of these GUIDs.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Optionally filter results.\r\n            \r\nIf multiple properties are set, then discrete types must match all of them."
      },
      "GsaQueryDiscreteTypeProperties": {
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean",
            "nullable": true
          },
          "discreteValues": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntityProperties"
          },
          "isOrdered": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "boolean",
            "nullable": true
          },
          "guid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaQueryDiscreteTypesInfo": {
        "required": [
          "discreteTypes"
        ],
        "type": "object",
        "properties": {
          "discreteTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQueryDiscreteType"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaQueryDiscreteTypesRequest": {
        "required": [
          "properties"
        ],
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/GsaQueryDiscreteTypeProperties"
          },
          "filter": {
            "$ref": "#/components/schemas/GsaQueryDiscreteTypeFilter"
          }
        },
        "additionalProperties": false
      },
      "GsaQuerySlimDiscreteType": {
        "type": "object",
        "properties": {
          "isOrdered": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQuerySlimDiscreteTypeProperties": {
        "type": "object",
        "properties": {
          "isOrdered": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "boolean",
            "nullable": true
          },
          "guid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaQuerySlimNamedEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQuerySlimNamedEntityProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "boolean",
            "nullable": true
          },
          "guid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaQuerySlimTypedAttribute": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\ntype: Note that Tabular attributes have type: link."
      },
      "GsaQuerySlimTypedAttributeProperties": {
        "type": "object",
        "properties": {
          "type": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "boolean",
            "nullable": true
          },
          "guid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQueryTable": {
        "type": "object",
        "properties": {
          "isHiddenFromBrowse": {
            "type": "boolean",
            "nullable": true
          },
          "isHiddenFromSearch": {
            "type": "boolean",
            "nullable": true
          },
          "isVersioned": {
            "type": "boolean",
            "nullable": true
          },
          "versionState": {
            "$ref": "#/components/schemas/GsaVersionState"
          },
          "tableTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQuerySlimNamedEntity"
            },
            "nullable": true
          },
          "defaultLayout": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntity"
          },
          "subsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQuerySlimNamedEntity"
            },
            "nullable": true
          },
          "defaultSubset": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntity"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQueryTableFilter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "If set, table name must match any of these names.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Optionally filter results.\r\n            \r\nIf multiple properties are set, then tables must match all of them."
      },
      "GsaQueryTableProperties": {
        "type": "object",
        "properties": {
          "isHiddenFromBrowse": {
            "type": "boolean",
            "nullable": true
          },
          "isHiddenFromSearch": {
            "type": "boolean",
            "nullable": true
          },
          "isVersioned": {
            "type": "boolean",
            "nullable": true
          },
          "versionState": {
            "type": "boolean",
            "nullable": true
          },
          "tableTypes": {
            "type": "boolean",
            "nullable": true
          },
          "layouts": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntityProperties"
          },
          "defaultLayout": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntityProperties"
          },
          "subsets": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntityProperties"
          },
          "defaultSubset": {
            "$ref": "#/components/schemas/GsaQuerySlimNamedEntityProperties"
          },
          "displayNames": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "boolean",
            "nullable": true
          },
          "guid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaQueryTablesInfo": {
        "required": [
          "tables"
        ],
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaQueryTable"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaQueryTablesRequest": {
        "required": [
          "properties"
        ],
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/GsaQueryTableProperties"
          },
          "filter": {
            "$ref": "#/components/schemas/GsaQueryTableFilter"
          }
        },
        "additionalProperties": false
      },
      "GsaQueryTabularAttributeTarget": {
        "type": "object",
        "properties": {
          "targetDatabaseGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "targetDatabaseVersionGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "targetTableGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "targetAttributeGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQueryTabularAttributeTargetProperties": {
        "type": "object",
        "properties": {
          "targetDatabaseGuid": {
            "type": "boolean",
            "nullable": true
          },
          "targetDatabaseVersionGuid": {
            "type": "boolean",
            "nullable": true
          },
          "targetTableGuid": {
            "type": "boolean",
            "nullable": true
          },
          "targetAttributeGuid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaQueryUnit": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "equation": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "relativeSymbol": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaQueryUnitProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "boolean",
            "nullable": true
          },
          "symbol": {
            "type": "boolean",
            "nullable": true
          },
          "relativeSymbol": {
            "type": "boolean",
            "nullable": true
          },
          "equation": {
            "type": "boolean",
            "nullable": true
          },
          "guid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set values to true to include those properties in the query response"
      },
      "GsaRangeAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "maximum": {
                "type": "number",
                "format": "double",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "datumType"
      },
      "GsaRangeAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a range attribute. The returned aggregation will contain the minimum and maximum\r\nvalues (in database units), and a count of records with a value for the attribute.\r\n            \r\nAs in MI elsewhere, a range with only one boundary specified is treated like a point, rather than an infinitely large range.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "type"
      },
      "GsaRangeAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "type"
      },
      "GsaRangeDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "estimated",
              "highValue",
              "highValueIsInclusive",
              "lowValue",
              "lowValueIsInclusive"
            ],
            "type": "object",
            "properties": {
              "lowValue": {
                "type": "number",
                "format": "double"
              },
              "highValue": {
                "type": "number",
                "format": "double"
              },
              "lowValueIsInclusive": {
                "type": "boolean"
              },
              "highValueIsInclusive": {
                "type": "boolean"
              },
              "lowValueSignificantFiguresInfo": {
                "$ref": "#/components/schemas/GsaSignificantFiguresInfo"
              },
              "highValueSignificantFiguresInfo": {
                "$ref": "#/components/schemas/GsaSignificantFiguresInfo"
              },
              "estimated": {
                "type": "boolean"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimUnit"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "datumType"
      },
      "GsaRangeDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "gte": {
                "type": "number",
                "description": "Greater than or equal to",
                "format": "double",
                "nullable": true
              },
              "lte": {
                "type": "number",
                "description": "Less than or equal to",
                "format": "double",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for matching records where the range data is within the given bounds. If one of gte or lte is null, this will be an open ended search.\r\nIf this is a unitted attribute, the search values should be given in terms of the units defined for the attribute in the database/integration schema.\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "type"
      },
      "GsaRangeDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "type"
      },
      "GsaRangeFixedWidthHistogramAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "interval": {
                "type": "number",
                "description": "Fixed size of the resulting histogram buckets",
                "format": "double"
              },
              "offset": {
                "type": "number",
                "description": "Offset of the lowest bucket boundary. Defaults to 0. Must be less than the interval.",
                "format": "double"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a range attribute. The returned aggregation will contain a histogram of the data with a fixed interval.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'rangeFixedWidthHistogram'",
        "x-discriminator-value": "rangeFixedWidthHistogram",
        "x-discriminator-name": "type"
      },
      "GsaRangeGraphValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaGraphValue"
          },
          {
            "required": [
              "estimated",
              "highValue",
              "highValueIsInclusive",
              "interpolated",
              "lowValue",
              "lowValueIsInclusive"
            ],
            "type": "object",
            "properties": {
              "lowValue": {
                "type": "number",
                "format": "double"
              },
              "highValue": {
                "type": "number",
                "format": "double"
              },
              "lowValueIsInclusive": {
                "type": "boolean"
              },
              "highValueIsInclusive": {
                "type": "boolean"
              },
              "estimated": {
                "type": "boolean"
              },
              "interpolated": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaGraphValue\r\n\r\nThe value of discriminator property ('graphValueType') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "graphValueType"
      },
      "GsaRangeHistogramAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "histogram": {
                "$ref": "#/components/schemas/GsaHistogram"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'rangeHistogram'",
        "x-discriminator-value": "rangeHistogram",
        "x-discriminator-name": "datumType"
      },
      "GsaRangeHistogramAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "maximumNumberOfBuckets": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a range attribute. The returned aggregation will contain a histogram of the data with a fixed number of buckets. The buckets may have variable widths.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'rangeHistogram'",
        "x-discriminator-value": "rangeHistogram",
        "x-discriminator-name": "type"
      },
      "GsaRecordAncestorCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "required": [
              "directParentOnly"
            ],
            "type": "object",
            "properties": {
              "ancestorGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "directParentOnly": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion that returns records with a specific parent or ancestor. If no ancestor GUID is provided, either all records under the table or records directly below the table are returned based on the value of directParentOnly.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'recordAncestor'",
        "x-discriminator-value": "recordAncestor",
        "x-discriminator-name": "type"
      },
      "GsaRecordAncestorHistoryCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "required": [
              "directParentOnly"
            ],
            "type": "object",
            "properties": {
              "ancestorHistoryGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "directParentOnly": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion that returns records with a specific parent or ancestor. If no ancestor history GUID is provided, either all records under the table or records directly below the table are returned based on the value of directParentOnly.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'recordAncestorHistory'",
        "x-discriminator-value": "recordAncestorHistory",
        "x-discriminator-name": "type"
      },
      "GsaRecordColor": {
        "enum": [
          "red",
          "lime",
          "blue",
          "yellow",
          "fuchsia",
          "aqua",
          "maroon",
          "green",
          "navy",
          "olive",
          "purple",
          "teal",
          "gray",
          "black",
          "white",
          "silver"
        ],
        "type": "string",
        "description": "An API-level enum for the supported record colors."
      },
      "GsaRecordColorProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "recordColor": {
                "$ref": "#/components/schemas/GsaRecordColor"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'recordColor'",
        "x-discriminator-value": "recordColor",
        "x-discriminator-name": "propertyName"
      },
      "GsaRecordExportFailure": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaExportFailure"
          },
          {
            "required": [
              "failedRecords"
            ],
            "type": "object",
            "properties": {
              "failedRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaRecordReference"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaExportFailure\r\n\r\nThe value of discriminator property ('type') must be equal to 'record'",
        "x-discriminator-value": "record",
        "x-discriminator-name": "type"
      },
      "GsaRecordGuidProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "recordGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'recordGuid'",
        "x-discriminator-value": "recordGuid",
        "x-discriminator-name": "propertyName"
      },
      "GsaRecordHistory": {
        "required": [
          "guid",
          "isFolder",
          "recordVersions",
          "subsets",
          "table"
        ],
        "type": "object",
        "properties": {
          "isFolder": {
            "type": "boolean"
          },
          "table": {
            "$ref": "#/components/schemas/GsaSlimTable"
          },
          "parent": {
            "$ref": "#/components/schemas/GsaSlimRecordHistory"
          },
          "recordVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimRecordVersion"
            }
          },
          "subsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimSubset"
            }
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaRecordHistoryCopyException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaRecordHistoryGuidProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "recordHistoryGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'recordHistoryGuid'",
        "x-discriminator-value": "recordHistoryGuid",
        "x-discriminator-name": "propertyName"
      },
      "GsaRecordHistoryMoveException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaRecordHistoryReference": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaRecordReference"
          },
          {
            "type": "object",
            "properties": {
              "recordHistoryGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The unique way to identify a record history (which may have multiple versions) in an MI system\r\n\r\nThis extends: GsaRecordReference\r\n\r\nThe value of discriminator property ('recordReferenceType') must be equal to 'history'",
        "x-discriminator-value": "history",
        "x-discriminator-name": "recordReferenceType"
      },
      "GsaRecordLinkGroup": {
        "required": [
          "displayNames",
          "guid",
          "linkInfo",
          "name",
          "reverseName",
          "type"
        ],
        "type": "object",
        "properties": {
          "linkInfo": {
            "$ref": "#/components/schemas/GsaLinkInfo"
          },
          "identity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/GsaRecordLinkGroupType"
          },
          "reverseName": {
            "type": "string"
          },
          "reverseDisplayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaStaticRecordLinkGroup\r\n * GsaSmartRecordLinkGroup\r\n * GsaCrossDatabaseRecordLinkGroup",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "static": "#/components/schemas/GsaStaticRecordLinkGroup",
            "smart": "#/components/schemas/GsaSmartRecordLinkGroup",
            "crossDatabase": "#/components/schemas/GsaCrossDatabaseRecordLinkGroup"
          }
        }
      },
      "GsaRecordLinkGroupType": {
        "enum": [
          "static",
          "smart",
          "crossDatabase"
        ],
        "type": "string"
      },
      "GsaRecordLinkGroupsInfo": {
        "type": "object",
        "properties": {
          "recordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimRecordLinkGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaRecordListHeader": {
        "required": [
          "awaitingApproval",
          "createdTimestamp",
          "createdUser",
          "identifier",
          "internalUse",
          "isRevision",
          "lastModifiedTimestamp",
          "lastModifiedUser",
          "metadata",
          "name",
          "published"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "nullable": true
            }
          },
          "parentRecordListIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "createdUser": {
            "$ref": "#/components/schemas/GsaListsUserOrGroup"
          },
          "lastModifiedTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedUser": {
            "$ref": "#/components/schemas/GsaListsUserOrGroup"
          },
          "publishedTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedUser": {
            "$ref": "#/components/schemas/GsaListsUserOrGroup"
          },
          "isRevision": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "awaitingApproval": {
            "type": "boolean"
          },
          "internalUse": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaRecordListHeadersInfo": {
        "required": [
          "lists"
        ],
        "type": "object",
        "properties": {
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaRecordListHeader"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaRecordListItemsInfo": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaRecordListMemberCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "type": "object",
            "properties": {
              "recordListIdentifiers": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion that returns records contained within at least one of the referenced record lists.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'recordListMember'",
        "x-discriminator-value": "recordListMember",
        "x-discriminator-name": "type"
      },
      "GsaRecordListPermissionFlags": {
        "required": [
          "isAdministrator",
          "isCurator",
          "isOwner",
          "isPublisher",
          "isSubscribed"
        ],
        "type": "object",
        "properties": {
          "isOwner": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is an owner of this list."
          },
          "isSubscribed": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is subscribed to this list."
          },
          "isCurator": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is a curator of this list."
          },
          "isAdministrator": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is an administrator of this list."
          },
          "isPublisher": {
            "type": "boolean",
            "description": "Flag indicating if this user or group is a publisher of this list."
          }
        },
        "additionalProperties": false
      },
      "GsaRecordListSearchCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaListCriterion"
          },
          {
            "type": "object",
            "properties": {
              "nameContains": {
                "type": "string",
                "nullable": true
              },
              "userRole": {
                "$ref": "#/components/schemas/GsaUserRole"
              },
              "isPublished": {
                "type": "boolean",
                "nullable": true
              },
              "isAwaitingApproval": {
                "type": "boolean",
                "nullable": true
              },
              "isInternalUse": {
                "type": "boolean",
                "nullable": true
              },
              "isRevision": {
                "type": "boolean",
                "description": "Restrict to record lists that are (non discarded) revisions.",
                "nullable": true
              },
              "containsRecordsInDatabases": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Limits results to lists containing records in any of of the specified databases",
                "nullable": true
              },
              "containsRecordsInIntegrationSchemas": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Limits results to lists containing records in any of the specified integration schemas",
                "nullable": true
              },
              "containsRecordsInTables": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Limits results to lists containing records in any of the specified tables",
                "nullable": true
              },
              "containsRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaListItemRecordReference"
                },
                "description": "Limits results to lists containing any of the given records",
                "nullable": true
              },
              "userCanAddOrRemoveItems": {
                "type": "boolean",
                "description": "Limits results to lists where the current user can add or remove items.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "recordList: Search criterion for a set of record lists.\r\n            \r\nThe properties in the this class represent an AND search - only lists that match all of the non-null properties will be returned\r\n\r\nThis extends: GsaListCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'recordList'",
        "x-discriminator-value": "recordList",
        "x-discriminator-name": "type"
      },
      "GsaRecordListSearchInfo": {
        "required": [
          "searchResultIdentifier"
        ],
        "type": "object",
        "properties": {
          "searchResultIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaRecordListSearchRequest": {
        "required": [
          "searchCriterion"
        ],
        "type": "object",
        "properties": {
          "searchCriterion": {
            "$ref": "#/components/schemas/GsaListCriterion"
          },
          "pagingOptions": {
            "$ref": "#/components/schemas/GsaListsPagingOptions"
          },
          "responseOptions": {
            "$ref": "#/components/schemas/GsaResponseOptions"
          }
        },
        "additionalProperties": false
      },
      "GsaRecordListSearchResult": {
        "required": [
          "header",
          "items"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GsaRecordListHeader"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaRecordListSearchResultsInfo": {
        "required": [
          "searchResults"
        ],
        "type": "object",
        "properties": {
          "searchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaRecordListSearchResult"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaRecordProperty": {
        "enum": [
          "recordGuid",
          "recordHistoryGuid",
          "tableIdentity",
          "tableGuid",
          "tableName",
          "databaseKey",
          "createdByUser",
          "createdDate",
          "lastModifiedByUser",
          "lastModifiedDate",
          "recordType",
          "versionState",
          "versionNumber",
          "releasedDate",
          "fullName",
          "shortName",
          "recordColor"
        ],
        "type": "string",
        "description": "A record property represents data on a record that typically cannot be independently edited,\r\nas opposed to attribute data which may be edited on a record freely (albeit possibly requiring\r\nreleasing a new version). Record properties are usually tracked by the system automatically\r\nand are usually read-only.\r\nNote: for legacy reasons, some 'record properties' do not fall into these criteria, and do\r\nrepresent editable record fields more similar to attribute data. These record properties are\r\nusually exposed in this API as both 'record properties' and 'pseudo-attributes'."
      },
      "GsaRecordPropertyCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "required": [
              "innerCriterion"
            ],
            "type": "object",
            "properties": {
              "property": {
                "$ref": "#/components/schemas/GsaSearchableRecordProperty"
              },
              "innerCriterion": {
                "$ref": "#/components/schemas/GsaDatumCriterion"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for a search matching values in a given record property.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'recordProperty'",
        "x-discriminator-value": "recordProperty",
        "x-discriminator-name": "type"
      },
      "GsaRecordPropertyInheritanceType": {
        "enum": [
          "none",
          "fromParent",
          "fromOriginalRecord"
        ],
        "type": "string",
        "description": "An API-level enum for the possible options for inheriting properties when copying or moving a record history."
      },
      "GsaRecordPropertySortCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSortCriterion"
          },
          {
            "type": "object",
            "properties": {
              "property": {
                "$ref": "#/components/schemas/GsaSearchableRecordProperty"
              },
              "sortType": {
                "$ref": "#/components/schemas/GsaSortType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Specifies a record property based sort criterion for a search query.\r\n\r\nsortType: For a text-type sort, whether the results should use a natural or a pure alphabetical sort. Defaults to natural.\r\n\r\nThis extends: GsaSortCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'recordProperty'",
        "x-discriminator-value": "recordProperty",
        "x-discriminator-name": "type"
      },
      "GsaRecordReference": {
        "required": [
          "databaseKey",
          "recordReferenceType"
        ],
        "type": "object",
        "properties": {
          "recordReferenceType": {
            "$ref": "#/components/schemas/GsaRecordReferenceType"
          },
          "databaseKey": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaRecordHistoryReference\r\n * GsaRecordVersionReference",
        "discriminator": {
          "propertyName": "recordReferenceType",
          "mapping": {
            "history": "#/components/schemas/GsaRecordHistoryReference",
            "version": "#/components/schemas/GsaRecordVersionReference"
          }
        }
      },
      "GsaRecordReferenceCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "required": [
              "databaseKey"
            ],
            "type": "object",
            "properties": {
              "databaseKey": {
                "type": "string"
              },
              "recordHistoryGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "recordGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion that returns records matching a specific reference. The database key must be provided, along with the record GUID.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'reference'",
        "x-discriminator-value": "reference",
        "x-discriminator-name": "type"
      },
      "GsaRecordReferenceType": {
        "enum": [
          "history",
          "version"
        ],
        "type": "string"
      },
      "GsaRecordSubsetCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "type": "object",
            "properties": {
              "subsetIdentity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "subsetGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion that returns records matching a specific subset. The database key must be provided, along with either the subset GUID or the subset identity.\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'subset'",
        "x-discriminator-value": "subset",
        "x-discriminator-name": "type"
      },
      "GsaRecordType": {
        "enum": [
          "record",
          "generic",
          "folder"
        ],
        "type": "string",
        "description": "An API-level enum for the supported record types."
      },
      "GsaRecordTypeProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "recordType": {
                "$ref": "#/components/schemas/GsaRecordType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'recordType'",
        "x-discriminator-value": "recordType",
        "x-discriminator-name": "propertyName"
      },
      "GsaRecordUserCapabilities": {
        "required": [
          "canDelete",
          "canGetModifiableVersion",
          "canModify",
          "canRelease",
          "canWithdraw",
          "canWrite"
        ],
        "type": "object",
        "properties": {
          "canWrite": {
            "type": "boolean",
            "description": "True if the current user has write permission for this record version, and is in write mode.\r\nWrite permission is required to edit record properties, and to perform version control actions."
          },
          "canModify": {
            "type": "boolean",
            "description": "True if the current user can modify this record version, e.g. edit record properties.\r\nThe user needs write permission, and if the table is version controlled, the record must be unreleased."
          },
          "canRelease": {
            "type": "boolean",
            "description": "True if the current user can release this record version."
          },
          "canGetModifiableVersion": {
            "type": "boolean",
            "description": "True if the current user can get a modifiable version of this record version (gets the latest modifiable record version, or creates a new one if none exists)."
          },
          "canWithdraw": {
            "type": "boolean",
            "description": "True if the current user can withdraw this record version."
          },
          "canDelete": {
            "type": "boolean",
            "description": "True if the current user can delete this record version."
          }
        },
        "additionalProperties": false
      },
      "GsaRecordVersion": {
        "required": [
          "createdByUser",
          "createdDate",
          "databaseKey",
          "guid",
          "lastModifiedByUser",
          "lastModifiedDate",
          "name",
          "recordColor",
          "recordHistory",
          "recordType",
          "shortName",
          "table",
          "userCapabilities",
          "versionNumber",
          "versionState"
        ],
        "type": "object",
        "properties": {
          "recordHistory": {
            "$ref": "#/components/schemas/GsaSlimRecordHistory"
          },
          "table": {
            "$ref": "#/components/schemas/GsaSlimTable"
          },
          "databaseKey": {
            "type": "string"
          },
          "createdByUser": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedByUser": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "recordType": {
            "$ref": "#/components/schemas/GsaRecordType"
          },
          "releasedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shortName": {
            "type": "string"
          },
          "recordColor": {
            "$ref": "#/components/schemas/GsaRecordColor"
          },
          "userCapabilities": {
            "$ref": "#/components/schemas/GsaRecordUserCapabilities"
          },
          "versionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "versionState": {
            "$ref": "#/components/schemas/GsaVersionState"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaRecordVersionReference": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaRecordReference"
          },
          {
            "required": [
              "recordVersionGuid"
            ],
            "type": "object",
            "properties": {
              "recordVersionGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The unique way to identify a record version in an MI system\r\n\r\nThis extends: GsaRecordReference\r\n\r\nThe value of discriminator property ('recordReferenceType') must be equal to 'version'",
        "x-discriminator-value": "version",
        "x-discriminator-name": "recordReferenceType"
      },
      "GsaRecordWithData": {
        "required": [
          "databaseKey",
          "recordVersionGuid"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string"
          },
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordVersionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataExportDatum"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaProperty"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaReferencedByType": {
        "enum": [
          "expression",
          "versionControlledData",
          "smartLinkGroup",
          "tabularAttribute",
          "xyChartTemplate",
          "searchMask",
          "securityAttribute",
          "attribute",
          "data",
          "defaultParameterValue",
          "functionalDataDefault",
          "multiValuedPointData"
        ],
        "type": "string"
      },
      "GsaReferentialIntegrityModel": {
        "enum": [
          "oneToOne",
          "oneToMany",
          "manyToMany"
        ],
        "type": "string"
      },
      "GsaRegisterUpdateRequest": {
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GsaDataUpdateHeader"
          },
          "applyOptions": {
            "$ref": "#/components/schemas/GsaApplyOptions"
          }
        },
        "additionalProperties": false
      },
      "GsaReleaseRecordVersionControlException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaVersionControlErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaReleaseTableVersionControlException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaVersionControlErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaReleasedDateProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "releasedDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'releasedDate'",
        "x-discriminator-value": "releasedDate",
        "x-discriminator-name": "propertyName"
      },
      "GsaRelevanceSortCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSortCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Specifies a relevance based sort criterion for a search query\r\n\r\nThis extends: GsaSortCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'relevance'",
        "x-discriminator-value": "relevance",
        "x-discriminator-name": "type"
      },
      "GsaRemoveRecordHistoryFromSubset": {
        "required": [
          "recordHistoryGuid"
        ],
        "type": "object",
        "properties": {
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaReorderSectionsInfo": {
        "required": [
          "layoutSections"
        ],
        "type": "object",
        "properties": {
          "layoutSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaReplacementString": {
        "required": [
          "guid",
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "A piece of text that can be inserted into a data value so that multiple data can be changed in one place."
      },
      "GsaReplacementStringsInfo": {
        "required": [
          "replacementStrings"
        ],
        "type": "object",
        "properties": {
          "replacementStrings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimReplacementString"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaResolveLinkTargetsInfo": {
        "required": [
          "resolvedLinkTargets"
        ],
        "type": "object",
        "properties": {
          "resolvedLinkTargets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaResolvedLinkTarget"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaResolveLinkTargetsRequest": {
        "required": [
          "linkTargets"
        ],
        "type": "object",
        "properties": {
          "linkTargets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaLinkTarget"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaResolvedLinkTarget": {
        "required": [
          "linkTarget",
          "tables"
        ],
        "type": "object",
        "properties": {
          "linkTarget": {
            "$ref": "#/components/schemas/GsaLinkTarget"
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimTable"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaResponseOptions": {
        "type": "object",
        "properties": {
          "includeUserActions": {
            "type": "boolean"
          },
          "includeUserPermissions": {
            "type": "boolean"
          },
          "includeRecordListItems": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaResubmitJobRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "scheduledExecutionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaRetargetPotentialRequest": {
        "required": [
          "targetDatabaseKeys"
        ],
        "type": "object",
        "properties": {
          "targetDatabaseKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of database keys to check for retargeting potential."
          }
        },
        "additionalProperties": false,
        "description": "Request to get databases with retarget potential - whether there are any cross-database tabular attributes that target them."
      },
      "GsaRetargetRequest": {
        "required": [
          "newTargetDatabaseKey",
          "previousTargetDatabaseKey"
        ],
        "type": "object",
        "properties": {
          "previousTargetDatabaseKey": {
            "type": "string",
            "description": "Database key that the tabular attributes were targeting before the operation."
          },
          "newTargetDatabaseKey": {
            "type": "string",
            "description": "Database key that the tabular attributes will target after the operation."
          }
        },
        "additionalProperties": false,
        "description": "Request to retarget tabular attributes from one database to another."
      },
      "GsaRetargetResult": {
        "required": [
          "attributeName",
          "result",
          "sourceDatabaseKey",
          "tableName"
        ],
        "type": "object",
        "properties": {
          "sourceDatabaseKey": {
            "type": "string",
            "description": "Database key of the source database - the one holding the tabular attribute that was retargeted."
          },
          "tableName": {
            "type": "string",
            "description": "Table name of the source table - the one holding the tabular attribute that was retargeted."
          },
          "attributeName": {
            "type": "string",
            "description": "Name of the tabular attribute that was retargeted."
          },
          "result": {
            "$ref": "#/components/schemas/GsaRetargetResultType"
          }
        },
        "additionalProperties": false,
        "description": "Result of a retargeting operation.\r\n\r\nresult: Result type of the retargeting operation."
      },
      "GsaRetargetResultType": {
        "enum": [
          "success",
          "tableNotFound",
          "linkingAttributeNotFound",
          "columnMissing",
          "missingAdminPermissions"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>success</b>: Success.</li>\r\n<li><b>tableNotFound</b>: Target table could not be found.</li>\r\n<li><b>linkingAttributeNotFound</b>: Linking attribute could not be found.</li>\r\n<li><b>columnMissing</b>: Column missing.</li>\r\n<li><b>missingAdminPermissions</b>: User does not have admin permissions to the database.</li>\r\n</ul>\r\n"
      },
      "GsaRetargetResultsInfo": {
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaRetargetResult"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaRichTextType": {
        "enum": [
          "plain",
          "markdown"
        ],
        "type": "string",
        "description": "The types of datum that are supported by the API.<p>Possible values:</p>\r\n<ul>\r\n<li><b>plain</b>: Represents plain text.</li>\r\n<li><b>markdown</b>: (no description available)</li>\r\n</ul>\r\n"
      },
      "GsaRichTextValue": {
        "required": [
          "text",
          "type"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/GsaRichTextType"
          }
        },
        "additionalProperties": false
      },
      "GsaRollupExportFailure": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaExportFailure"
          },
          {
            "required": [
              "failedRollup"
            ],
            "type": "object",
            "properties": {
              "failedRollup": {
                "$ref": "#/components/schemas/GsaRollupReference"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaExportFailure\r\n\r\nThe value of discriminator property ('type') must be equal to 'rollup'",
        "x-discriminator-value": "rollup",
        "x-discriminator-name": "type"
      },
      "GsaRollupReference": {
        "required": [
          "databaseKey",
          "pathAttributeGuids",
          "pathAttributeIdentities",
          "rollupType"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string"
          },
          "attributeIdentity": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "attributeGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "rollupType": {
            "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
          },
          "pathAttributeGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The path from the exported link datum that contains this rollup, to the rolled up attribute.\r\nCan be used to distinguish rollups over the same attribute via different link attributes.\r\nOnly populated if the attributes were requested by GUID - if they were requested by identity, see pathAttributeIdentities."
          },
          "pathAttributeIdentities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The path from the exported link datum that contains this rollup, to the rolled up attribute.\r\nCan be used to distinguish rollups over the same attribute via different link attributes.\r\nOnly populated if the attributes were requested by identity - if they were requested by GUID, see pathAttributeGuids."
          }
        },
        "additionalProperties": false
      },
      "GsaRootFolderMoveErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFolderMoveErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "You cannot move the root folder.\r\n\r\nThis extends: GsaFolderMoveErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'root'",
        "x-discriminator-value": "root",
        "x-discriminator-name": "reason"
      },
      "GsaSameParentFileMoveErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFileMoveErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "newParentFolderGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Unable to move file as it is already under this folder.\r\n\r\nThis extends: GsaFileMoveErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'sameParent'",
        "x-discriminator-value": "sameParent",
        "x-discriminator-name": "reason"
      },
      "GsaSameParentFolderMoveErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFolderMoveErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "newParentFolderGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Unable to move folder as it is already under this folder.\r\n\r\nThis extends: GsaFolderMoveErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'sameParent'",
        "x-discriminator-value": "sameParent",
        "x-discriminator-name": "reason"
      },
      "GsaSchemaTooNewAddDatabaseValidationIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAddDatabaseValidationIssue"
          },
          {
            "required": [
              "schemaVersion"
            ],
            "type": "object",
            "properties": {
              "schemaVersion": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAddDatabaseValidationIssue\r\n\r\nThe value of discriminator property ('IssueType') must be equal to 'schemaTooNew'",
        "x-discriminator-value": "schemaTooNew",
        "x-discriminator-name": "IssueType"
      },
      "GsaSchemaTooOldAddDatabaseValidationIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAddDatabaseValidationIssue"
          },
          {
            "required": [
              "schemaVersion"
            ],
            "type": "object",
            "properties": {
              "schemaVersion": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAddDatabaseValidationIssue\r\n\r\nThe value of discriminator property ('IssueType') must be equal to 'schemaTooOld'",
        "x-discriminator-value": "schemaTooOld",
        "x-discriminator-name": "IssueType"
      },
      "GsaSearchClusterStatus": {
        "type": "object",
        "properties": {
          "diskStatus": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GsaDiskStatus"
            },
            "description": "The status of the disk compared to the Elasticsearch space thresholds.",
            "nullable": true
          },
          "diskThreshold": {
            "type": "string",
            "description": "The 'flood stage' disk usage threshold from Elasticsearch. Elasticsearch enforces a read-only block on indexes once this is exceeded.",
            "nullable": true
          },
          "diskThresholdMaxHeadroom": {
            "type": "string",
            "description": "The maximum headroom of the Elasticsearch 'flood stage'. If set, nodes with at least this amount of space will not be set as read-only even if they exceed the disk threshold",
            "nullable": true
          },
          "clusterUnavailable": {
            "type": "boolean",
            "description": "True if the cluster could not be contacted.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaSearchIndexStatus": {
        "type": "object",
        "properties": {
          "searchIndexUpToDate": {
            "type": "boolean",
            "description": "Whether all changes up to and including the most recent database revision have been sent to the search index. This will return true\r\neven if some of those revisions could not be indexed"
          },
          "searchIndexOutOfDateDuration": {
            "type": "string",
            "description": "How long has the index been out of date.\r\nSpecifically the duration between the first non-indexed revision and the current time.",
            "format": "date-span",
            "nullable": true
          },
          "searchIndexInSync": {
            "type": "boolean",
            "description": "Returns false if the search index is out of sync with the database (i.e. because changes were made that could not be indexed)"
          },
          "searchIndexLocation": {
            "type": "string",
            "description": "The location of the index.",
            "nullable": true
          },
          "searchIndexIsReadOnly": {
            "type": "boolean",
            "description": "True if the index is read only.",
            "nullable": true
          },
          "searchIndexUnavailable": {
            "type": "boolean",
            "description": "True if the index could not be contacted.",
            "nullable": true
          },
          "recordsThatFailedToIndex": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaIndexRecordFailure"
            },
            "description": "Details of any records that failed to index.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaSearchMaskUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "referencedBy": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimNamedEntity"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'searchMask'",
        "x-discriminator-value": "searchMask",
        "x-discriminator-name": "referencedByType"
      },
      "GsaSearchRequest": {
        "type": "object",
        "properties": {
          "criterion": {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          "sortCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSortCriterion"
            },
            "description": "An optional set of attribute based sort criteria. If none are provided, the results will be sorted in descending relevance order.",
            "nullable": true
          },
          "pagingOptions": {
            "$ref": "#/components/schemas/GsaPagingOptions"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\ncriterion: The main search criterion.\r\n\r\npagingOptions: An optional field for paging options. If provided, the response will contain an identifier that can be used to retrieve the other pages."
      },
      "GsaSearchResponse": {
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "searchIdentifier": {
            "type": "string",
            "description": "If the search request had paging options specified, this will return an identifier that can be used to get the rest of the results",
            "format": "uuid",
            "nullable": true
          },
          "totalResultCount": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSearchResult"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaSearchResult": {
        "required": [
          "databaseKey"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string"
          },
          "recordHistoryGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordGuid": {
            "type": "string",
            "format": "uuid"
          },
          "recordName": {
            "type": "string",
            "nullable": true
          },
          "treeName": {
            "type": "string",
            "nullable": true
          },
          "recordColor": {
            "type": "string",
            "nullable": true
          },
          "tableIdentity": {
            "type": "integer",
            "format": "int32"
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          },
          "cubicSplineStatus": {
            "type": "string",
            "nullable": true
          },
          "versionControlState": {
            "type": "string",
            "nullable": true
          },
          "versionNumber": {
            "type": "integer",
            "format": "int64"
          },
          "parentGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/GsaRecordType"
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sortingValue": {
            "$ref": "#/components/schemas/GsaSortingValue"
          }
        },
        "additionalProperties": false
      },
      "GsaSearchResultsRequest": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "description": "The (1-indexed) number of the page to return from a search\r\nThe size of the page was determined by the original query",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GsaSearchableRecordProperty": {
        "enum": [
          "createdDate",
          "creator",
          "lastModifiedDate",
          "lastModifier",
          "recordType",
          "color",
          "versionState",
          "versionNumber",
          "recordName",
          "treeName",
          "databaseKey",
          "tableName",
          "tableIdentity",
          "tableGuid"
        ],
        "type": "string",
        "description": "Properties of a record that can be used to in searches<p>Possible values:</p>\r\n<ul>\r\n<li><b>createdDate</b>: The date a record was created.</li>\r\n<li><b>creator</b>: The username of the person who created the record.</li>\r\n<li><b>lastModifiedDate</b>: The date a record was last modified.</li>\r\n<li><b>lastModifier</b>: The username of the person who last modified the record.</li>\r\n<li><b>recordType</b>: Whether we return records, generics or folders (or a mixture).</li>\r\n<li><b>color</b>: The color of the record.</li>\r\n<li><b>versionState</b>: The version state of the records that will be returned. Only Released, Unreleased or Unversioned are supported.</li>\r\n<li><b>versionNumber</b>: The version number of the record.</li>\r\n<li><b>recordName</b>: The full name of the record.</li>\r\n<li><b>treeName</b>: The name of the record as it is displayed in the tree.</li>\r\n<li><b>databaseKey</b>: The database key of the record.</li>\r\n<li><b>tableName</b>: The name of the table that the record is in.</li>\r\n<li><b>tableIdentity</b>: The identity of the table that the record is in.</li>\r\n<li><b>tableGuid</b>: The guid of the table that the record is in.</li>\r\n</ul>\r\n"
      },
      "GsaSecurityAttributeGrouping": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "availableDiscreteValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDiscreteValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaSecurityAttributeUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "referencedBy": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimNamedEntity"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'securityAttribute'",
        "x-discriminator-value": "securityAttribute",
        "x-discriminator-name": "referencedByType"
      },
      "GsaSecurityGroups": {
        "type": "object",
        "properties": {
          "readGroup": {
            "type": "string",
            "description": "Members of this groups can read data from the integration schema.",
            "nullable": true
          },
          "adminGroup": {
            "type": "string",
            "description": "Members of this group can perform administrative tasks such as adding or deleting the schema.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The security groups that apply to an integration schema. If null or empty, the default MI security groups will be used."
      },
      "GsaSeriesGraph": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaGraph"
          },
          {
            "required": [
              "constraintParameters",
              "functionalType",
              "numberOfPoints",
              "xAxisParameter"
            ],
            "type": "object",
            "properties": {
              "functionalType": {
                "$ref": "#/components/schemas/GsaFunctionalType"
              },
              "xAxisParameter": {
                "$ref": "#/components/schemas/GsaSlimParameter"
              },
              "constraintParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimParameter"
                }
              },
              "numberOfPoints": {
                "type": "integer",
                "format": "int32"
              }
            },
            "discriminator": {
              "propertyName": "functionalType",
              "mapping": {
                "float": "#/components/schemas/GsaFloatSeriesGraph",
                "discrete": "#/components/schemas/GsaDiscreteSeriesGraph"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaGraph\r\n\r\nThe value of discriminator property ('graphType') must be equal to 'series'\r\n\r\nThis is one of: \r\n * GsaFloatSeriesGraph\r\n * GsaDiscreteSeriesGraph",
        "x-discriminator-value": "series",
        "x-discriminator-name": "graphType"
      },
      "GsaSetDateTimeDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'datetime'",
        "x-discriminator-value": "datetime",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetDatum": {
        "required": [
          "setDatumType"
        ],
        "type": "object",
        "properties": {
          "setDatumType": {
            "$ref": "#/components/schemas/GsaSetDatumType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaSetIntegerDatum\r\n * GsaSetLogicalDatum\r\n * GsaSetShortTextDatum\r\n * GsaSetRangeDatum\r\n * GsaSetDateTimeDatum\r\n * GsaSetLongTextDatum\r\n * GsaSetHyperlinkDatum\r\n * GsaSetPointDatum\r\n * GsaSetDiscreteDatum\r\n * GsaSetTabularDatum",
        "discriminator": {
          "propertyName": "setDatumType",
          "mapping": {
            "integer": "#/components/schemas/GsaSetIntegerDatum",
            "logical": "#/components/schemas/GsaSetLogicalDatum",
            "shortText": "#/components/schemas/GsaSetShortTextDatum",
            "range": "#/components/schemas/GsaSetRangeDatum",
            "datetime": "#/components/schemas/GsaSetDateTimeDatum",
            "longText": "#/components/schemas/GsaSetLongTextDatum",
            "hyperLink": "#/components/schemas/GsaSetHyperlinkDatum",
            "point": "#/components/schemas/GsaSetPointDatum",
            "discrete": "#/components/schemas/GsaSetDiscreteDatum",
            "tabular": "#/components/schemas/GsaSetTabularDatum"
          }
        }
      },
      "GsaSetDatumType": {
        "enum": [
          "integer",
          "logical",
          "shortText",
          "range",
          "datetime",
          "hyperLink",
          "longText",
          "point",
          "discrete",
          "tabular"
        ],
        "type": "string",
        "description": "The types of datum dto that are supported by the API when creating or modifying data.<p>Possible values:</p>\r\n<ul>\r\n<li><b>integer</b>: Integer</li>\r\n<li><b>logical</b>: Logical</li>\r\n<li><b>shortText</b>: Short Text</li>\r\n<li><b>range</b>: Range - in database units</li>\r\n<li><b>datetime</b>: DateTime</li>\r\n<li><b>hyperLink</b>: Hyperlink</li>\r\n<li><b>longText</b>: Hyperlink</li>\r\n<li><b>point</b>: Point - in database units</li>\r\n<li><b>discrete</b>: Discrete</li>\r\n<li><b>tabular</b>: Tabular</li>\r\n</ul>\r\n"
      },
      "GsaSetDiscreteDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "discreteValues"
            ],
            "type": "object",
            "properties": {
              "discreteValues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimEntity"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetDiscreteParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetParameterValue"
          },
          {
            "required": [
              "parameterValue"
            ],
            "type": "object",
            "properties": {
              "parameterValue": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetParameterValue\r\n\r\nThe value of discriminator property ('parameterType') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "parameterType"
      },
      "GsaSetHyperlinkDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "address",
              "description",
              "target"
            ],
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "target": {
                "$ref": "#/components/schemas/GsaHyperlinkTarget"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'hyperLink'",
        "x-discriminator-value": "hyperLink",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetIntegerDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetLogicalDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetLongTextDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "richTextValue"
            ],
            "type": "object",
            "properties": {
              "richTextValue": {
                "$ref": "#/components/schemas/GsaRichTextValue"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'longText'",
        "x-discriminator-value": "longText",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetNumericParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetParameterValue"
          },
          {
            "required": [
              "parameterValue"
            ],
            "type": "object",
            "properties": {
              "parameterValue": {
                "type": "number",
                "format": "double"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetParameterValue\r\n\r\nThe value of discriminator property ('parameterType') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "parameterType"
      },
      "GsaSetParameterValue": {
        "required": [
          "parameterType"
        ],
        "type": "object",
        "properties": {
          "parameterType": {
            "$ref": "#/components/schemas/GsaParameterType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaSetDiscreteParameterValue\r\n * GsaSetNumericParameterValue",
        "discriminator": {
          "propertyName": "parameterType",
          "mapping": {
            "discrete": "#/components/schemas/GsaSetDiscreteParameterValue",
            "numeric": "#/components/schemas/GsaSetNumericParameterValue"
          }
        }
      },
      "GsaSetParameterWithValue": {
        "required": [
          "parameter",
          "parameterValue"
        ],
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "parameterValue": {
            "$ref": "#/components/schemas/GsaSetParameterValue"
          }
        },
        "additionalProperties": false
      },
      "GsaSetPointDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "estimated",
              "values"
            ],
            "type": "object",
            "properties": {
              "estimated": {
                "type": "boolean"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSetPointDatumValue"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetPointDatumValue": {
        "required": [
          "pointValue"
        ],
        "type": "object",
        "properties": {
          "pointValue": {
            "type": "number",
            "format": "double"
          },
          "parametersAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSetParameterWithValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaSetRangeDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "estimated",
              "highValue",
              "highValueIsInclusive",
              "lowValue",
              "lowValueIsInclusive"
            ],
            "type": "object",
            "properties": {
              "lowValue": {
                "type": "number",
                "format": "double"
              },
              "highValue": {
                "type": "number",
                "format": "double"
              },
              "lowValueIsInclusive": {
                "type": "boolean"
              },
              "highValueIsInclusive": {
                "type": "boolean"
              },
              "estimated": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetShortTextDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetTabularDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSetDatum"
          },
          {
            "required": [
              "rows"
            ],
            "type": "object",
            "properties": {
              "rows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSetTabularDatumRow"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSetDatum\r\n\r\nThe value of discriminator property ('setDatumType') must be equal to 'tabular'",
        "x-discriminator-value": "tabular",
        "x-discriminator-name": "setDatumType"
      },
      "GsaSetTabularDatumRow": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "linkingValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaShortNameProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "shortName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'shortName'",
        "x-discriminator-value": "shortName",
        "x-discriminator-name": "propertyName"
      },
      "GsaShortTextAggregation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatum"
          },
          {
            "type": "object",
            "properties": {
              "terms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaTermWithCount"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAggregationDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "datumType"
      },
      "GsaShortTextAggregationDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAggregationDatumCriterion"
          },
          {
            "type": "object",
            "properties": {
              "numberOfTerms": {
                "type": "integer",
                "description": "The maximum number of terms to return in this aggregation.",
                "format": "int32"
              },
              "prefix": {
                "type": "string",
                "description": "An optional textual prefix. If provided, only terms that start with this prefix will be\r\nconsidered in the aggregation.",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Criterion for aggregating data within a short-text attribute. The returned aggregation will contain the most common\r\nterms for the attribute across records in the aggregation scope, with a count of records for each term.\r\n\r\nThis extends: GsaAggregationDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "type"
      },
      "GsaShortTextAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "required": [
              "isUnique"
            ],
            "type": "object",
            "properties": {
              "isUnique": {
                "type": "boolean",
                "description": "Whether or not the attribute is constrained to contain a unique value"
              },
              "dataRule": {
                "$ref": "#/components/schemas/GsaSlimNamedEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "type"
      },
      "GsaShortTextDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "datumType"
      },
      "GsaShortTextDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "textMatchBehavior": {
                "$ref": "#/components/schemas/GsaTextMatchBehavior"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "type"
      },
      "GsaShortTextDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "type"
      },
      "GsaShortTextPrefixDatumCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumCriterion"
          },
          {
            "required": [
              "prefix"
            ],
            "type": "object",
            "properties": {
              "prefix": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDatumCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'shortTextPrefix'",
        "x-discriminator-value": "shortTextPrefix",
        "x-discriminator-name": "type"
      },
      "GsaSignificantFiguresInfo": {
        "required": [
          "enteredValue",
          "significantFigures"
        ],
        "type": "object",
        "properties": {
          "significantFigures": {
            "type": "integer",
            "format": "int32"
          },
          "enteredValue": {
            "type": "number",
            "format": "double"
          },
          "enteredUnit": {
            "$ref": "#/components/schemas/GsaSlimUnit"
          }
        },
        "additionalProperties": false
      },
      "GsaSimpleAttributeToExport": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeToExport"
          },
          {
            "type": "object",
            "properties": {
              "rollUpType": {
                "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
              },
              "summaryRollUpType": {
                "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nrollUpType: Optional: if this attribute is being used as part of a tabular export, this can be used to specify how linked data should be rolled up\r\n\r\nsummaryRollUpType: Optional: if this attribute is being used as part of a tabular export, this can be used to specify that the data should be rolled up and included in the summary row\r\n\r\nThis extends: GsaAttributeToExport\r\n\r\nThe value of discriminator property ('attributeType') must be equal to 'simple'",
        "x-discriminator-value": "simple",
        "x-discriminator-name": "attributeType"
      },
      "GsaSlimAttribute": {
        "required": [
          "displayNames",
          "guid",
          "isHiddenFromSearchCriteria",
          "isProtected",
          "name",
          "table",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "aboutAttribute": {
            "$ref": "#/components/schemas/GsaSlimTypedAttribute"
          },
          "isHiddenFromSearchCriteria": {
            "type": "boolean",
            "description": "If true, the attribute should not be shown in search UIs.\r\nIt will still be included in text searches."
          },
          "isProtected": {
            "type": "boolean",
            "description": "If true, the attribute is protected from all changes."
          },
          "table": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimAttributeWithHelpPath": {
        "required": [
          "displayNames",
          "guid",
          "isHiddenFromSearchCriteria",
          "isProtected",
          "name",
          "table",
          "type"
        ],
        "type": "object",
        "properties": {
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "aboutAttribute": {
            "$ref": "#/components/schemas/GsaSlimTypedAttribute"
          },
          "isHiddenFromSearchCriteria": {
            "type": "boolean",
            "description": "If true, the attribute should not be shown in search UIs.\r\nIt will still be included in text searches."
          },
          "isProtected": {
            "type": "boolean",
            "description": "If true, the attribute is protected from all changes."
          },
          "table": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimConfiguration": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimConstant": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Constant base data (name and guid)\r\nNo extra properties compared to SlimNamedEntity yet, but exists for consistency with other slim entity types"
      },
      "GsaSlimDatabase": {
        "required": [
          "isLocked",
          "isReadOnly",
          "key",
          "status",
          "userCapabilities"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/GsaDatabaseStatus"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "indexInSync": {
            "type": "boolean",
            "nullable": true
          },
          "indexUpToDate": {
            "type": "boolean",
            "nullable": true
          },
          "indexOutOfDateDuration": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "schemaVersion": {
            "type": "string",
            "nullable": true
          },
          "userCapabilities": {
            "$ref": "#/components/schemas/GsaDatabaseUserCapabilities"
          },
          "configurationDetails": {
            "$ref": "#/components/schemas/GsaConfigurationDetails"
          },
          "issues": {
            "$ref": "#/components/schemas/GsaDatabaseIssues"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimDiscreteType": {
        "required": [
          "guid",
          "isOrdered",
          "isProtected",
          "name"
        ],
        "type": "object",
        "properties": {
          "isOrdered": {
            "type": "boolean"
          },
          "isProtected": {
            "type": "boolean",
            "description": "If true, the discrete type is protected from all changes."
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimEntity": {
        "required": [
          "guid"
        ],
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimExpression": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimFile": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimIdentifiedEntity": {
        "required": [
          "guid",
          "identity"
        ],
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimLayout": {
        "required": [
          "displayNames",
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimLayoutSection": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaLayoutSection"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaLayoutSection\r\n\r\nThe value of discriminator property ('sectionDetailType') must be equal to 'slim'",
        "x-discriminator-value": "slim",
        "x-discriminator-name": "sectionDetailType"
      },
      "GsaSlimNamedEntity": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimNamedUnit": {
        "required": [
          "guid",
          "name",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "relativeSymbol": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimObjects": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaSlimParameter": {
        "required": [
          "displayNames",
          "guid",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimParameterWithHelpPath": {
        "required": [
          "displayNames",
          "guid",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimPermission": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimPermissionCategory": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimProfile": {
        "required": [
          "isImplicit",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key is a unique identifier of a profile. Separate from guid."
          },
          "guid": {
            "type": "string",
            "description": "Guid is a unique identifier of a profile. Separate from key.",
            "format": "uuid",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "isImplicit": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Profile stripped down to only the basic fields"
      },
      "GsaSlimProfileTable": {
        "required": [
          "databaseGuid",
          "tableGuid"
        ],
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "databaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "databaseFallbackHint": {
            "type": "string",
            "nullable": true
          },
          "tableGuid": {
            "type": "string",
            "format": "uuid"
          },
          "tableFallbackHint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Profile table stripped to just the basic fields"
      },
      "GsaSlimRecordHistory": {
        "required": [
          "guid"
        ],
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimRecordLinkGroup": {
        "required": [
          "displayNames",
          "guid",
          "name",
          "reverseName",
          "type"
        ],
        "type": "object",
        "properties": {
          "identity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/GsaRecordLinkGroupType"
          },
          "reverseName": {
            "type": "string"
          },
          "reverseDisplayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimRecordVersion": {
        "required": [
          "guid",
          "name",
          "versionNumber",
          "versionState"
        ],
        "type": "object",
        "properties": {
          "versionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "versionState": {
            "$ref": "#/components/schemas/GsaVersionState"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimReplacementString": {
        "required": [
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Replacement String base data (name and guid)\r\nNo extra properties compared to SlimNamedEntity yet, but exists for consistency with other slim entity types"
      },
      "GsaSlimSubset": {
        "required": [
          "displayNames",
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimTable": {
        "required": [
          "databaseKey",
          "displayNames",
          "guid",
          "isHiddenFromBrowse",
          "isHiddenFromSearch",
          "isVersioned",
          "name",
          "tableTypes"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string"
          },
          "isHiddenFromBrowse": {
            "type": "boolean"
          },
          "isHiddenFromSearch": {
            "type": "boolean"
          },
          "isVersioned": {
            "type": "boolean"
          },
          "tableTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimTypedAttribute": {
        "required": [
          "guid",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimUnit": {
        "required": [
          "guid",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "relativeSymbol": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSlimUnitSystem": {
        "required": [
          "displayNames",
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unit system stripped down to its basic fields (mappings excluded)."
      },
      "GsaSmartLinkGroupUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "referencedBy": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimNamedEntity"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'smartLinkGroup'",
        "x-discriminator-value": "smartLinkGroup",
        "x-discriminator-name": "referencedByType"
      },
      "GsaSmartRecordLinkGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaRecordLinkGroup"
          },
          {
            "required": [
              "attributePairs",
              "forbidOrphans",
              "referentialIntegrityModel"
            ],
            "type": "object",
            "properties": {
              "forbidOrphans": {
                "type": "boolean"
              },
              "referentialIntegrityModel": {
                "$ref": "#/components/schemas/GsaReferentialIntegrityModel"
              },
              "attributePairs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaAttributeLinkPair"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaRecordLinkGroup\r\n\r\nThe value of discriminator property ('type') must be equal to 'smart'",
        "x-discriminator-value": "smart",
        "x-discriminator-name": "type"
      },
      "GsaSmtpProperties": {
        "type": "object",
        "properties": {
          "hostName": {
            "type": "string",
            "description": "Gets or sets the name of the host used for SMTP transactions",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "description": "Gets or sets the port used for SMTP transactions.\r\nIf no value set then it will default to 25",
            "format": "int32",
            "default": 25
          },
          "useSsl": {
            "type": "boolean",
            "description": "Indicates whether the SMTP server uses SSL.\r\nDefaults to False"
          },
          "useAuthentication": {
            "type": "boolean",
            "description": "Indicates whether authentication is required. If this is set to True\r\nthen Granta.Server.Api.ServerManager.SmtpProperties.AuthenticationUsername and Granta.Server.Api.ServerManager.SmtpProperties.AuthenticationPassword\r\nare required.\r\nDefaults to False"
          },
          "authenticationUsername": {
            "type": "string",
            "description": "Gets or sets the username to use for authentication, should be set if Granta.Server.Api.ServerManager.SmtpProperties.UseAuthentication is True.",
            "nullable": true
          },
          "authenticationPassword": {
            "type": "string",
            "description": "Gets or sets the password to use for authentication, should be set if Granta.Server.Api.ServerManager.SmtpProperties.UseAuthentication is True.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaSortCriterion": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "sortDirection": {
            "$ref": "#/components/schemas/GsaSortDirection"
          },
          "type": {
            "$ref": "#/components/schemas/GsaSortCriterionType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaAttributeSortCriterion\r\n * GsaRecordPropertySortCriterion\r\n * GsaRelevanceSortCriterion",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "attribute": "#/components/schemas/GsaAttributeSortCriterion",
            "recordProperty": "#/components/schemas/GsaRecordPropertySortCriterion",
            "relevance": "#/components/schemas/GsaRelevanceSortCriterion"
          }
        }
      },
      "GsaSortCriterionType": {
        "enum": [
          "attribute",
          "recordProperty",
          "relevance"
        ],
        "type": "string"
      },
      "GsaSortDirection": {
        "enum": [
          "ascending",
          "descending"
        ],
        "type": "string"
      },
      "GsaSortType": {
        "enum": [
          "natural",
          "alphabetical"
        ],
        "type": "string",
        "description": "For a text-type sort, whether the results should use a pure alphabetical or a natural sort (where multi-digit numbers within strings are treated as a single character for the purposes of sorting)."
      },
      "GsaSortingValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaSortingValueType"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaDoubleSortingValue\r\n * GsaLongSortingValue\r\n * GsaStringSortingValue",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "double": "#/components/schemas/GsaDoubleSortingValue",
            "long": "#/components/schemas/GsaLongSortingValue",
            "text": "#/components/schemas/GsaStringSortingValue"
          }
        }
      },
      "GsaSortingValueType": {
        "enum": [
          "double",
          "long",
          "text"
        ],
        "type": "string"
      },
      "GsaSourceOfObjectIdentifier": {
        "required": [
          "mappings",
          "table"
        ],
        "type": "object",
        "properties": {
          "database": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "databaseKey": {
            "type": "string",
            "nullable": true
          },
          "table": {
            "$ref": "#/components/schemas/GsaObjectIdentifier"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaMappingOfObjectIdentifier"
            },
            "description": "Mappings for items from this table to the integration schema attributes."
          }
        },
        "additionalProperties": false,
        "description": "A source table from which integrated data will be taken."
      },
      "GsaSpecificValuesSpecifier": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaValueSpecifier"
          },
          {
            "type": "object",
            "properties": {
              "identities": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              },
              "guids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Specifies identities or guids to filter on.\r\nOnly one of identities or guids should be specified.\r\n\r\nThis extends: GsaValueSpecifier\r\n\r\nThe value of discriminator property ('filterOn') must be equal to 'specific'",
        "x-discriminator-value": "specific",
        "x-discriminator-name": "filterOn"
      },
      "GsaStandardName": {
        "required": [
          "databaseGuid",
          "databaseKey",
          "databaseVersionGuid",
          "guid",
          "mappedAttributes",
          "mappedCrossDatabaseRecordLinkGroups",
          "mappedParameters",
          "mappedRecordLinkGroups",
          "name"
        ],
        "type": "object",
        "properties": {
          "mappedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimAttribute"
            }
          },
          "mappedParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "mappedRecordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "mappedCrossDatabaseRecordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "databaseKey": {
            "type": "string"
          },
          "databaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "databaseVersionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaStandardNamesInfo": {
        "type": "object",
        "properties": {
          "standardNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaStandardName"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaStaticRecordLinkGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaRecordLinkGroup"
          },
          {
            "required": [
              "includeIndirectLinks"
            ],
            "type": "object",
            "properties": {
              "includeIndirectLinks": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaRecordLinkGroup\r\n\r\nThe value of discriminator property ('type') must be equal to 'static'",
        "x-discriminator-value": "static",
        "x-discriminator-name": "type"
      },
      "GsaStringSortingValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaSortingValue"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaSortingValue\r\n\r\nThe value of discriminator property ('type') must be equal to 'text'",
        "x-discriminator-value": "text",
        "x-discriminator-name": "type"
      },
      "GsaSubset": {
        "required": [
          "displayNames",
          "guid",
          "name"
        ],
        "type": "object",
        "properties": {
          "associatedLayout": {
            "$ref": "#/components/schemas/GsaSlimLayout"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaSubsetsInfo": {
        "type": "object",
        "properties": {
          "subsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimSubset"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaSupportProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "licensingContactDetail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaTable": {
        "required": [
          "databaseKey",
          "displayNames",
          "guid",
          "isHiddenFromBrowse",
          "isHiddenFromSearch",
          "isVersioned",
          "layouts",
          "name",
          "subsets",
          "tableTypes",
          "versionState"
        ],
        "type": "object",
        "properties": {
          "defaultSubset": {
            "$ref": "#/components/schemas/GsaSlimSubset"
          },
          "subsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimSubset"
            }
          },
          "defaultLayout": {
            "$ref": "#/components/schemas/GsaSlimLayout"
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimLayout"
            }
          },
          "versionState": {
            "$ref": "#/components/schemas/GsaVersionState"
          },
          "databaseKey": {
            "type": "string"
          },
          "isHiddenFromBrowse": {
            "type": "boolean"
          },
          "isHiddenFromSearch": {
            "type": "boolean"
          },
          "isVersioned": {
            "type": "boolean"
          },
          "tableTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaTableDeletionException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaDataModificationErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaTableGuidProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "tableGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'tableGuid'",
        "x-discriminator-value": "tableGuid",
        "x-discriminator-name": "propertyName"
      },
      "GsaTableIdentityProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "tableIdentity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'tableIdentity'",
        "x-discriminator-value": "tableIdentity",
        "x-discriminator-name": "propertyName"
      },
      "GsaTableNameProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "tableName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'tableName'",
        "x-discriminator-value": "tableName",
        "x-discriminator-name": "propertyName"
      },
      "GsaTablesInfo": {
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimTable"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaTabularAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttribute"
          },
          {
            "required": [
              "displayFullTable",
              "displaySummaryRowInline",
              "hideUnlinkedRows",
              "tabularColumns"
            ],
            "type": "object",
            "properties": {
              "displayFullTable": {
                "type": "boolean"
              },
              "displaySummaryRowInline": {
                "type": "boolean"
              },
              "hideUnlinkedRows": {
                "type": "boolean"
              },
              "target": {
                "$ref": "#/components/schemas/GsaTabularAttributeTarget"
              },
              "tabularColumns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaTabularColumn"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "type"
      },
      "GsaTabularAttributeTarget": {
        "type": "object",
        "properties": {
          "targetDatabaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "targetDatabaseVersionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "targetTableGuid": {
            "type": "string",
            "format": "uuid"
          },
          "targetAttributeGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaTabularAttributeUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "referencedBy": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimAttribute"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'tabularAttribute'",
        "x-discriminator-value": "tabularAttribute",
        "x-discriminator-name": "referencedByType"
      },
      "GsaTabularAttributeWithColumns": {
        "required": [
          "columns",
          "tabularAttribute"
        ],
        "type": "object",
        "properties": {
          "tabularAttribute": {
            "$ref": "#/components/schemas/GsaSlimAttribute"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaTabularColumn": {
        "required": [
          "columnType",
          "displayNames",
          "guid",
          "name",
          "rollUpType",
          "showAsLink",
          "summaryRowEnabled",
          "summaryRowRollUpType",
          "summaryRowText"
        ],
        "type": "object",
        "properties": {
          "columnType": {
            "$ref": "#/components/schemas/GsaTabularColumnDtoType"
          },
          "showAsLink": {
            "type": "boolean"
          },
          "summaryRowEnabled": {
            "type": "boolean"
          },
          "summaryRowText": {
            "type": "string"
          },
          "rollUpType": {
            "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
          },
          "summaryRowRollUpType": {
            "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Possible values for RollUpType depends on the underlying data type of the column:\r\n            \r\n- FloatFunctional: Chart, Count\r\n            \r\n- Numeric types (Integer, Point, Range): Count, CountDistinct, List, ListDistinct, Max, Min, Mean, StdDev, Sum, CoefficientOfVariation\r\n            \r\n- Other types: Count, CountDistinct, List, ListDistinct\r\n  - DateTime, Logical, and ordered Discrete also include Min and Max.\r\n\r\nThis is one of: \r\n * GsaLinkedAttributeTabularColumn\r\n * GsaLinkedColumnTabularColumn\r\n * GsaLinkedRecordTabularColumn\r\n * GsaLocalPointTabularColumn\r\n * GsaLocalRangeTabularColumn\r\n * GsaLocalIntegerTabularColumn\r\n * GsaLocalLogicalTabularColumn\r\n * GsaLocalShortTextTabularColumn\r\n * GsaLocalLongTextTabularColumn\r\n * GsaLocalDateTimeTabularColumn\r\n * GsaLocalDiscreteTabularColumn\r\n * GsaLocalHyperlinkTabularColumn\r\n * GsaLocalFileTabularColumn\r\n * GsaLocalPictureTabularColumn\r\n * GsaUnavailableTabularColumn",
        "discriminator": {
          "propertyName": "columnType",
          "mapping": {
            "linkedAttribute": "#/components/schemas/GsaLinkedAttributeTabularColumn",
            "linkedColumn": "#/components/schemas/GsaLinkedColumnTabularColumn",
            "linkedRecord": "#/components/schemas/GsaLinkedRecordTabularColumn",
            "localPoint": "#/components/schemas/GsaLocalPointTabularColumn",
            "localRange": "#/components/schemas/GsaLocalRangeTabularColumn",
            "localInteger": "#/components/schemas/GsaLocalIntegerTabularColumn",
            "localLogical": "#/components/schemas/GsaLocalLogicalTabularColumn",
            "localShortText": "#/components/schemas/GsaLocalShortTextTabularColumn",
            "localLongText": "#/components/schemas/GsaLocalLongTextTabularColumn",
            "localDateTime": "#/components/schemas/GsaLocalDateTimeTabularColumn",
            "localDiscrete": "#/components/schemas/GsaLocalDiscreteTabularColumn",
            "localHyperlink": "#/components/schemas/GsaLocalHyperlinkTabularColumn",
            "localFile": "#/components/schemas/GsaLocalFileTabularColumn",
            "localPicture": "#/components/schemas/GsaLocalPictureTabularColumn",
            "unavailable": "#/components/schemas/GsaUnavailableTabularColumn"
          }
        }
      },
      "GsaTabularColumnDtoType": {
        "enum": [
          "linkedAttribute",
          "linkedRecord",
          "linkedColumn",
          "localInteger",
          "localPoint",
          "localRange",
          "localLogical",
          "localShortText",
          "localLongText",
          "localDateTime",
          "localDiscrete",
          "localHyperlink",
          "localFile",
          "localPicture",
          "unavailable"
        ],
        "type": "string",
        "description": "The types of tabular column."
      },
      "GsaTabularColumnNameNotProvidedErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "columnType": {
                "$ref": "#/components/schemas/GsaTabularColumnDtoType"
              },
              "columnGuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'tabularColumnNameNotProvided'",
        "x-discriminator-value": "tabularColumnNameNotProvided",
        "x-discriminator-name": "reason"
      },
      "GsaTabularColumnNoSuchEntityType": {
        "enum": [
          "discreteType",
          "unit"
        ],
        "type": "string"
      },
      "GsaTabularColumnRollUpType": {
        "enum": [
          "list",
          "max",
          "min",
          "mean",
          "stdDev",
          "sum",
          "count",
          "countDistinct",
          "listDistinct",
          "coefficientOfVariation",
          "chart"
        ],
        "type": "string",
        "description": "The roll up types of a tabular column."
      },
      "GsaTabularDatum": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaApplicableDatum"
          },
          {
            "required": [
              "rows"
            ],
            "type": "object",
            "properties": {
              "rows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaTabularDatumRow"
                }
              },
              "summaryRow": {
                "$ref": "#/components/schemas/GsaTabularDatumSummaryRow"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaApplicableDatum\r\n\r\nThe value of discriminator property ('datumType') must be equal to 'tabular'",
        "x-discriminator-value": "tabular",
        "x-discriminator-name": "datumType"
      },
      "GsaTabularDatumCell": {
        "required": [
          "column"
        ],
        "type": "object",
        "properties": {
          "column": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "cellDatum": {
            "$ref": "#/components/schemas/GsaDatum"
          }
        },
        "additionalProperties": false,
        "description": "Tabular datum cell. Datum endpoints are planned to only work with local tabular data,\r\nso this this datum cell is made with only local datum cells in mind."
      },
      "GsaTabularDatumExistsCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDatumExistsCriterion"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "Inner criterion of an attribute exists search criterion for when the only bit of information about the datum that we want to convey is its type\r\n\r\nThis extends: GsaDatumExistsCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'tabular'",
        "x-discriminator-value": "tabular",
        "x-discriminator-name": "type"
      },
      "GsaTabularDatumRollupCell": {
        "required": [
          "column"
        ],
        "type": "object",
        "properties": {
          "column": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "datumRollup": {
            "$ref": "#/components/schemas/GsaDatumRollup"
          }
        },
        "additionalProperties": false
      },
      "GsaTabularDatumRow": {
        "required": [
          "cells",
          "guid"
        ],
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaTabularDatumCell"
            }
          },
          "linkingValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaTabularDatumSummaryRow": {
        "required": [
          "cells"
        ],
        "type": "object",
        "properties": {
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaTabularDatumRollupCell"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaTabularLinkingValueCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaCriterion"
          },
          {
            "required": [
              "values"
            ],
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "linkingValueMatchBehavior": {
                "$ref": "#/components/schemas/GsaLinkingValueMatchBehavior"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaCriterion\r\n\r\nThe value of discriminator property ('type') must be equal to 'tabularLinkingValue'",
        "x-discriminator-value": "tabularLinkingValue",
        "x-discriminator-name": "type"
      },
      "GsaTabularRowExportBehavior": {
        "enum": [
          "allRows",
          "onlyRowsWithVisibleLinkedRecords"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n<li><b>allRows</b>: Export all rows - including rows with no visible linked records</li>\r\n<li><b>onlyRowsWithVisibleLinkedRecords</b>: Export only rows with visible linked records</li>\r\n</ul>\r\n"
      },
      "GsaTargetAttributeNotInTableAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "targetAttributeGuid": {
                "type": "string",
                "format": "uuid"
              },
              "targetTableGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The target attribute is not valid as it does not belong to the target table.\r\nTabular attributes only.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'targetAttributeNotInTable'",
        "x-discriminator-value": "targetAttributeNotInTable",
        "x-discriminator-name": "reason"
      },
      "GsaTargetAttributeTypeAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "targetAttributeGuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "The target attribute is not valid as the target attribute of a tabular attribute as it is not a short text attribute.\r\nTabular attributes only.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'targetAttributeType'",
        "x-discriminator-value": "targetAttributeType",
        "x-discriminator-name": "reason"
      },
      "GsaTermWithCount": {
        "type": "object",
        "properties": {
          "term": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A term from the search index, along with a count of how many times it occurs in some scope."
      },
      "GsaTextMatchBehavior": {
        "enum": [
          "contains",
          "exactMatch",
          "exactMatchCaseInsensitive"
        ],
        "type": "string"
      },
      "GsaThresholdTypeAttributeErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAttributeErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "thresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "attributeType": {
                "$ref": "#/components/schemas/GsaAttributeType"
              },
              "allowedThresholdTypes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaAttributeThresholdType"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Threshold type is not allowed for this attribute type.\r\n\r\nThis extends: GsaAttributeErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'thresholdType'",
        "x-discriminator-value": "thresholdType",
        "x-discriminator-name": "reason"
      },
      "GsaTranslateGuidsToIdentitiesRequest": {
        "required": [
          "databaseKey"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "recordVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "recordHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "unitSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "subsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "discreteTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "discreteValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "replacementStrings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "standardNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "constants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "recordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaTranslateGuidsToIdentitiesResponse": {
        "required": [
          "databaseKey"
        ],
        "type": "object",
        "properties": {
          "databaseKey": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "recordVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "recordHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "unitSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "subsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "discreteTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "discreteValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "replacementStrings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "standardNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "constants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "recordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimIdentifiedEntity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaUnableToConnectAddDatabaseValidationIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaAddDatabaseValidationIssue"
          },
          {
            "required": [
              "databaseKey"
            ],
            "type": "object",
            "properties": {
              "databaseKey": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaAddDatabaseValidationIssue\r\n\r\nThe value of discriminator property ('IssueType') must be equal to 'unableToConnect'",
        "x-discriminator-value": "unableToConnect",
        "x-discriminator-name": "IssueType"
      },
      "GsaUnavailableTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaTabularColumn"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'unavailable'",
        "x-discriminator-value": "unavailable",
        "x-discriminator-name": "columnType"
      },
      "GsaUnit": {
        "required": [
          "guid",
          "name",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "equation": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "relativeSymbol": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUnitConversionSet": {
        "required": [
          "factor",
          "offset",
          "sourceUnitSymbol",
          "targetUnitSymbol"
        ],
        "type": "object",
        "properties": {
          "sourceUnitSymbol": {
            "type": "string"
          },
          "targetUnitSymbol": {
            "type": "string"
          },
          "factor": {
            "type": "number",
            "format": "double"
          },
          "offset": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GsaUnitConversionSetRequest": {
        "required": [
          "sourceUnitSymbol",
          "targetUnitSymbol"
        ],
        "type": "object",
        "properties": {
          "sourceUnitSymbol": {
            "type": "string"
          },
          "targetUnitSymbol": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaUnitConversionsInfo": {
        "required": [
          "conversions",
          "failures"
        ],
        "type": "object",
        "properties": {
          "conversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaUnitConversionSet"
            }
          },
          "failures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaInputValidationErrorDetail"
            },
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a set of unit conversions for each source unit.\r\nFailures are included alongside the conversions for any source units that could not be converted."
      },
      "GsaUnitEquivalent": {
        "required": [
          "equivalentUnit",
          "unit",
          "unitSystem"
        ],
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/GsaUnit"
          },
          "unitSystem": {
            "$ref": "#/components/schemas/GsaUnitSystem"
          },
          "equivalentUnit": {
            "$ref": "#/components/schemas/GsaUnit"
          }
        },
        "additionalProperties": false
      },
      "GsaUnitEquivalentsInfo": {
        "type": "object",
        "properties": {
          "unitEquivalents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaUnitEquivalent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaUnitMapping": {
        "required": [
          "equivalentUnit",
          "unit"
        ],
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/GsaSlimUnit"
          },
          "equivalentUnit": {
            "$ref": "#/components/schemas/GsaSlimUnit"
          }
        },
        "additionalProperties": false
      },
      "GsaUnitSystem": {
        "required": [
          "displayNames",
          "guid",
          "name",
          "unitMappings"
        ],
        "type": "object",
        "properties": {
          "unitMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaUnitMapping"
            }
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unit system contains mappings from any unit to equivalent unit within this unit system.\r\nIf some unit comes from particular unit system it will be mapped to itself."
      },
      "GsaUnitSystemsInfo": {
        "type": "object",
        "properties": {
          "unitSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimUnitSystem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaUnitUsage": {
        "required": [
          "attributes",
          "constants",
          "expressions",
          "parameters",
          "units"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "constants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedEntity"
            }
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimUnit"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaUnitsInfo": {
        "type": "object",
        "properties": {
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimNamedUnit"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateAllProfilesInfo": {
        "type": "object",
        "properties": {
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "defaultProfile": {
            "$ref": "#/components/schemas/GsaUpdateDefaultProfile"
          }
        },
        "additionalProperties": false,
        "description": "Used to update the list of all profiles as well as default profile.\r\n\r\ndefaultProfile: Profile used by default in MI Applications. Null if no default profile is to be set."
      },
      "GsaUpdateAttribute": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaAttributeType"
          },
          "defaultThresholdType": {
            "$ref": "#/components/schemas/GsaAttributeThresholdType"
          },
          "axisName": {
            "$ref": "#/components/schemas/GsaUpdateAxisName"
          },
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "aboutAttribute": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "isHiddenFromSearchCriteria": {
            "type": "boolean",
            "description": "If true, the attribute should not be shown in search UIs.\r\nIt will still be included in text searches.\r\nIf not specified, it will be set to the default value for the attribute type.",
            "nullable": true
          },
          "displayNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Set a display name for different languages.\r\nSupported languages include, but are not limited to, \"en\", \"fr\", \"de\", \"ru\", \"ko\", \"zh-CN\", \"ja\".",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaUpdatePointAttribute\r\n * GsaUpdateIntegerAttribute\r\n * GsaUpdateRangeAttribute\r\n * GsaUpdateLogicalAttribute\r\n * GsaUpdateShortTextAttribute\r\n * GsaUpdateLongTextAttribute\r\n * GsaUpdateDateTimeAttribute\r\n * GsaUpdateDiscreteAttribute\r\n * GsaUpdateHyperlinkAttribute\r\n * GsaUpdateFileAttribute\r\n * GsaUpdatePictureAttribute\r\n * GsaUpdateTabularAttribute\r\n * GsaUpdateFloatFunctionalAttribute\r\n * GsaUpdateDiscreteFunctionalAttribute\r\n * GsaUpdateMathsFunctionalAttribute",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "point": "#/components/schemas/GsaUpdatePointAttribute",
            "integer": "#/components/schemas/GsaUpdateIntegerAttribute",
            "range": "#/components/schemas/GsaUpdateRangeAttribute",
            "logical": "#/components/schemas/GsaUpdateLogicalAttribute",
            "shortText": "#/components/schemas/GsaUpdateShortTextAttribute",
            "longText": "#/components/schemas/GsaUpdateLongTextAttribute",
            "dateTime": "#/components/schemas/GsaUpdateDateTimeAttribute",
            "discrete": "#/components/schemas/GsaUpdateDiscreteAttribute",
            "hyperlink": "#/components/schemas/GsaUpdateHyperlinkAttribute",
            "file": "#/components/schemas/GsaUpdateFileAttribute",
            "picture": "#/components/schemas/GsaUpdatePictureAttribute",
            "link": "#/components/schemas/GsaUpdateTabularAttribute",
            "floatFunctional": "#/components/schemas/GsaUpdateFloatFunctionalAttribute",
            "discreteFunctional": "#/components/schemas/GsaUpdateDiscreteFunctionalAttribute",
            "mathsFunctional": "#/components/schemas/GsaUpdateMathsFunctionalAttribute"
          }
        }
      },
      "GsaUpdateAxisName": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateConfiguration": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateConstant": {
        "type": "object",
        "properties": {
          "unitGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateContinuousRange": {
        "type": "object",
        "properties": {
          "lowValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "highValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateCrossDatabaseRecordLinkGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateRecordLinkGroup"
          },
          {
            "type": "object",
            "properties": {
              "includeIndirectLinks": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateRecordLinkGroup\r\n\r\nThe value of discriminator property ('type') must be equal to 'crossDatabase'",
        "x-discriminator-value": "crossDatabase",
        "x-discriminator-name": "type"
      },
      "GsaUpdateDataRule": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "regularExpression": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateDatabase": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "description": "The author of the database. Can only be edited by a database data administrator",
            "nullable": true
          },
          "company": {
            "type": "string",
            "description": "The company on the database. Can only be edited by a database data administrator",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "The notes for the database. Can only be edited by a database data administrator",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency code on the database. Can only be edited by a database data administrator",
            "nullable": true
          },
          "versionGuid": {
            "type": "string",
            "description": "The version guid of the database. Can be edited by a database data administrator or a system administrator",
            "format": "uuid"
          },
          "guid": {
            "type": "string",
            "description": "The unique identifier of the database. Can only be edited by a system administrator",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of the database. Can only be edited by a database data administrator"
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "True if the database should be set to read only. Can only be edited by a system administrator"
          },
          "language": {
            "type": "string",
            "description": "The language of the database, used when indexing the database. Can only be edited by a system administrator",
            "nullable": true
          },
          "databaseKey": {
            "type": "string",
            "description": "The unique key of the database. Can only be edited by a system administrator",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "description": "The SQL server data source. Can only be edited by a system administrator",
            "nullable": true
          },
          "useIntegratedSecurity": {
            "type": "boolean",
            "description": "Set to true if the SQL connection to the database should use Windows authentication. Can only be edited by a system administrator",
            "nullable": true
          },
          "sqlUserName": {
            "type": "string",
            "description": "The user name to use if the database should use SQL authentication. The password must also be provided. Can only be edited by a system administrator",
            "nullable": true
          },
          "sqlPassword": {
            "type": "string",
            "description": "The password name to use if the database should use SQL authentication. Can only be edited by a system administrator",
            "nullable": true
          },
          "initialCatalog": {
            "type": "string",
            "description": "The name of the database in SQL server. Can only be edited by a system administrator",
            "nullable": true
          },
          "additionalSqlParameters": {
            "type": "string",
            "description": "Any additional parameters that will be added to the SQL connection string for the database. Must be a valid SQL connection string format. Can only be edited by a system administrator",
            "nullable": true
          },
          "loadingOrder": {
            "type": "integer",
            "description": "The MI loading order for the database. Can only be edited by a system administrator",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateDateTimeAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'dateTime'",
        "x-discriminator-value": "dateTime",
        "x-discriminator-name": "type"
      },
      "GsaUpdateDefaultDatabase": {
        "required": [
          "defaultDatabaseKey"
        ],
        "type": "object",
        "properties": {
          "defaultDatabaseKey": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateDefaultProfile": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key is a unique identifier of a profile. Separate from guid."
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateDiscreteAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "isMultiValued": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaUpdateDiscreteFunctionalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaUpdateDiscreteFunctionalAttributeParameter"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'discreteFunctional'",
        "x-discriminator-value": "discreteFunctional",
        "x-discriminator-name": "type"
      },
      "GsaUpdateDiscreteFunctionalAttributeDiscreteParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateDiscreteFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ndefaultValue: If there is no default value, fallback to the parameter default.\r\n\r\nThis extends: GsaUpdateDiscreteFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaUpdateDiscreteFunctionalAttributeNumericParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateDiscreteFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "type": "number",
                "description": "If there is no default value, fallback to the parameter default.",
                "format": "double",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateDiscreteFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaUpdateDiscreteFunctionalAttributeParameter": {
        "required": [
          "parameterGuid",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "parameterGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaUpdateDiscreteFunctionalAttributeDiscreteParameter\r\n * GsaUpdateDiscreteFunctionalAttributeNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaUpdateDiscreteFunctionalAttributeDiscreteParameter",
            "numeric": "#/components/schemas/GsaUpdateDiscreteFunctionalAttributeNumericParameter"
          }
        }
      },
      "GsaUpdateDiscreteParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateParameter"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaUpdateDiscreteParameterValue"
                },
                "description": "Update the set of parameter values.\r\nExisting parameter values will be matched by GUID.\r\nIf an existing parameter value is not included, it will be deleted.\r\nIf a GUID is not provided, or the GUID does not match an existing value, a new value will be created.\r\nNew values must have a name."
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaUpdateDiscreteParameterContent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateParameterContent"
          },
          {
            "type": "object",
            "properties": {
              "parameterValue": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "parameterRange": {
                "$ref": "#/components/schemas/GsaUpdateDiscreteRange"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateParameterContent\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaUpdateDiscreteParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateParameterValue"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateParameterValue\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaUpdateDiscreteRange": {
        "required": [
          "parameterValues"
        ],
        "type": "object",
        "properties": {
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateDiscreteType": {
        "type": "object",
        "properties": {
          "isOrdered": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateDisplayNames": {
        "type": "object",
        "properties": {
          "displayNames": {
            "$ref": "#/components/schemas/GsaGrid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateDisplayNamesResponse": {
        "required": [
          "numberDeleted",
          "numberUpdated"
        ],
        "type": "object",
        "properties": {
          "numberUpdated": {
            "type": "integer",
            "format": "int32"
          },
          "numberDeleted": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateExpression": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "unit": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateFile": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateFileAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'file'",
        "x-discriminator-value": "file",
        "x-discriminator-name": "type"
      },
      "GsaUpdateFloatFunctionalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaUpdateFloatFunctionalAttributeParameter"
                }
              },
              "isRange": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'floatFunctional'",
        "x-discriminator-value": "floatFunctional",
        "x-discriminator-name": "type"
      },
      "GsaUpdateFloatFunctionalAttributeDiscreteParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateFloatFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ndefaultValue: If there is no default value, fallback to the parameter default.\r\n\r\nThis extends: GsaUpdateFloatFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'discrete'",
        "x-discriminator-value": "discrete",
        "x-discriminator-name": "type"
      },
      "GsaUpdateFloatFunctionalAttributeNumericParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateFloatFunctionalAttributeParameter"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "type": "number",
                "description": "If there is no default value, fallback to the parameter default.",
                "format": "double",
                "nullable": true
              },
              "interpolationMethod": {
                "$ref": "#/components/schemas/GsaAttributeInterpolationMethod"
              },
              "scaleType": {
                "$ref": "#/components/schemas/GsaAttributeScaleType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ninterpolationMethod: If the InterpolationMethod is\r\n\r\nscaleType: If the ScaleType is\r\n\r\nThis extends: GsaUpdateFloatFunctionalAttributeParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaUpdateFloatFunctionalAttributeParameter": {
        "required": [
          "parameterGuid",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "parameterGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaUpdateFloatFunctionalAttributeDiscreteParameter\r\n * GsaUpdateFloatFunctionalAttributeNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaUpdateFloatFunctionalAttributeDiscreteParameter",
            "numeric": "#/components/schemas/GsaUpdateFloatFunctionalAttributeNumericParameter"
          }
        }
      },
      "GsaUpdateFolder": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateHyperlinkAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'hyperlink'",
        "x-discriminator-value": "hyperlink",
        "x-discriminator-name": "type"
      },
      "GsaUpdateIntegerAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "isUnique": {
                "type": "boolean",
                "description": "Whether or not the attribute is constrained to contain a unique value"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'integer'",
        "x-discriminator-value": "integer",
        "x-discriminator-name": "type"
      },
      "GsaUpdateJobRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "scheduledExecutionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/GsaJobStatus"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateLayout": {
        "type": "object",
        "properties": {
          "applicableApplications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "If there are no ApplicableApplications, the layout is applicable in all applications.",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateLinkedAttributeTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "linkedAttribute": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'linkedAttribute'",
        "x-discriminator-value": "linkedAttribute",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLinkedColumnTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "linkedColumn": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'linkedColumn'",
        "x-discriminator-value": "linkedColumn",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLinkedRecordTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'linkedRecord'",
        "x-discriminator-value": "linkedRecord",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalDateTimeTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localDateTime'",
        "x-discriminator-value": "localDateTime",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalDiscreteTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "discreteType": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localDiscrete'",
        "x-discriminator-value": "localDiscrete",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalFileTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localFile'",
        "x-discriminator-value": "localFile",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalHyperlinkTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localHyperlink'",
        "x-discriminator-value": "localHyperlink",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalIntegerTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localInteger'",
        "x-discriminator-value": "localInteger",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalLogicalTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localLogical'",
        "x-discriminator-value": "localLogical",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalLongTextTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localLongText'",
        "x-discriminator-value": "localLongText",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalPictureTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localPicture'",
        "x-discriminator-value": "localPicture",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalPointTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localPoint'",
        "x-discriminator-value": "localPoint",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalRangeTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              },
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localRange'",
        "x-discriminator-value": "localRange",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLocalShortTextTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object",
            "properties": {
              "defaultThresholdType": {
                "$ref": "#/components/schemas/GsaAttributeThresholdType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'localShortText'",
        "x-discriminator-value": "localShortText",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateLogicalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'logical'",
        "x-discriminator-value": "logical",
        "x-discriminator-name": "type"
      },
      "GsaUpdateLongTextAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'longText'",
        "x-discriminator-value": "longText",
        "x-discriminator-name": "type"
      },
      "GsaUpdateMathsContent": {
        "type": "object",
        "properties": {
          "curveLabel": {
            "type": "string",
            "nullable": true
          },
          "transposeAxes": {
            "type": "boolean"
          },
          "useLogarithmicScale": {
            "type": "boolean"
          },
          "expression": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "freeParameter": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "parameterContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaUpdateParameterContent"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateMathsFunctionalAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimEntity"
                },
                "nullable": true
              },
              "expressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimEntity"
                },
                "nullable": true
              },
              "allowExtrapolation": {
                "type": "boolean"
              },
              "isRange": {
                "type": "boolean"
              },
              "defaultContent": {
                "$ref": "#/components/schemas/GsaUpdateMathsContent"
              },
              "allowAllCompatibleExpressions": {
                "type": "boolean"
              },
              "allowAnonymousExpressions": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'mathsFunctional'",
        "x-discriminator-value": "mathsFunctional",
        "x-discriminator-name": "type"
      },
      "GsaUpdateNumericParameter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateParameter"
          },
          {
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaUpdateNumericParameterValue"
                },
                "description": "Update the set of parameter values.\r\nExisting parameter values will be matched by GUID.\r\nIf an existing parameter value is not included, it will be deleted.\r\nIf a GUID is not provided, or the GUID does not match an existing value, a new value will be created.\r\nNew values must have a value."
              },
              "interpolationType": {
                "$ref": "#/components/schemas/GsaParameterInterpolationType"
              },
              "scaleType": {
                "$ref": "#/components/schemas/GsaParameterScaleType"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateParameter\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaUpdateNumericParameterContent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateParameterContent"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "parameterRange": {
                "$ref": "#/components/schemas/GsaUpdateContinuousRange"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateParameterContent\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaUpdateNumericParameterValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateParameterValue"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateParameterValue\r\n\r\nThe value of discriminator property ('type') must be equal to 'numeric'",
        "x-discriminator-value": "numeric",
        "x-discriminator-name": "type"
      },
      "GsaUpdateParameter": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "helpPath": {
            "type": "string",
            "nullable": true
          },
          "defaultParameterValueGuid": {
            "type": "string",
            "description": "Use to set the default value when the parameter value GUID is known.",
            "format": "uuid"
          },
          "defaultParameterValueIndex": {
            "type": "integer",
            "description": "Use to set the default value when also updating parameter values, if the parameter value GUID is not known.\r\nFor example when creating a new parameter value.",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaUpdateDiscreteParameter\r\n * GsaUpdateNumericParameter",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaUpdateDiscreteParameter",
            "numeric": "#/components/schemas/GsaUpdateNumericParameter"
          }
        }
      },
      "GsaUpdateParameterContent": {
        "required": [
          "parameter",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterType"
          },
          "parameter": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaUpdateDiscreteParameterContent\r\n * GsaUpdateNumericParameterContent",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaUpdateDiscreteParameterContent",
            "numeric": "#/components/schemas/GsaUpdateNumericParameterContent"
          }
        }
      },
      "GsaUpdateParameterValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaParameterValueType"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaUpdateDiscreteParameterValue\r\n * GsaUpdateNumericParameterValue",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "discrete": "#/components/schemas/GsaUpdateDiscreteParameterValue",
            "numeric": "#/components/schemas/GsaUpdateNumericParameterValue"
          }
        }
      },
      "GsaUpdatePictureAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'picture'",
        "x-discriminator-value": "picture",
        "x-discriminator-name": "type"
      },
      "GsaUpdatePointAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              },
              "isMultiValued": {
                "type": "boolean"
              },
              "attributeParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimEntity"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'point'",
        "x-discriminator-value": "point",
        "x-discriminator-name": "type"
      },
      "GsaUpdateProfile": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "homepageUrl": {
            "type": "string",
            "nullable": true
          },
          "profileTableGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "guid": {
            "type": "string",
            "description": "Guid is a unique identifier of a profile. Separate from key.",
            "format": "uuid",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "A profile, consisting of a set of tables from one or more databases."
      },
      "GsaUpdateProfileTable": {
        "type": "object",
        "properties": {
          "subsetGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "layoutGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "A table within a profile. Contains display customization."
      },
      "GsaUpdateRangeAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "unit": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'range'",
        "x-discriminator-value": "range",
        "x-discriminator-name": "type"
      },
      "GsaUpdateRecordLinkGroup": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GsaRecordLinkGroupType"
          },
          "reverseName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaUpdateStaticRecordLinkGroup\r\n * GsaUpdateSmartRecordLinkGroup\r\n * GsaUpdateCrossDatabaseRecordLinkGroup",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "static": "#/components/schemas/GsaUpdateStaticRecordLinkGroup",
            "smart": "#/components/schemas/GsaUpdateSmartRecordLinkGroup",
            "crossDatabase": "#/components/schemas/GsaUpdateCrossDatabaseRecordLinkGroup"
          }
        }
      },
      "GsaUpdateRecordListPermissionFlags": {
        "required": [
          "isAdministrator",
          "isCurator",
          "isPublisher",
          "isSubscribed"
        ],
        "type": "object",
        "properties": {
          "isSubscribed": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is subscribed to this list."
          },
          "isCurator": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is a curator of this list."
          },
          "isAdministrator": {
            "type": "boolean",
            "description": "Flag indicating if the user or group is an administrator of this list."
          },
          "isPublisher": {
            "type": "boolean",
            "description": "Flag indicating if this user or group is a publisher of this list."
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateRecordListProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "awaitingApproval": {
            "type": "boolean"
          },
          "internalUse": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateReplacementString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateRootFolderErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaFolderErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "You cannot update the root folder.\r\n\r\nThis extends: GsaFolderErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'updateRoot'",
        "x-discriminator-value": "updateRoot",
        "x-discriminator-name": "reason"
      },
      "GsaUpdateRunStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "type": "integer",
        "description": "Represents the possible states of an update.<p>Possible values:</p>\r\n<ul>\r\n<li><b>Registered</b>: The update token has been registered with the service.</li>\r\n<li><b>UploadInProgress</b>: The update file has been partially uploaded.</li>\r\n<li><b>Uploaded</b>: The update file has been completely uploaded.</li>\r\n<li><b>UploadFailed</b>: The upload failed.</li>\r\n<li><b>DryRunPending</b>: A dry run for this update has been queued, but it not yet in progress.</li>\r\n<li><b>DryRunCancelling</b>: A request to cancel the dry run for this update has been issued but the dry run has not yet been cancelled.</li>\r\n<li><b>DryRunCancelled</b>: The dry run for this update was cancelled.</li>\r\n<li><b>DryRunInProgress</b>: The dry run for this update is in progress.</li>\r\n<li><b>DryRunComplete</b>: The dry run for this update is complete.</li>\r\n<li><b>DryRunFailed</b>: The dry run for this update failed.</li>\r\n<li><b>ApplyPending</b>: An apply operation for this update has been queued, but is not yet in progress.</li>\r\n<li><b>ApplyInProgress</b>: The update is being applied to the target database.</li>\r\n<li><b>ApplyCancelling</b>: A request to cancel the apply process has been issued but the apply process has not yet been cancelled.</li>\r\n<li><b>ApplyCancelled</b>: The update was cancelled during the apply process.</li>\r\n<li><b>ApplyComplete</b>: The update was successfully applied to the target database.</li>\r\n<li><b>ApplyFailed</b>: The update was not successfully applied to the target database.</li>\r\n</ul>\r\n",
        "format": "int32"
      },
      "GsaUpdateShortTextAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "isUnique": {
                "type": "boolean",
                "description": "Whether or not the attribute is constrained to contain a unique value"
              },
              "dataRule": {
                "$ref": "#/components/schemas/GsaSlimEntity"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'shortText'",
        "x-discriminator-value": "shortText",
        "x-discriminator-name": "type"
      },
      "GsaUpdateSmartRecordLinkGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateRecordLinkGroup"
          },
          {
            "type": "object",
            "properties": {
              "forbidOrphans": {
                "type": "boolean"
              },
              "referentialIntegrityModel": {
                "$ref": "#/components/schemas/GsaReferentialIntegrityModel"
              },
              "attributePairs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaCreateAttributeLinkPair"
                }
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateRecordLinkGroup\r\n\r\nThe value of discriminator property ('type') must be equal to 'smart'",
        "x-discriminator-value": "smart",
        "x-discriminator-name": "type"
      },
      "GsaUpdateStandardName": {
        "type": "object",
        "properties": {
          "mappedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "mappedParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "mappedRecordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "mappedCrossDatabaseRecordLinkGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaSlimEntity"
            },
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateStaticRecordLinkGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateRecordLinkGroup"
          },
          {
            "type": "object",
            "properties": {
              "includeIndirectLinks": {
                "type": "boolean"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateRecordLinkGroup\r\n\r\nThe value of discriminator property ('type') must be equal to 'static'",
        "x-discriminator-value": "static",
        "x-discriminator-name": "type"
      },
      "GsaUpdateSubset": {
        "type": "object",
        "properties": {
          "associatedLayout": {
            "$ref": "#/components/schemas/GsaSlimEntity"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateSupportProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "licensingContactDetail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateTable": {
        "type": "object",
        "properties": {
          "isHiddenFromBrowse": {
            "type": "boolean"
          },
          "isHiddenFromSearch": {
            "type": "boolean"
          },
          "defaultSubsetGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "defaultLayoutGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateTabularAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateAttribute"
          },
          {
            "type": "object",
            "properties": {
              "displayFullTable": {
                "type": "boolean"
              },
              "displaySummaryRowInline": {
                "type": "boolean"
              },
              "hideUnlinkedRows": {
                "type": "boolean"
              },
              "tabularColumns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaUpdateTabularColumn"
                },
                "nullable": true
              },
              "target": {
                "$ref": "#/components/schemas/GsaUpdateTabularAttributeTarget"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\ntarget: Changing an existing target may cause some columns to become unavailable.\r\n\r\nThis extends: GsaUpdateAttribute\r\n\r\nThe value of discriminator property ('type') must be equal to 'link'",
        "x-discriminator-value": "link",
        "x-discriminator-name": "type"
      },
      "GsaUpdateTabularAttributeTarget": {
        "type": "object",
        "properties": {
          "targetDatabaseGuid": {
            "type": "string",
            "format": "uuid"
          },
          "targetDatabaseVersionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "targetTableGuid": {
            "type": "string",
            "format": "uuid"
          },
          "targetAttributeGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateTabularColumn": {
        "required": [
          "columnType"
        ],
        "type": "object",
        "properties": {
          "columnType": {
            "$ref": "#/components/schemas/GsaTabularColumnDtoType"
          },
          "showAsLink": {
            "type": "boolean"
          },
          "summaryRowEnabled": {
            "type": "boolean"
          },
          "summaryRowText": {
            "type": "string",
            "nullable": true
          },
          "rollUpType": {
            "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
          },
          "summaryRowRollUpType": {
            "$ref": "#/components/schemas/GsaTabularColumnRollUpType"
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Possible values for RollUpType depends on the underlying data type of the column:\r\n            \r\n- FloatFunctional: Chart, Count\r\n            \r\n- Numeric types (Integer, Point, Range): Count, CountDistinct, List, ListDistinct, Max, Min, Mean, StdDev, Sum, CoefficientOfVariation\r\n            \r\n- Other types: Count, CountDistinct, List, ListDistinct\r\n  - DateTime, Logical, and ordered Discrete also include Min and Max.\r\n\r\nThis is one of: \r\n * GsaUpdateLinkedAttributeTabularColumn\r\n * GsaUpdateLinkedColumnTabularColumn\r\n * GsaUpdateLinkedRecordTabularColumn\r\n * GsaUpdateLocalPointTabularColumn\r\n * GsaUpdateLocalRangeTabularColumn\r\n * GsaUpdateLocalIntegerTabularColumn\r\n * GsaUpdateLocalLogicalTabularColumn\r\n * GsaUpdateLocalShortTextTabularColumn\r\n * GsaUpdateLocalLongTextTabularColumn\r\n * GsaUpdateLocalDateTimeTabularColumn\r\n * GsaUpdateLocalDiscreteTabularColumn\r\n * GsaUpdateLocalHyperlinkTabularColumn\r\n * GsaUpdateLocalFileTabularColumn\r\n * GsaUpdateLocalPictureTabularColumn\r\n * GsaUpdateUnavailableTabularColumn",
        "discriminator": {
          "propertyName": "columnType",
          "mapping": {
            "linkedAttribute": "#/components/schemas/GsaUpdateLinkedAttributeTabularColumn",
            "linkedColumn": "#/components/schemas/GsaUpdateLinkedColumnTabularColumn",
            "linkedRecord": "#/components/schemas/GsaUpdateLinkedRecordTabularColumn",
            "localPoint": "#/components/schemas/GsaUpdateLocalPointTabularColumn",
            "localRange": "#/components/schemas/GsaUpdateLocalRangeTabularColumn",
            "localInteger": "#/components/schemas/GsaUpdateLocalIntegerTabularColumn",
            "localLogical": "#/components/schemas/GsaUpdateLocalLogicalTabularColumn",
            "localShortText": "#/components/schemas/GsaUpdateLocalShortTextTabularColumn",
            "localLongText": "#/components/schemas/GsaUpdateLocalLongTextTabularColumn",
            "localDateTime": "#/components/schemas/GsaUpdateLocalDateTimeTabularColumn",
            "localDiscrete": "#/components/schemas/GsaUpdateLocalDiscreteTabularColumn",
            "localHyperlink": "#/components/schemas/GsaUpdateLocalHyperlinkTabularColumn",
            "localFile": "#/components/schemas/GsaUpdateLocalFileTabularColumn",
            "localPicture": "#/components/schemas/GsaUpdateLocalPictureTabularColumn",
            "unavailable": "#/components/schemas/GsaUpdateUnavailableTabularColumn"
          }
        }
      },
      "GsaUpdateUnavailableTabularColumn": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUpdateTabularColumn"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUpdateTabularColumn\r\n\r\nThe value of discriminator property ('columnType') must be equal to 'unavailable'",
        "x-discriminator-value": "unavailable",
        "x-discriminator-name": "columnType"
      },
      "GsaUpdateUnit": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "equation": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateUnitSystem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GsaUpdateUserPermission": {
        "required": [
          "flags",
          "userOrGroupIdentifier"
        ],
        "type": "object",
        "properties": {
          "userOrGroupIdentifier": {
            "type": "string",
            "description": "The user or group identifier",
            "format": "uuid"
          },
          "flags": {
            "$ref": "#/components/schemas/GsaUpdateRecordListPermissionFlags"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nflags: The flags describing permission set for this user and list."
      },
      "GsaUpdateUserPermissionsInfo": {
        "required": [
          "userPermissions"
        ],
        "type": "object",
        "properties": {
          "userPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaUpdateUserPermission"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaDataModificationErrorDetail"
          },
          {
            "required": [
              "referencedByType"
            ],
            "type": "object",
            "properties": {
              "referencedByType": {
                "$ref": "#/components/schemas/GsaReferencedByType"
              }
            },
            "discriminator": {
              "propertyName": "referencedByType",
              "mapping": {
                "expression": "#/components/schemas/GsaExpressionUsageDataModificationErrorDetail",
                "versionControlledData": "#/components/schemas/GsaVersionControlledDataUsageDataModificationErrorDetail",
                "smartLinkGroup": "#/components/schemas/GsaSmartLinkGroupUsageDataModificationErrorDetail",
                "tabularAttribute": "#/components/schemas/GsaTabularAttributeUsageDataModificationErrorDetail",
                "xyChartTemplate": "#/components/schemas/GsaXYChartTemplateUsageDataModificationErrorDetail",
                "searchMask": "#/components/schemas/GsaSearchMaskUsageDataModificationErrorDetail",
                "securityAttribute": "#/components/schemas/GsaSecurityAttributeUsageDataModificationErrorDetail",
                "attribute": "#/components/schemas/GsaAttributeUsageDataModificationErrorDetail",
                "data": "#/components/schemas/GsaDataUsageDataModificationErrorDetail",
                "defaultParameterValue": "#/components/schemas/GsaDefaultParameterValueUsageDataModificationErrorDetail",
                "functionalDataDefault": "#/components/schemas/GsaFunctionalDataDefaultUsageDataModificationErrorDetail",
                "multiValuedPointData": "#/components/schemas/GsaMultiValuedPointDataUsageDataModificationErrorDetail"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'usage'\r\n\r\nThis is one of: \r\n * GsaExpressionUsageDataModificationErrorDetail\r\n * GsaVersionControlledDataUsageDataModificationErrorDetail\r\n * GsaSmartLinkGroupUsageDataModificationErrorDetail\r\n * GsaTabularAttributeUsageDataModificationErrorDetail\r\n * GsaXYChartTemplateUsageDataModificationErrorDetail\r\n * GsaSearchMaskUsageDataModificationErrorDetail\r\n * GsaSecurityAttributeUsageDataModificationErrorDetail\r\n * GsaAttributeUsageDataModificationErrorDetail\r\n * GsaDataUsageDataModificationErrorDetail\r\n * GsaDefaultParameterValueUsageDataModificationErrorDetail\r\n * GsaFunctionalDataDefaultUsageDataModificationErrorDetail\r\n * GsaMultiValuedPointDataUsageDataModificationErrorDetail",
        "x-discriminator-value": "usage",
        "x-discriminator-name": "reason"
      },
      "GsaUserPermission": {
        "required": [
          "flags",
          "userOrGroupIdentifier",
          "userOrGroupName"
        ],
        "type": "object",
        "properties": {
          "userOrGroupName": {
            "type": "string",
            "description": "The user or group name."
          },
          "userOrGroupIdentifier": {
            "type": "string",
            "description": "The user or group identifier",
            "format": "uuid"
          },
          "flags": {
            "$ref": "#/components/schemas/GsaRecordListPermissionFlags"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nflags: The flags describing permission set for this user and list."
      },
      "GsaUserPermissionsInfo": {
        "required": [
          "userPermissions"
        ],
        "type": "object",
        "properties": {
          "userPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaUserPermission"
            }
          }
        },
        "additionalProperties": false
      },
      "GsaUserRole": {
        "enum": [
          "None",
          "Owner",
          "Subscriber",
          "Curator",
          "Administrator",
          "Publisher"
        ],
        "type": "string",
        "description": "A set of flags that can be used to describe the role or roles that a user has on a particular record list"
      },
      "GsaValidateAttributeRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The value to check an attributes data validation rules against",
            "nullable": true
          },
          "recordHistoryGuid": {
            "type": "string",
            "description": "The record you want to check the value against to see if the value has changed as well as being valid",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaValueNotProvidedParameterValueErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaParameterValueErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "guid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "Numeric parameter values must have a value.\r\n\r\nThis extends: GsaParameterValueErrorDetail\r\n\r\nThe value of discriminator property ('reason') must be equal to 'valueNotProvided'",
        "x-discriminator-value": "valueNotProvided",
        "x-discriminator-name": "reason"
      },
      "GsaValueSpecifier": {
        "required": [
          "filterOn"
        ],
        "type": "object",
        "properties": {
          "filterOn": {
            "$ref": "#/components/schemas/GsaValueSpecifierType"
          }
        },
        "additionalProperties": false,
        "description": "Base class for ValueSpecifier\r\nUsed as a parameter in requests to specify filters like whether we want all identities, some guids, exclude some identities, etc.\r\n\r\nThis is one of: \r\n * GsaAllValuesSpecifier\r\n * GsaExcludeValuesSpecifier\r\n * GsaSpecificValuesSpecifier\r\n * GsaNoValuesSpecifier",
        "discriminator": {
          "propertyName": "filterOn",
          "mapping": {
            "all": "#/components/schemas/GsaAllValuesSpecifier",
            "exclude": "#/components/schemas/GsaExcludeValuesSpecifier",
            "specific": "#/components/schemas/GsaSpecificValuesSpecifier",
            "none": "#/components/schemas/GsaNoValuesSpecifier"
          }
        }
      },
      "GsaValueSpecifierType": {
        "enum": [
          "all",
          "exclude",
          "specific",
          "none"
        ],
        "type": "string",
        "description": "Types of ValueSpecifier allowed in requests.\r\nUsed by ValueSpecifier to specify whether we want all identities, some guids, exclude some identities, etc."
      },
      "GsaValueWithCountOfBoolean": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A value from the search index, along with a count of how many times it occurs in some scope."
      },
      "GsaValueWithCountOfGuid": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A value from the search index, along with a count of how many times it occurs in some scope."
      },
      "GsaValueWithCountOfInt32": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A value from the search index, along with a count of how many times it occurs in some scope."
      },
      "GsaVersionControlErrorDetail": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "\r\n\r\nThis is one of: \r\n * GsaInvalidVersionStateErrorDetail\r\n * GsaNotTheLatestVersionErrorDetail\r\n * GsaInvalidParentStateErrorDetail\r\n * GsaNotVersionedErrorDetail",
        "discriminator": {
          "propertyName": "reason",
          "mapping": {
            "invalidVersionState": "#/components/schemas/GsaInvalidVersionStateErrorDetail",
            "notTheLatestVersion": "#/components/schemas/GsaNotTheLatestVersionErrorDetail",
            "invalidParentState": "#/components/schemas/GsaInvalidParentStateErrorDetail",
            "notVersioned": "#/components/schemas/GsaNotVersionedErrorDetail"
          }
        }
      },
      "GsaVersionControlledDataUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object"
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'versionControlledData'",
        "x-discriminator-value": "versionControlledData",
        "x-discriminator-name": "referencedByType"
      },
      "GsaVersionNumberProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "versionNumber": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'versionNumber'",
        "x-discriminator-value": "versionNumber",
        "x-discriminator-name": "propertyName"
      },
      "GsaVersionState": {
        "enum": [
          "unversioned",
          "unreleased",
          "released",
          "superseded",
          "withdrawn"
        ],
        "type": "string",
        "description": "API-level enum for version control state."
      },
      "GsaVersionStateProperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaProperty"
          },
          {
            "type": "object",
            "properties": {
              "versionState": {
                "$ref": "#/components/schemas/GsaVersionState"
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaProperty\r\n\r\nThe value of discriminator property ('propertyName') must be equal to 'versionState'",
        "x-discriminator-value": "versionState",
        "x-discriminator-name": "propertyName"
      },
      "GsaWithdrawRecordVersionControlException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/GsaErrorCode"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GsaVersionControlErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GsaXYChartTemplateUsageDataModificationErrorDetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GsaUsageDataModificationErrorDetail"
          },
          {
            "type": "object",
            "properties": {
              "referencedBy": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GsaSlimNamedEntity"
                },
                "nullable": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "description": "\r\n\r\nThis extends: GsaUsageDataModificationErrorDetail\r\n\r\nThe value of discriminator property ('referencedByType') must be equal to 'xyChartTemplate'",
        "x-discriminator-value": "xyChartTemplate",
        "x-discriminator-name": "referencedByType"
      },
      "JsonPatchDocument": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "MicrosoftAspNetCoreMvcFormattersIOutputFormatter": {
        "type": "object",
        "additionalProperties": false
      },
      "MicrosoftAspNetCoreMvcObjectResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "nullable": true
          },
          "formatters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcFormattersIOutputFormatter"
            },
            "nullable": true
          },
          "contentTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "declaredType": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemNetHttpStatusCode": {
        "enum": [
          100,
          101,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          426,
          500,
          501,
          502,
          503,
          504,
          505
        ],
        "type": "integer",
        "format": "int32"
      }
    }
  }
}