name: 'Generate client library'

on:
  pull_request:
    paths:
    - 'yaml/*.yaml'
    - 'yaml/*.json'
    - 'pom.xml'
    - '.github/workflows/generate_library.yml'
  workflow_dispatch:

jobs:
  generate-client-library:
    name: "Generate and update client library"
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'pyansys-bot[bot]' }}
    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: "Set up JDK 11"
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: "Get build-id (dependabot)"
      if: ${{ github.actor != 'pyansys-bot[bot]' }}
      run: |
        version_number=$(grep -oP 'version\s=\s"\d\.\d\.\d\.dev\K\d+' ./ansys-grantami-serverapi-openapi/pyproject.toml)
        echo "version_number=$version_number" >> "$GITHUB_ENV"

    - name: "Get build-id"
      if: ${{ github.actor == 'pyansys-bot[bot]' }}
      run: |
        echo "version_number=${{ github.run_number }}" >> "$GITHUB_ENV"

    - name: "Clean library folder"
      run: rm -rf ansys-grantami-serverapi-openapi

    - name: "Build client library"
      run: mvn -Dbuild-id=${{ env.version_number }} -s .m2/settings.xml compile
      env:
        MAVEN_OPTS: "-Dlog4j2.formatMsgNoLookups=true"
        SERVER_USERNAME: ${{ secrets.REPO_USER }}
        SERVER_PASSWORD: ${{ secrets.REPO_TOKEN }}
    
    - name: "Commit changes to library code"
      uses: EndBug/add-and-commit@v9
      with:
        add: 'ansys-grantami-serverapi-openapi'
        committer_name: 'GitHub Actions'
        committer_email: 'actions@github.com'
        message: 'Generate Client Library code - Automated'
