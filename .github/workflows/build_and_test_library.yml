name: 'CI'
# Update the paths once you have created a client library build
on:
  workflow_dispatch:
    inputs:
      publish-to-private-pypi:
        description: Whether to publish the build to the private PyPI
        type: choice
        options:
          - 'true'
          - 'false'
        default: 'false'
  push:
    tags:
      - "*"
    branches:
      - main
  pull_request:
    paths:
      - "ansys-grantami-serverapi-openapi/**"
      - ".github/workflows/build_and_test_library.yml"

env:
  MAIN_PYTHON_VERSION: '3.12'
  LIBRARY_NAME: 'ansys-grantami-serverapi-openapi'

jobs:

  tests:
    name: "Test Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
      fail-fast: false
    steps:

      - name: "Checkout the project"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install
        working-directory: ${{ env.LIBRARY_NAME }}

      - name: "Test with pytest"
        working-directory: ${{ env.LIBRARY_NAME }}
        run: poetry run pytest

      - name: "Run mypy"
        working-directory: ${{ env.LIBRARY_NAME }}
        run: poetry run mypy

  build-library:
    name: "Build library"
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      id-token: write
      attestations: write
    steps:

      - name: "Checkout the project"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: "Install requirements"
        run: |
          python -m pip install build twine

      - name: "Create source and wheel artifacts"
        working-directory: ${{ env.LIBRARY_NAME }}
        run: |
          python -m build .

      - name: "Validate integrity of artifacts"
        working-directory: ${{ env.LIBRARY_NAME }}
        run: |
          python -m twine check dist/*

      - name: Generate build provenance attestation
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          subject-path: ${{ env.LIBRARY_NAME }}/dist/

      - name: "Upload artifacts"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  #v4.6.2
        with:
          name: ${{ env.LIBRARY_NAME }}-artifacts
          path: ${{ env.LIBRARY_NAME }}/dist/
          retention-days: 7

  publish:
    name: "Publish"
    runs-on: ubuntu-latest
    needs: [build-library]
    if: (github.event_name == 'workflow_dispatch') && (github.ref == 'refs/heads/main') && (inputs.publish-to-private-pypi == 'true')
    steps:
      - name: "Release to private PyPI"
        uses: ansys/actions/release-pypi-private@d93d46bd89025d3c78a0d18a68a9f16434c74382  # v10.0.15
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          twine-username: "__token__"
          twine-token: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}

  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: [build-library]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: "Download the library artifacts from build-library step"
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: ${{ env.LIBRARY_NAME }}-artifacts
          path: ${{ env.LIBRARY_NAME }}-artifacts

      - name: "Upload artifacts to PyPI using trusted publisher"
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # v1.13.0
        with:
          repository-url: "https://upload.pypi.org/legacy/"
          print-hash: true
          packages-dir: ${{ env.LIBRARY_NAME }}-artifacts
          skip-existing: false

      - name: "Release to private PyPI"
        uses: ansys/actions/release-pypi-private@d93d46bd89025d3c78a0d18a68a9f16434c74382  # v10.0.15
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          twine-username: "__token__"
          twine-token: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}

      - name: "Release to GitHub"
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8  #v2.3.2
        with:
          files: ${{ env.LIBRARY_NAME }}-artifacts/*.whl
          generate_release_notes: true
