name: Build and Test Client Library
# Update the paths once you have created a client library build
on:
  workflow_dispatch:
  push:
    tags:
      - "*"
    paths:
      - "ansys-grantami-serverapi-openapi/**"
  pull_request:
    paths:
      - "ansys-grantami-serverapi-openapi/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install build requirements
        run: pip install flit

      - name: Create wheel
        working-directory: ansys-grantami-serverapi-openapi
        run: flit build

      - name: Validate wheel
        working-directory: ansys-grantami-serverapi-openapi
        run: |
          pip install twine
          twine check dist/*

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: ansys-grantami-serverapi-openapi-wheel
          path: ansys-grantami-serverapi-openapi/dist/
          retention-days: 7

  test:
    name: Unit test on supported platforms
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10', '3.11' ]
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Test with tox
        working-directory: ansys-grantami-serverapi-openapi
        run: |
          tox

  release:
    name: "Release"
    if: contains(github.ref, 'refs/tags') && github.event_name == 'push'
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: "3.10"

      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: ansys-grantami-serverapi-openapi-wheel
          path: ~/dist

#      - name: Upload to PyPI
#        run: |
#          pip install twine
#          twine upload --skip-existing --non-interactive ~/dist/*.whl
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: "Upload artifacts to private PyPi"
        shell: bash
        run: |
          pip install twine
          twine upload --verbose --skip-existing --non-interactive ~/dist/*.whl
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
          TWINE_REPOSITORY_URL: "https://pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/upload"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ~/dist/*.whl
